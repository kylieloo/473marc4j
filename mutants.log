1:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler$Error@<init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):99:curRecordID = recordID |==> <NO-OP>
2:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler$Error@<init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):100:curField = field |==> <NO-OP>
3:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler$Error@<init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):101:curSubfield = subfield |==> <NO-OP>
4:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler$Error@<init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):102:this.severity = severity |==> <NO-OP>
5:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler$Error@<init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):103:this.message = message |==> <NO-OP>
6:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.ErrorHandler$Error@toString():113:getSeverityMsg(severity) |==> null
7:EVR:<PLUS>:<DEFAULT>:org.marc4j.ErrorHandler$Error@toString():114:severityMsg + " : " + message + " --- [ " + curField + " : " + curSubfield + " ]" |==> null
8:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.ErrorHandler$Error@toString():115:ret |==> null
9:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler$Error@setCurRecordID(java.lang.String):119:this.curRecordID = curRecordID |==> <NO-OP>
10:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.ErrorHandler$Error@getCurRecordID():123:curRecordID |==> null
11:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@<init>():131:errors = null |==> <NO-OP>
12:LVR:FALSE:TRUE:org.marc4j.ErrorHandler@<init>():132:false |==> true
13:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@<init>():132:hasMissingID = false |==> <NO-OP>
14:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@<init>():133:maxSeverity = INFO |==> <NO-OP>
15:STD:<RETURN>:<NO-OP>:org.marc4j.ErrorHandler@getSeverityMsg(int):144:return "FATAL       "; |==> <NO-OP>
16:STD:<RETURN>:<NO-OP>:org.marc4j.ErrorHandler@getSeverityMsg(int):146:return "Major Error "; |==> <NO-OP>
17:STD:<RETURN>:<NO-OP>:org.marc4j.ErrorHandler@getSeverityMsg(int):148:return "Minor Error "; |==> <NO-OP>
18:STD:<RETURN>:<NO-OP>:org.marc4j.ErrorHandler@getSeverityMsg(int):150:return "Typo        "; |==> <NO-OP>
19:STD:<RETURN>:<NO-OP>:org.marc4j.ErrorHandler@getSeverityMsg(int):152:return "Info        "; |==> <NO-OP>
20:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.ErrorHandler@hasErrors():164:errors != null |==> true
21:LVR:0:POS:org.marc4j.ErrorHandler@hasErrors():164:0 |==> 1
22:LVR:0:NEG:org.marc4j.ErrorHandler@hasErrors():164:0 |==> -1
23:ROR:>(int,int):!=(int,int):org.marc4j.ErrorHandler@hasErrors():164:errors.size() > 0 |==> errors.size() != 0
24:ROR:>(int,int):>=(int,int):org.marc4j.ErrorHandler@hasErrors():164:errors.size() > 0 |==> errors.size() >= 0
25:ROR:>(int,int):FALSE(int,int):org.marc4j.ErrorHandler@hasErrors():164:errors.size() > 0 |==> false
26:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.ErrorHandler@hasErrors():164:errors != null && errors.size() > 0 |==> errors != null == errors.size() > 0
27:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.ErrorHandler@hasErrors():164:errors != null && errors.size() > 0 |==> false
28:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.ErrorHandler@hasErrors():164:errors != null && errors.size() > 0 |==> errors != null
29:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.ErrorHandler@hasErrors():164:errors != null && errors.size() > 0 |==> errors.size() > 0
30:ROR:>(int,int):!=(int,int):org.marc4j.ErrorHandler@hasErrors():164:maxSeverity > INFO |==> maxSeverity != INFO
31:ROR:>(int,int):>=(int,int):org.marc4j.ErrorHandler@hasErrors():164:maxSeverity > INFO |==> maxSeverity >= INFO
32:ROR:>(int,int):FALSE(int,int):org.marc4j.ErrorHandler@hasErrors():164:maxSeverity > INFO |==> false
33:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.ErrorHandler@hasErrors():164:errors != null && errors.size() > 0 && maxSeverity > INFO |==> (errors != null && errors.size() > 0) == maxSeverity > INFO
34:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.ErrorHandler@hasErrors():164:errors != null && errors.size() > 0 && maxSeverity > INFO |==> false
35:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.ErrorHandler@hasErrors():164:errors != null && errors.size() > 0 && maxSeverity > INFO |==> errors != null && errors.size() > 0
36:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.ErrorHandler@hasErrors():164:errors != null && errors.size() > 0 && maxSeverity > INFO |==> maxSeverity > INFO
37:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.ErrorHandler@getMaxSeverity():173:maxSeverity |==> 0
38:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.ErrorHandler@getErrors():182:errors == null |==> false
39:LVR:0:POS:org.marc4j.ErrorHandler@getErrors():182:0 |==> 1
40:LVR:0:NEG:org.marc4j.ErrorHandler@getErrors():182:0 |==> -1
41:ROR:==(int,int):<=(int,int):org.marc4j.ErrorHandler@getErrors():182:errors.size() == 0 |==> errors.size() <= 0
42:ROR:==(int,int):>=(int,int):org.marc4j.ErrorHandler@getErrors():182:errors.size() == 0 |==> errors.size() >= 0
43:ROR:==(int,int):FALSE(int,int):org.marc4j.ErrorHandler@getErrors():182:errors.size() == 0 |==> false
44:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.ErrorHandler@getErrors():182:errors == null || errors.size() == 0 |==> errors == null != (errors.size() == 0)
45:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.ErrorHandler@getErrors():182:errors == null || errors.size() == 0 |==> errors == null
46:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.ErrorHandler@getErrors():182:errors == null || errors.size() == 0 |==> errors.size() == 0
47:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.ErrorHandler@getErrors():182:errors == null || errors.size() == 0 |==> true
48:STD:<RETURN>:<NO-OP>:org.marc4j.ErrorHandler@getErrors():183:return null; |==> <NO-OP>
49:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.ErrorHandler@getErrors():185:errors |==> null
50:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@reset():192:errors = null |==> <NO-OP>
51:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@reset():193:maxSeverity = INFO |==> <NO-OP>
52:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):210:errors == null |==> false
53:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):211:errors = new LinkedList() |==> <NO-OP>
54:LVR:FALSE:TRUE:org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):212:false |==> true
55:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):212:hasMissingID = false |==> <NO-OP>
56:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):214:id != null |==> true
57:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):214:id != null && id.equals("unknown") |==> id != null == id.equals("unknown")
58:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):214:id != null && id.equals("unknown") |==> false
59:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):214:id != null && id.equals("unknown") |==> id != null
60:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):214:id != null && id.equals("unknown") |==> id.equals("unknown")
61:LVR:TRUE:FALSE:org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):215:true |==> false
62:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):215:hasMissingID = true |==> <NO-OP>
63:COR:hasMissingID:TRUE:org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):216:hasMissingID |==> false
64:COR:hasMissingID:FALSE:org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):216:hasMissingID |==> true
65:STD:<CALL>:<NO-OP>:org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):217:setRecordIDForAll(id) |==> <NO-OP>
66:STD:<CALL>:<NO-OP>:org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):219:errors.add(new Error(id, field, subfield, severity, message)) |==> <NO-OP>
67:ROR:>(int,int):!=(int,int):org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):220:severity > maxSeverity |==> severity != maxSeverity
68:ROR:>(int,int):>=(int,int):org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):220:severity > maxSeverity |==> severity >= maxSeverity
69:ROR:>(int,int):FALSE(int,int):org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):220:severity > maxSeverity |==> false
70:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@addError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String):221:maxSeverity = severity |==> <NO-OP>
71:STD:<CALL>:<NO-OP>:org.marc4j.ErrorHandler@addError(int,java.lang.String):233:addError(curRecordID, curField, curSubfield, severity, message) |==> <NO-OP>
72:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.ErrorHandler@addErrors(java.util.List):242:newErrors == null |==> false
73:LVR:0:POS:org.marc4j.ErrorHandler@addErrors(java.util.List):242:0 |==> 1
74:LVR:0:NEG:org.marc4j.ErrorHandler@addErrors(java.util.List):242:0 |==> -1
75:ROR:==(int,int):<=(int,int):org.marc4j.ErrorHandler@addErrors(java.util.List):242:newErrors.size() == 0 |==> newErrors.size() <= 0
76:ROR:==(int,int):>=(int,int):org.marc4j.ErrorHandler@addErrors(java.util.List):242:newErrors.size() == 0 |==> newErrors.size() >= 0
77:ROR:==(int,int):FALSE(int,int):org.marc4j.ErrorHandler@addErrors(java.util.List):242:newErrors.size() == 0 |==> false
78:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.ErrorHandler@addErrors(java.util.List):242:newErrors == null || newErrors.size() == 0 |==> newErrors == null != (newErrors.size() == 0)
79:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.ErrorHandler@addErrors(java.util.List):242:newErrors == null || newErrors.size() == 0 |==> newErrors == null
80:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.ErrorHandler@addErrors(java.util.List):242:newErrors == null || newErrors.size() == 0 |==> newErrors.size() == 0
81:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.ErrorHandler@addErrors(java.util.List):242:newErrors == null || newErrors.size() == 0 |==> true
82:STD:<RETURN>:<NO-OP>:org.marc4j.ErrorHandler@addErrors(java.util.List):243:return; |==> <NO-OP>
83:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.ErrorHandler@addErrors(java.util.List):245:errors == null |==> false
84:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@addErrors(java.util.List):246:errors = new LinkedList() |==> <NO-OP>
85:LVR:FALSE:TRUE:org.marc4j.ErrorHandler@addErrors(java.util.List):247:false |==> true
86:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@addErrors(java.util.List):247:hasMissingID = false |==> <NO-OP>
87:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.ErrorHandler@addErrors(java.util.List):250:(Error)err |==> null
88:STD:<CALL>:<NO-OP>:org.marc4j.ErrorHandler@addErrors(java.util.List):251:errors.add(errobj) |==> <NO-OP>
89:ROR:>(int,int):!=(int,int):org.marc4j.ErrorHandler@addErrors(java.util.List):252:errobj.severity > maxSeverity |==> errobj.severity != maxSeverity
90:ROR:>(int,int):>=(int,int):org.marc4j.ErrorHandler@addErrors(java.util.List):252:errobj.severity > maxSeverity |==> errobj.severity >= maxSeverity
91:ROR:>(int,int):FALSE(int,int):org.marc4j.ErrorHandler@addErrors(java.util.List):252:errobj.severity > maxSeverity |==> false
92:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@addErrors(java.util.List):253:maxSeverity = errobj.severity |==> <NO-OP>
93:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):266:recordErrors == null |==> false
94:LVR:0:POS:org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):266:0 |==> 1
95:LVR:0:NEG:org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):266:0 |==> -1
96:ROR:==(int,int):<=(int,int):org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):266:recordErrors.size() == 0 |==> recordErrors.size() <= 0
97:ROR:==(int,int):>=(int,int):org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):266:recordErrors.size() == 0 |==> recordErrors.size() >= 0
98:ROR:==(int,int):FALSE(int,int):org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):266:recordErrors.size() == 0 |==> false
99:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):266:recordErrors == null || recordErrors.size() == 0 |==> recordErrors == null != (recordErrors.size() == 0)
100:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):266:recordErrors == null || recordErrors.size() == 0 |==> recordErrors == null
101:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):266:recordErrors == null || recordErrors.size() == 0 |==> recordErrors.size() == 0
102:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):266:recordErrors == null || recordErrors.size() == 0 |==> true
103:STD:<RETURN>:<NO-OP>:org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):267:return; |==> <NO-OP>
104:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):269:errors == null |==> false
105:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):270:errors = new LinkedList() |==> <NO-OP>
106:LVR:FALSE:TRUE:org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):271:false |==> true
107:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):271:hasMissingID = false |==> <NO-OP>
108:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):274:new Error(recID, err.curField, err.curSubfield, err.severity, err.message) |==> null
109:STD:<CALL>:<NO-OP>:org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):276:errors.add(errobj) |==> <NO-OP>
110:ROR:>(int,int):!=(int,int):org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):277:errobj.severity > maxSeverity |==> errobj.severity != maxSeverity
111:ROR:>(int,int):>=(int,int):org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):277:errobj.severity > maxSeverity |==> errobj.severity >= maxSeverity
112:ROR:>(int,int):FALSE(int,int):org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):277:errobj.severity > maxSeverity |==> false
113:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@addErrors(java.lang.String,java.util.List<org.marc4j.MarcError>):278:maxSeverity = errobj.severity |==> <NO-OP>
114:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.ErrorHandler@setRecordIDForAll(java.lang.String):284:id != null |==> true
115:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.ErrorHandler@setRecordIDForAll(java.lang.String):285:errors.iterator() |==> null
116:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.ErrorHandler@setRecordIDForAll(java.lang.String):287:(Error)iter.next() |==> null
117:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.ErrorHandler@setRecordIDForAll(java.lang.String):288:err.getCurRecordID() == null |==> false
118:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.ErrorHandler@setRecordIDForAll(java.lang.String):288:err.getCurRecordID() == null || err.getCurRecordID().equals("unknown") |==> err.getCurRecordID() == null != err.getCurRecordID().equals("unknown")
119:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.ErrorHandler@setRecordIDForAll(java.lang.String):288:err.getCurRecordID() == null || err.getCurRecordID().equals("unknown") |==> err.getCurRecordID() == null
120:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.ErrorHandler@setRecordIDForAll(java.lang.String):288:err.getCurRecordID() == null || err.getCurRecordID().equals("unknown") |==> err.getCurRecordID().equals("unknown")
121:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.ErrorHandler@setRecordIDForAll(java.lang.String):288:err.getCurRecordID() == null || err.getCurRecordID().equals("unknown") |==> true
122:STD:<CALL>:<NO-OP>:org.marc4j.ErrorHandler@setRecordIDForAll(java.lang.String):289:err.setCurRecordID(id) |==> <NO-OP>
123:LVR:FALSE:TRUE:org.marc4j.ErrorHandler@setRecordIDForAll(java.lang.String):292:false |==> true
124:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@setRecordIDForAll(java.lang.String):292:hasMissingID = false |==> <NO-OP>
125:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@setRecordID(java.lang.String):303:curRecordID = recordID |==> <NO-OP>
126:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.ErrorHandler@setRecordID(java.lang.String):304:errors != null |==> true
127:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.ErrorHandler@setRecordID(java.lang.String):304:hasMissingID && errors != null |==> hasMissingID == (errors != null)
128:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.ErrorHandler@setRecordID(java.lang.String):304:hasMissingID && errors != null |==> false
129:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.ErrorHandler@setRecordID(java.lang.String):304:hasMissingID && errors != null |==> hasMissingID
130:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.ErrorHandler@setRecordID(java.lang.String):304:hasMissingID && errors != null |==> errors != null
131:STD:<CALL>:<NO-OP>:org.marc4j.ErrorHandler@setRecordID(java.lang.String):305:setRecordIDForAll(recordID) |==> <NO-OP>
132:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@setCurrentField(java.lang.String):315:this.curField = curField |==> <NO-OP>
133:STD:<ASSIGN>:<NO-OP>:org.marc4j.ErrorHandler@setCurrentSubfield(java.lang.String):324:this.curSubfield = curSubfield |==> <NO-OP>
134:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcError@<init>(java.lang.String,java.lang.String,int,java.lang.String):56:curField = field |==> <NO-OP>
135:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcError@<init>(java.lang.String,java.lang.String,int,java.lang.String):57:curSubfield = subfield |==> <NO-OP>
136:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcError@<init>(java.lang.String,java.lang.String,int,java.lang.String):58:this.severity = severity |==> <NO-OP>
137:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcError@<init>(java.lang.String,java.lang.String,int,java.lang.String):59:this.message = message |==> <NO-OP>
138:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcError@toString():69:getSeverityMsg(severity) |==> null
139:EVR:<PLUS>:<DEFAULT>:org.marc4j.MarcError@toString():70:severityMsg + " : " + message + " --- [ " + curField + " : " + curSubfield + " ]" |==> null
140:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcError@toString():71:ret |==> null
141:STD:<RETURN>:<NO-OP>:org.marc4j.MarcError@getSeverityMsg(int):82:return "FATAL       "; |==> <NO-OP>
142:STD:<RETURN>:<NO-OP>:org.marc4j.MarcError@getSeverityMsg(int):84:return "Major Error "; |==> <NO-OP>
143:STD:<RETURN>:<NO-OP>:org.marc4j.MarcError@getSeverityMsg(int):86:return "Minor Error "; |==> <NO-OP>
144:STD:<RETURN>:<NO-OP>:org.marc4j.MarcError@getSeverityMsg(int):88:return "Typo        "; |==> <NO-OP>
145:STD:<RETURN>:<NO-OP>:org.marc4j.MarcError@getSeverityMsg(int):90:return "Info        "; |==> <NO-OP>
146:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String,java.lang.String):57:this.reader = reader |==> <NO-OP>
147:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String,java.lang.String):58:this.idsToMerge = idsToMerge |==> <NO-OP>
148:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String,java.lang.String):59:this.leftControlField = leftControlField |==> <NO-OP>
149:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String,java.lang.String):60:this.rightControlField = rightControlField |==> <NO-OP>
150:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@<init>(org.marc4j.MarcReader,org.marc4j.ErrorHandler,org.marc4j.ErrorHandler,java.lang.String,java.lang.String,java.lang.String):95:this.reader = reader |==> <NO-OP>
151:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@<init>(org.marc4j.MarcReader,org.marc4j.ErrorHandler,org.marc4j.ErrorHandler,java.lang.String,java.lang.String,java.lang.String):96:this.idsToMerge = idsToMerge |==> <NO-OP>
152:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@<init>(org.marc4j.MarcReader,org.marc4j.ErrorHandler,org.marc4j.ErrorHandler,java.lang.String,java.lang.String,java.lang.String):97:this.leftControlField = leftControlField |==> <NO-OP>
153:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@<init>(org.marc4j.MarcReader,org.marc4j.ErrorHandler,org.marc4j.ErrorHandler,java.lang.String,java.lang.String,java.lang.String):98:this.rightControlField = rightControlField |==> <NO-OP>
154:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcCombiningReader@hasNext():109:currentRecord == null |==> false
155:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@hasNext():110:currentRecord = next() |==> <NO-OP>
156:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcCombiningReader@hasNext():112:currentRecord != null |==> true
157:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcCombiningReader@next():121:currentRecord != null |==> true
158:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcCombiningReader@next():122:currentRecord |==> null
159:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@next():123:currentRecord = null |==> <NO-OP>
160:STD:<RETURN>:<NO-OP>:org.marc4j.MarcCombiningReader@next():124:return tmp; |==> <NO-OP>
161:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcCombiningReader@next():125:currentRecord == null |==> false
162:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcCombiningReader@next():126:nextRecord != null |==> true
163:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@next():127:currentRecord = nextRecord |==> <NO-OP>
164:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@next():128:nextRecord = null |==> <NO-OP>
165:COR:reader.hasNext():TRUE:org.marc4j.MarcCombiningReader@next():130:reader.hasNext() |==> false
166:COR:reader.hasNext():FALSE:org.marc4j.MarcCombiningReader@next():130:reader.hasNext() |==> true
167:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcCombiningReader@next():131:currentRecord != null |==> true
168:STD:<RETURN>:<NO-OP>:org.marc4j.MarcCombiningReader@next():131:return Config.__M_NO == 167 ? true : Config.__M_NO == 0 && Config.COVERED(167, 167) ? currentRecord != null : currentRecord != null ? next() : null; |==> <NO-OP>
169:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@next():135:nextRecord = reader.next() |==> <NO-OP>
170:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcCombiningReader@next():137:currentRecord != null |==> true
171:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcCombiningReader@next():138:currentRecord.getControlNumber() |==> null
172:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcCombiningReader@next():141:recCntlNum != null |==> true
173:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@next():149:currentRecord = combineRecords(currentRecord, nextRecord, idsToMerge) |==> <NO-OP>
174:COR:reader.hasNext():TRUE:org.marc4j.MarcCombiningReader@next():150:reader.hasNext() |==> false
175:COR:reader.hasNext():FALSE:org.marc4j.MarcCombiningReader@next():150:reader.hasNext() |==> true
176:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@next():152:nextRecord = reader.next() |==> <NO-OP>
177:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcCombiningReader@next():154:currentRecord.getControlNumber() |==> null
178:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcCombiningReader@next():157:recCntlNum != null |==> true
179:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@next():161:nextRecord = null |==> <NO-OP>
180:STD:<RETURN>:<NO-OP>:org.marc4j.MarcCombiningReader@next():164:return next(); |==> <NO-OP>
181:LVR:0:POS:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):178:0 |==> 1
182:LVR:0:NEG:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):178:0 |==> -1
183:LVR:POS:0:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):178:3 |==> 0
184:LVR:POS:NEG:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):178:3 |==> -3
185:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):179:record.getVariableFields(tagstart) |==> null
186:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):183:(ControlField)field |==> null
187:COR:cf.getTag().matches(tagstart):TRUE:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):185:cf.getTag().matches(tagstart) |==> false
188:COR:cf.getTag().matches(tagstart):FALSE:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):185:cf.getTag().matches(tagstart) |==> true
189:STD:<RETURN>:<NO-OP>:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):186:return cf.getData(); |==> <NO-OP>
190:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):189:(DataField)field |==> null
191:COR:df.getTag().matches(tagstart):TRUE:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):191:df.getTag().matches(tagstart) |==> false
192:COR:df.getTag().matches(tagstart):FALSE:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):191:df.getTag().matches(tagstart) |==> true
193:LVR:POS:0:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):194:3 |==> 0
194:LVR:POS:NEG:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):194:3 |==> -3
195:ROR:>(int,int):!=(int,int):org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):194:tag.length() > 3 |==> tag.length() != 3
196:ROR:>(int,int):>=(int,int):org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):194:tag.length() > 3 |==> tag.length() >= 3
197:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):194:tag.length() > 3 |==> false
198:LVR:POS:0:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):195:4 |==> 0
199:LVR:POS:NEG:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):195:4 |==> -4
200:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):195:subfieldtag = tag.charAt(4) |==> <NO-OP>
201:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):198:df.getSubfield(subfieldtag) |==> null
202:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):199:sf != null |==> true
203:STD:<RETURN>:<NO-OP>:org.marc4j.MarcCombiningReader@findControlField(org.marc4j.marc.Record,java.lang.String):200:return sf.getData(); |==> <NO-OP>
204:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):217:left == null |==> false
205:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):217:right == null |==> false
206:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):217:left == null || right == null |==> left == null != (right == null)
207:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):217:left == null || right == null |==> left == null
208:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):217:left == null || right == null |==> right == null
209:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):217:left == null || right == null |==> true
210:LVR:FALSE:TRUE:org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):218:false |==> true
211:STD:<RETURN>:<NO-OP>:org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):218:return Config.__M_NO == 0 && Config.COVERED(210, 210) ? false : Config.__M_NO == 210 ? true : false; |==> <NO-OP>
212:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):229:leftControlField == null |==> false
213:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):230:leftStr = left.getControlNumber() |==> <NO-OP>
214:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):232:leftStr = findControlField(left, leftControlField) |==> <NO-OP>
215:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):235:rightControlField == null |==> false
216:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):236:rightStr = right.getControlNumber() |==> <NO-OP>
217:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):238:rightStr = findControlField(right, rightControlField) |==> <NO-OP>
218:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):242:leftStr != null |==> true
219:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):242:rightStr != null |==> true
220:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):242:leftStr != null && rightStr != null |==> leftStr != null == (rightStr != null)
221:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):242:leftStr != null && rightStr != null |==> false
222:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):242:leftStr != null && rightStr != null |==> leftStr != null
223:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):242:leftStr != null && rightStr != null |==> rightStr != null
224:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):242:leftStr != null && rightStr != null && leftStr.equals(rightStr) |==> (leftStr != null && rightStr != null) == leftStr.equals(rightStr)
225:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):242:leftStr != null && rightStr != null && leftStr.equals(rightStr) |==> false
226:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):242:leftStr != null && rightStr != null && leftStr.equals(rightStr) |==> leftStr != null && rightStr != null
227:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):242:leftStr != null && rightStr != null && leftStr.equals(rightStr) |==> leftStr.equals(rightStr)
228:LVR:TRUE:FALSE:org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):243:true |==> false
229:STD:<RETURN>:<NO-OP>:org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):243:return Config.__M_NO == 0 && Config.COVERED(228, 228) ? true : Config.__M_NO == 228 ? false : true; |==> <NO-OP>
230:LVR:FALSE:TRUE:org.marc4j.MarcCombiningReader@recordsMatch(org.marc4j.marc.Record,org.marc4j.marc.Record):246:false |==> true
231:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String):260:nextRecord.getVariableFields() |==> null
232:COR:field.getTag().matches(idsToMerge):TRUE:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String):263:field.getTag().matches(idsToMerge) |==> false
233:COR:field.getTag().matches(idsToMerge):FALSE:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String):263:field.getTag().matches(idsToMerge) |==> true
234:STD:<CALL>:<NO-OP>:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String):264:currentRecord.addVariableField(field) |==> <NO-OP>
235:COR:nextRecord.hasErrors():TRUE:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String):267:nextRecord.hasErrors() |==> false
236:COR:nextRecord.hasErrors():FALSE:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String):267:nextRecord.hasErrors() |==> true
237:STD:<CALL>:<NO-OP>:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String):268:currentRecord.addErrors(nextRecord.getErrors()) |==> <NO-OP>
238:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String):271:currentRecord |==> null
239:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String,java.lang.String):286:currentRecord.getVariableFields() |==> null
240:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String,java.lang.String):287:new ArrayList<VariableField>() |==> null
241:COR:field.getTag().matches(fieldInsertBefore):TRUE:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String,java.lang.String):291:field.getTag().matches(fieldInsertBefore) |==> false
242:COR:field.getTag().matches(fieldInsertBefore):FALSE:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String,java.lang.String):291:field.getTag().matches(fieldInsertBefore) |==> true
243:STD:<CALL>:<NO-OP>:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String,java.lang.String):292:fieldsToMove.add(field) |==> <NO-OP>
244:STD:<CALL>:<NO-OP>:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String,java.lang.String):293:currentRecord.removeVariableField(field) |==> <NO-OP>
245:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String,java.lang.String):297:nextRecord.getVariableFields() |==> null
246:COR:field.getTag().matches(idsToMerge):TRUE:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String,java.lang.String):300:field.getTag().matches(idsToMerge) |==> false
247:COR:field.getTag().matches(idsToMerge):FALSE:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String,java.lang.String):300:field.getTag().matches(idsToMerge) |==> true
248:STD:<CALL>:<NO-OP>:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String,java.lang.String):301:currentRecord.addVariableField(field) |==> <NO-OP>
249:STD:<CALL>:<NO-OP>:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String,java.lang.String):307:currentRecord.addVariableField(field) |==> <NO-OP>
250:COR:nextRecord.hasErrors():TRUE:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String,java.lang.String):310:nextRecord.hasErrors() |==> false
251:COR:nextRecord.hasErrors():FALSE:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String,java.lang.String):310:nextRecord.hasErrors() |==> true
252:STD:<CALL>:<NO-OP>:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String,java.lang.String):311:currentRecord.addErrors(nextRecord.getErrors()) |==> <NO-OP>
253:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcCombiningReader@combineRecords(org.marc4j.marc.Record,org.marc4j.marc.Record,java.lang.String,java.lang.String):314:currentRecord |==> null
254:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcDirStreamReader@<init>(java.lang.String):63:new File(dirName) |==> null
255:LVR:FALSE:TRUE:org.marc4j.MarcDirStreamReader@<init>(java.lang.String):64:false |==> true
256:LVR:FALSE:TRUE:org.marc4j.MarcDirStreamReader@<init>(java.lang.String):64:false |==> true
257:STD:<CALL>:<NO-OP>:org.marc4j.MarcDirStreamReader@<init>(java.lang.String):64:init(dir, false, false, null) |==> <NO-OP>
258:LVR:FALSE:TRUE:org.marc4j.MarcDirStreamReader@<init>(java.io.File):75:false |==> true
259:LVR:FALSE:TRUE:org.marc4j.MarcDirStreamReader@<init>(java.io.File):75:false |==> true
260:STD:<CALL>:<NO-OP>:org.marc4j.MarcDirStreamReader@<init>(java.io.File):75:init(dir, false, false, null) |==> <NO-OP>
261:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcDirStreamReader@<init>(java.lang.String,boolean,boolean):93:new File(dirName) |==> null
262:STD:<CALL>:<NO-OP>:org.marc4j.MarcDirStreamReader@<init>(java.lang.String,boolean,boolean):94:init(dir, permissive, convertToUTF8, null) |==> <NO-OP>
263:STD:<CALL>:<NO-OP>:org.marc4j.MarcDirStreamReader@<init>(java.io.File,boolean,boolean):111:init(dir, permissive, convertToUTF8, null) |==> <NO-OP>
264:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcDirStreamReader@<init>(java.lang.String,boolean,boolean,java.lang.String):131:new File(dirName) |==> null
265:STD:<CALL>:<NO-OP>:org.marc4j.MarcDirStreamReader@<init>(java.lang.String,boolean,boolean,java.lang.String):132:init(dir, permissive, convertToUTF8, defaultEncoding) |==> <NO-OP>
266:STD:<CALL>:<NO-OP>:org.marc4j.MarcDirStreamReader@<init>(java.io.File,boolean,boolean,java.lang.String):152:init(dir, permissive, convertToUTF8, defaultEncoding) |==> <NO-OP>
267:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcDirStreamReader$1@accept(java.io.File,java.lang.String):161:name.endsWith("mrc") |==> false
268:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcDirStreamReader@init(java.io.File,boolean,boolean,java.lang.String):164:this.permissive = permissive |==> <NO-OP>
269:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcDirStreamReader@init(java.io.File,boolean,boolean,java.lang.String):165:this.convertToUTF8 = convertToUTF8 |==> <NO-OP>
270:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcDirStreamReader@init(java.io.File,boolean,boolean,java.lang.String):166:list = dir.listFiles(filter) |==> <NO-OP>
271:STD:<CALL>:<NO-OP>:org.marc4j.MarcDirStreamReader@init(java.io.File,boolean,boolean,java.lang.String):167:java.util.Arrays.sort(list) |==> <NO-OP>
272:LVR:0:POS:org.marc4j.MarcDirStreamReader@init(java.io.File,boolean,boolean,java.lang.String):168:0 |==> 1
273:LVR:0:NEG:org.marc4j.MarcDirStreamReader@init(java.io.File,boolean,boolean,java.lang.String):168:0 |==> -1
274:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcDirStreamReader@init(java.io.File,boolean,boolean,java.lang.String):168:curFileNum = 0 |==> <NO-OP>
275:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcDirStreamReader@init(java.io.File,boolean,boolean,java.lang.String):169:curFileReader = null |==> <NO-OP>
276:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcDirStreamReader@init(java.io.File,boolean,boolean,java.lang.String):170:this.defaultEncoding = defaultEncoding |==> <NO-OP>
277:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcDirStreamReader@hasNext():178:curFileReader == null |==> false
278:LVR:FALSE:TRUE:org.marc4j.MarcDirStreamReader@hasNext():178:false |==> true
279:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcDirStreamReader@hasNext():178:curFileReader.hasNext() == false |==> false
280:ROR:==(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcDirStreamReader@hasNext():178:curFileReader.hasNext() == false |==> curFileReader.hasNext()
281:ROR:==(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcDirStreamReader@hasNext():178:curFileReader.hasNext() == false |==> false
282:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcDirStreamReader@hasNext():178:curFileReader == null || curFileReader.hasNext() == false |==> curFileReader == null != (curFileReader.hasNext() == false)
283:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcDirStreamReader@hasNext():178:curFileReader == null || curFileReader.hasNext() == false |==> curFileReader == null
284:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcDirStreamReader@hasNext():178:curFileReader == null || curFileReader.hasNext() == false |==> curFileReader.hasNext() == false
285:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcDirStreamReader@hasNext():178:curFileReader == null || curFileReader.hasNext() == false |==> true
286:STD:<CALL>:<NO-OP>:org.marc4j.MarcDirStreamReader@hasNext():179:nextFile() |==> <NO-OP>
287:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcDirStreamReader@hasNext():181:curFileReader == null |==> false
288:LVR:FALSE:TRUE:org.marc4j.MarcDirStreamReader@hasNext():181:false |==> true
289:ROR:!=(int,int):<(int,int):org.marc4j.MarcDirStreamReader@nextFile():185:curFileNum != list.length |==> curFileNum < list.length
290:ROR:!=(int,int):>(int,int):org.marc4j.MarcDirStreamReader@nextFile():185:curFileNum != list.length |==> curFileNum > list.length
291:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcDirStreamReader@nextFile():185:curFileNum != list.length |==> true
292:STD:<CALL>:<NO-OP>:org.marc4j.MarcDirStreamReader@nextFile():187:System.err.println("Switching to input file: " + list[curFileNum]) |==> <NO-OP>
293:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcDirStreamReader@nextFile():188:defaultEncoding != null |==> true
294:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcDirStreamReader@nextFile():189:curFileReader = new MarcPermissiveStreamReader(new FileInputStream(list[curFileNum++]), permissive, convertToUTF8, defaultEncoding) |==> <NO-OP>
295:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcDirStreamReader@nextFile():192:curFileReader = new MarcPermissiveStreamReader(new FileInputStream(list[curFileNum++]), permissive, convertToUTF8) |==> <NO-OP>
296:STD:<CALL>:<NO-OP>:org.marc4j.MarcDirStreamReader@nextFile():196:nextFile() |==> <NO-OP>
297:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcDirStreamReader@nextFile():199:curFileReader = null |==> <NO-OP>
298:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcDirStreamReader@next():210:curFileReader == null |==> false
299:LVR:FALSE:TRUE:org.marc4j.MarcDirStreamReader@next():210:false |==> true
300:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcDirStreamReader@next():210:curFileReader.hasNext() == false |==> false
301:ROR:==(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcDirStreamReader@next():210:curFileReader.hasNext() == false |==> curFileReader.hasNext()
302:ROR:==(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcDirStreamReader@next():210:curFileReader.hasNext() == false |==> false
303:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcDirStreamReader@next():210:curFileReader == null || curFileReader.hasNext() == false |==> curFileReader == null != (curFileReader.hasNext() == false)
304:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcDirStreamReader@next():210:curFileReader == null || curFileReader.hasNext() == false |==> curFileReader == null
305:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcDirStreamReader@next():210:curFileReader == null || curFileReader.hasNext() == false |==> curFileReader.hasNext() == false
306:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcDirStreamReader@next():210:curFileReader == null || curFileReader.hasNext() == false |==> true
307:STD:<CALL>:<NO-OP>:org.marc4j.MarcDirStreamReader@next():211:nextFile() |==> <NO-OP>
308:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcDirStreamReader@next():213:curFileReader == null |==> false
309:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):64:ifFieldPresent != null |==> true
310:LVR:POS:0:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):65:2 |==> 0
311:LVR:POS:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):65:2 |==> -2
312:LVR:0:POS:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):66:0 |==> 1
313:LVR:0:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):66:0 |==> -1
314:LVR:POS:0:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):67:2 |==> 0
315:LVR:POS:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):67:2 |==> -2
316:LVR:0:POS:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):68:0 |==> 1
317:LVR:0:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):68:0 |==> -1
318:ROR:<(int,int):!=(int,int):org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):68:i < includeRecordIfFieldsPresent.length |==> i != includeRecordIfFieldsPresent.length
319:ROR:<(int,int):<=(int,int):org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):68:i < includeRecordIfFieldsPresent.length |==> i <= includeRecordIfFieldsPresent.length
320:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):68:i < includeRecordIfFieldsPresent.length |==> false
321:LVR:0:POS:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):69:0 |==> 1
322:LVR:0:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):69:0 |==> -1
323:LVR:0:POS:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):69:0 |==> 1
324:LVR:0:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):69:0 |==> -1
325:LVR:POS:0:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):69:3 |==> 0
326:LVR:POS:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):69:3 |==> -3
327:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):69:includeRecordIfFieldsPresent[i][0] = tagPlus[i].substring(0, 3) |==> <NO-OP>
328:LVR:POS:0:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):70:1 |==> 0
329:LVR:POS:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):70:1 |==> -1
330:LVR:POS:0:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):70:3 |==> 0
331:LVR:POS:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):70:3 |==> -3
332:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):70:includeRecordIfFieldsPresent[i][1] = tagPlus[i].substring(3) |==> <NO-OP>
333:LVR:POS:0:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):72:1 |==> 0
334:LVR:POS:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):72:1 |==> -1
335:ROR:>(int,int):!=(int,int):org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):72:present.length > 1 |==> present.length != 1
336:ROR:>(int,int):>=(int,int):org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):72:present.length > 1 |==> present.length >= 1
337:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):72:present.length > 1 |==> false
338:LVR:POS:0:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):73:1 |==> 0
339:LVR:POS:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):73:1 |==> -1
340:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):82:ifFieldMissing != null |==> true
341:LVR:POS:0:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):83:2 |==> 0
342:LVR:POS:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):83:2 |==> -2
343:LVR:0:POS:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):84:0 |==> 1
344:LVR:0:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):84:0 |==> -1
345:LVR:POS:0:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):85:2 |==> 0
346:LVR:POS:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):85:2 |==> -2
347:LVR:0:POS:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):86:0 |==> 1
348:LVR:0:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):86:0 |==> -1
349:ROR:<(int,int):!=(int,int):org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):86:i < includeRecordIfFieldsMissing.length |==> i != includeRecordIfFieldsMissing.length
350:ROR:<(int,int):<=(int,int):org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):86:i < includeRecordIfFieldsMissing.length |==> i <= includeRecordIfFieldsMissing.length
351:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):86:i < includeRecordIfFieldsMissing.length |==> false
352:LVR:0:POS:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):87:0 |==> 1
353:LVR:0:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):87:0 |==> -1
354:LVR:0:POS:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):87:0 |==> 1
355:LVR:0:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):87:0 |==> -1
356:LVR:POS:0:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):87:3 |==> 0
357:LVR:POS:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):87:3 |==> -3
358:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):87:includeRecordIfFieldsMissing[i][0] = tagPlus[i].substring(0, 3) |==> <NO-OP>
359:LVR:POS:0:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):88:1 |==> 0
360:LVR:POS:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):88:1 |==> -1
361:LVR:POS:0:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):88:3 |==> 0
362:LVR:POS:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):88:3 |==> -3
363:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):88:includeRecordIfFieldsMissing[i][1] = tagPlus[i].substring(3) |==> <NO-OP>
364:LVR:POS:0:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):90:1 |==> 0
365:LVR:POS:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):90:1 |==> -1
366:ROR:>(int,int):!=(int,int):org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):90:missing.length > 1 |==> missing.length != 1
367:ROR:>(int,int):>=(int,int):org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):90:missing.length > 1 |==> missing.length >= 1
368:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):90:missing.length > 1 |==> false
369:LVR:POS:0:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):91:1 |==> 0
370:LVR:POS:NEG:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):91:1 |==> -1
371:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcFilteredReader@<init>(org.marc4j.MarcReader,java.lang.String,java.lang.String):99:reader |==> null
372:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@hasNext():108:currentRecord == null |==> false
373:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcFilteredReader@hasNext():109:currentRecord = next() |==> <NO-OP>
374:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@hasNext():111:currentRecord != null |==> true
375:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@next():122:currentRecord != null |==> true
376:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcFilteredReader@next():123:currentRecord |==> null
377:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcFilteredReader@next():124:currentRecord = null |==> <NO-OP>
378:STD:<RETURN>:<NO-OP>:org.marc4j.MarcFilteredReader@next():125:return tmp; |==> <NO-OP>
379:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@next():128:currentRecord == null |==> false
380:COR:reader.hasNext():TRUE:org.marc4j.MarcFilteredReader@next():129:reader.hasNext() |==> false
381:COR:reader.hasNext():FALSE:org.marc4j.MarcFilteredReader@next():129:reader.hasNext() |==> true
382:STD:<RETURN>:<NO-OP>:org.marc4j.MarcFilteredReader@next():130:return null; |==> <NO-OP>
383:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcFilteredReader@next():135:rec = reader.next() |==> <NO-OP>
384:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@next():140:rec != null |==> true
385:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@next():140:includeRecordIfFieldsPresent != null |==> true
386:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcFilteredReader@next():140:rec != null && includeRecordIfFieldsPresent != null |==> rec != null == (includeRecordIfFieldsPresent != null)
387:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcFilteredReader@next():140:rec != null && includeRecordIfFieldsPresent != null |==> false
388:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():140:rec != null && includeRecordIfFieldsPresent != null |==> rec != null
389:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():140:rec != null && includeRecordIfFieldsPresent != null |==> includeRecordIfFieldsPresent != null
390:LVR:0:POS:org.marc4j.MarcFilteredReader@next():142:0 |==> 1
391:LVR:0:NEG:org.marc4j.MarcFilteredReader@next():142:0 |==> -1
392:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@next():146:includeRecordIfFieldContains == null |==> false
393:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcFilteredReader@next():146:includeRecordIfFieldContains == null || ((ControlField)vf).getData().contains(includeRecordIfFieldContains) |==> includeRecordIfFieldContains == null != ((ControlField)vf).getData().contains(includeRecordIfFieldContains)
394:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():146:includeRecordIfFieldContains == null || ((ControlField)vf).getData().contains(includeRecordIfFieldContains) |==> includeRecordIfFieldContains == null
395:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():146:includeRecordIfFieldContains == null || ((ControlField)vf).getData().contains(includeRecordIfFieldContains) |==> ((ControlField)vf).getData().contains(includeRecordIfFieldContains)
396:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcFilteredReader@next():146:includeRecordIfFieldContains == null || ((ControlField)vf).getData().contains(includeRecordIfFieldContains) |==> true
397:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcFilteredReader@next():148:currentRecord = rec |==> <NO-OP>
398:STD:<BREAK>:<NO-OP>:org.marc4j.MarcFilteredReader@next():149:break; |==> <NO-OP>
399:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@next():152:includeRecordIfFieldContains == null |==> false
400:LVR:POS:0:org.marc4j.MarcFilteredReader@next():153:1 |==> 0
401:LVR:POS:NEG:org.marc4j.MarcFilteredReader@next():153:1 |==> -1
402:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcFilteredReader@next():152:includeRecordIfFieldContains == null || ((DataField)vf).getSubfieldsAsString(tagAndSf[1]).contains(includeRecordIfFieldContains) |==> includeRecordIfFieldContains == null != ((DataField)vf).getSubfieldsAsString(tagAndSf[1]).contains(includeRecordIfFieldContains)
403:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():152:includeRecordIfFieldContains == null || ((DataField)vf).getSubfieldsAsString(tagAndSf[1]).contains(includeRecordIfFieldContains) |==> includeRecordIfFieldContains == null
404:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():152:includeRecordIfFieldContains == null || ((DataField)vf).getSubfieldsAsString(tagAndSf[1]).contains(includeRecordIfFieldContains) |==> ((DataField)vf).getSubfieldsAsString(tagAndSf[1]).contains(includeRecordIfFieldContains)
405:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcFilteredReader@next():152:includeRecordIfFieldContains == null || ((DataField)vf).getSubfieldsAsString(tagAndSf[1]).contains(includeRecordIfFieldContains) |==> true
406:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcFilteredReader@next():155:currentRecord = rec |==> <NO-OP>
407:STD:<BREAK>:<NO-OP>:org.marc4j.MarcFilteredReader@next():156:break; |==> <NO-OP>
408:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@next():160:currentRecord != null |==> true
409:STD:<BREAK>:<NO-OP>:org.marc4j.MarcFilteredReader@next():161:break; |==> <NO-OP>
410:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@next():166:rec != null |==> true
411:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@next():166:currentRecord == null |==> false
412:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcFilteredReader@next():166:rec != null && currentRecord == null |==> rec != null == (currentRecord == null)
413:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcFilteredReader@next():166:rec != null && currentRecord == null |==> false
414:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():166:rec != null && currentRecord == null |==> rec != null
415:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():166:rec != null && currentRecord == null |==> currentRecord == null
416:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@next():166:includeRecordIfFieldsMissing != null |==> true
417:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcFilteredReader@next():166:rec != null && currentRecord == null && includeRecordIfFieldsMissing != null |==> (rec != null && currentRecord == null) == (includeRecordIfFieldsMissing != null)
418:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcFilteredReader@next():166:rec != null && currentRecord == null && includeRecordIfFieldsMissing != null |==> false
419:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():166:rec != null && currentRecord == null && includeRecordIfFieldsMissing != null |==> rec != null && currentRecord == null
420:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():166:rec != null && currentRecord == null && includeRecordIfFieldsMissing != null |==> includeRecordIfFieldsMissing != null
421:LVR:TRUE:FALSE:org.marc4j.MarcFilteredReader@next():167:true |==> false
422:LVR:0:POS:org.marc4j.MarcFilteredReader@next():169:0 |==> 1
423:LVR:0:NEG:org.marc4j.MarcFilteredReader@next():169:0 |==> -1
424:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@next():173:includeRecordIfFieldDoesntContain == null |==> false
425:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcFilteredReader@next():173:includeRecordIfFieldDoesntContain == null || ((ControlField)vf).getData().contains(includeRecordIfFieldDoesntContain) |==> includeRecordIfFieldDoesntContain == null != ((ControlField)vf).getData().contains(includeRecordIfFieldDoesntContain)
426:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():173:includeRecordIfFieldDoesntContain == null || ((ControlField)vf).getData().contains(includeRecordIfFieldDoesntContain) |==> includeRecordIfFieldDoesntContain == null
427:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():173:includeRecordIfFieldDoesntContain == null || ((ControlField)vf).getData().contains(includeRecordIfFieldDoesntContain) |==> ((ControlField)vf).getData().contains(includeRecordIfFieldDoesntContain)
428:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcFilteredReader@next():173:includeRecordIfFieldDoesntContain == null || ((ControlField)vf).getData().contains(includeRecordIfFieldDoesntContain) |==> true
429:LVR:FALSE:TRUE:org.marc4j.MarcFilteredReader@next():175:false |==> true
430:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcFilteredReader@next():175:useRecord = false |==> <NO-OP>
431:STD:<BREAK>:<NO-OP>:org.marc4j.MarcFilteredReader@next():176:break; |==> <NO-OP>
432:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@next():179:includeRecordIfFieldDoesntContain == null |==> false
433:LVR:POS:0:org.marc4j.MarcFilteredReader@next():180:1 |==> 0
434:LVR:POS:NEG:org.marc4j.MarcFilteredReader@next():180:1 |==> -1
435:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcFilteredReader@next():179:includeRecordIfFieldDoesntContain == null || ((DataField)vf).getSubfieldsAsString(tagAndSf[1]).contains(includeRecordIfFieldDoesntContain) |==> includeRecordIfFieldDoesntContain == null != ((DataField)vf).getSubfieldsAsString(tagAndSf[1]).contains(includeRecordIfFieldDoesntContain)
436:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():179:includeRecordIfFieldDoesntContain == null || ((DataField)vf).getSubfieldsAsString(tagAndSf[1]).contains(includeRecordIfFieldDoesntContain) |==> includeRecordIfFieldDoesntContain == null
437:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():179:includeRecordIfFieldDoesntContain == null || ((DataField)vf).getSubfieldsAsString(tagAndSf[1]).contains(includeRecordIfFieldDoesntContain) |==> ((DataField)vf).getSubfieldsAsString(tagAndSf[1]).contains(includeRecordIfFieldDoesntContain)
438:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcFilteredReader@next():179:includeRecordIfFieldDoesntContain == null || ((DataField)vf).getSubfieldsAsString(tagAndSf[1]).contains(includeRecordIfFieldDoesntContain) |==> true
439:LVR:FALSE:TRUE:org.marc4j.MarcFilteredReader@next():182:false |==> true
440:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcFilteredReader@next():182:useRecord = false |==> <NO-OP>
441:STD:<BREAK>:<NO-OP>:org.marc4j.MarcFilteredReader@next():183:break; |==> <NO-OP>
442:LVR:FALSE:TRUE:org.marc4j.MarcFilteredReader@next():187:false |==> true
443:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcFilteredReader@next():187:useRecord == false |==> false
444:ROR:==(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():187:useRecord == false |==> useRecord
445:ROR:==(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():187:useRecord == false |==> false
446:STD:<BREAK>:<NO-OP>:org.marc4j.MarcFilteredReader@next():188:break; |==> <NO-OP>
447:LVR:TRUE:FALSE:org.marc4j.MarcFilteredReader@next():191:true |==> false
448:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcFilteredReader@next():191:useRecord == true |==> false
449:ROR:==(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():191:useRecord == true |==> useRecord
450:ROR:==(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():191:useRecord == true |==> true
451:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcFilteredReader@next():192:currentRecord = rec |==> <NO-OP>
452:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@next():196:rec != null |==> true
453:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@next():196:includeRecordIfFieldsPresent == null |==> false
454:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcFilteredReader@next():196:rec != null && includeRecordIfFieldsPresent == null |==> rec != null == (includeRecordIfFieldsPresent == null)
455:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcFilteredReader@next():196:rec != null && includeRecordIfFieldsPresent == null |==> false
456:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():196:rec != null && includeRecordIfFieldsPresent == null |==> rec != null
457:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():196:rec != null && includeRecordIfFieldsPresent == null |==> includeRecordIfFieldsPresent == null
458:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcFilteredReader@next():196:includeRecordIfFieldsMissing == null |==> false
459:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcFilteredReader@next():196:rec != null && includeRecordIfFieldsPresent == null && includeRecordIfFieldsMissing == null |==> (rec != null && includeRecordIfFieldsPresent == null) == (includeRecordIfFieldsMissing == null)
460:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcFilteredReader@next():196:rec != null && includeRecordIfFieldsPresent == null && includeRecordIfFieldsMissing == null |==> false
461:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():196:rec != null && includeRecordIfFieldsPresent == null && includeRecordIfFieldsMissing == null |==> rec != null && includeRecordIfFieldsPresent == null
462:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcFilteredReader@next():196:rec != null && includeRecordIfFieldsPresent == null && includeRecordIfFieldsMissing == null |==> includeRecordIfFieldsMissing == null
463:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcFilteredReader@next():197:currentRecord = rec |==> <NO-OP>
464:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcFilteredReader@next():200:currentRecord |==> null
465:LVR:0:POS:org.marc4j.MarcJsonReader:21:0 |==> 1
466:LVR:0:NEG:org.marc4j.MarcJsonReader:21:0 |==> -1
467:LOR:|(int,int):&(int,int):org.marc4j.MarcJsonReader@<init>(java.io.InputStream):43:JsonParser.OPT_INTERN_KEYWORDS | JsonParser.OPT_UNQUOTED_KEYWORDS |==> JsonParser.OPT_INTERN_KEYWORDS & JsonParser.OPT_UNQUOTED_KEYWORDS
468:LOR:|(int,int):^(int,int):org.marc4j.MarcJsonReader@<init>(java.io.InputStream):43:JsonParser.OPT_INTERN_KEYWORDS | JsonParser.OPT_UNQUOTED_KEYWORDS |==> JsonParser.OPT_INTERN_KEYWORDS ^ JsonParser.OPT_UNQUOTED_KEYWORDS
469:LOR:|(int,int):&(int,int):org.marc4j.MarcJsonReader@<init>(java.io.InputStream):43:JsonParser.OPT_INTERN_KEYWORDS | JsonParser.OPT_UNQUOTED_KEYWORDS | JsonParser.OPT_SINGLE_QUOTE_STRINGS |==> (JsonParser.OPT_INTERN_KEYWORDS | JsonParser.OPT_UNQUOTED_KEYWORDS) & JsonParser.OPT_SINGLE_QUOTE_STRINGS
470:LOR:|(int,int):^(int,int):org.marc4j.MarcJsonReader@<init>(java.io.InputStream):43:JsonParser.OPT_INTERN_KEYWORDS | JsonParser.OPT_UNQUOTED_KEYWORDS | JsonParser.OPT_SINGLE_QUOTE_STRINGS |==> (JsonParser.OPT_INTERN_KEYWORDS | JsonParser.OPT_UNQUOTED_KEYWORDS) ^ JsonParser.OPT_SINGLE_QUOTE_STRINGS
471:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@<init>(java.io.InputStream):43:parser = new JsonParser(JsonParser.OPT_INTERN_KEYWORDS | JsonParser.OPT_UNQUOTED_KEYWORDS | JsonParser.OPT_SINGLE_QUOTE_STRINGS) |==> <NO-OP>
472:LVR:FALSE:TRUE:org.marc4j.MarcJsonReader@<init>(java.io.InputStream):46:false |==> true
473:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@<init>(java.io.InputStream):46:parser.setInput("MarcInput", new InputStreamReader(is), false) |==> <NO-OP>
474:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@<init>(java.io.InputStream):52:factory = MarcFactory.newInstance() |==> <NO-OP>
475:LVR:0:POS:org.marc4j.MarcJsonReader@<init>(java.io.Reader):61:0 |==> 1
476:LVR:0:NEG:org.marc4j.MarcJsonReader@<init>(java.io.Reader):61:0 |==> -1
477:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@<init>(java.io.Reader):61:parser = new JsonParser(0) |==> <NO-OP>
478:LVR:FALSE:TRUE:org.marc4j.MarcJsonReader@<init>(java.io.Reader):62:false |==> true
479:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@<init>(java.io.Reader):62:parser.setInput("MarcInput", in, false) |==> <NO-OP>
480:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@<init>(java.io.Reader):68:factory = MarcFactory.newInstance() |==> <NO-OP>
481:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcJsonReader@hasNext():77:parser.getEventCode() |==> 0
482:LVR:0:POS:org.marc4j.MarcJsonReader@hasNext():79:0 |==> 1
483:LVR:0:NEG:org.marc4j.MarcJsonReader@hasNext():79:0 |==> -1
484:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonReader@hasNext():79:code == 0 |==> code <= 0
485:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonReader@hasNext():79:code == 0 |==> code >= 0
486:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@hasNext():79:code == 0 |==> false
487:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonReader@hasNext():79:code == JsonParser.EVT_OBJECT_ENDED |==> code <= JsonParser.EVT_OBJECT_ENDED
488:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonReader@hasNext():79:code == JsonParser.EVT_OBJECT_ENDED |==> code >= JsonParser.EVT_OBJECT_ENDED
489:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@hasNext():79:code == JsonParser.EVT_OBJECT_ENDED |==> false
490:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcJsonReader@hasNext():79:code == 0 || code == JsonParser.EVT_OBJECT_ENDED |==> code == 0 != (code == JsonParser.EVT_OBJECT_ENDED)
491:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcJsonReader@hasNext():79:code == 0 || code == JsonParser.EVT_OBJECT_ENDED |==> code == 0
492:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcJsonReader@hasNext():79:code == 0 || code == JsonParser.EVT_OBJECT_ENDED |==> code == JsonParser.EVT_OBJECT_ENDED
493:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcJsonReader@hasNext():79:code == 0 || code == JsonParser.EVT_OBJECT_ENDED |==> true
494:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@hasNext():80:code = parser.next() |==> <NO-OP>
495:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonReader@hasNext():83:code == JsonParser.EVT_OBJECT_BEGIN |==> code <= JsonParser.EVT_OBJECT_BEGIN
496:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonReader@hasNext():83:code == JsonParser.EVT_OBJECT_BEGIN |==> code >= JsonParser.EVT_OBJECT_BEGIN
497:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@hasNext():83:code == JsonParser.EVT_OBJECT_BEGIN |==> false
498:LVR:TRUE:FALSE:org.marc4j.MarcJsonReader@hasNext():84:true |==> false
499:STD:<RETURN>:<NO-OP>:org.marc4j.MarcJsonReader@hasNext():84:return Config.__M_NO == 0 && Config.COVERED(498, 498) ? true : Config.__M_NO == 498 ? false : true; |==> <NO-OP>
500:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonReader@hasNext():87:code == JsonParser.EVT_INPUT_ENDED |==> code <= JsonParser.EVT_INPUT_ENDED
501:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonReader@hasNext():87:code == JsonParser.EVT_INPUT_ENDED |==> code >= JsonParser.EVT_INPUT_ENDED
502:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@hasNext():87:code == JsonParser.EVT_INPUT_ENDED |==> false
503:LVR:FALSE:TRUE:org.marc4j.MarcJsonReader@hasNext():88:false |==> true
504:STD:<RETURN>:<NO-OP>:org.marc4j.MarcJsonReader@hasNext():88:return Config.__M_NO == 0 && Config.COVERED(503, 503) ? false : Config.__M_NO == 503 ? true : false; |==> <NO-OP>
505:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcJsonReader@next():99:parser.getEventCode() |==> 0
506:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcJsonReader@next():104:NO_ARRAY |==> 0
507:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcJsonReader@next():107:parser.getMemberName() |==> null
508:LVR:0:POS:org.marc4j.MarcJsonReader@next():111:0 |==> 1
509:LVR:0:NEG:org.marc4j.MarcJsonReader@next():111:0 |==> -1
510:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonReader@next():111:parserLevel == 0 |==> parserLevel <= 0
511:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonReader@next():111:parserLevel == 0 |==> parserLevel >= 0
512:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@next():111:parserLevel == 0 |==> false
513:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():112:record = factory.newRecord() |==> <NO-OP>
514:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonReader@next():113:inArray == FIELDS_ARRAY |==> inArray <= FIELDS_ARRAY
515:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonReader@next():113:inArray == FIELDS_ARRAY |==> inArray >= FIELDS_ARRAY
516:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@next():113:inArray == FIELDS_ARRAY |==> false
517:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcJsonReader@next():113:inArray == FIELDS_ARRAY && mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]") |==> inArray == FIELDS_ARRAY == mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]")
518:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcJsonReader@next():113:inArray == FIELDS_ARRAY && mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]") |==> false
519:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcJsonReader@next():113:inArray == FIELDS_ARRAY && mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]") |==> inArray == FIELDS_ARRAY
520:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcJsonReader@next():114:inArray == FIELDS_ARRAY && mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]") |==> mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]")
521:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():115:df = factory.newDataField() |==> <NO-OP>
522:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@next():116:df.setTag(mname) |==> <NO-OP>
523:STD:<INC>:<NO-OP>:org.marc4j.MarcJsonReader@next():119:parserLevel++ |==> <NO-OP>
524:STD:<BREAK>:<NO-OP>:org.marc4j.MarcJsonReader@next():120:break; |==> <NO-OP>
525:STD:<DEC>:<NO-OP>:org.marc4j.MarcJsonReader@next():122:parserLevel-- |==> <NO-OP>
526:LVR:0:POS:org.marc4j.MarcJsonReader@next():123:0 |==> 1
527:LVR:0:NEG:org.marc4j.MarcJsonReader@next():123:0 |==> -1
528:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonReader@next():123:parserLevel == 0 |==> parserLevel <= 0
529:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonReader@next():123:parserLevel == 0 |==> parserLevel >= 0
530:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@next():123:parserLevel == 0 |==> false
531:STD:<RETURN>:<NO-OP>:org.marc4j.MarcJsonReader@next():124:return record; |==> <NO-OP>
532:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonReader@next():125:inArray == FIELDS_ARRAY |==> inArray <= FIELDS_ARRAY
533:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonReader@next():125:inArray == FIELDS_ARRAY |==> inArray >= FIELDS_ARRAY
534:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@next():125:inArray == FIELDS_ARRAY |==> false
535:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcJsonReader@next():125:inArray == FIELDS_ARRAY && mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]") |==> inArray == FIELDS_ARRAY == mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]")
536:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcJsonReader@next():125:inArray == FIELDS_ARRAY && mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]") |==> false
537:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcJsonReader@next():125:inArray == FIELDS_ARRAY && mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]") |==> inArray == FIELDS_ARRAY
538:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcJsonReader@next():126:inArray == FIELDS_ARRAY && mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]") |==> mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]")
539:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@next():127:record.addVariableField(df) |==> <NO-OP>
540:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():128:df = null |==> <NO-OP>
541:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonReader@next():129:inArray == DATAFIELD_ARRAY |==> inArray <= DATAFIELD_ARRAY
542:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonReader@next():129:inArray == DATAFIELD_ARRAY |==> inArray >= DATAFIELD_ARRAY
543:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@next():129:inArray == DATAFIELD_ARRAY |==> false
544:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcJsonReader@next():129:inArray == DATAFIELD_ARRAY && mname.matches("datafield") |==> inArray == DATAFIELD_ARRAY == mname.matches("datafield")
545:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcJsonReader@next():129:inArray == DATAFIELD_ARRAY && mname.matches("datafield") |==> false
546:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcJsonReader@next():129:inArray == DATAFIELD_ARRAY && mname.matches("datafield") |==> inArray == DATAFIELD_ARRAY
547:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcJsonReader@next():130:inArray == DATAFIELD_ARRAY && mname.matches("datafield") |==> mname.matches("datafield")
548:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@next():131:record.addVariableField(df) |==> <NO-OP>
549:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():132:df = null |==> <NO-OP>
550:STD:<BREAK>:<NO-OP>:org.marc4j.MarcJsonReader@next():135:break; |==> <NO-OP>
551:COR:mname.equals("fields"):TRUE:org.marc4j.MarcJsonReader@next():137:mname.equals("fields") |==> false
552:COR:mname.equals("fields"):FALSE:org.marc4j.MarcJsonReader@next():137:mname.equals("fields") |==> true
553:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():138:inArray = FIELDS_ARRAY |==> <NO-OP>
554:COR:mname.equals("subfields"):TRUE:org.marc4j.MarcJsonReader@next():139:mname.equals("subfields") |==> false
555:COR:mname.equals("subfields"):FALSE:org.marc4j.MarcJsonReader@next():139:mname.equals("subfields") |==> true
556:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():140:inArray = SUBFIELDS_ARRAY |==> <NO-OP>
557:COR:mname.equals("controlfield"):TRUE:org.marc4j.MarcJsonReader@next():141:mname.equals("controlfield") |==> false
558:COR:mname.equals("controlfield"):FALSE:org.marc4j.MarcJsonReader@next():141:mname.equals("controlfield") |==> true
559:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():142:inArray = CONTROLFIELD_ARRAY |==> <NO-OP>
560:COR:mname.equals("datafield"):TRUE:org.marc4j.MarcJsonReader@next():143:mname.equals("datafield") |==> false
561:COR:mname.equals("datafield"):FALSE:org.marc4j.MarcJsonReader@next():143:mname.equals("datafield") |==> true
562:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():144:inArray = DATAFIELD_ARRAY |==> <NO-OP>
563:COR:mname.equals("subfield"):TRUE:org.marc4j.MarcJsonReader@next():145:mname.equals("subfield") |==> false
564:COR:mname.equals("subfield"):FALSE:org.marc4j.MarcJsonReader@next():145:mname.equals("subfield") |==> true
565:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():146:inArray = SUBFIELD_ARRAY |==> <NO-OP>
566:STD:<BREAK>:<NO-OP>:org.marc4j.MarcJsonReader@next():149:break; |==> <NO-OP>
567:COR:mname.equals("fields"):TRUE:org.marc4j.MarcJsonReader@next():151:mname.equals("fields") |==> false
568:COR:mname.equals("fields"):FALSE:org.marc4j.MarcJsonReader@next():151:mname.equals("fields") |==> true
569:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():152:inArray = NO_ARRAY |==> <NO-OP>
570:COR:mname.equals("subfields"):TRUE:org.marc4j.MarcJsonReader@next():153:mname.equals("subfields") |==> false
571:COR:mname.equals("subfields"):FALSE:org.marc4j.MarcJsonReader@next():153:mname.equals("subfields") |==> true
572:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():154:inArray = FIELDS_ARRAY |==> <NO-OP>
573:COR:mname.equals("controlfield"):TRUE:org.marc4j.MarcJsonReader@next():155:mname.equals("controlfield") |==> false
574:COR:mname.equals("controlfield"):FALSE:org.marc4j.MarcJsonReader@next():155:mname.equals("controlfield") |==> true
575:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():156:inArray = NO_ARRAY |==> <NO-OP>
576:COR:mname.equals("datafield"):TRUE:org.marc4j.MarcJsonReader@next():157:mname.equals("datafield") |==> false
577:COR:mname.equals("datafield"):FALSE:org.marc4j.MarcJsonReader@next():157:mname.equals("datafield") |==> true
578:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():158:inArray = NO_ARRAY |==> <NO-OP>
579:COR:mname.equals("subfield"):TRUE:org.marc4j.MarcJsonReader@next():159:mname.equals("subfield") |==> false
580:COR:mname.equals("subfield"):FALSE:org.marc4j.MarcJsonReader@next():159:mname.equals("subfield") |==> true
581:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():160:inArray = DATAFIELD_ARRAY |==> <NO-OP>
582:STD:<BREAK>:<NO-OP>:org.marc4j.MarcJsonReader@next():163:break; |==> <NO-OP>
583:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcJsonReader@next():165:parser.getMemberValue() |==> null
584:COR:JsonParser.isQuoted(value):TRUE:org.marc4j.MarcJsonReader@next():166:JsonParser.isQuoted(value) |==> false
585:COR:JsonParser.isQuoted(value):FALSE:org.marc4j.MarcJsonReader@next():166:JsonParser.isQuoted(value) |==> true
586:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():167:value = JsonParser.stripQuotes(value) |==> <NO-OP>
587:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():170:value = value.replaceAll("\u2044", "/") |==> <NO-OP>
588:COR:mname.equals("ind1"):TRUE:org.marc4j.MarcJsonReader@next():172:mname.equals("ind1") |==> false
589:COR:mname.equals("ind1"):FALSE:org.marc4j.MarcJsonReader@next():172:mname.equals("ind1") |==> true
590:LVR:POS:0:org.marc4j.MarcJsonReader@next():173:1 |==> 0
591:LVR:POS:NEG:org.marc4j.MarcJsonReader@next():173:1 |==> -1
592:ROR:>=(int,int):==(int,int):org.marc4j.MarcJsonReader@next():173:value.length() >= 1 |==> value.length() == 1
593:ROR:>=(int,int):>(int,int):org.marc4j.MarcJsonReader@next():173:value.length() >= 1 |==> value.length() > 1
594:ROR:>=(int,int):TRUE(int,int):org.marc4j.MarcJsonReader@next():173:value.length() >= 1 |==> true
595:LVR:0:POS:org.marc4j.MarcJsonReader@next():173:0 |==> 1
596:LVR:0:NEG:org.marc4j.MarcJsonReader@next():173:0 |==> -1
597:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@next():173:df.setIndicator1(value.length() >= 1 ? value.charAt(0) : ' ') |==> <NO-OP>
598:COR:mname.equals("ind2"):TRUE:org.marc4j.MarcJsonReader@next():174:mname.equals("ind2") |==> false
599:COR:mname.equals("ind2"):FALSE:org.marc4j.MarcJsonReader@next():174:mname.equals("ind2") |==> true
600:LVR:POS:0:org.marc4j.MarcJsonReader@next():175:1 |==> 0
601:LVR:POS:NEG:org.marc4j.MarcJsonReader@next():175:1 |==> -1
602:ROR:>=(int,int):==(int,int):org.marc4j.MarcJsonReader@next():175:value.length() >= 1 |==> value.length() == 1
603:ROR:>=(int,int):>(int,int):org.marc4j.MarcJsonReader@next():175:value.length() >= 1 |==> value.length() > 1
604:ROR:>=(int,int):TRUE(int,int):org.marc4j.MarcJsonReader@next():175:value.length() >= 1 |==> true
605:LVR:0:POS:org.marc4j.MarcJsonReader@next():175:0 |==> 1
606:LVR:0:NEG:org.marc4j.MarcJsonReader@next():175:0 |==> -1
607:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@next():175:df.setIndicator2(value.length() >= 1 ? value.charAt(0) : ' ') |==> <NO-OP>
608:COR:mname.equals("leader"):TRUE:org.marc4j.MarcJsonReader@next():176:mname.equals("leader") |==> false
609:COR:mname.equals("leader"):FALSE:org.marc4j.MarcJsonReader@next():176:mname.equals("leader") |==> true
610:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@next():177:record.setLeader(factory.newLeader(value)) |==> <NO-OP>
611:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonReader@next():178:inArray == FIELDS_ARRAY |==> inArray <= FIELDS_ARRAY
612:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonReader@next():178:inArray == FIELDS_ARRAY |==> inArray >= FIELDS_ARRAY
613:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@next():178:inArray == FIELDS_ARRAY |==> false
614:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcJsonReader@next():178:inArray == FIELDS_ARRAY && mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]") |==> inArray == FIELDS_ARRAY == mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]")
615:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcJsonReader@next():178:inArray == FIELDS_ARRAY && mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]") |==> false
616:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcJsonReader@next():178:inArray == FIELDS_ARRAY && mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]") |==> inArray == FIELDS_ARRAY
617:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcJsonReader@next():178:inArray == FIELDS_ARRAY && mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]") |==> mname.matches("[A-Z0-9][A-Z0-9][A-Z0-9]")
618:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():179:cf = factory.newControlField(mname, value) |==> <NO-OP>
619:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@next():180:record.addVariableField(cf) |==> <NO-OP>
620:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonReader@next():181:inArray == SUBFIELDS_ARRAY |==> inArray <= SUBFIELDS_ARRAY
621:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonReader@next():181:inArray == SUBFIELDS_ARRAY |==> inArray >= SUBFIELDS_ARRAY
622:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@next():181:inArray == SUBFIELDS_ARRAY |==> false
623:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcJsonReader@next():181:inArray == SUBFIELDS_ARRAY && mname.matches("[a-z0-9]") |==> inArray == SUBFIELDS_ARRAY == mname.matches("[a-z0-9]")
624:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcJsonReader@next():181:inArray == SUBFIELDS_ARRAY && mname.matches("[a-z0-9]") |==> false
625:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcJsonReader@next():181:inArray == SUBFIELDS_ARRAY && mname.matches("[a-z0-9]") |==> inArray == SUBFIELDS_ARRAY
626:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcJsonReader@next():181:inArray == SUBFIELDS_ARRAY && mname.matches("[a-z0-9]") |==> mname.matches("[a-z0-9]")
627:LVR:0:POS:org.marc4j.MarcJsonReader@next():182:0 |==> 1
628:LVR:0:NEG:org.marc4j.MarcJsonReader@next():182:0 |==> -1
629:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():182:sf = factory.newSubfield(mname.charAt(0), value) |==> <NO-OP>
630:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@next():183:df.addSubfield(sf) |==> <NO-OP>
631:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonReader@next():184:inArray == CONTROLFIELD_ARRAY |==> inArray <= CONTROLFIELD_ARRAY
632:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonReader@next():184:inArray == CONTROLFIELD_ARRAY |==> inArray >= CONTROLFIELD_ARRAY
633:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@next():184:inArray == CONTROLFIELD_ARRAY |==> false
634:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcJsonReader@next():184:inArray == CONTROLFIELD_ARRAY && mname.equals("tag") |==> inArray == CONTROLFIELD_ARRAY == mname.equals("tag")
635:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcJsonReader@next():184:inArray == CONTROLFIELD_ARRAY && mname.equals("tag") |==> false
636:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcJsonReader@next():184:inArray == CONTROLFIELD_ARRAY && mname.equals("tag") |==> inArray == CONTROLFIELD_ARRAY
637:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcJsonReader@next():184:inArray == CONTROLFIELD_ARRAY && mname.equals("tag") |==> mname.equals("tag")
638:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():185:cf = factory.newControlField() |==> <NO-OP>
639:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@next():186:cf.setTag(value) |==> <NO-OP>
640:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonReader@next():187:inArray == CONTROLFIELD_ARRAY |==> inArray <= CONTROLFIELD_ARRAY
641:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonReader@next():187:inArray == CONTROLFIELD_ARRAY |==> inArray >= CONTROLFIELD_ARRAY
642:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@next():187:inArray == CONTROLFIELD_ARRAY |==> false
643:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcJsonReader@next():187:inArray == CONTROLFIELD_ARRAY && mname.equals("data") |==> inArray == CONTROLFIELD_ARRAY == mname.equals("data")
644:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcJsonReader@next():187:inArray == CONTROLFIELD_ARRAY && mname.equals("data") |==> false
645:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcJsonReader@next():187:inArray == CONTROLFIELD_ARRAY && mname.equals("data") |==> inArray == CONTROLFIELD_ARRAY
646:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcJsonReader@next():187:inArray == CONTROLFIELD_ARRAY && mname.equals("data") |==> mname.equals("data")
647:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@next():188:cf.setData(value) |==> <NO-OP>
648:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@next():189:record.addVariableField(cf) |==> <NO-OP>
649:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonReader@next():190:inArray == DATAFIELD_ARRAY |==> inArray <= DATAFIELD_ARRAY
650:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonReader@next():190:inArray == DATAFIELD_ARRAY |==> inArray >= DATAFIELD_ARRAY
651:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@next():190:inArray == DATAFIELD_ARRAY |==> false
652:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcJsonReader@next():190:inArray == DATAFIELD_ARRAY && mname.equals("tag") |==> inArray == DATAFIELD_ARRAY == mname.equals("tag")
653:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcJsonReader@next():190:inArray == DATAFIELD_ARRAY && mname.equals("tag") |==> false
654:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcJsonReader@next():190:inArray == DATAFIELD_ARRAY && mname.equals("tag") |==> inArray == DATAFIELD_ARRAY
655:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcJsonReader@next():190:inArray == DATAFIELD_ARRAY && mname.equals("tag") |==> mname.equals("tag")
656:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():191:df = factory.newDataField() |==> <NO-OP>
657:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@next():192:df.setTag(value) |==> <NO-OP>
658:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonReader@next():193:inArray == DATAFIELD_ARRAY |==> inArray <= DATAFIELD_ARRAY
659:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonReader@next():193:inArray == DATAFIELD_ARRAY |==> inArray >= DATAFIELD_ARRAY
660:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@next():193:inArray == DATAFIELD_ARRAY |==> false
661:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcJsonReader@next():193:inArray == DATAFIELD_ARRAY && mname.equals("ind") |==> inArray == DATAFIELD_ARRAY == mname.equals("ind")
662:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcJsonReader@next():193:inArray == DATAFIELD_ARRAY && mname.equals("ind") |==> false
663:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcJsonReader@next():193:inArray == DATAFIELD_ARRAY && mname.equals("ind") |==> inArray == DATAFIELD_ARRAY
664:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcJsonReader@next():193:inArray == DATAFIELD_ARRAY && mname.equals("ind") |==> mname.equals("ind")
665:LVR:POS:0:org.marc4j.MarcJsonReader@next():194:1 |==> 0
666:LVR:POS:NEG:org.marc4j.MarcJsonReader@next():194:1 |==> -1
667:ROR:>=(int,int):==(int,int):org.marc4j.MarcJsonReader@next():194:value.length() >= 1 |==> value.length() == 1
668:ROR:>=(int,int):>(int,int):org.marc4j.MarcJsonReader@next():194:value.length() >= 1 |==> value.length() > 1
669:ROR:>=(int,int):TRUE(int,int):org.marc4j.MarcJsonReader@next():194:value.length() >= 1 |==> true
670:LVR:0:POS:org.marc4j.MarcJsonReader@next():194:0 |==> 1
671:LVR:0:NEG:org.marc4j.MarcJsonReader@next():194:0 |==> -1
672:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@next():194:df.setIndicator1(value.length() >= 1 ? value.charAt(0) : ' ') |==> <NO-OP>
673:LVR:POS:0:org.marc4j.MarcJsonReader@next():195:1 |==> 0
674:LVR:POS:NEG:org.marc4j.MarcJsonReader@next():195:1 |==> -1
675:ROR:>(int,int):!=(int,int):org.marc4j.MarcJsonReader@next():195:value.length() > 1 |==> value.length() != 1
676:ROR:>(int,int):>=(int,int):org.marc4j.MarcJsonReader@next():195:value.length() > 1 |==> value.length() >= 1
677:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@next():195:value.length() > 1 |==> false
678:LVR:POS:0:org.marc4j.MarcJsonReader@next():195:1 |==> 0
679:LVR:POS:NEG:org.marc4j.MarcJsonReader@next():195:1 |==> -1
680:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@next():195:df.setIndicator2(value.length() > 1 ? value.charAt(1) : ' ') |==> <NO-OP>
681:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonReader@next():196:inArray == SUBFIELD_ARRAY |==> inArray <= SUBFIELD_ARRAY
682:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonReader@next():196:inArray == SUBFIELD_ARRAY |==> inArray >= SUBFIELD_ARRAY
683:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@next():196:inArray == SUBFIELD_ARRAY |==> false
684:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcJsonReader@next():196:inArray == SUBFIELD_ARRAY && mname.equals("code") |==> inArray == SUBFIELD_ARRAY == mname.equals("code")
685:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcJsonReader@next():196:inArray == SUBFIELD_ARRAY && mname.equals("code") |==> false
686:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcJsonReader@next():196:inArray == SUBFIELD_ARRAY && mname.equals("code") |==> inArray == SUBFIELD_ARRAY
687:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcJsonReader@next():196:inArray == SUBFIELD_ARRAY && mname.equals("code") |==> mname.equals("code")
688:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():197:sf = factory.newSubfield() |==> <NO-OP>
689:LVR:0:POS:org.marc4j.MarcJsonReader@next():198:0 |==> 1
690:LVR:0:NEG:org.marc4j.MarcJsonReader@next():198:0 |==> -1
691:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@next():198:sf.setCode(value.charAt(0)) |==> <NO-OP>
692:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonReader@next():199:inArray == SUBFIELD_ARRAY |==> inArray <= SUBFIELD_ARRAY
693:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonReader@next():199:inArray == SUBFIELD_ARRAY |==> inArray >= SUBFIELD_ARRAY
694:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonReader@next():199:inArray == SUBFIELD_ARRAY |==> false
695:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcJsonReader@next():199:inArray == SUBFIELD_ARRAY && mname.equals("data") |==> inArray == SUBFIELD_ARRAY == mname.equals("data")
696:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcJsonReader@next():199:inArray == SUBFIELD_ARRAY && mname.equals("data") |==> false
697:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcJsonReader@next():199:inArray == SUBFIELD_ARRAY && mname.equals("data") |==> inArray == SUBFIELD_ARRAY
698:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcJsonReader@next():199:inArray == SUBFIELD_ARRAY && mname.equals("data") |==> mname.equals("data")
699:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@next():200:sf.setData(value) |==> <NO-OP>
700:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonReader@next():201:df.addSubfield(sf) |==> <NO-OP>
701:STD:<BREAK>:<NO-OP>:org.marc4j.MarcJsonReader@next():204:break; |==> <NO-OP>
702:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonReader@next():208:code = parser.next() |==> <NO-OP>
703:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.MarcFactory@newInstance():68:Thread.currentThread().getContextClassLoader() |==> null
704:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.marc.MarcFactory@newInstance():70:loader == null |==> false
705:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.MarcFactory@newInstance():71:loader = MarcFactory.class.getClassLoader() |==> <NO-OP>
706:LVR:0:POS:org.marc4j.marc.MarcFactory@newInstance():75:0 |==> 1
707:LVR:0:NEG:org.marc4j.marc.MarcFactory@newInstance():75:0 |==> -1
708:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.MarcFactory@newInstance():78:className = getFactoryClassName(loader, count++) |==> <NO-OP>
709:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.marc.MarcFactory@newInstance():80:className != null |==> true
710:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.marc.MarcFactory@newInstance():82:loader != null |==> true
711:STD:<RETURN>:<NO-OP>:org.marc4j.marc.MarcFactory@newInstance():84:return (MarcFactory)t.newInstance(); |==> <NO-OP>
712:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.MarcFactory@newInstance():86:className = null |==> <NO-OP>
713:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.marc.MarcFactory@newInstance():90:className == null |==> false
714:LVR:POS:0:org.marc4j.marc.MarcFactory@newInstance():90:3 |==> 0
715:LVR:POS:NEG:org.marc4j.marc.MarcFactory@newInstance():90:3 |==> -3
716:ROR:<(int,int):!=(int,int):org.marc4j.marc.MarcFactory@newInstance():90:count < 3 |==> count != 3
717:ROR:<(int,int):<=(int,int):org.marc4j.marc.MarcFactory@newInstance():90:count < 3 |==> count <= 3
718:ROR:<(int,int):FALSE(int,int):org.marc4j.marc.MarcFactory@newInstance():90:count < 3 |==> false
719:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.marc.MarcFactory@newInstance():90:className == null && count < 3 |==> className == null == count < 3
720:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.marc.MarcFactory@newInstance():90:className == null && count < 3 |==> false
721:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.marc.MarcFactory@newInstance():90:className == null && count < 3 |==> className == null
722:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.marc.MarcFactory@newInstance():90:className == null && count < 3 |==> count < 3
723:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.MarcFactory@newInstance():91:new org.marc4j.marc.impl.MarcFactoryImpl() |==> null
724:STD:<RETURN>:<NO-OP>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):99:return System.getProperty(propertyName); |==> <NO-OP>
725:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):102:new File(System.getProperty("java.home")) |==> null
726:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):103:file = new File(file, "lib") |==> <NO-OP>
727:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):104:file = new File(file, "marc4j.properties") |==> <NO-OP>
728:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):105:new FileInputStream(file) |==> null
729:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):106:new Properties() |==> null
730:STD:<CALL>:<NO-OP>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):107:props.load(in) |==> <NO-OP>
731:STD:<CALL>:<NO-OP>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):108:in.close() |==> <NO-OP>
732:STD:<RETURN>:<NO-OP>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):110:return props.getProperty(propertyName); |==> <NO-OP>
733:STD:<RETURN>:<NO-OP>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):112:return null; |==> <NO-OP>
734:EVR:<PLUS>:<DEFAULT>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):117:"/META-INF/services/" + propertyName |==> null
735:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):118:loader != null |==> true
736:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):118:in = (loader != null) ? loader.getResourceAsStream(serviceKey) : MarcFactory.class.getResourceAsStream(serviceKey) |==> <NO-OP>
737:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):121:in != null |==> true
738:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):122:new BufferedReader(new InputStreamReader(in)) |==> null
739:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):123:r.readLine() |==> null
740:STD:<CALL>:<NO-OP>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):124:r.close() |==> <NO-OP>
741:STD:<RETURN>:<NO-OP>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):125:return ret; |==> <NO-OP>
742:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):130:in != null |==> true
743:STD:<CALL>:<NO-OP>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):130:in.close() |==> <NO-OP>
744:STD:<RETURN>:<NO-OP>:org.marc4j.marc.MarcFactory@getFactoryClassName(java.lang.ClassLoader,int):134:return null; |==> <NO-OP>
745:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.marc.MarcFactory@validateRecord(org.marc4j.marc.Record):266:record.getLeader() == null |==> false
746:LVR:FALSE:TRUE:org.marc4j.marc.MarcFactory@validateRecord(org.marc4j.marc.Record):267:false |==> true
747:STD:<RETURN>:<NO-OP>:org.marc4j.marc.MarcFactory@validateRecord(org.marc4j.marc.Record):267:return Config.__M_NO == 0 && Config.COVERED(746, 746) ? false : Config.__M_NO == 746 ? true : false; |==> <NO-OP>
748:COR:validateControlField(controlField):TRUE:org.marc4j.marc.MarcFactory@validateRecord(org.marc4j.marc.Record):271:validateControlField(controlField) |==> false
749:COR:validateControlField(controlField):FALSE:org.marc4j.marc.MarcFactory@validateRecord(org.marc4j.marc.Record):271:validateControlField(controlField) |==> true
750:LVR:FALSE:TRUE:org.marc4j.marc.MarcFactory@validateRecord(org.marc4j.marc.Record):272:false |==> true
751:STD:<RETURN>:<NO-OP>:org.marc4j.marc.MarcFactory@validateRecord(org.marc4j.marc.Record):272:return Config.__M_NO == 0 && Config.COVERED(750, 750) ? false : Config.__M_NO == 750 ? true : false; |==> <NO-OP>
752:COR:validateDataField(dataField):TRUE:org.marc4j.marc.MarcFactory@validateRecord(org.marc4j.marc.Record):277:validateDataField(dataField) |==> false
753:COR:validateDataField(dataField):FALSE:org.marc4j.marc.MarcFactory@validateRecord(org.marc4j.marc.Record):277:validateDataField(dataField) |==> true
754:LVR:FALSE:TRUE:org.marc4j.marc.MarcFactory@validateRecord(org.marc4j.marc.Record):278:false |==> true
755:STD:<RETURN>:<NO-OP>:org.marc4j.marc.MarcFactory@validateRecord(org.marc4j.marc.Record):278:return Config.__M_NO == 0 && Config.COVERED(754, 754) ? false : Config.__M_NO == 754 ? true : false; |==> <NO-OP>
756:LVR:TRUE:FALSE:org.marc4j.marc.MarcFactory@validateRecord(org.marc4j.marc.Record):282:true |==> false
757:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.marc.MarcFactory@validateVariableField(org.marc4j.marc.VariableField):293:field.getTag() != null |==> true
758:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.marc.MarcFactory@validateControlField(org.marc4j.marc.ControlField):304:field.getData() != null |==> true
759:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.marc.MarcFactory@validateControlField(org.marc4j.marc.ControlField):304:validateVariableField(field) && field.getData() != null |==> validateVariableField(field) == (field.getData() != null)
760:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.marc.MarcFactory@validateControlField(org.marc4j.marc.ControlField):304:validateVariableField(field) && field.getData() != null |==> false
761:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.marc.MarcFactory@validateControlField(org.marc4j.marc.ControlField):304:validateVariableField(field) && field.getData() != null |==> validateVariableField(field)
762:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.marc.MarcFactory@validateControlField(org.marc4j.marc.ControlField):304:validateVariableField(field) && field.getData() != null |==> field.getData() != null
763:COR:validateVariableField(field):TRUE:org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):315:validateVariableField(field) |==> false
764:COR:validateVariableField(field):FALSE:org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):315:validateVariableField(field) |==> true
765:LVR:FALSE:TRUE:org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):316:false |==> true
766:STD:<RETURN>:<NO-OP>:org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):316:return Config.__M_NO == 0 && Config.COVERED(765, 765) ? false : Config.__M_NO == 765 ? true : false; |==> <NO-OP>
767:LVR:0:POS:org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):319:0 |==> 1
768:LVR:0:NEG:org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):319:0 |==> -1
769:ROR:==(int,int):<=(int,int):org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):319:field.getIndicator1() == 0 |==> field.getIndicator1() <= 0
770:ROR:==(int,int):>=(int,int):org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):319:field.getIndicator1() == 0 |==> field.getIndicator1() >= 0
771:ROR:==(int,int):FALSE(int,int):org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):319:field.getIndicator1() == 0 |==> false
772:LVR:0:POS:org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):319:0 |==> 1
773:LVR:0:NEG:org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):319:0 |==> -1
774:ROR:==(int,int):<=(int,int):org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):319:field.getIndicator2() == 0 |==> field.getIndicator2() <= 0
775:ROR:==(int,int):>=(int,int):org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):319:field.getIndicator2() == 0 |==> field.getIndicator2() >= 0
776:ROR:==(int,int):FALSE(int,int):org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):319:field.getIndicator2() == 0 |==> false
777:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):319:field.getIndicator1() == 0 || field.getIndicator2() == 0 |==> field.getIndicator1() == 0 != (field.getIndicator2() == 0)
778:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):319:field.getIndicator1() == 0 || field.getIndicator2() == 0 |==> field.getIndicator1() == 0
779:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):319:field.getIndicator1() == 0 || field.getIndicator2() == 0 |==> field.getIndicator2() == 0
780:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):319:field.getIndicator1() == 0 || field.getIndicator2() == 0 |==> true
781:LVR:FALSE:TRUE:org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):320:false |==> true
782:STD:<RETURN>:<NO-OP>:org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):320:return Config.__M_NO == 0 && Config.COVERED(781, 781) ? false : Config.__M_NO == 781 ? true : false; |==> <NO-OP>
783:COR:validateSubField(subfield):TRUE:org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):324:validateSubField(subfield) |==> false
784:COR:validateSubField(subfield):FALSE:org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):324:validateSubField(subfield) |==> true
785:LVR:FALSE:TRUE:org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):325:false |==> true
786:STD:<RETURN>:<NO-OP>:org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):325:return Config.__M_NO == 0 && Config.COVERED(785, 785) ? false : Config.__M_NO == 785 ? true : false; |==> <NO-OP>
787:LVR:TRUE:FALSE:org.marc4j.marc.MarcFactory@validateDataField(org.marc4j.marc.DataField):329:true |==> false
788:LVR:0:POS:org.marc4j.marc.MarcFactory@validateSubField(org.marc4j.marc.Subfield):340:0 |==> 1
789:LVR:0:NEG:org.marc4j.marc.MarcFactory@validateSubField(org.marc4j.marc.Subfield):340:0 |==> -1
790:ROR:!=(int,int):<(int,int):org.marc4j.marc.MarcFactory@validateSubField(org.marc4j.marc.Subfield):340:subfield.getCode() != 0 |==> subfield.getCode() < 0
791:ROR:!=(int,int):>(int,int):org.marc4j.marc.MarcFactory@validateSubField(org.marc4j.marc.Subfield):340:subfield.getCode() != 0 |==> subfield.getCode() > 0
792:ROR:!=(int,int):TRUE(int,int):org.marc4j.marc.MarcFactory@validateSubField(org.marc4j.marc.Subfield):340:subfield.getCode() != 0 |==> true
793:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.marc.MarcFactory@validateSubField(org.marc4j.marc.Subfield):340:subfield.getData() != null |==> true
794:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.marc.MarcFactory@validateSubField(org.marc4j.marc.Subfield):340:subfield.getCode() != 0 && subfield.getData() != null |==> subfield.getCode() != 0 == (subfield.getData() != null)
795:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.marc.MarcFactory@validateSubField(org.marc4j.marc.Subfield):340:subfield.getCode() != 0 && subfield.getData() != null |==> false
796:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.marc.MarcFactory@validateSubField(org.marc4j.marc.Subfield):340:subfield.getCode() != 0 && subfield.getData() != null |==> subfield.getCode() != 0
797:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.marc.MarcFactory@validateSubField(org.marc4j.marc.Subfield):340:subfield.getCode() != 0 && subfield.getData() != null |==> subfield.getData() != null
798:LOR:&(int,int):^(int,int):org.marc4j.util.JsonParser@<init>(int):105:opt & OPT_EOL_IS_COMMA |==> opt ^ OPT_EOL_IS_COMMA
799:LOR:&(int,int):|(int,int):org.marc4j.util.JsonParser@<init>(int):105:opt & OPT_EOL_IS_COMMA |==> opt | OPT_EOL_IS_COMMA
800:LVR:0:POS:org.marc4j.util.JsonParser@<init>(int):105:0 |==> 1
801:LVR:0:NEG:org.marc4j.util.JsonParser@<init>(int):105:0 |==> -1
802:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@<init>(int):105:(opt & OPT_EOL_IS_COMMA) != 0 |==> (opt & OPT_EOL_IS_COMMA) < 0
803:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@<init>(int):105:(opt & OPT_EOL_IS_COMMA) != 0 |==> (opt & OPT_EOL_IS_COMMA) > 0
804:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@<init>(int):105:(opt & OPT_EOL_IS_COMMA) != 0 |==> true
805:LOR:&(int,int):^(int,int):org.marc4j.util.JsonParser@<init>(int):106:opt & OPT_INTERN_KEYWORDS |==> opt ^ OPT_INTERN_KEYWORDS
806:LOR:&(int,int):|(int,int):org.marc4j.util.JsonParser@<init>(int):106:opt & OPT_INTERN_KEYWORDS |==> opt | OPT_INTERN_KEYWORDS
807:LVR:0:POS:org.marc4j.util.JsonParser@<init>(int):106:0 |==> 1
808:LVR:0:NEG:org.marc4j.util.JsonParser@<init>(int):106:0 |==> -1
809:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@<init>(int):106:(opt & OPT_INTERN_KEYWORDS) != 0 |==> (opt & OPT_INTERN_KEYWORDS) < 0
810:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@<init>(int):106:(opt & OPT_INTERN_KEYWORDS) != 0 |==> (opt & OPT_INTERN_KEYWORDS) > 0
811:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@<init>(int):106:(opt & OPT_INTERN_KEYWORDS) != 0 |==> true
812:LOR:&(int,int):^(int,int):org.marc4j.util.JsonParser@<init>(int):107:opt & OPT_INTERN_VALUES |==> opt ^ OPT_INTERN_VALUES
813:LOR:&(int,int):|(int,int):org.marc4j.util.JsonParser@<init>(int):107:opt & OPT_INTERN_VALUES |==> opt | OPT_INTERN_VALUES
814:LVR:0:POS:org.marc4j.util.JsonParser@<init>(int):107:0 |==> 1
815:LVR:0:NEG:org.marc4j.util.JsonParser@<init>(int):107:0 |==> -1
816:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@<init>(int):107:(opt & OPT_INTERN_VALUES) != 0 |==> (opt & OPT_INTERN_VALUES) < 0
817:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@<init>(int):107:(opt & OPT_INTERN_VALUES) != 0 |==> (opt & OPT_INTERN_VALUES) > 0
818:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@<init>(int):107:(opt & OPT_INTERN_VALUES) != 0 |==> true
819:LOR:&(int,int):^(int,int):org.marc4j.util.JsonParser@<init>(int):108:opt & OPT_MULTILINE_COMMENTS |==> opt ^ OPT_MULTILINE_COMMENTS
820:LOR:&(int,int):|(int,int):org.marc4j.util.JsonParser@<init>(int):108:opt & OPT_MULTILINE_COMMENTS |==> opt | OPT_MULTILINE_COMMENTS
821:LVR:0:POS:org.marc4j.util.JsonParser@<init>(int):108:0 |==> 1
822:LVR:0:NEG:org.marc4j.util.JsonParser@<init>(int):108:0 |==> -1
823:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@<init>(int):108:(opt & OPT_MULTILINE_COMMENTS) != 0 |==> (opt & OPT_MULTILINE_COMMENTS) < 0
824:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@<init>(int):108:(opt & OPT_MULTILINE_COMMENTS) != 0 |==> (opt & OPT_MULTILINE_COMMENTS) > 0
825:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@<init>(int):108:(opt & OPT_MULTILINE_COMMENTS) != 0 |==> true
826:LOR:&(int,int):^(int,int):org.marc4j.util.JsonParser@<init>(int):109:opt & OPT_MULTILINE_STRINGS |==> opt ^ OPT_MULTILINE_STRINGS
827:LOR:&(int,int):|(int,int):org.marc4j.util.JsonParser@<init>(int):109:opt & OPT_MULTILINE_STRINGS |==> opt | OPT_MULTILINE_STRINGS
828:LVR:0:POS:org.marc4j.util.JsonParser@<init>(int):109:0 |==> 1
829:LVR:0:NEG:org.marc4j.util.JsonParser@<init>(int):109:0 |==> -1
830:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@<init>(int):109:(opt & OPT_MULTILINE_STRINGS) != 0 |==> (opt & OPT_MULTILINE_STRINGS) < 0
831:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@<init>(int):109:(opt & OPT_MULTILINE_STRINGS) != 0 |==> (opt & OPT_MULTILINE_STRINGS) > 0
832:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@<init>(int):109:(opt & OPT_MULTILINE_STRINGS) != 0 |==> true
833:LOR:&(int,int):^(int,int):org.marc4j.util.JsonParser@<init>(int):110:opt & OPT_SINGLE_QUOTE_STRINGS |==> opt ^ OPT_SINGLE_QUOTE_STRINGS
834:LOR:&(int,int):|(int,int):org.marc4j.util.JsonParser@<init>(int):110:opt & OPT_SINGLE_QUOTE_STRINGS |==> opt | OPT_SINGLE_QUOTE_STRINGS
835:LVR:0:POS:org.marc4j.util.JsonParser@<init>(int):110:0 |==> 1
836:LVR:0:NEG:org.marc4j.util.JsonParser@<init>(int):110:0 |==> -1
837:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@<init>(int):110:(opt & OPT_SINGLE_QUOTE_STRINGS) != 0 |==> (opt & OPT_SINGLE_QUOTE_STRINGS) < 0
838:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@<init>(int):110:(opt & OPT_SINGLE_QUOTE_STRINGS) != 0 |==> (opt & OPT_SINGLE_QUOTE_STRINGS) > 0
839:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@<init>(int):110:(opt & OPT_SINGLE_QUOTE_STRINGS) != 0 |==> true
840:LOR:&(int,int):^(int,int):org.marc4j.util.JsonParser@<init>(int):111:opt & OPT_PRELOAD_INPUT |==> opt ^ OPT_PRELOAD_INPUT
841:LOR:&(int,int):|(int,int):org.marc4j.util.JsonParser@<init>(int):111:opt & OPT_PRELOAD_INPUT |==> opt | OPT_PRELOAD_INPUT
842:LVR:0:POS:org.marc4j.util.JsonParser@<init>(int):111:0 |==> 1
843:LVR:0:NEG:org.marc4j.util.JsonParser@<init>(int):111:0 |==> -1
844:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@<init>(int):111:(opt & OPT_PRELOAD_INPUT) != 0 |==> (opt & OPT_PRELOAD_INPUT) < 0
845:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@<init>(int):111:(opt & OPT_PRELOAD_INPUT) != 0 |==> (opt & OPT_PRELOAD_INPUT) > 0
846:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@<init>(int):111:(opt & OPT_PRELOAD_INPUT) != 0 |==> true
847:LOR:&(int,int):^(int,int):org.marc4j.util.JsonParser@<init>(int):112:opt & OPT_UNQUOTED_KEYWORDS |==> opt ^ OPT_UNQUOTED_KEYWORDS
848:LOR:&(int,int):|(int,int):org.marc4j.util.JsonParser@<init>(int):112:opt & OPT_UNQUOTED_KEYWORDS |==> opt | OPT_UNQUOTED_KEYWORDS
849:LVR:0:POS:org.marc4j.util.JsonParser@<init>(int):112:0 |==> 1
850:LVR:0:NEG:org.marc4j.util.JsonParser@<init>(int):112:0 |==> -1
851:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@<init>(int):112:(opt & OPT_UNQUOTED_KEYWORDS) != 0 |==> (opt & OPT_UNQUOTED_KEYWORDS) < 0
852:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@<init>(int):112:(opt & OPT_UNQUOTED_KEYWORDS) != 0 |==> (opt & OPT_UNQUOTED_KEYWORDS) > 0
853:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@<init>(int):112:(opt & OPT_UNQUOTED_KEYWORDS) != 0 |==> true
854:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.JsonParser@<init>(int):114:new ArrayList<ObjectData>() |==> null
855:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.JsonParser@<init>(int):115:new StringBuilder() |==> null
856:LVR:TRUE:FALSE:org.marc4j.util.JsonParser@<init>(int):117:true |==> false
857:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@<init>(int):117:reset(true) |==> <NO-OP>
858:LVR:TRUE:FALSE:org.marc4j.util.JsonParser@close():125:true |==> false
859:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@close():125:reset(true) |==> <NO-OP>
860:LVR:FALSE:TRUE:org.marc4j.util.JsonParser@reset():133:false |==> true
861:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@reset():133:reset(false) |==> <NO-OP>
862:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.JsonParser@reset(boolean):137:inpReader != null |==> true
863:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@reset(boolean):137:inpClose && inpReader != null |==> inpClose == (inpReader != null)
864:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.JsonParser@reset(boolean):137:inpClose && inpReader != null |==> false
865:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@reset(boolean):137:inpClose && inpReader != null |==> inpClose
866:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@reset(boolean):137:inpClose && inpReader != null |==> inpReader != null
867:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@reset(boolean):139:inpReader.close() |==> <NO-OP>
868:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@reset(boolean):145:objectStack.clear() |==> <NO-OP>
869:LVR:0:POS:org.marc4j.util.JsonParser@reset(boolean):146:0 |==> 1
870:LVR:0:NEG:org.marc4j.util.JsonParser@reset(boolean):146:0 |==> -1
871:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@reset(boolean):146:accumulator.setLength(0) |==> <NO-OP>
872:COR:all:TRUE:org.marc4j.util.JsonParser@reset(boolean):148:all |==> false
873:COR:all:FALSE:org.marc4j.util.JsonParser@reset(boolean):148:all |==> true
874:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@reset(boolean):149:accumulator.trimToSize() |==> <NO-OP>
875:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@reset(boolean):152:inpName = null |==> <NO-OP>
876:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@reset(boolean):153:inpReader = null |==> <NO-OP>
877:LVR:POS:0:org.marc4j.util.JsonParser@reset(boolean):154:1 |==> 0
878:LVR:POS:NEG:org.marc4j.util.JsonParser@reset(boolean):154:1 |==> -1
879:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@reset(boolean):154:inpLine = 1 |==> <NO-OP>
880:LVR:0:POS:org.marc4j.util.JsonParser@reset(boolean):155:0 |==> 1
881:LVR:0:NEG:org.marc4j.util.JsonParser@reset(boolean):155:0 |==> -1
882:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@reset(boolean):155:inpColumn = 0 |==> <NO-OP>
883:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@reset(boolean):156:objectData = new ObjectData("") |==> <NO-OP>
884:LVR:NEG:0:org.marc4j.util.JsonParser@reset(boolean):157:-1 |==> 0
885:LVR:NEG:POS:org.marc4j.util.JsonParser@reset(boolean):157:-1 |==> 1
886:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@reset(boolean):157:pushBack = -1 |==> <NO-OP>
887:LVR:0:POS:org.marc4j.util.JsonParser@reset(boolean):159:0 |==> 1
888:LVR:0:NEG:org.marc4j.util.JsonParser@reset(boolean):159:0 |==> -1
889:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@reset(boolean):159:evtCode = 0 |==> <NO-OP>
890:LVR:0:POS:org.marc4j.util.JsonParser@reset(boolean):160:0 |==> 1
891:LVR:0:NEG:org.marc4j.util.JsonParser@reset(boolean):160:0 |==> -1
892:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@reset(boolean):160:evtLine = 0 |==> <NO-OP>
893:LVR:0:POS:org.marc4j.util.JsonParser@reset(boolean):161:0 |==> 1
894:LVR:0:NEG:org.marc4j.util.JsonParser@reset(boolean):161:0 |==> -1
895:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@reset(boolean):161:evtColumn = 0 |==> <NO-OP>
896:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@reset(boolean):162:mbrName = "" |==> <NO-OP>
897:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@reset(boolean):163:mbrValue = "" |==> <NO-OP>
898:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@getInputName():175:inpName |==> null
899:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@getInputLocation():183:createLocation(inpLine, inpColumn) |==> null
900:EVR:<MEMBER_SELECT>:<DEFAULT>:org.marc4j.util.JsonParser@getObjectName():191:objectData.name |==> null
901:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@getEventCode():199:evtCode |==> 0
902:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@getEventName():207:getEventName(evtCode) |==> null
903:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@getEventLine():215:evtLine |==> 0
904:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@getEventColumn():223:evtColumn |==> 0
905:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@getEventLocation():231:createLocation(evtLine, evtColumn) |==> null
906:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@getMemberName():239:mbrName |==> null
907:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@getMemberValue():256:mbrValue |==> null
908:LVR:0:POS:org.marc4j.util.JsonParser@getMemberArray():264:0 |==> 1
909:LVR:0:NEG:org.marc4j.util.JsonParser@getMemberArray():264:0 |==> -1
910:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@getMemberArray():264:objectData.arrayDepth != 0 |==> objectData.arrayDepth < 0
911:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@getMemberArray():264:objectData.arrayDepth != 0 |==> objectData.arrayDepth > 0
912:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@getMemberArray():264:objectData.arrayDepth != 0 |==> true
913:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@getTypedMemberValue(java.lang.String):287:createTypedValue(val) |==> null
914:LVR:FALSE:TRUE:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.Reader,boolean):303:false |==> true
915:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.Reader,boolean):303:reset(false) |==> <NO-OP>
916:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.Reader,boolean):305:inpName = inpnam |==> <NO-OP>
917:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.Reader,boolean):306:inpReader = inpsrc |==> <NO-OP>
918:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.Reader,boolean):307:inpClose = inpcls |==> <NO-OP>
919:COR:optPreloadInput:TRUE:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.Reader,boolean):309:optPreloadInput |==> false
920:COR:optPreloadInput:FALSE:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.Reader,boolean):309:optPreloadInput |==> true
921:LVR:0:POS:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.Reader,boolean):310:0 |==> 1
922:LVR:0:NEG:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.Reader,boolean):310:0 |==> -1
923:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.Reader,boolean):310:inpReader = preloadInput(inpnam, inpReader, inpClose, 0) |==> <NO-OP>
924:LVR:TRUE:FALSE:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.Reader,boolean):311:true |==> false
925:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.Reader,boolean):311:inpClose = true |==> <NO-OP>
926:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.Reader,boolean):314:this |==> null
927:LVR:FALSE:TRUE:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.InputStream,java.lang.String,boolean):328:false |==> true
928:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.InputStream,java.lang.String,boolean):328:reset(false) |==> <NO-OP>
929:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.InputStream,java.lang.String,boolean):330:inpName = inpnam |==> <NO-OP>
930:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.InputStream,java.lang.String,boolean):332:new InputStreamReader(inpsrc, inpenc) |==> null
931:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.InputStream,java.lang.String,boolean):337:inpClose = inpcls |==> <NO-OP>
932:COR:optPreloadInput:TRUE:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.InputStream,java.lang.String,boolean):339:optPreloadInput |==> false
933:COR:optPreloadInput:FALSE:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.InputStream,java.lang.String,boolean):339:optPreloadInput |==> true
934:LVR:0:POS:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.InputStream,java.lang.String,boolean):340:0 |==> 1
935:LVR:0:NEG:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.InputStream,java.lang.String,boolean):340:0 |==> -1
936:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.InputStream,java.lang.String,boolean):340:inpReader = preloadInput(inpnam, inpReader, inpClose, 0) |==> <NO-OP>
937:LVR:TRUE:FALSE:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.InputStream,java.lang.String,boolean):341:true |==> false
938:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.InputStream,java.lang.String,boolean):341:inpClose = true |==> <NO-OP>
939:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.io.InputStream,java.lang.String,boolean):344:this |==> null
940:LVR:FALSE:TRUE:org.marc4j.util.JsonParser@setInput(java.lang.String,java.lang.String,int):356:false |==> true
941:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.lang.String,int):356:reset(false) |==> <NO-OP>
942:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.lang.String,int):358:inpName = inpfil |==> <NO-OP>
943:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.lang.String,int):360:new InputStreamReader(new BufferedInputStream(new FileInputStream(inpfil), bufsiz), inpenc) |==> null
944:LVR:TRUE:FALSE:org.marc4j.util.JsonParser@setInput(java.lang.String,java.lang.String,int):370:true |==> false
945:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.lang.String,int):370:inpClose = true |==> <NO-OP>
946:COR:optPreloadInput:TRUE:org.marc4j.util.JsonParser@setInput(java.lang.String,java.lang.String,int):372:optPreloadInput |==> false
947:COR:optPreloadInput:FALSE:org.marc4j.util.JsonParser@setInput(java.lang.String,java.lang.String,int):372:optPreloadInput |==> true
948:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.lang.String,int):373:inpReader = preloadInput(inpfil, inpReader, inpClose, Math.min(Integer.MAX_VALUE, (int)new File(inpfil).length())) |==> <NO-OP>
949:LVR:TRUE:FALSE:org.marc4j.util.JsonParser@setInput(java.lang.String,java.lang.String,int):375:true |==> false
950:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.lang.String,int):375:inpClose = true |==> <NO-OP>
951:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@setInput(java.lang.String,java.lang.String,int):378:this |==> null
952:LVR:FALSE:TRUE:org.marc4j.util.JsonParser@setInput(java.io.File,java.lang.String,int):390:false |==> true
953:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.io.File,java.lang.String,int):390:reset(false) |==> <NO-OP>
954:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.io.File,java.lang.String,int):392:inpName = inpfil.toString() |==> <NO-OP>
955:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.JsonParser@setInput(java.io.File,java.lang.String,int):394:new InputStreamReader(new BufferedInputStream(new FileInputStream(inpfil), bufsiz), inpenc) |==> null
956:LVR:TRUE:FALSE:org.marc4j.util.JsonParser@setInput(java.io.File,java.lang.String,int):404:true |==> false
957:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.io.File,java.lang.String,int):404:inpClose = true |==> <NO-OP>
958:COR:optPreloadInput:TRUE:org.marc4j.util.JsonParser@setInput(java.io.File,java.lang.String,int):406:optPreloadInput |==> false
959:COR:optPreloadInput:FALSE:org.marc4j.util.JsonParser@setInput(java.io.File,java.lang.String,int):406:optPreloadInput |==> true
960:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.io.File,java.lang.String,int):407:inpReader = preloadInput(inpfil.toString(), inpReader, inpClose, Math.min(Integer.MAX_VALUE, (int)inpfil.length())) |==> <NO-OP>
961:LVR:TRUE:FALSE:org.marc4j.util.JsonParser@setInput(java.io.File,java.lang.String,int):409:true |==> false
962:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@setInput(java.io.File,java.lang.String,int):409:inpClose = true |==> <NO-OP>
963:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@setInput(java.io.File,java.lang.String,int):412:this |==> null
964:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():421:evtCode != EVT_INPUT_ENDED |==> evtCode < EVT_INPUT_ENDED
965:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():421:evtCode != EVT_INPUT_ENDED |==> evtCode > EVT_INPUT_ENDED
966:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():421:evtCode != EVT_INPUT_ENDED |==> true
967:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@next():422:evtCode |==> 0
968:LVR:FALSE:TRUE:org.marc4j.util.JsonParser@next():423:false |==> true
969:LVR:FALSE:TRUE:org.marc4j.util.JsonParser@next():423:false |==> true
970:LVR:TRUE:FALSE:org.marc4j.util.JsonParser@next():426:true |==> false
971:LVR:FALSE:TRUE:org.marc4j.util.JsonParser@next():429:false |==> true
972:LVR:0:POS:org.marc4j.util.JsonParser@next():433:0 |==> 1
973:LVR:0:NEG:org.marc4j.util.JsonParser@next():433:0 |==> -1
974:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():433:evtCode = 0 |==> <NO-OP>
975:LVR:0:POS:org.marc4j.util.JsonParser@next():434:0 |==> 1
976:LVR:0:NEG:org.marc4j.util.JsonParser@next():434:0 |==> -1
977:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():434:evtLine = 0 |==> <NO-OP>
978:LVR:0:POS:org.marc4j.util.JsonParser@next():435:0 |==> 1
979:LVR:0:NEG:org.marc4j.util.JsonParser@next():435:0 |==> -1
980:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():435:evtColumn = 0 |==> <NO-OP>
981:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():436:pet == EVT_OBJECT_BEGIN |==> pet <= EVT_OBJECT_BEGIN
982:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():436:pet == EVT_OBJECT_BEGIN |==> pet >= EVT_OBJECT_BEGIN
983:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():436:pet == EVT_OBJECT_BEGIN |==> false
984:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():437:mbrName = "" |==> <NO-OP>
985:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():438:pet == EVT_OBJECT_ENDED |==> pet <= EVT_OBJECT_ENDED
986:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():438:pet == EVT_OBJECT_ENDED |==> pet >= EVT_OBJECT_ENDED
987:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():438:pet == EVT_OBJECT_ENDED |==> false
988:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():439:popObjectData() |==> <NO-OP>
989:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():440:pet == EVT_ARRAY_ENDED |==> pet <= EVT_ARRAY_ENDED
990:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():440:pet == EVT_ARRAY_ENDED |==> pet >= EVT_ARRAY_ENDED
991:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():440:pet == EVT_ARRAY_ENDED |==> false
992:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():441:mbrName = "" |==> <NO-OP>
993:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():442:pet == EVT_OBJECT_MEMBER |==> pet <= EVT_OBJECT_MEMBER
994:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():442:pet == EVT_OBJECT_MEMBER |==> pet >= EVT_OBJECT_MEMBER
995:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():442:pet == EVT_OBJECT_MEMBER |==> false
996:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():443:mbrName = "" |==> <NO-OP>
997:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():445:mbrValue = null |==> <NO-OP>
998:LVR:NEG:0:org.marc4j.util.JsonParser@next():447:-1 |==> 0
999:LVR:NEG:POS:org.marc4j.util.JsonParser@next():447:-1 |==> 1
1000:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():447:(ich = readChar()) != -1 |==> (ich = readChar()) < -1
1001:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():447:(ich = readChar()) != -1 |==> (ich = readChar()) > -1
1002:COR:qut:TRUE:org.marc4j.util.JsonParser@next():448:qut |==> false
1003:COR:qut:FALSE:org.marc4j.util.JsonParser@next():448:qut |==> true
1004:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():450:ich == '*' |==> ich <= '*'
1005:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():450:ich == '*' |==> ich >= '*'
1006:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():450:ich == '*' |==> false
1007:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():450:ich == '#' |==> ich <= '#'
1008:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():450:ich == '#' |==> ich >= '#'
1009:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():450:ich == '#' |==> false
1010:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.util.JsonParser@next():450:ich == '*' || ich == '#' |==> ich == '*' != (ich == '#')
1011:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():450:ich == '*' || ich == '#' |==> ich == '*'
1012:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():450:ich == '*' || ich == '#' |==> ich == '#'
1013:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.util.JsonParser@next():450:ich == '*' || ich == '#' |==> true
1014:LVR:NEG:0:org.marc4j.util.JsonParser@next():451:-1 |==> 0
1015:LVR:NEG:POS:org.marc4j.util.JsonParser@next():451:-1 |==> 1
1016:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():451:(ich = readChar()) != -1 |==> (ich = readChar()) < -1
1017:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():451:(ich = readChar()) != -1 |==> (ich = readChar()) > -1
1018:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():451:(ich = readChar()) != -1 |==> true
1019:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():451:ich != '\n' |==> ich < '\n'
1020:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():451:ich != '\n' |==> ich > '\n'
1021:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():451:ich != '\n' |==> true
1022:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@next():451:(ich = readChar()) != -1 && ich != '\n' |==> (ich = readChar()) != -1 == (ich != '\n')
1023:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.JsonParser@next():451:(ich = readChar()) != -1 && ich != '\n' |==> false
1024:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():451:(ich = readChar()) != -1 && ich != '\n' |==> (ich = readChar()) != -1
1025:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():451:(ich = readChar()) != -1 && ich != '\n' |==> ich != '\n'
1026:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():454:ich == '/' |==> ich <= '/'
1027:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():454:ich == '/' |==> ich >= '/'
1028:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():454:ich == '/' |==> false
1029:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@next():455:readChar() |==> 0
1030:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():456:tmp == '/' |==> tmp <= '/'
1031:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():456:tmp == '/' |==> tmp >= '/'
1032:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():456:tmp == '/' |==> false
1033:LVR:NEG:0:org.marc4j.util.JsonParser@next():457:-1 |==> 0
1034:LVR:NEG:POS:org.marc4j.util.JsonParser@next():457:-1 |==> 1
1035:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():457:(ich = readChar()) != -1 |==> (ich = readChar()) < -1
1036:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():457:(ich = readChar()) != -1 |==> (ich = readChar()) > -1
1037:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():457:(ich = readChar()) != -1 |==> true
1038:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():457:ich != '\n' |==> ich < '\n'
1039:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():457:ich != '\n' |==> ich > '\n'
1040:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():457:ich != '\n' |==> true
1041:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@next():457:(ich = readChar()) != -1 && ich != '\n' |==> (ich = readChar()) != -1 == (ich != '\n')
1042:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.JsonParser@next():457:(ich = readChar()) != -1 && ich != '\n' |==> false
1043:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():457:(ich = readChar()) != -1 && ich != '\n' |==> (ich = readChar()) != -1
1044:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():457:(ich = readChar()) != -1 && ich != '\n' |==> ich != '\n'
1045:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():460:tmp == '*' |==> tmp <= '*'
1046:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():460:tmp == '*' |==> tmp >= '*'
1047:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():460:tmp == '*' |==> false
1048:COR:optMultilineComments:TRUE:org.marc4j.util.JsonParser@next():461:optMultilineComments |==> false
1049:COR:optMultilineComments:FALSE:org.marc4j.util.JsonParser@next():461:optMultilineComments |==> true
1050:LVR:NEG:0:org.marc4j.util.JsonParser@next():466:-1 |==> 0
1051:LVR:NEG:POS:org.marc4j.util.JsonParser@next():466:-1 |==> 1
1052:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():466:(tmp = readChar()) != -1 |==> (tmp = readChar()) < -1
1053:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():466:(tmp = readChar()) != -1 |==> (tmp = readChar()) > -1
1054:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():466:(tmp = readChar()) != -1 |==> true
1055:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():467:tmp == '*' |==> tmp <= '*'
1056:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():467:tmp == '*' |==> tmp >= '*'
1057:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():467:tmp == '*' |==> false
1058:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():467:(tmp = readChar()) == '/' |==> (tmp = readChar()) <= '/'
1059:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():467:(tmp = readChar()) == '/' |==> (tmp = readChar()) >= '/'
1060:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():467:(tmp = readChar()) == '/' |==> false
1061:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@next():467:tmp == '*' && (tmp = readChar()) == '/' |==> tmp == '*' == ((tmp = readChar()) == '/')
1062:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.JsonParser@next():467:tmp == '*' && (tmp = readChar()) == '/' |==> false
1063:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():467:tmp == '*' && (tmp = readChar()) == '/' |==> tmp == '*'
1064:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():467:tmp == '*' && (tmp = readChar()) == '/' |==> (tmp = readChar()) == '/'
1065:STD:<BREAK>:<NO-OP>:org.marc4j.util.JsonParser@next():468:break; |==> <NO-OP>
1066:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():471:tmp != '/' |==> tmp < '/'
1067:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():471:tmp != '/' |==> tmp > '/'
1068:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():471:tmp != '/' |==> true
1069:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():476:ich = ' ' |==> <NO-OP>
1070:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():478:unreadChar(tmp) |==> <NO-OP>
1071:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():479:ich = '/' |==> <NO-OP>
1072:LVR:NEG:0:org.marc4j.util.JsonParser@next():482:-1 |==> 0
1073:LVR:NEG:POS:org.marc4j.util.JsonParser@next():482:-1 |==> 1
1074:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():482:ich == -1 |==> ich <= -1
1075:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():482:ich == -1 |==> ich >= -1
1076:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():482:ich == -1 |==> false
1077:STD:<BREAK>:<NO-OP>:org.marc4j.util.JsonParser@next():483:break; |==> <NO-OP>
1078:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():492:ich == '\\' |==> ich <= '\\'
1079:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():492:ich == '\\' |==> ich >= '\\'
1080:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():492:ich == '\\' |==> false
1081:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@next():493:inpLine |==> 0
1082:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@next():493:inpColumn |==> 0
1083:LVR:NEG:0:org.marc4j.util.JsonParser@next():494:-1 |==> 0
1084:LVR:NEG:POS:org.marc4j.util.JsonParser@next():494:-1 |==> 1
1085:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():494:(ich = readChar()) == -1 |==> (ich = readChar()) <= -1
1086:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():494:(ich = readChar()) == -1 |==> (ich = readChar()) >= -1
1087:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():494:(ich = readChar()) == -1 |==> false
1088:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():501:storeChar('\"') |==> <NO-OP>
1089:STD:<CONT>:<NO-OP>:org.marc4j.util.JsonParser@next():503:continue; |==> <NO-OP>
1090:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():505:storeChar('\\') |==> <NO-OP>
1091:STD:<CONT>:<NO-OP>:org.marc4j.util.JsonParser@next():507:continue; |==> <NO-OP>
1092:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():509:storeChar('\u2044') |==> <NO-OP>
1093:STD:<CONT>:<NO-OP>:org.marc4j.util.JsonParser@next():511:continue; |==> <NO-OP>
1094:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():513:storeChar('\b') |==> <NO-OP>
1095:STD:<CONT>:<NO-OP>:org.marc4j.util.JsonParser@next():515:continue; |==> <NO-OP>
1096:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():517:storeChar('\f') |==> <NO-OP>
1097:STD:<CONT>:<NO-OP>:org.marc4j.util.JsonParser@next():519:continue; |==> <NO-OP>
1098:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():521:storeChar('\n') |==> <NO-OP>
1099:STD:<CONT>:<NO-OP>:org.marc4j.util.JsonParser@next():523:continue; |==> <NO-OP>
1100:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():525:storeChar('\r') |==> <NO-OP>
1101:STD:<CONT>:<NO-OP>:org.marc4j.util.JsonParser@next():527:continue; |==> <NO-OP>
1102:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():529:storeChar('\t') |==> <NO-OP>
1103:STD:<CONT>:<NO-OP>:org.marc4j.util.JsonParser@next():531:continue; |==> <NO-OP>
1104:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@next():533:readChar() |==> 0
1105:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@next():534:readChar() |==> 0
1106:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@next():535:readChar() |==> 0
1107:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@next():536:readChar() |==> 0
1108:LVR:NEG:0:org.marc4j.util.JsonParser@next():537:-1 |==> 0
1109:LVR:NEG:POS:org.marc4j.util.JsonParser@next():537:-1 |==> 1
1110:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():537:ic4 == -1 |==> ic4 <= -1
1111:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():537:ic4 == -1 |==> ic4 >= -1
1112:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():537:ic4 == -1 |==> false
1113:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():543:storeChar((char)decodeHexChar((char)ic1, (char)ic2, (char)ic3, (char)ic4, lin, col)) |==> <NO-OP>
1114:STD:<CONT>:<NO-OP>:org.marc4j.util.JsonParser@next():546:continue; |==> <NO-OP>
1115:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@next():548:readChar() |==> 0
1116:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@next():549:readChar() |==> 0
1117:LVR:NEG:0:org.marc4j.util.JsonParser@next():550:-1 |==> 0
1118:LVR:NEG:POS:org.marc4j.util.JsonParser@next():550:-1 |==> 1
1119:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():550:ic2 == -1 |==> ic2 <= -1
1120:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():550:ic2 == -1 |==> ic2 >= -1
1121:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():550:ic2 == -1 |==> false
1122:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():556:storeChar((char)decodeHexByte((char)ic1, (char)ic2, lin, col)) |==> <NO-OP>
1123:STD:<CONT>:<NO-OP>:org.marc4j.util.JsonParser@next():558:continue; |==> <NO-OP>
1124:COR:qut:TRUE:org.marc4j.util.JsonParser@next():568:qut |==> false
1125:COR:qut:FALSE:org.marc4j.util.JsonParser@next():568:qut |==> true
1126:LVR:POS:0:org.marc4j.util.JsonParser@next():569:32 |==> 0
1127:LVR:POS:NEG:org.marc4j.util.JsonParser@next():569:32 |==> -32
1128:ROR:<(int,int):!=(int,int):org.marc4j.util.JsonParser@next():569:ich < 32 |==> ich != 32
1129:ROR:<(int,int):<=(int,int):org.marc4j.util.JsonParser@next():569:ich < 32 |==> ich <= 32
1130:ROR:<(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():569:ich < 32 |==> false
1131:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():569:ich == '\r' |==> ich <= '\r'
1132:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():569:ich == '\r' |==> ich >= '\r'
1133:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():569:ich == '\r' |==> false
1134:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():569:ich == '\n' |==> ich <= '\n'
1135:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():569:ich == '\n' |==> ich >= '\n'
1136:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():569:ich == '\n' |==> false
1137:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.util.JsonParser@next():569:ich == '\r' || ich == '\n' |==> ich == '\r' != (ich == '\n')
1138:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():569:ich == '\r' || ich == '\n' |==> ich == '\r'
1139:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():569:ich == '\r' || ich == '\n' |==> ich == '\n'
1140:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.util.JsonParser@next():569:ich == '\r' || ich == '\n' |==> true
1141:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@next():569:optMultilineStrings && (ich == '\r' || ich == '\n') |==> optMultilineStrings == (ich == '\r' || ich == '\n')
1142:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.JsonParser@next():569:optMultilineStrings && (ich == '\r' || ich == '\n') |==> false
1143:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():569:optMultilineStrings && (ich == '\r' || ich == '\n') |==> optMultilineStrings
1144:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():569:optMultilineStrings && (ich == '\r' || ich == '\n') |==> (ich == '\r' || ich == '\n')
1145:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@next():569:ich < 32 && !(optMultilineStrings && (ich == '\r' || ich == '\n')) |==> ich < 32 == !(optMultilineStrings && (ich == '\r' || ich == '\n'))
1146:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.JsonParser@next():569:ich < 32 && !(optMultilineStrings && (ich == '\r' || ich == '\n')) |==> false
1147:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():569:ich < 32 && !(optMultilineStrings && (ich == '\r' || ich == '\n')) |==> ich < 32
1148:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():569:ich < 32 && !(optMultilineStrings && (ich == '\r' || ich == '\n')) |==> !(optMultilineStrings && (ich == '\r' || ich == '\n'))
1149:COR:optMultilineStrings:TRUE:org.marc4j.util.JsonParser@next():572:optMultilineStrings |==> false
1150:COR:optMultilineStrings:FALSE:org.marc4j.util.JsonParser@next():572:optMultilineStrings |==> true
1151:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():575:ich == '\"' |==> ich <= '\"'
1152:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():575:ich == '\"' |==> ich >= '\"'
1153:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():575:ich == '\"' |==> false
1154:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@next():575:!squ && ich == '\"' |==> !squ == (ich == '\"')
1155:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.JsonParser@next():575:!squ && ich == '\"' |==> false
1156:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():575:!squ && ich == '\"' |==> !squ
1157:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():575:!squ && ich == '\"' |==> ich == '\"'
1158:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():575:ich == '\'' |==> ich <= '\''
1159:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():575:ich == '\'' |==> ich >= '\''
1160:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():575:ich == '\'' |==> false
1161:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@next():575:squ && ich == '\'' |==> squ == (ich == '\'')
1162:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.JsonParser@next():575:squ && ich == '\'' |==> false
1163:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():575:squ && ich == '\'' |==> squ
1164:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():575:squ && ich == '\'' |==> ich == '\''
1165:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.util.JsonParser@next():575:!squ && ich == '\"' || squ && ich == '\'' |==> (!squ && ich == '\"') != (squ && ich == '\'')
1166:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():575:!squ && ich == '\"' || squ && ich == '\'' |==> !squ && ich == '\"'
1167:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():575:!squ && ich == '\"' || squ && ich == '\'' |==> squ && ich == '\''
1168:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.util.JsonParser@next():575:!squ && ich == '\"' || squ && ich == '\'' |==> true
1169:LVR:FALSE:TRUE:org.marc4j.util.JsonParser@next():576:false |==> true
1170:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():576:qut = false |==> <NO-OP>
1171:LVR:FALSE:TRUE:org.marc4j.util.JsonParser@next():577:false |==> true
1172:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():577:amd = false |==> <NO-OP>
1173:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():579:storeChar((char)ich) |==> <NO-OP>
1174:STD:<CONT>:<NO-OP>:org.marc4j.util.JsonParser@next():580:continue; |==> <NO-OP>
1175:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():583:ich == '\r' |==> ich <= '\r'
1176:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():583:ich == '\r' |==> ich >= '\r'
1177:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():583:ich == '\r' |==> false
1178:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():583:ich == '\n' |==> ich <= '\n'
1179:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():583:ich == '\n' |==> ich >= '\n'
1180:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():583:ich == '\n' |==> false
1181:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.util.JsonParser@next():583:ich == '\r' || ich == '\n' |==> ich == '\r' != (ich == '\n')
1182:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():583:ich == '\r' || ich == '\n' |==> ich == '\r'
1183:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():583:ich == '\r' || ich == '\n' |==> ich == '\n'
1184:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.util.JsonParser@next():583:ich == '\r' || ich == '\n' |==> true
1185:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@next():583:!optEolIsComma && (ich == '\r' || ich == '\n') |==> !optEolIsComma == (ich == '\r' || ich == '\n')
1186:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.JsonParser@next():583:!optEolIsComma && (ich == '\r' || ich == '\n') |==> false
1187:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():583:!optEolIsComma && (ich == '\r' || ich == '\n') |==> !optEolIsComma
1188:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():583:!optEolIsComma && (ich == '\r' || ich == '\n') |==> (ich == '\r' || ich == '\n')
1189:STD:<CONT>:<NO-OP>:org.marc4j.util.JsonParser@next():585:continue; |==> <NO-OP>
1190:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():588:ich == '\"' |==> ich <= '\"'
1191:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():588:ich == '\"' |==> ich >= '\"'
1192:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():588:ich == '\"' |==> false
1193:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():588:ich == '\'' |==> ich <= '\''
1194:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():588:ich == '\'' |==> ich >= '\''
1195:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():588:ich == '\'' |==> false
1196:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@next():588:optSingleQuoteStrings && ich == '\'' |==> optSingleQuoteStrings == (ich == '\'')
1197:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.JsonParser@next():588:optSingleQuoteStrings && ich == '\'' |==> false
1198:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():588:optSingleQuoteStrings && ich == '\'' |==> optSingleQuoteStrings
1199:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():588:optSingleQuoteStrings && ich == '\'' |==> ich == '\''
1200:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.util.JsonParser@next():588:ich == '\"' || optSingleQuoteStrings && ich == '\'' |==> ich == '\"' != (optSingleQuoteStrings && ich == '\'')
1201:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():588:ich == '\"' || optSingleQuoteStrings && ich == '\'' |==> ich == '\"'
1202:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():588:ich == '\"' || optSingleQuoteStrings && ich == '\'' |==> optSingleQuoteStrings && ich == '\''
1203:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.util.JsonParser@next():588:ich == '\"' || optSingleQuoteStrings && ich == '\'' |==> true
1204:LVR:0:POS:org.marc4j.util.JsonParser@next():589:0 |==> 1
1205:LVR:0:NEG:org.marc4j.util.JsonParser@next():589:0 |==> -1
1206:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():589:accumulator.length() != 0 |==> accumulator.length() < 0
1207:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():589:accumulator.length() != 0 |==> accumulator.length() > 0
1208:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():589:accumulator.length() != 0 |==> true
1209:COR:amd:TRUE:org.marc4j.util.JsonParser@next():595:amd |==> false
1210:COR:amd:FALSE:org.marc4j.util.JsonParser@next():595:amd |==> true
1211:LVR:TRUE:FALSE:org.marc4j.util.JsonParser@next():600:true |==> false
1212:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():600:qut = true |==> <NO-OP>
1213:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():601:ich == '\'' |==> ich <= '\''
1214:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():601:ich == '\'' |==> ich >= '\''
1215:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():601:ich == '\'' |==> false
1216:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():601:squ = ich == '\'' |==> <NO-OP>
1217:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():602:storeChar((char)ich) |==> <NO-OP>
1218:STD:<CONT>:<NO-OP>:org.marc4j.util.JsonParser@next():603:continue; |==> <NO-OP>
1219:LVR:0:POS:org.marc4j.util.JsonParser@next():608:0 |==> 1
1220:LVR:0:NEG:org.marc4j.util.JsonParser@next():608:0 |==> -1
1221:ROR:>(int,int):!=(int,int):org.marc4j.util.JsonParser@next():608:mbrName.length() > 0 |==> mbrName.length() != 0
1222:ROR:>(int,int):>=(int,int):org.marc4j.util.JsonParser@next():608:mbrName.length() > 0 |==> mbrName.length() >= 0
1223:ROR:>(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():608:mbrName.length() > 0 |==> false
1224:LVR:0:POS:org.marc4j.util.JsonParser@next():613:0 |==> 1
1225:LVR:0:NEG:org.marc4j.util.JsonParser@next():613:0 |==> -1
1226:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():613:objectData.arrayDepth != 0 |==> objectData.arrayDepth < 0
1227:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():613:objectData.arrayDepth != 0 |==> objectData.arrayDepth > 0
1228:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():613:objectData.arrayDepth != 0 |==> true
1229:LVR:TRUE:FALSE:org.marc4j.util.JsonParser@next():618:true |==> false
1230:LVR:0:POS:org.marc4j.util.JsonParser@next():619:0 |==> 1
1231:LVR:0:NEG:org.marc4j.util.JsonParser@next():619:0 |==> -1
1232:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():619:txt.length() == 0 |==> txt.length() <= 0
1233:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():619:txt.length() == 0 |==> txt.length() >= 0
1234:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():619:txt.length() == 0 |==> false
1235:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():624:mbrName = stripQuotes(txt) |==> <NO-OP>
1236:LVR:TRUE:FALSE:org.marc4j.util.JsonParser@next():625:true |==> false
1237:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():625:amd = true |==> <NO-OP>
1238:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@next():627:!optUnquotedKeywords && !isQuoted(txt) |==> !optUnquotedKeywords == !isQuoted(txt)
1239:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.JsonParser@next():627:!optUnquotedKeywords && !isQuoted(txt) |==> false
1240:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():627:!optUnquotedKeywords && !isQuoted(txt) |==> !optUnquotedKeywords
1241:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():627:!optUnquotedKeywords && !isQuoted(txt) |==> !isQuoted(txt)
1242:STD:<CONT>:<NO-OP>:org.marc4j.util.JsonParser@next():632:continue; |==> <NO-OP>
1243:LVR:0:POS:org.marc4j.util.JsonParser@next():638:0 |==> 1
1244:LVR:0:NEG:org.marc4j.util.JsonParser@next():638:0 |==> -1
1245:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():638:accumulator.length() == 0 |==> accumulator.length() <= 0
1246:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():638:accumulator.length() == 0 |==> accumulator.length() >= 0
1247:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():638:accumulator.length() == 0 |==> false
1248:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():640:mbrName = "" |==> <NO-OP>
1249:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():642:pet = EVT_OBJECT_MEMBER |==> <NO-OP>
1250:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():643:pet == EVT_OBJECT_ENDED |==> pet <= EVT_OBJECT_ENDED
1251:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():643:pet == EVT_OBJECT_ENDED |==> pet >= EVT_OBJECT_ENDED
1252:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():643:pet == EVT_OBJECT_ENDED |==> false
1253:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():648:pet == EVT_ARRAY_ENDED |==> pet <= EVT_ARRAY_ENDED
1254:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():648:pet == EVT_ARRAY_ENDED |==> pet >= EVT_ARRAY_ENDED
1255:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():648:pet == EVT_ARRAY_ENDED |==> false
1256:LVR:0:POS:org.marc4j.util.JsonParser@next():653:0 |==> 1
1257:LVR:0:NEG:org.marc4j.util.JsonParser@next():653:0 |==> -1
1258:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():653:objectData.arrayDepth == 0 |==> objectData.arrayDepth <= 0
1259:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():653:objectData.arrayDepth == 0 |==> objectData.arrayDepth >= 0
1260:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():653:objectData.arrayDepth == 0 |==> false
1261:LVR:0:POS:org.marc4j.util.JsonParser@next():653:0 |==> 1
1262:LVR:0:NEG:org.marc4j.util.JsonParser@next():653:0 |==> -1
1263:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():653:mbrName.length() == 0 |==> mbrName.length() <= 0
1264:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():653:mbrName.length() == 0 |==> mbrName.length() >= 0
1265:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():653:mbrName.length() == 0 |==> false
1266:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@next():653:objectData.arrayDepth == 0 && mbrName.length() == 0 |==> objectData.arrayDepth == 0 == (mbrName.length() == 0)
1267:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.JsonParser@next():653:objectData.arrayDepth == 0 && mbrName.length() == 0 |==> false
1268:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():653:objectData.arrayDepth == 0 && mbrName.length() == 0 |==> objectData.arrayDepth == 0
1269:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():653:objectData.arrayDepth == 0 && mbrName.length() == 0 |==> mbrName.length() == 0
1270:LVR:0:POS:org.marc4j.util.JsonParser@next():658:0 |==> 1
1271:LVR:0:NEG:org.marc4j.util.JsonParser@next():658:0 |==> -1
1272:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():658:objectData.arrayDepth != 0 |==> objectData.arrayDepth < 0
1273:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():658:objectData.arrayDepth != 0 |==> objectData.arrayDepth > 0
1274:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():658:objectData.arrayDepth != 0 |==> true
1275:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():659:mbrName = objectData.arrayName |==> <NO-OP>
1276:LVR:FALSE:TRUE:org.marc4j.util.JsonParser@next():661:false |==> true
1277:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():661:mbrValue = getAccumulatedText(false) |==> <NO-OP>
1278:STD:<RETURN>:<NO-OP>:org.marc4j.util.JsonParser@next():662:return evtCode = EVT_OBJECT_MEMBER; |==> <NO-OP>
1279:LVR:TRUE:FALSE:org.marc4j.util.JsonParser@next():664:true |==> false
1280:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():664:amd = true |==> <NO-OP>
1281:STD:<CONT>:<NO-OP>:org.marc4j.util.JsonParser@next():665:continue; |==> <NO-OP>
1282:LVR:0:POS:org.marc4j.util.JsonParser@next():669:0 |==> 1
1283:LVR:0:NEG:org.marc4j.util.JsonParser@next():669:0 |==> -1
1284:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():669:accumulator.length() != 0 |==> accumulator.length() < 0
1285:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():669:accumulator.length() != 0 |==> accumulator.length() > 0
1286:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():669:accumulator.length() != 0 |==> true
1287:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():675:pushObjectData() |==> <NO-OP>
1288:LVR:0:POS:org.marc4j.util.JsonParser@next():676:0 |==> 1
1289:LVR:0:NEG:org.marc4j.util.JsonParser@next():676:0 |==> -1
1290:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():676:objectData.arrayDepth != 0 |==> objectData.arrayDepth < 0
1291:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():676:objectData.arrayDepth != 0 |==> objectData.arrayDepth > 0
1292:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():676:objectData.arrayDepth != 0 |==> true
1293:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():677:mbrName = objectData.arrayName |==> <NO-OP>
1294:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():679:objectData = new ObjectData(mbrName) |==> <NO-OP>
1295:STD:<RETURN>:<NO-OP>:org.marc4j.util.JsonParser@next():680:return evtCode = EVT_OBJECT_BEGIN; |==> <NO-OP>
1296:LVR:FALSE:TRUE:org.marc4j.util.JsonParser@next():684:false |==> true
1297:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():684:mbrValue = getAccumulatedText(false) |==> <NO-OP>
1298:LVR:0:POS:org.marc4j.util.JsonParser@next():685:0 |==> 1
1299:LVR:0:NEG:org.marc4j.util.JsonParser@next():685:0 |==> -1
1300:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():685:objectData.arrayDepth == 0 |==> objectData.arrayDepth <= 0
1301:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():685:objectData.arrayDepth == 0 |==> objectData.arrayDepth >= 0
1302:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():685:objectData.arrayDepth == 0 |==> false
1303:LVR:0:POS:org.marc4j.util.JsonParser@next():685:0 |==> 1
1304:LVR:0:NEG:org.marc4j.util.JsonParser@next():685:0 |==> -1
1305:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():685:mbrName.length() == 0 |==> mbrName.length() <= 0
1306:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():685:mbrName.length() == 0 |==> mbrName.length() >= 0
1307:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():685:mbrName.length() == 0 |==> false
1308:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@next():685:objectData.arrayDepth == 0 && mbrName.length() == 0 |==> objectData.arrayDepth == 0 == (mbrName.length() == 0)
1309:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.JsonParser@next():685:objectData.arrayDepth == 0 && mbrName.length() == 0 |==> false
1310:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():685:objectData.arrayDepth == 0 && mbrName.length() == 0 |==> objectData.arrayDepth == 0
1311:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():685:objectData.arrayDepth == 0 && mbrName.length() == 0 |==> mbrName.length() == 0
1312:LVR:0:POS:org.marc4j.util.JsonParser@next():686:0 |==> 1
1313:LVR:0:NEG:org.marc4j.util.JsonParser@next():686:0 |==> -1
1314:ROR:>(int,int):!=(int,int):org.marc4j.util.JsonParser@next():685:mbrValue.length() > 0 |==> mbrValue.length() != 0
1315:ROR:>(int,int):>=(int,int):org.marc4j.util.JsonParser@next():685:mbrValue.length() > 0 |==> mbrValue.length() >= 0
1316:ROR:>(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():686:mbrValue.length() > 0 |==> false
1317:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@next():685:objectData.arrayDepth == 0 && mbrName.length() == 0 && mbrValue.length() > 0 |==> (objectData.arrayDepth == 0 && mbrName.length() == 0) == mbrValue.length() > 0
1318:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.JsonParser@next():685:objectData.arrayDepth == 0 && mbrName.length() == 0 && mbrValue.length() > 0 |==> false
1319:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():685:objectData.arrayDepth == 0 && mbrName.length() == 0 && mbrValue.length() > 0 |==> objectData.arrayDepth == 0 && mbrName.length() == 0
1320:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():685:objectData.arrayDepth == 0 && mbrName.length() == 0 && mbrValue.length() > 0 |==> mbrValue.length() > 0
1321:LVR:0:POS:org.marc4j.util.JsonParser@next():690:0 |==> 1
1322:LVR:0:NEG:org.marc4j.util.JsonParser@next():690:0 |==> -1
1323:ROR:>(int,int):!=(int,int):org.marc4j.util.JsonParser@next():690:mbrValue.length() > 0 |==> mbrValue.length() != 0
1324:ROR:>(int,int):>=(int,int):org.marc4j.util.JsonParser@next():690:mbrValue.length() > 0 |==> mbrValue.length() >= 0
1325:ROR:>(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():690:mbrValue.length() > 0 |==> false
1326:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():691:unreadChar(ich) |==> <NO-OP>
1327:LVR:0:POS:org.marc4j.util.JsonParser@next():692:0 |==> 1
1328:LVR:0:NEG:org.marc4j.util.JsonParser@next():692:0 |==> -1
1329:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():692:objectData.arrayDepth != 0 |==> objectData.arrayDepth < 0
1330:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():692:objectData.arrayDepth != 0 |==> objectData.arrayDepth > 0
1331:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():692:objectData.arrayDepth != 0 |==> true
1332:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():693:mbrName = objectData.arrayName |==> <NO-OP>
1333:STD:<RETURN>:<NO-OP>:org.marc4j.util.JsonParser@next():695:return evtCode = EVT_OBJECT_MEMBER; |==> <NO-OP>
1334:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():698:mbrName = objectData.name |==> <NO-OP>
1335:STD:<RETURN>:<NO-OP>:org.marc4j.util.JsonParser@next():699:return evtCode = EVT_OBJECT_ENDED; |==> <NO-OP>
1336:LVR:0:POS:org.marc4j.util.JsonParser@next():703:0 |==> 1
1337:LVR:0:NEG:org.marc4j.util.JsonParser@next():703:0 |==> -1
1338:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():703:accumulator.length() != 0 |==> accumulator.length() < 0
1339:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():703:accumulator.length() != 0 |==> accumulator.length() > 0
1340:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():703:accumulator.length() != 0 |==> true
1341:LVR:0:POS:org.marc4j.util.JsonParser@next():709:0 |==> 1
1342:LVR:0:NEG:org.marc4j.util.JsonParser@next():709:0 |==> -1
1343:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():709:objectData.arrayDepth == 0 |==> objectData.arrayDepth <= 0
1344:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():709:objectData.arrayDepth == 0 |==> objectData.arrayDepth >= 0
1345:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():709:objectData.arrayDepth == 0 |==> false
1346:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():710:objectData.arrayName = mbrName |==> <NO-OP>
1347:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():712:mbrName = objectData.arrayName |==> <NO-OP>
1348:STD:<INC>:<NO-OP>:org.marc4j.util.JsonParser@next():714:objectData.arrayDepth++ |==> <NO-OP>
1349:STD:<RETURN>:<NO-OP>:org.marc4j.util.JsonParser@next():715:return evtCode = EVT_ARRAY_BEGIN; |==> <NO-OP>
1350:LVR:0:POS:org.marc4j.util.JsonParser@next():719:0 |==> 1
1351:LVR:0:NEG:org.marc4j.util.JsonParser@next():719:0 |==> -1
1352:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():719:objectData.arrayDepth == 0 |==> objectData.arrayDepth <= 0
1353:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():719:objectData.arrayDepth == 0 |==> objectData.arrayDepth >= 0
1354:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():719:objectData.arrayDepth == 0 |==> false
1355:LVR:FALSE:TRUE:org.marc4j.util.JsonParser@next():725:false |==> true
1356:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():725:mbrValue = getAccumulatedText(false) |==> <NO-OP>
1357:LVR:0:POS:org.marc4j.util.JsonParser@next():726:0 |==> 1
1358:LVR:0:NEG:org.marc4j.util.JsonParser@next():726:0 |==> -1
1359:ROR:>(int,int):!=(int,int):org.marc4j.util.JsonParser@next():726:mbrValue.length() > 0 |==> mbrValue.length() != 0
1360:ROR:>(int,int):>=(int,int):org.marc4j.util.JsonParser@next():726:mbrValue.length() > 0 |==> mbrValue.length() >= 0
1361:ROR:>(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():726:mbrValue.length() > 0 |==> false
1362:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():727:unreadChar(ich) |==> <NO-OP>
1363:LVR:0:POS:org.marc4j.util.JsonParser@next():728:0 |==> 1
1364:LVR:0:NEG:org.marc4j.util.JsonParser@next():728:0 |==> -1
1365:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():728:objectData.arrayDepth != 0 |==> objectData.arrayDepth < 0
1366:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():728:objectData.arrayDepth != 0 |==> objectData.arrayDepth > 0
1367:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():728:objectData.arrayDepth != 0 |==> true
1368:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():729:mbrName = objectData.arrayName |==> <NO-OP>
1369:STD:<RETURN>:<NO-OP>:org.marc4j.util.JsonParser@next():731:return evtCode = EVT_OBJECT_MEMBER; |==> <NO-OP>
1370:STD:<DEC>:<NO-OP>:org.marc4j.util.JsonParser@next():734:objectData.arrayDepth-- |==> <NO-OP>
1371:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():735:mbrName = objectData.arrayName |==> <NO-OP>
1372:LVR:0:POS:org.marc4j.util.JsonParser@next():736:0 |==> 1
1373:LVR:0:NEG:org.marc4j.util.JsonParser@next():736:0 |==> -1
1374:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@next():736:objectData.arrayDepth == 0 |==> objectData.arrayDepth <= 0
1375:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@next():736:objectData.arrayDepth == 0 |==> objectData.arrayDepth >= 0
1376:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@next():736:objectData.arrayDepth == 0 |==> false
1377:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():737:objectData.arrayName = "" |==> <NO-OP>
1378:STD:<RETURN>:<NO-OP>:org.marc4j.util.JsonParser@next():739:return evtCode = EVT_ARRAY_ENDED; |==> <NO-OP>
1379:COR:Character.isWhitespace((char)ich):TRUE:org.marc4j.util.JsonParser@next():743:Character.isWhitespace((char)ich) |==> false
1380:COR:Character.isWhitespace((char)ich):FALSE:org.marc4j.util.JsonParser@next():743:Character.isWhitespace((char)ich) |==> true
1381:LVR:TRUE:FALSE:org.marc4j.util.JsonParser@next():744:true |==> false
1382:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():744:pws = true |==> <NO-OP>
1383:COR:amd:TRUE:org.marc4j.util.JsonParser@next():746:amd |==> false
1384:COR:amd:FALSE:org.marc4j.util.JsonParser@next():746:amd |==> true
1385:LVR:0:POS:org.marc4j.util.JsonParser@next():751:0 |==> 1
1386:LVR:0:NEG:org.marc4j.util.JsonParser@next():751:0 |==> -1
1387:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():751:accumulator.length() != 0 |==> accumulator.length() < 0
1388:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():751:accumulator.length() != 0 |==> accumulator.length() > 0
1389:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():751:accumulator.length() != 0 |==> true
1390:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@next():751:pws && accumulator.length() != 0 |==> pws == (accumulator.length() != 0)
1391:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.JsonParser@next():751:pws && accumulator.length() != 0 |==> false
1392:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@next():751:pws && accumulator.length() != 0 |==> pws
1393:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@next():751:pws && accumulator.length() != 0 |==> accumulator.length() != 0
1394:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():757:storeChar((char)ich) |==> <NO-OP>
1395:LVR:FALSE:TRUE:org.marc4j.util.JsonParser@next():758:false |==> true
1396:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():758:pws = false |==> <NO-OP>
1397:STD:<CONT>:<NO-OP>:org.marc4j.util.JsonParser@next():760:continue; |==> <NO-OP>
1398:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():766:mbrName = null |==> <NO-OP>
1399:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():767:mbrValue = null |==> <NO-OP>
1400:LVR:0:POS:org.marc4j.util.JsonParser@next():768:0 |==> 1
1401:LVR:0:NEG:org.marc4j.util.JsonParser@next():768:0 |==> -1
1402:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():768:objectStack.size() != 0 |==> objectStack.size() < 0
1403:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():768:objectStack.size() != 0 |==> objectStack.size() > 0
1404:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():768:objectStack.size() != 0 |==> true
1405:COR:qut:TRUE:org.marc4j.util.JsonParser@next():769:qut |==> false
1406:COR:qut:FALSE:org.marc4j.util.JsonParser@next():769:qut |==> true
1407:LVR:0:POS:org.marc4j.util.JsonParser@next():779:0 |==> 1
1408:LVR:0:NEG:org.marc4j.util.JsonParser@next():779:0 |==> -1
1409:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@next():779:objectData.arrayDepth != 0 |==> objectData.arrayDepth < 0
1410:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@next():779:objectData.arrayDepth != 0 |==> objectData.arrayDepth > 0
1411:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@next():779:objectData.arrayDepth != 0 |==> true
1412:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():785:evtLine = inpLine |==> <NO-OP>
1413:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@next():786:evtColumn = inpColumn |==> <NO-OP>
1414:COR:inpClose:TRUE:org.marc4j.util.JsonParser@next():787:inpClose |==> false
1415:COR:inpClose:FALSE:org.marc4j.util.JsonParser@next():787:inpClose |==> true
1416:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():789:inpReader.close() |==> <NO-OP>
1417:EVR:<ASSIGNMENT>:<DEFAULT>:org.marc4j.util.JsonParser@next():795:evtCode = EVT_INPUT_ENDED |==> 0
1418:COR:inpClose:TRUE:org.marc4j.util.JsonParser@next():797:inpClose |==> false
1419:COR:inpClose:FALSE:org.marc4j.util.JsonParser@next():797:inpClose |==> true
1420:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@next():799:inpReader.close() |==> <NO-OP>
1421:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@skipObject():812:getEventCode() != EVT_OBJECT_BEGIN |==> getEventCode() < EVT_OBJECT_BEGIN
1422:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@skipObject():812:getEventCode() != EVT_OBJECT_BEGIN |==> getEventCode() > EVT_OBJECT_BEGIN
1423:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@skipObject():812:getEventCode() != EVT_OBJECT_BEGIN |==> true
1424:LVR:POS:0:org.marc4j.util.JsonParser@skipObject():817:1 |==> 0
1425:LVR:POS:NEG:org.marc4j.util.JsonParser@skipObject():817:1 |==> -1
1426:LVR:0:POS:org.marc4j.util.JsonParser@skipObject():818:0 |==> 1
1427:LVR:0:NEG:org.marc4j.util.JsonParser@skipObject():818:0 |==> -1
1428:ROR:>(int,int):!=(int,int):org.marc4j.util.JsonParser@skipObject():818:level > 0 |==> level != 0
1429:ROR:>(int,int):>=(int,int):org.marc4j.util.JsonParser@skipObject():818:level > 0 |==> level >= 0
1430:ROR:>(int,int):FALSE(int,int):org.marc4j.util.JsonParser@skipObject():818:level > 0 |==> false
1431:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@skipObject():819:next() |==> 0
1432:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@skipObject():820:eventCode == EVT_OBJECT_BEGIN |==> eventCode <= EVT_OBJECT_BEGIN
1433:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@skipObject():820:eventCode == EVT_OBJECT_BEGIN |==> eventCode >= EVT_OBJECT_BEGIN
1434:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@skipObject():820:eventCode == EVT_OBJECT_BEGIN |==> false
1435:STD:<INC>:<NO-OP>:org.marc4j.util.JsonParser@skipObject():821:level++ |==> <NO-OP>
1436:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@skipObject():822:eventCode == EVT_OBJECT_ENDED |==> eventCode <= EVT_OBJECT_ENDED
1437:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@skipObject():822:eventCode == EVT_OBJECT_ENDED |==> eventCode >= EVT_OBJECT_ENDED
1438:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@skipObject():822:eventCode == EVT_OBJECT_ENDED |==> false
1439:STD:<DEC>:<NO-OP>:org.marc4j.util.JsonParser@skipObject():823:level-- |==> <NO-OP>
1440:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@skipArray():832:getEventCode() != EVT_ARRAY_BEGIN |==> getEventCode() < EVT_ARRAY_BEGIN
1441:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@skipArray():832:getEventCode() != EVT_ARRAY_BEGIN |==> getEventCode() > EVT_ARRAY_BEGIN
1442:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@skipArray():832:getEventCode() != EVT_ARRAY_BEGIN |==> true
1443:LVR:POS:0:org.marc4j.util.JsonParser@skipArray():837:1 |==> 0
1444:LVR:POS:NEG:org.marc4j.util.JsonParser@skipArray():837:1 |==> -1
1445:LVR:0:POS:org.marc4j.util.JsonParser@skipArray():838:0 |==> 1
1446:LVR:0:NEG:org.marc4j.util.JsonParser@skipArray():838:0 |==> -1
1447:ROR:>(int,int):!=(int,int):org.marc4j.util.JsonParser@skipArray():838:level > 0 |==> level != 0
1448:ROR:>(int,int):>=(int,int):org.marc4j.util.JsonParser@skipArray():838:level > 0 |==> level >= 0
1449:ROR:>(int,int):FALSE(int,int):org.marc4j.util.JsonParser@skipArray():838:level > 0 |==> false
1450:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@skipArray():839:next() |==> 0
1451:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@skipArray():840:eventCode == EVT_ARRAY_BEGIN |==> eventCode <= EVT_ARRAY_BEGIN
1452:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@skipArray():840:eventCode == EVT_ARRAY_BEGIN |==> eventCode >= EVT_ARRAY_BEGIN
1453:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@skipArray():840:eventCode == EVT_ARRAY_BEGIN |==> false
1454:STD:<INC>:<NO-OP>:org.marc4j.util.JsonParser@skipArray():841:level++ |==> <NO-OP>
1455:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@skipArray():842:eventCode == EVT_ARRAY_ENDED |==> eventCode <= EVT_ARRAY_ENDED
1456:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@skipArray():842:eventCode == EVT_ARRAY_ENDED |==> eventCode >= EVT_ARRAY_ENDED
1457:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@skipArray():842:eventCode == EVT_ARRAY_ENDED |==> false
1458:STD:<DEC>:<NO-OP>:org.marc4j.util.JsonParser@skipArray():843:level-- |==> <NO-OP>
1459:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@skipArray():844:eventCode == EVT_OBJECT_BEGIN |==> eventCode <= EVT_OBJECT_BEGIN
1460:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@skipArray():844:eventCode == EVT_OBJECT_BEGIN |==> eventCode >= EVT_OBJECT_BEGIN
1461:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@skipArray():844:eventCode == EVT_OBJECT_BEGIN |==> false
1462:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@skipArray():845:skipObject() |==> <NO-OP>
1463:LVR:0:POS:org.marc4j.util.JsonParser@storeChar(char):851:0 |==> 1
1464:LVR:0:NEG:org.marc4j.util.JsonParser@storeChar(char):851:0 |==> -1
1465:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@storeChar(char):851:evtLine == 0 |==> evtLine <= 0
1466:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@storeChar(char):851:evtLine == 0 |==> evtLine >= 0
1467:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@storeChar(char):851:evtLine == 0 |==> false
1468:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@storeChar(char):852:evtLine = inpLine |==> <NO-OP>
1469:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@storeChar(char):853:evtColumn = inpColumn |==> <NO-OP>
1470:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@storeChar(char):855:accumulator.append(ch) |==> <NO-OP>
1471:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@decodeHexByte(char,char,int,int):860:decodeHexByte(c1, c2) |==> 0
1472:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@decodeHexChar(char,char,char,char,int,int):869:decodeHexChar(c1, c2, c3, c4) |==> 0
1473:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.JsonParser@createLocation(int,int):876:mbrName != null |==> true
1474:LVR:0:POS:org.marc4j.util.JsonParser@createLocation(int,int):876:0 |==> 1
1475:LVR:0:NEG:org.marc4j.util.JsonParser@createLocation(int,int):876:0 |==> -1
1476:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@createLocation(int,int):876:mbrName.length() != 0 |==> mbrName.length() < 0
1477:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@createLocation(int,int):876:mbrName.length() != 0 |==> mbrName.length() > 0
1478:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@createLocation(int,int):876:mbrName.length() != 0 |==> true
1479:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@createLocation(int,int):876:mbrName != null && mbrName.length() != 0 |==> mbrName != null == (mbrName.length() != 0)
1480:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.JsonParser@createLocation(int,int):876:mbrName != null && mbrName.length() != 0 |==> false
1481:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@createLocation(int,int):876:mbrName != null && mbrName.length() != 0 |==> mbrName != null
1482:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@createLocation(int,int):876:mbrName != null && mbrName.length() != 0 |==> mbrName.length() != 0
1483:LVR:NEG:0:org.marc4j.util.JsonParser@readChar():887:-1 |==> 0
1484:LVR:NEG:POS:org.marc4j.util.JsonParser@readChar():887:-1 |==> 1
1485:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@readChar():887:pushBack != -1 |==> pushBack < -1
1486:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@readChar():887:pushBack != -1 |==> pushBack > -1
1487:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@readChar():887:pushBack != -1 |==> true
1488:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@readChar():888:pushBack |==> 0
1489:LVR:NEG:0:org.marc4j.util.JsonParser@readChar():889:-1 |==> 0
1490:LVR:NEG:POS:org.marc4j.util.JsonParser@readChar():889:-1 |==> 1
1491:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@readChar():889:pushBack = -1 |==> <NO-OP>
1492:STD:<INC>:<NO-OP>:org.marc4j.util.JsonParser@readChar():890:inpColumn++ |==> <NO-OP>
1493:LVR:NEG:0:org.marc4j.util.JsonParser@readChar():892:-1 |==> 0
1494:LVR:NEG:POS:org.marc4j.util.JsonParser@readChar():892:-1 |==> 1
1495:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@readChar():892:(ich = inpReader.read()) != -1 |==> (ich = inpReader.read()) < -1
1496:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@readChar():892:(ich = inpReader.read()) != -1 |==> (ich = inpReader.read()) > -1
1497:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@readChar():893:ich == '\n' |==> ich <= '\n'
1498:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@readChar():893:ich == '\n' |==> ich >= '\n'
1499:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@readChar():893:ich == '\n' |==> false
1500:LVR:0:POS:org.marc4j.util.JsonParser@readChar():894:0 |==> 1
1501:LVR:0:NEG:org.marc4j.util.JsonParser@readChar():894:0 |==> -1
1502:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@readChar():894:inpColumn = 0 |==> <NO-OP>
1503:STD:<INC>:<NO-OP>:org.marc4j.util.JsonParser@readChar():895:inpLine++ |==> <NO-OP>
1504:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@readChar():896:ich == '\ufeff' |==> ich <= '\ufeff'
1505:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@readChar():896:ich == '\ufeff' |==> ich >= '\ufeff'
1506:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@readChar():896:ich == '\ufeff' |==> false
1507:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@readChar():897:ich = ' ' |==> <NO-OP>
1508:STD:<INC>:<NO-OP>:org.marc4j.util.JsonParser@readChar():900:inpColumn++ |==> <NO-OP>
1509:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@readChar():904:ich |==> 0
1510:LVR:NEG:0:org.marc4j.util.JsonParser@unreadChar(int):908:-1 |==> 0
1511:LVR:NEG:POS:org.marc4j.util.JsonParser@unreadChar(int):908:-1 |==> 1
1512:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@unreadChar(int):908:ich != -1 |==> ich < -1
1513:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@unreadChar(int):908:ich != -1 |==> ich > -1
1514:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@unreadChar(int):908:ich != -1 |==> true
1515:LVR:NEG:0:org.marc4j.util.JsonParser@unreadChar(int):909:-1 |==> 0
1516:LVR:NEG:POS:org.marc4j.util.JsonParser@unreadChar(int):909:-1 |==> 1
1517:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@unreadChar(int):909:pushBack != -1 |==> pushBack < -1
1518:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@unreadChar(int):909:pushBack != -1 |==> pushBack > -1
1519:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@unreadChar(int):909:pushBack != -1 |==> true
1520:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@unreadChar(int):914:pushBack = ich |==> <NO-OP>
1521:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@unreadChar(int):915:ich == '\n' |==> ich <= '\n'
1522:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@unreadChar(int):915:ich == '\n' |==> ich >= '\n'
1523:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@unreadChar(int):915:ich == '\n' |==> false
1524:LVR:0:POS:org.marc4j.util.JsonParser@unreadChar(int):916:0 |==> 1
1525:LVR:0:NEG:org.marc4j.util.JsonParser@unreadChar(int):916:0 |==> -1
1526:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@unreadChar(int):916:inpColumn = 0 |==> <NO-OP>
1527:STD:<DEC>:<NO-OP>:org.marc4j.util.JsonParser@unreadChar(int):917:inpLine-- |==> <NO-OP>
1528:STD:<DEC>:<NO-OP>:org.marc4j.util.JsonParser@unreadChar(int):919:inpColumn-- |==> <NO-OP>
1529:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@pushObjectData():925:objectStack.add(objectData) |==> <NO-OP>
1530:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@popObjectData():929:objectStack.size() |==> 0
1531:LVR:0:POS:org.marc4j.util.JsonParser@popObjectData():931:0 |==> 1
1532:LVR:0:NEG:org.marc4j.util.JsonParser@popObjectData():931:0 |==> -1
1533:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@popObjectData():931:siz == 0 |==> siz <= 0
1534:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@popObjectData():931:siz == 0 |==> siz >= 0
1535:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@popObjectData():931:siz == 0 |==> false
1536:LVR:0:POS:org.marc4j.util.JsonParser@popObjectData():936:0 |==> 1
1537:LVR:0:NEG:org.marc4j.util.JsonParser@popObjectData():936:0 |==> -1
1538:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@popObjectData():936:objectData.arrayDepth != 0 |==> objectData.arrayDepth < 0
1539:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@popObjectData():936:objectData.arrayDepth != 0 |==> objectData.arrayDepth > 0
1540:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@popObjectData():936:objectData.arrayDepth != 0 |==> true
1541:LVR:POS:0:org.marc4j.util.JsonParser@popObjectData():942:1 |==> 0
1542:LVR:POS:NEG:org.marc4j.util.JsonParser@popObjectData():942:1 |==> -1
1543:AOR:-(int,int):%(int,int):org.marc4j.util.JsonParser@popObjectData():942:siz - 1 |==> siz % 1
1544:AOR:-(int,int):*(int,int):org.marc4j.util.JsonParser@popObjectData():942:siz - 1 |==> siz * 1
1545:AOR:-(int,int):+(int,int):org.marc4j.util.JsonParser@popObjectData():942:siz - 1 |==> siz + 1
1546:AOR:-(int,int):/(int,int):org.marc4j.util.JsonParser@popObjectData():942:siz - 1 |==> siz / 1
1547:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@popObjectData():942:objectData = objectStack.remove(siz - 1) |==> <NO-OP>
1548:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@popObjectData():943:mbrName = objectData.name |==> <NO-OP>
1549:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@getAccumulatedText(boolean):949:accumulator.toString().trim() |==> null
1550:LVR:0:POS:org.marc4j.util.JsonParser@getAccumulatedText(boolean):950:0 |==> 1
1551:LVR:0:NEG:org.marc4j.util.JsonParser@getAccumulatedText(boolean):950:0 |==> -1
1552:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@getAccumulatedText(boolean):950:accumulator.setLength(0) |==> <NO-OP>
1553:COR:kwd:TRUE:org.marc4j.util.JsonParser@getAccumulatedText(boolean):951:kwd |==> false
1554:COR:kwd:FALSE:org.marc4j.util.JsonParser@getAccumulatedText(boolean):951:kwd |==> true
1555:COR:optInternKeywords:TRUE:org.marc4j.util.JsonParser@getAccumulatedText(boolean):952:optInternKeywords |==> false
1556:COR:optInternKeywords:FALSE:org.marc4j.util.JsonParser@getAccumulatedText(boolean):952:optInternKeywords |==> true
1557:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@getAccumulatedText(boolean):953:val = val.intern() |==> <NO-OP>
1558:COR:optInternValues:TRUE:org.marc4j.util.JsonParser@getAccumulatedText(boolean):956:optInternValues |==> false
1559:COR:optInternValues:FALSE:org.marc4j.util.JsonParser@getAccumulatedText(boolean):956:optInternValues |==> true
1560:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@getAccumulatedText(boolean):957:val = val.intern() |==> <NO-OP>
1561:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@getAccumulatedText(boolean):960:val |==> null
1562:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@parserError(int,java.lang.String):964:parserError(cod, txt, null) |==> null
1563:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@parserError(int,java.lang.String,java.lang.Throwable):968:parserError(cod, txt, thr, inpLine, inpColumn) |==> null
1564:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.JsonParser@parserError(int,java.lang.String,java.lang.Throwable,int,int):973:new Escape(cod, txt + "; at " + createLocation(lin, col), thr) |==> null
1565:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser$Location@<init>(java.lang.String,int,int,java.lang.String):995:inpnam |==> null
1566:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser$Location@<init>(java.lang.String,int,int,java.lang.String):996:inplin |==> 0
1567:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser$Location@<init>(java.lang.String,int,int,java.lang.String):997:inpcol |==> 0
1568:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.util.JsonParser$Location@<init>(java.lang.String,int,int,java.lang.String):998:mbrnam == null |==> false
1569:LVR:0:POS:org.marc4j.util.JsonParser$Location@<init>(java.lang.String,int,int,java.lang.String):998:0 |==> 1
1570:LVR:0:NEG:org.marc4j.util.JsonParser$Location@<init>(java.lang.String,int,int,java.lang.String):998:0 |==> -1
1571:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser$Location@<init>(java.lang.String,int,int,java.lang.String):998:mbrnam.length() == 0 |==> mbrnam.length() <= 0
1572:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser$Location@<init>(java.lang.String,int,int,java.lang.String):998:mbrnam.length() == 0 |==> mbrnam.length() >= 0
1573:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser$Location@<init>(java.lang.String,int,int,java.lang.String):998:mbrnam.length() == 0 |==> false
1574:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.util.JsonParser$Location@<init>(java.lang.String,int,int,java.lang.String):998:mbrnam == null || mbrnam.length() == 0 |==> mbrnam == null != (mbrnam.length() == 0)
1575:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser$Location@<init>(java.lang.String,int,int,java.lang.String):998:mbrnam == null || mbrnam.length() == 0 |==> mbrnam == null
1576:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser$Location@<init>(java.lang.String,int,int,java.lang.String):998:mbrnam == null || mbrnam.length() == 0 |==> mbrnam.length() == 0
1577:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.util.JsonParser$Location@<init>(java.lang.String,int,int,java.lang.String):998:mbrnam == null || mbrnam.length() == 0 |==> true
1578:LVR:0:POS:org.marc4j.util.JsonParser$Location@toString():1003:0 |==> 1
1579:LVR:0:NEG:org.marc4j.util.JsonParser$Location@toString():1003:0 |==> -1
1580:ROR:>(int,int):!=(int,int):org.marc4j.util.JsonParser$Location@toString():1003:inpCol > 0 |==> inpCol != 0
1581:ROR:>(int,int):>=(int,int):org.marc4j.util.JsonParser$Location@toString():1003:inpCol > 0 |==> inpCol >= 0
1582:ROR:>(int,int):FALSE(int,int):org.marc4j.util.JsonParser$Location@toString():1003:inpCol > 0 |==> false
1583:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.util.JsonParser$Location@toString():1004:mbrName == null |==> false
1584:LVR:POS:0:org.marc4j.util.JsonParser$Location@toString():1007:1 |==> 0
1585:LVR:POS:NEG:org.marc4j.util.JsonParser$Location@toString():1007:1 |==> -1
1586:AOR:-(int,int):%(int,int):org.marc4j.util.JsonParser$Location@toString():1007:inpLine - 1 |==> inpLine % 1
1587:AOR:-(int,int):*(int,int):org.marc4j.util.JsonParser$Location@toString():1007:inpLine - 1 |==> inpLine * 1
1588:AOR:-(int,int):+(int,int):org.marc4j.util.JsonParser$Location@toString():1007:inpLine - 1 |==> inpLine + 1
1589:AOR:-(int,int):/(int,int):org.marc4j.util.JsonParser$Location@toString():1007:inpLine - 1 |==> inpLine / 1
1590:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.util.JsonParser$Location@toString():1007:mbrName == null |==> false
1591:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser$Location@getInputSource():1013:inpName |==> null
1592:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser$Location@getInputLine():1017:inpLine |==> 0
1593:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser$Location@getInputColumn():1021:inpCol |==> 0
1594:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser$Location@getMemberName():1025:mbrName |==> null
1595:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser$ObjectData@<init>(java.lang.String):1044:nam |==> null
1596:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser$ObjectData@<init>(java.lang.String):1045:arrayName = "" |==> <NO-OP>
1597:LVR:0:POS:org.marc4j.util.JsonParser$ObjectData@<init>(java.lang.String):1046:0 |==> 1
1598:LVR:0:NEG:org.marc4j.util.JsonParser$ObjectData@<init>(java.lang.String):1046:0 |==> -1
1599:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser$ObjectData@<init>(java.lang.String):1046:arrayDepth = 0 |==> <NO-OP>
1600:EVR:<NEW_ARRAY>:<DEFAULT>:org.marc4j.util.JsonParser:1072:{"Invalid", "ObjectBegin", "ObjectEnded", "ArrayBegin", "ArrayEnded", "InputEnded", "ObjectMember"} |==> null
1601:EVR:<OR>:<DEFAULT>:org.marc4j.util.JsonParser:1109:OPT_UNQUOTED_KEYWORDS | OPT_INTERN_KEYWORDS |==> 0
1602:EVR:<OR>:<DEFAULT>:org.marc4j.util.JsonParser:1112:OPT_UNQUOTED_KEYWORDS | OPT_EOL_IS_COMMA | OPT_MULTILINE_COMMENTS | OPT_SINGLE_QUOTE_STRINGS | OPT_INTERN_KEYWORDS | OPT_INTERN_VALUES |==> 0
1603:COR:val.equalsIgnoreCase("null"):TRUE:org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1141:val.equalsIgnoreCase("null") |==> false
1604:COR:val.equalsIgnoreCase("null"):FALSE:org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1141:val.equalsIgnoreCase("null") |==> true
1605:COR:val.equalsIgnoreCase("true"):TRUE:org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1143:val.equalsIgnoreCase("true") |==> false
1606:COR:val.equalsIgnoreCase("true"):FALSE:org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1143:val.equalsIgnoreCase("true") |==> true
1607:EVR:<MEMBER_SELECT>:<DEFAULT>:org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1144:Boolean.TRUE |==> null
1608:COR:val.equalsIgnoreCase("false"):TRUE:org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1145:val.equalsIgnoreCase("false") |==> false
1609:COR:val.equalsIgnoreCase("false"):FALSE:org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1145:val.equalsIgnoreCase("false") |==> true
1610:EVR:<MEMBER_SELECT>:<DEFAULT>:org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1146:Boolean.FALSE |==> null
1611:COR:isQuoted(val):TRUE:org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1147:isQuoted(val) |==> false
1612:COR:isQuoted(val):FALSE:org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1147:isQuoted(val) |==> true
1613:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1148:stripQuotes(val) |==> null
1614:LVR:0:POS:org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1149:0 |==> 1
1615:LVR:0:NEG:org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1149:0 |==> -1
1616:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1149:val.length() == 0 |==> val.length() <= 0
1617:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1149:val.length() == 0 |==> val.length() >= 0
1618:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1149:val.length() == 0 |==> false
1619:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1150:val |==> null
1620:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.JsonParser@createTypedValue(java.lang.String):1152:new BigDecimal(val) |==> null
1621:LVR:POS:0:org.marc4j.util.JsonParser@getEventName(int):1162:1 |==> 0
1622:LVR:POS:NEG:org.marc4j.util.JsonParser@getEventName(int):1162:1 |==> -1
1623:ROR:<(int,int):!=(int,int):org.marc4j.util.JsonParser@getEventName(int):1162:cod < 1 |==> cod != 1
1624:ROR:<(int,int):<=(int,int):org.marc4j.util.JsonParser@getEventName(int):1162:cod < 1 |==> cod <= 1
1625:ROR:<(int,int):FALSE(int,int):org.marc4j.util.JsonParser@getEventName(int):1162:cod < 1 |==> false
1626:LVR:0:POS:org.marc4j.util.JsonParser@getEventName(int):1163:0 |==> 1
1627:LVR:0:NEG:org.marc4j.util.JsonParser@getEventName(int):1163:0 |==> -1
1628:ROR:>=(int,int):==(int,int):org.marc4j.util.JsonParser@getEventName(int):1164:cod >= EVT_NAMES.length |==> cod == EVT_NAMES.length
1629:ROR:>=(int,int):>(int,int):org.marc4j.util.JsonParser@getEventName(int):1164:cod >= EVT_NAMES.length |==> cod > EVT_NAMES.length
1630:ROR:>=(int,int):TRUE(int,int):org.marc4j.util.JsonParser@getEventName(int):1164:cod >= EVT_NAMES.length |==> true
1631:EVR:<PLUS>:<DEFAULT>:org.marc4j.util.JsonParser@getEventName(int):1165:"EVT_" + cod |==> null
1632:EVR:<ARRAY_ACCESS>:<DEFAULT>:org.marc4j.util.JsonParser@getEventName(int):1167:EVT_NAMES[cod] |==> null
1633:COR:isQuoted(val):TRUE:org.marc4j.util.JsonParser@stripQuotes(java.lang.String):1177:isQuoted(val) |==> false
1634:COR:isQuoted(val):FALSE:org.marc4j.util.JsonParser@stripQuotes(java.lang.String):1177:isQuoted(val) |==> true
1635:LVR:POS:0:org.marc4j.util.JsonParser@stripQuotes(java.lang.String):1178:1 |==> 0
1636:LVR:POS:NEG:org.marc4j.util.JsonParser@stripQuotes(java.lang.String):1178:1 |==> -1
1637:LVR:POS:0:org.marc4j.util.JsonParser@stripQuotes(java.lang.String):1178:1 |==> 0
1638:LVR:POS:NEG:org.marc4j.util.JsonParser@stripQuotes(java.lang.String):1178:1 |==> -1
1639:AOR:-(int,int):%(int,int):org.marc4j.util.JsonParser@stripQuotes(java.lang.String):1178:val.length() - 1 |==> val.length() % 1
1640:AOR:-(int,int):*(int,int):org.marc4j.util.JsonParser@stripQuotes(java.lang.String):1178:val.length() - 1 |==> val.length() * 1
1641:AOR:-(int,int):+(int,int):org.marc4j.util.JsonParser@stripQuotes(java.lang.String):1178:val.length() - 1 |==> val.length() + 1
1642:AOR:-(int,int):/(int,int):org.marc4j.util.JsonParser@stripQuotes(java.lang.String):1178:val.length() - 1 |==> val.length() / 1
1643:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser@stripQuotes(java.lang.String):1178:val = val.substring(1, val.length() - 1) |==> <NO-OP>
1644:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser@stripQuotes(java.lang.String):1180:val |==> null
1645:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1191:val != null |==> true
1646:LVR:POS:0:org.marc4j.util.JsonParser@isQuoted(java.lang.String):1191:1 |==> 0
1647:LVR:POS:NEG:org.marc4j.util.JsonParser@isQuoted(java.lang.String):1191:1 |==> -1
1648:ROR:>(int,int):!=(int,int):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1191:(len = val.length()) > 1 |==> (len = val.length()) != 1
1649:ROR:>(int,int):>=(int,int):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1191:(len = val.length()) > 1 |==> (len = val.length()) >= 1
1650:ROR:>(int,int):FALSE(int,int):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1191:(len = val.length()) > 1 |==> false
1651:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1191:val != null && (len = val.length()) > 1 |==> val != null == (len = val.length()) > 1
1652:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1191:val != null && (len = val.length()) > 1 |==> (len = val.length()) > 1
1653:LVR:0:POS:org.marc4j.util.JsonParser@isQuoted(java.lang.String):1192:0 |==> 1
1654:LVR:0:NEG:org.marc4j.util.JsonParser@isQuoted(java.lang.String):1192:0 |==> -1
1655:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:ch0 == '\"' |==> ch0 <= '\"'
1656:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:ch0 == '\"' |==> ch0 >= '\"'
1657:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:ch0 == '\"' |==> false
1658:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:ch0 == '\'' |==> ch0 <= '\''
1659:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:ch0 == '\'' |==> ch0 >= '\''
1660:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:ch0 == '\'' |==> false
1661:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:ch0 == '\"' || ch0 == '\'' |==> ch0 == '\"' != (ch0 == '\'')
1662:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:ch0 == '\"' || ch0 == '\'' |==> ch0 == '\"'
1663:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:ch0 == '\"' || ch0 == '\'' |==> ch0 == '\''
1664:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:ch0 == '\"' || ch0 == '\'' |==> true
1665:LVR:POS:0:org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:1 |==> 0
1666:LVR:POS:NEG:org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:1 |==> -1
1667:AOR:-(int,int):%(int,int):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:len - 1 |==> len % 1
1668:AOR:-(int,int):*(int,int):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:len - 1 |==> len * 1
1669:AOR:-(int,int):+(int,int):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:len - 1 |==> len + 1
1670:AOR:-(int,int):/(int,int):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:len - 1 |==> len / 1
1671:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:ch0 == val.charAt(len - 1) |==> ch0 <= val.charAt(len - 1)
1672:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:ch0 == val.charAt(len - 1) |==> ch0 >= val.charAt(len - 1)
1673:ROR:==(int,int):FALSE(int,int):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:ch0 == val.charAt(len - 1) |==> false
1674:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:(ch0 == '\"' || ch0 == '\'') && ch0 == val.charAt(len - 1) |==> (ch0 == '\"' || ch0 == '\'') == (ch0 == val.charAt(len - 1))
1675:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:(ch0 == '\"' || ch0 == '\'') && ch0 == val.charAt(len - 1) |==> false
1676:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:(ch0 == '\"' || ch0 == '\'') && ch0 == val.charAt(len - 1) |==> (ch0 == '\"' || ch0 == '\'')
1677:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@isQuoted(java.lang.String):1193:(ch0 == '\"' || ch0 == '\'') && ch0 == val.charAt(len - 1) |==> ch0 == val.charAt(len - 1)
1678:LVR:TRUE:FALSE:org.marc4j.util.JsonParser@isQuoted(java.lang.String):1194:true |==> false
1679:STD:<RETURN>:<NO-OP>:org.marc4j.util.JsonParser@isQuoted(java.lang.String):1194:return Config.__M_NO == 0 && Config.COVERED(1678, 1678) ? true : Config.__M_NO == 1678 ? false : true; |==> <NO-OP>
1680:LVR:FALSE:TRUE:org.marc4j.util.JsonParser@isQuoted(java.lang.String):1199:false |==> true
1681:LVR:POS:0:org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1209:10240 |==> 0
1682:LVR:POS:NEG:org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1209:10240 |==> -10240
1683:LVR:0:POS:org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1213:0 |==> 1
1684:LVR:0:NEG:org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1213:0 |==> -1
1685:ROR:>(int,int):!=(int,int):org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1213:sizest > 0 |==> sizest != 0
1686:ROR:>(int,int):>=(int,int):org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1213:sizest > 0 |==> sizest >= 0
1687:ROR:>(int,int):FALSE(int,int):org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1213:sizest > 0 |==> false
1688:LVR:POS:0:org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1213:10240 |==> 0
1689:LVR:POS:NEG:org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1213:10240 |==> -10240
1690:LVR:NEG:0:org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1214:-1 |==> 0
1691:LVR:NEG:POS:org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1214:-1 |==> 1
1692:ROR:!=(int,int):<(int,int):org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1214:(len = inprdr.read(buf)) != -1 |==> (len = inprdr.read(buf)) < -1
1693:ROR:!=(int,int):>(int,int):org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1214:(len = inprdr.read(buf)) != -1 |==> (len = inprdr.read(buf)) > -1
1694:LVR:0:POS:org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1215:0 |==> 1
1695:LVR:0:NEG:org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1215:0 |==> -1
1696:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1215:wtr.write(buf, 0, len) |==> <NO-OP>
1697:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1217:wtr.flush() |==> <NO-OP>
1698:COR:inpcls:TRUE:org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1218:inpcls |==> false
1699:COR:inpcls:FALSE:org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1218:inpcls |==> true
1700:STD:<CALL>:<NO-OP>:org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1219:wtr.close() |==> <NO-OP>
1701:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.JsonParser@preloadInput(java.lang.String,java.io.Reader,boolean,int):1221:new CharArrayReader(wtr.toCharArray()) |==> null
1702:LVR:POS:0:org.marc4j.util.JsonParser:1234:256 |==> 0
1703:LVR:POS:NEG:org.marc4j.util.JsonParser:1234:256 |==> -256
1704:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1234:decodeHex = new int[256] |==> <NO-OP>
1705:LVR:0:POS:org.marc4j.util.JsonParser:1235:0 |==> 1
1706:LVR:0:NEG:org.marc4j.util.JsonParser:1235:0 |==> -1
1707:ROR:<(int,int):!=(int,int):org.marc4j.util.JsonParser:1235:xa < decodeHex.length |==> xa != decodeHex.length
1708:ROR:<(int,int):<=(int,int):org.marc4j.util.JsonParser:1235:xa < decodeHex.length |==> xa <= decodeHex.length
1709:ROR:<(int,int):FALSE(int,int):org.marc4j.util.JsonParser:1235:xa < decodeHex.length |==> false
1710:LVR:NEG:0:org.marc4j.util.JsonParser:1236:-1 |==> 0
1711:LVR:NEG:POS:org.marc4j.util.JsonParser:1236:-1 |==> 1
1712:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1236:decodeHex[xa] = -1 |==> <NO-OP>
1713:LVR:0:POS:org.marc4j.util.JsonParser:1238:0 |==> 1
1714:LVR:0:NEG:org.marc4j.util.JsonParser:1238:0 |==> -1
1715:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1238:decodeHex['0'] = 0 |==> <NO-OP>
1716:LVR:POS:0:org.marc4j.util.JsonParser:1239:1 |==> 0
1717:LVR:POS:NEG:org.marc4j.util.JsonParser:1239:1 |==> -1
1718:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1239:decodeHex['1'] = 1 |==> <NO-OP>
1719:LVR:POS:0:org.marc4j.util.JsonParser:1240:2 |==> 0
1720:LVR:POS:NEG:org.marc4j.util.JsonParser:1240:2 |==> -2
1721:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1240:decodeHex['2'] = 2 |==> <NO-OP>
1722:LVR:POS:0:org.marc4j.util.JsonParser:1241:3 |==> 0
1723:LVR:POS:NEG:org.marc4j.util.JsonParser:1241:3 |==> -3
1724:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1241:decodeHex['3'] = 3 |==> <NO-OP>
1725:LVR:POS:0:org.marc4j.util.JsonParser:1242:4 |==> 0
1726:LVR:POS:NEG:org.marc4j.util.JsonParser:1242:4 |==> -4
1727:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1242:decodeHex['4'] = 4 |==> <NO-OP>
1728:LVR:POS:0:org.marc4j.util.JsonParser:1243:5 |==> 0
1729:LVR:POS:NEG:org.marc4j.util.JsonParser:1243:5 |==> -5
1730:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1243:decodeHex['5'] = 5 |==> <NO-OP>
1731:LVR:POS:0:org.marc4j.util.JsonParser:1244:6 |==> 0
1732:LVR:POS:NEG:org.marc4j.util.JsonParser:1244:6 |==> -6
1733:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1244:decodeHex['6'] = 6 |==> <NO-OP>
1734:LVR:POS:0:org.marc4j.util.JsonParser:1245:7 |==> 0
1735:LVR:POS:NEG:org.marc4j.util.JsonParser:1245:7 |==> -7
1736:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1245:decodeHex['7'] = 7 |==> <NO-OP>
1737:LVR:POS:0:org.marc4j.util.JsonParser:1246:8 |==> 0
1738:LVR:POS:NEG:org.marc4j.util.JsonParser:1246:8 |==> -8
1739:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1246:decodeHex['8'] = 8 |==> <NO-OP>
1740:LVR:POS:0:org.marc4j.util.JsonParser:1247:9 |==> 0
1741:LVR:POS:NEG:org.marc4j.util.JsonParser:1247:9 |==> -9
1742:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1247:decodeHex['9'] = 9 |==> <NO-OP>
1743:LVR:POS:0:org.marc4j.util.JsonParser:1248:10 |==> 0
1744:LVR:POS:NEG:org.marc4j.util.JsonParser:1248:10 |==> -10
1745:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1248:decodeHex['A'] = 10 |==> <NO-OP>
1746:LVR:POS:0:org.marc4j.util.JsonParser:1249:11 |==> 0
1747:LVR:POS:NEG:org.marc4j.util.JsonParser:1249:11 |==> -11
1748:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1249:decodeHex['B'] = 11 |==> <NO-OP>
1749:LVR:POS:0:org.marc4j.util.JsonParser:1250:12 |==> 0
1750:LVR:POS:NEG:org.marc4j.util.JsonParser:1250:12 |==> -12
1751:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1250:decodeHex['C'] = 12 |==> <NO-OP>
1752:LVR:POS:0:org.marc4j.util.JsonParser:1251:13 |==> 0
1753:LVR:POS:NEG:org.marc4j.util.JsonParser:1251:13 |==> -13
1754:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1251:decodeHex['D'] = 13 |==> <NO-OP>
1755:LVR:POS:0:org.marc4j.util.JsonParser:1252:14 |==> 0
1756:LVR:POS:NEG:org.marc4j.util.JsonParser:1252:14 |==> -14
1757:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1252:decodeHex['E'] = 14 |==> <NO-OP>
1758:LVR:POS:0:org.marc4j.util.JsonParser:1253:15 |==> 0
1759:LVR:POS:NEG:org.marc4j.util.JsonParser:1253:15 |==> -15
1760:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1253:decodeHex['F'] = 15 |==> <NO-OP>
1761:LVR:POS:0:org.marc4j.util.JsonParser:1254:10 |==> 0
1762:LVR:POS:NEG:org.marc4j.util.JsonParser:1254:10 |==> -10
1763:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1254:decodeHex['a'] = 10 |==> <NO-OP>
1764:LVR:POS:0:org.marc4j.util.JsonParser:1255:11 |==> 0
1765:LVR:POS:NEG:org.marc4j.util.JsonParser:1255:11 |==> -11
1766:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1255:decodeHex['b'] = 11 |==> <NO-OP>
1767:LVR:POS:0:org.marc4j.util.JsonParser:1256:12 |==> 0
1768:LVR:POS:NEG:org.marc4j.util.JsonParser:1256:12 |==> -12
1769:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1256:decodeHex['c'] = 12 |==> <NO-OP>
1770:LVR:POS:0:org.marc4j.util.JsonParser:1257:13 |==> 0
1771:LVR:POS:NEG:org.marc4j.util.JsonParser:1257:13 |==> -13
1772:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1257:decodeHex['d'] = 13 |==> <NO-OP>
1773:LVR:POS:0:org.marc4j.util.JsonParser:1258:14 |==> 0
1774:LVR:POS:NEG:org.marc4j.util.JsonParser:1258:14 |==> -14
1775:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1258:decodeHex['e'] = 14 |==> <NO-OP>
1776:LVR:POS:0:org.marc4j.util.JsonParser:1259:15 |==> 0
1777:LVR:POS:NEG:org.marc4j.util.JsonParser:1259:15 |==> -15
1778:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.JsonParser:1259:decodeHex['f'] = 15 |==> <NO-OP>
1779:LVR:POS:0:org.marc4j.util.JsonParser@decodeHexByte(char,char):1266:255 |==> 0
1780:LVR:POS:NEG:org.marc4j.util.JsonParser@decodeHexByte(char,char):1266:255 |==> -255
1781:ROR:>(int,int):!=(int,int):org.marc4j.util.JsonParser@decodeHexByte(char,char):1266:hex1 > 255 |==> hex1 != 255
1782:ROR:>(int,int):>=(int,int):org.marc4j.util.JsonParser@decodeHexByte(char,char):1266:hex1 > 255 |==> hex1 >= 255
1783:ROR:>(int,int):FALSE(int,int):org.marc4j.util.JsonParser@decodeHexByte(char,char):1266:hex1 > 255 |==> false
1784:LVR:NEG:0:org.marc4j.util.JsonParser@decodeHexByte(char,char):1266:-1 |==> 0
1785:LVR:NEG:POS:org.marc4j.util.JsonParser@decodeHexByte(char,char):1266:-1 |==> 1
1786:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@decodeHexByte(char,char):1266:(n1 = decodeHex[hex1]) == -1 |==> (n1 = decodeHex[hex1]) <= -1
1787:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@decodeHexByte(char,char):1266:(n1 = decodeHex[hex1]) == -1 |==> (n1 = decodeHex[hex1]) >= -1
1788:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.util.JsonParser@decodeHexByte(char,char):1266:hex1 > 255 || (n1 = decodeHex[hex1]) == -1 |==> hex1 > 255 != ((n1 = decodeHex[hex1]) == -1)
1789:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@decodeHexByte(char,char):1266:hex1 > 255 || (n1 = decodeHex[hex1]) == -1 |==> (n1 = decodeHex[hex1]) == -1
1790:LVR:POS:0:org.marc4j.util.JsonParser@decodeHexByte(char,char):1270:255 |==> 0
1791:LVR:POS:NEG:org.marc4j.util.JsonParser@decodeHexByte(char,char):1270:255 |==> -255
1792:ROR:>(int,int):!=(int,int):org.marc4j.util.JsonParser@decodeHexByte(char,char):1270:hex2 > 255 |==> hex2 != 255
1793:ROR:>(int,int):>=(int,int):org.marc4j.util.JsonParser@decodeHexByte(char,char):1270:hex2 > 255 |==> hex2 >= 255
1794:ROR:>(int,int):FALSE(int,int):org.marc4j.util.JsonParser@decodeHexByte(char,char):1270:hex2 > 255 |==> false
1795:LVR:NEG:0:org.marc4j.util.JsonParser@decodeHexByte(char,char):1270:-1 |==> 0
1796:LVR:NEG:POS:org.marc4j.util.JsonParser@decodeHexByte(char,char):1270:-1 |==> 1
1797:ROR:==(int,int):<=(int,int):org.marc4j.util.JsonParser@decodeHexByte(char,char):1270:(n2 = decodeHex[hex2]) == -1 |==> (n2 = decodeHex[hex2]) <= -1
1798:ROR:==(int,int):>=(int,int):org.marc4j.util.JsonParser@decodeHexByte(char,char):1270:(n2 = decodeHex[hex2]) == -1 |==> (n2 = decodeHex[hex2]) >= -1
1799:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.util.JsonParser@decodeHexByte(char,char):1270:hex2 > 255 || (n2 = decodeHex[hex2]) == -1 |==> hex2 > 255 != ((n2 = decodeHex[hex2]) == -1)
1800:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.JsonParser@decodeHexByte(char,char):1270:hex2 > 255 || (n2 = decodeHex[hex2]) == -1 |==> (n2 = decodeHex[hex2]) == -1
1801:LVR:POS:0:org.marc4j.util.JsonParser@decodeHexByte(char,char):1274:4 |==> 0
1802:LVR:POS:NEG:org.marc4j.util.JsonParser@decodeHexByte(char,char):1274:4 |==> -4
1803:SOR:<<(int,int):>>(int,int):org.marc4j.util.JsonParser@decodeHexByte(char,char):1274:n1 << 4 |==> n1 >> 4
1804:SOR:<<(int,int):>>>(int,int):org.marc4j.util.JsonParser@decodeHexByte(char,char):1274:n1 << 4 |==> n1 >>> 4
1805:LOR:|(int,int):&(int,int):org.marc4j.util.JsonParser@decodeHexByte(char,char):1274:n1 << 4 | n2 |==> n1 << 4 & n2
1806:LOR:|(int,int):^(int,int):org.marc4j.util.JsonParser@decodeHexByte(char,char):1274:n1 << 4 | n2 |==> n1 << 4 ^ n2
1807:LVR:POS:0:org.marc4j.util.JsonParser@decodeHexChar(char,char,char,char):1279:8 |==> 0
1808:LVR:POS:NEG:org.marc4j.util.JsonParser@decodeHexChar(char,char,char,char):1279:8 |==> -8
1809:SOR:<<(int,int):>>(int,int):org.marc4j.util.JsonParser@decodeHexChar(char,char,char,char):1279:decodeHexByte(hex1, hex2) << 8 |==> decodeHexByte(hex1, hex2) >> 8
1810:SOR:<<(int,int):>>>(int,int):org.marc4j.util.JsonParser@decodeHexChar(char,char,char,char):1279:decodeHexByte(hex1, hex2) << 8 |==> decodeHexByte(hex1, hex2) >>> 8
1811:LOR:|(int,int):&(int,int):org.marc4j.util.JsonParser@decodeHexChar(char,char,char,char):1279:decodeHexByte(hex1, hex2) << 8 | decodeHexByte(hex3, hex4) |==> decodeHexByte(hex1, hex2) << 8 & decodeHexByte(hex3, hex4)
1812:LOR:|(int,int):^(int,int):org.marc4j.util.JsonParser@decodeHexChar(char,char,char,char):1279:decodeHexByte(hex1, hex2) << 8 | decodeHexByte(hex3, hex4) |==> decodeHexByte(hex1, hex2) << 8 ^ decodeHexByte(hex3, hex4)
1813:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser$Escape@<init>(int,java.lang.String,java.lang.Throwable):1340:code |==> 0
1814:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.JsonParser$Escape@getCode():1348:code |==> 0
1815:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcJsonWriter:28:MARC_IN_JSON |==> 0
1816:LVR:FALSE:TRUE:org.marc4j.MarcJsonWriter:30:false |==> true
1817:LVR:FALSE:TRUE:org.marc4j.MarcJsonWriter:32:false |==> true
1818:LVR:TRUE:FALSE:org.marc4j.MarcJsonWriter:34:true |==> false
1819:LVR:FALSE:TRUE:org.marc4j.MarcJsonWriter:38:false |==> true
1820:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@<init>(java.io.OutputStream):46:this.os = os |==> <NO-OP>
1821:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@<init>(java.io.OutputStream,org.marc4j.converter.CharConverter):56:this.os = os |==> <NO-OP>
1822:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@<init>(java.io.OutputStream,org.marc4j.converter.CharConverter):57:setConverter(conv) |==> <NO-OP>
1823:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@<init>(java.io.OutputStream,int):67:this.os = os |==> <NO-OP>
1824:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@<init>(java.io.OutputStream,int):68:useJsonFormat = jsonFormat |==> <NO-OP>
1825:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonWriter@<init>(java.io.OutputStream,int):70:useJsonFormat == MARC_JSON |==> useJsonFormat <= MARC_JSON
1826:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonWriter@<init>(java.io.OutputStream,int):70:useJsonFormat == MARC_JSON |==> useJsonFormat >= MARC_JSON
1827:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonWriter@<init>(java.io.OutputStream,int):70:useJsonFormat == MARC_JSON |==> false
1828:LVR:FALSE:TRUE:org.marc4j.MarcJsonWriter@<init>(java.io.OutputStream,int):71:false |==> true
1829:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@<init>(java.io.OutputStream,int):71:this.setQuoteLabels(false) |==> <NO-OP>
1830:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@<init>(java.io.OutputStream,org.marc4j.converter.CharConverter,int):84:setConverter(conv) |==> <NO-OP>
1831:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@<init>(java.io.OutputStream,org.marc4j.converter.CharConverter,int):85:useJsonFormat = jsonFormat |==> <NO-OP>
1832:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonWriter@<init>(java.io.OutputStream,org.marc4j.converter.CharConverter,int):87:useJsonFormat == MARC_JSON |==> useJsonFormat <= MARC_JSON
1833:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonWriter@<init>(java.io.OutputStream,org.marc4j.converter.CharConverter,int):87:useJsonFormat == MARC_JSON |==> useJsonFormat >= MARC_JSON
1834:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonWriter@<init>(java.io.OutputStream,org.marc4j.converter.CharConverter,int):87:useJsonFormat == MARC_JSON |==> false
1835:LVR:FALSE:TRUE:org.marc4j.MarcJsonWriter@<init>(java.io.OutputStream,org.marc4j.converter.CharConverter,int):88:false |==> true
1836:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@<init>(java.io.OutputStream,org.marc4j.converter.CharConverter,int):88:this.setQuoteLabels(false) |==> <NO-OP>
1837:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):101:new StringBuffer() |==> null
1838:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):102:buf.append("{") |==> <NO-OP>
1839:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):104:indent(buf, "\n    ") |==> <NO-OP>
1840:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):106:buf.append(ql + "leader" + ql + ":\"").append(record.getLeader().toString()).append("\",") |==> <NO-OP>
1841:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):108:indent(buf, "\n    ") |==> <NO-OP>
1842:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):110:buf.append(ql + "controlfield" + ql + ":") |==> <NO-OP>
1843:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):112:indent(buf, "\n    ") |==> <NO-OP>
1844:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):114:buf.append("[") |==> <NO-OP>
1845:LVR:TRUE:FALSE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):115:true |==> false
1846:COR:firstField:TRUE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):118:firstField |==> false
1847:COR:firstField:FALSE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):118:firstField |==> true
1848:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):119:buf.append(",") |==> <NO-OP>
1849:LVR:FALSE:TRUE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):121:false |==> true
1850:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):121:firstField = false |==> <NO-OP>
1851:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):124:indent |==> false
1852:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):124:indent |==> true
1853:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):125:buf.append("\n        ") |==> <NO-OP>
1854:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):128:buf.append("{ " + ql + "tag" + ql + " : \"" + cf.getTag() + "\", " + ql + "data" + ql + " : ").append("\"" + unicodeEscape(cf.getData()) + "\" }") |==> <NO-OP>
1855:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):132:indent(buf, "\n    ") |==> <NO-OP>
1856:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):134:buf.append("]") |==> <NO-OP>
1857:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):136:indent(buf, "\n    ") |==> <NO-OP>
1858:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):138:buf.append("datafield :") |==> <NO-OP>
1859:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):140:indent(buf, "\n    ") |==> <NO-OP>
1860:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):142:buf.append("[") |==> <NO-OP>
1861:LVR:TRUE:FALSE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):143:true |==> false
1862:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):143:firstField = true |==> <NO-OP>
1863:COR:firstField:TRUE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):146:firstField |==> false
1864:COR:firstField:FALSE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):146:firstField |==> true
1865:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):147:buf.append(",") |==> <NO-OP>
1866:LVR:FALSE:TRUE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):149:false |==> true
1867:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):149:firstField = false |==> <NO-OP>
1868:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):152:indent |==> false
1869:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):152:indent |==> true
1870:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):153:buf.append("\n        ") |==> <NO-OP>
1871:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):156:buf.append("{") |==> <NO-OP>
1872:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):158:indent |==> false
1873:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):158:indent |==> true
1874:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):159:buf.append("\n            ") |==> <NO-OP>
1875:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):162:buf.append(ql + "tag" + ql + " : \"" + df.getTag() + "\", " + ql + "ind" + ql + " : \"" + df.getIndicator1() + df.getIndicator2() + "\",") |==> <NO-OP>
1876:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):165:indent |==> false
1877:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):165:indent |==> true
1878:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):166:buf.append("\n            ") |==> <NO-OP>
1879:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):169:buf.append(ql + "subfield" + ql + " :") |==> <NO-OP>
1880:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):171:indent |==> false
1881:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):171:indent |==> true
1882:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):172:buf.append("\n            ") |==> <NO-OP>
1883:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):175:buf.append("[") |==> <NO-OP>
1884:LVR:TRUE:FALSE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):176:true |==> false
1885:COR:firstSubfield:TRUE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):179:firstSubfield |==> false
1886:COR:firstSubfield:FALSE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):179:firstSubfield |==> true
1887:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):180:buf.append(",") |==> <NO-OP>
1888:LVR:FALSE:TRUE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):182:false |==> true
1889:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):182:firstSubfield = false |==> <NO-OP>
1890:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):185:indent |==> false
1891:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):185:indent |==> true
1892:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):186:buf.append("\n                ") |==> <NO-OP>
1893:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):189:buf.append("{ " + ql + "code" + ql + " : \"" + sf.getCode() + "\", " + ql + "data" + ql + " : \"" + unicodeEscape(sf.getData()) + "\" }") |==> <NO-OP>
1894:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):193:indent |==> false
1895:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):193:indent |==> true
1896:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):194:buf.append("\n            ") |==> <NO-OP>
1897:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):197:buf.append("]") |==> <NO-OP>
1898:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):199:indent |==> false
1899:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):199:indent |==> true
1900:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):200:buf.append("\n        ") |==> <NO-OP>
1901:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):203:buf.append("}") |==> <NO-OP>
1902:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):206:indent(buf, "\n    ") |==> <NO-OP>
1903:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):208:buf.append("]") |==> <NO-OP>
1904:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):210:indent(buf, "\n") |==> <NO-OP>
1905:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):212:buf.append("}\n") |==> <NO-OP>
1906:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.MarcJsonWriter@toMarcJson(org.marc4j.marc.Record):214:(buf.toString()) |==> null
1907:COR:indent:TRUE:org.marc4j.MarcJsonWriter@indent(java.lang.StringBuffer,java.lang.String):218:indent |==> false
1908:COR:indent:FALSE:org.marc4j.MarcJsonWriter@indent(java.lang.StringBuffer,java.lang.String):218:indent |==> true
1909:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@indent(java.lang.StringBuffer,java.lang.String):219:buf.append(indentStr) |==> <NO-OP>
1910:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):225:new StringBuffer() |==> null
1911:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):226:buf.append("{") |==> <NO-OP>
1912:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):228:indent(buf, "\n    ") |==> <NO-OP>
1913:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):230:buf.append(ql + "leader" + ql + ":\"").append(record.getLeader().toString()).append("\",") |==> <NO-OP>
1914:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):232:indent(buf, "\n    ") |==> <NO-OP>
1915:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):234:buf.append(ql + "fields" + ql + ":") |==> <NO-OP>
1916:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):236:indent(buf, "\n    ") |==> <NO-OP>
1917:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):238:buf.append("[") |==> <NO-OP>
1918:LVR:TRUE:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):239:true |==> false
1919:COR:firstField:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):242:firstField |==> false
1920:COR:firstField:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):242:firstField |==> true
1921:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):243:buf.append(",") |==> <NO-OP>
1922:LVR:FALSE:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):245:false |==> true
1923:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):245:firstField = false |==> <NO-OP>
1924:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):248:indent |==> false
1925:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):248:indent |==> true
1926:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):249:buf.append("\n        ") |==> <NO-OP>
1927:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):252:buf.append("{") |==> <NO-OP>
1928:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):254:indent |==> false
1929:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):254:indent |==> true
1930:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):255:buf.append("\n            ") |==> <NO-OP>
1931:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):258:buf.append(ql + cf.getTag() + ql + ":").append("\"" + unicodeEscape(cf.getData()) + "\"") |==> <NO-OP>
1932:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):260:indent |==> false
1933:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):260:indent |==> true
1934:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):261:buf.append("\n        ") |==> <NO-OP>
1935:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):264:buf.append("}") |==> <NO-OP>
1936:COR:firstField:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):268:firstField |==> false
1937:COR:firstField:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):268:firstField |==> true
1938:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):269:buf.append(",") |==> <NO-OP>
1939:LVR:FALSE:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):271:false |==> true
1940:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):271:firstField = false |==> <NO-OP>
1941:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):274:indent |==> false
1942:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):274:indent |==> true
1943:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):275:buf.append("\n        ") |==> <NO-OP>
1944:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):278:buf.append("{") |==> <NO-OP>
1945:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):280:indent |==> false
1946:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):280:indent |==> true
1947:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):281:buf.append("\n            ") |==> <NO-OP>
1948:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):284:buf.append(ql + df.getTag() + ql + ":") |==> <NO-OP>
1949:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):286:indent |==> false
1950:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):286:indent |==> true
1951:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):287:buf.append("\n                ") |==> <NO-OP>
1952:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):290:buf.append("{") |==> <NO-OP>
1953:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):292:buf.append(ql + "subfields" + ql + ":") |==> <NO-OP>
1954:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):294:indent |==> false
1955:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):294:indent |==> true
1956:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):295:buf.append("\n                ") |==> <NO-OP>
1957:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):298:buf.append("[") |==> <NO-OP>
1958:LVR:TRUE:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):299:true |==> false
1959:COR:firstSubfield:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):302:firstSubfield |==> false
1960:COR:firstSubfield:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):302:firstSubfield |==> true
1961:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):303:buf.append(",") |==> <NO-OP>
1962:LVR:FALSE:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):305:false |==> true
1963:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):305:firstSubfield = false |==> <NO-OP>
1964:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):308:indent |==> false
1965:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):308:indent |==> true
1966:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):309:buf.append("\n                    ") |==> <NO-OP>
1967:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):312:buf.append("{") |==> <NO-OP>
1968:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):314:indent |==> false
1969:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):314:indent |==> true
1970:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):315:buf.append("\n                        ") |==> <NO-OP>
1971:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):318:buf.append(ql + sf.getCode() + ql + ":\"" + unicodeEscape(sf.getData()) + "\"") |==> <NO-OP>
1972:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):320:indent |==> false
1973:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):320:indent |==> true
1974:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):321:buf.append("\n                    ") |==> <NO-OP>
1975:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):324:buf.append("}") |==> <NO-OP>
1976:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):327:indent |==> false
1977:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):327:indent |==> true
1978:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):328:buf.append("\n                ") |==> <NO-OP>
1979:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):331:buf.append("],") |==> <NO-OP>
1980:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):333:indent |==> false
1981:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):333:indent |==> true
1982:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):334:buf.append("\n                ") |==> <NO-OP>
1983:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):337:buf.append(ql + "ind1" + ql + ":\"" + df.getIndicator1() + "\",") |==> <NO-OP>
1984:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):339:indent |==> false
1985:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):339:indent |==> true
1986:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):340:buf.append("\n                ") |==> <NO-OP>
1987:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):343:buf.append(ql + "ind2" + ql + ":\"" + df.getIndicator2() + "\"") |==> <NO-OP>
1988:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):345:indent |==> false
1989:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):345:indent |==> true
1990:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):346:buf.append("\n            ") |==> <NO-OP>
1991:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):349:buf.append("}") |==> <NO-OP>
1992:COR:indent:TRUE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):351:indent |==> false
1993:COR:indent:FALSE:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):351:indent |==> true
1994:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):352:buf.append("\n        ") |==> <NO-OP>
1995:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):355:buf.append("}") |==> <NO-OP>
1996:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):358:indent(buf, "\n    ") |==> <NO-OP>
1997:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):360:buf.append("]") |==> <NO-OP>
1998:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):362:indent(buf, "\n") |==> <NO-OP>
1999:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):364:buf.append("}\n") |==> <NO-OP>
2000:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.MarcJsonWriter@toMarcInJson(org.marc4j.marc.Record):366:(buf.toString()) |==> null
2001:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):370:converter != null |==> true
2002:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):371:data = converter.convert(data) |==> <NO-OP>
2003:COR:normalize:TRUE:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):374:normalize |==> false
2004:COR:normalize:FALSE:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):374:normalize |==> true
2005:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):375:data = Normalizer.normalize(data, Normalizer.Form.NFC) |==> <NO-OP>
2006:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):378:new StringBuffer() |==> null
2007:LVR:0:POS:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):380:0 |==> 1
2008:LVR:0:NEG:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):380:0 |==> -1
2009:ROR:<(int,int):!=(int,int):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):380:i < data.length() |==> i != data.length()
2010:ROR:<(int,int):<=(int,int):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):380:i < data.length() |==> i <= data.length()
2011:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):380:i < data.length() |==> false
2012:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):381:data.charAt(i) |==> 0
2013:COR:escapeSlash:TRUE:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):384:escapeSlash |==> false
2014:COR:escapeSlash:FALSE:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):384:escapeSlash |==> true
2015:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):385:buffer.append("\\/") |==> <NO-OP>
2016:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):387:buffer.append("/") |==> <NO-OP>
2017:STD:<BREAK>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):390:break; |==> <NO-OP>
2018:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):392:buffer.append("\\\"") |==> <NO-OP>
2019:STD:<BREAK>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):393:break; |==> <NO-OP>
2020:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):395:buffer.append("\\\\") |==> <NO-OP>
2021:STD:<BREAK>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):396:break; |==> <NO-OP>
2022:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):398:buffer.append("\\b") |==> <NO-OP>
2023:STD:<BREAK>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):399:break; |==> <NO-OP>
2024:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):401:buffer.append("\\f") |==> <NO-OP>
2025:STD:<BREAK>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):402:break; |==> <NO-OP>
2026:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):404:buffer.append("\\n") |==> <NO-OP>
2027:STD:<BREAK>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):405:break; |==> <NO-OP>
2028:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):407:buffer.append("\\r") |==> <NO-OP>
2029:STD:<BREAK>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):408:break; |==> <NO-OP>
2030:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):410:buffer.append("\\t") |==> <NO-OP>
2031:STD:<BREAK>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):411:break; |==> <NO-OP>
2032:LVR:POS:0:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):413:255 |==> 0
2033:LVR:POS:NEG:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):413:255 |==> -255
2034:ROR:>(int,int):!=(int,int):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):413:c > 255 |==> c != 255
2035:ROR:>(int,int):>=(int,int):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):413:c > 255 |==> c >= 255
2036:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):413:c > 255 |==> false
2037:LVR:POS:0:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):413:31 |==> 0
2038:LVR:POS:NEG:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):413:31 |==> -31
2039:ROR:<(int,int):!=(int,int):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):413:c < 31 |==> c != 31
2040:ROR:<(int,int):<=(int,int):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):413:c < 31 |==> c <= 31
2041:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):413:c < 31 |==> false
2042:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):413:c > 255 || c < 31 |==> c > 255 != c < 31
2043:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):413:c > 255 || c < 31 |==> c > 255
2044:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):413:c > 255 || c < 31 |==> c < 31
2045:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):413:c > 255 || c < 31 |==> true
2046:EVR:<PLUS>:<DEFAULT>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):414:"0000" + Integer.toHexString(c) |==> null
2047:LVR:POS:0:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):415:4 |==> 0
2048:LVR:POS:NEG:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):415:4 |==> -4
2049:AOR:-(int,int):%(int,int):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):415:val.length() - 4 |==> val.length() % 4
2050:AOR:-(int,int):*(int,int):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):415:val.length() - 4 |==> val.length() * 4
2051:AOR:-(int,int):+(int,int):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):415:val.length() - 4 |==> val.length() + 4
2052:AOR:-(int,int):/(int,int):org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):415:val.length() - 4 |==> val.length() / 4
2053:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):415:buffer.append("\\u" + val.substring(val.length() - 4, val.length())) |==> <NO-OP>
2054:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):417:buffer.append(c) |==> <NO-OP>
2055:STD:<BREAK>:<NO-OP>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):420:break; |==> <NO-OP>
2056:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.MarcJsonWriter@unicodeEscape(java.lang.String):424:(buffer.toString()) |==> null
2057:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcJsonWriter@getConverter():434:converter |==> null
2058:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@setConverter(org.marc4j.converter.CharConverter):444:this.converter = converter |==> <NO-OP>
2059:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcJsonWriter@hasIndent():453:indent |==> false
2060:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@setIndent(boolean):462:this.indent = indent |==> <NO-OP>
2061:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonWriter@write(org.marc4j.marc.Record):472:useJsonFormat == MARC_IN_JSON |==> useJsonFormat <= MARC_IN_JSON
2062:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonWriter@write(org.marc4j.marc.Record):472:useJsonFormat == MARC_IN_JSON |==> useJsonFormat >= MARC_IN_JSON
2063:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonWriter@write(org.marc4j.marc.Record):472:useJsonFormat == MARC_IN_JSON |==> false
2064:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@write(org.marc4j.marc.Record):473:recordAsJson = toMarcInJson(record) |==> <NO-OP>
2065:ROR:==(int,int):<=(int,int):org.marc4j.MarcJsonWriter@write(org.marc4j.marc.Record):474:useJsonFormat == MARC_JSON |==> useJsonFormat <= MARC_JSON
2066:ROR:==(int,int):>=(int,int):org.marc4j.MarcJsonWriter@write(org.marc4j.marc.Record):474:useJsonFormat == MARC_JSON |==> useJsonFormat >= MARC_JSON
2067:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcJsonWriter@write(org.marc4j.marc.Record):474:useJsonFormat == MARC_JSON |==> false
2068:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@write(org.marc4j.marc.Record):475:recordAsJson = toMarcJson(record) |==> <NO-OP>
2069:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@write(org.marc4j.marc.Record):479:os.write(recordAsJson.getBytes("UTF-8")) |==> <NO-OP>
2070:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@write(org.marc4j.marc.Record):480:os.flush() |==> <NO-OP>
2071:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@write(org.marc4j.marc.Record):483:e.printStackTrace() |==> <NO-OP>
2072:STD:<CALL>:<NO-OP>:org.marc4j.MarcJsonWriter@write(org.marc4j.marc.Record):486:e.printStackTrace() |==> <NO-OP>
2073:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcJsonWriter@isEscapeSlash():496:escapeSlash |==> false
2074:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@setEscapeSlash(boolean):505:this.escapeSlash = escapeSlash |==> <NO-OP>
2075:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcJsonWriter@isQuoteLabels():514:quoteLabels |==> false
2076:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@setQuoteLabels(boolean):523:this.quoteLabels = quoteLabels |==> <NO-OP>
2077:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@setQuoteLabels(boolean):524:ql = (quoteLabels) ? "\"" : "" |==> <NO-OP>
2078:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcJsonWriter@isIndent():533:indent |==> false
2079:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcJsonWriter@setUnicodeNormalization(boolean):542:this.normalize = b |==> <NO-OP>
2080:EVR:<NEW_ARRAY>:<DEFAULT>:org.marc4j.converter.CharConverter@convert(byte[]):51:new char[dataElement.length] |==> null
2081:LVR:0:POS:org.marc4j.converter.CharConverter@convert(byte[]):52:0 |==> 1
2082:LVR:0:NEG:org.marc4j.converter.CharConverter@convert(byte[]):52:0 |==> -1
2083:ROR:<(int,int):!=(int,int):org.marc4j.converter.CharConverter@convert(byte[]):52:i < dataElement.length |==> i != dataElement.length
2084:ROR:<(int,int):<=(int,int):org.marc4j.converter.CharConverter@convert(byte[]):52:i < dataElement.length |==> i <= dataElement.length
2085:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.CharConverter@convert(byte[]):52:i < dataElement.length |==> false
2086:EVR:<ARRAY_ACCESS>:<DEFAULT>:org.marc4j.converter.CharConverter@convert(byte[]):53:dataElement[i] |==> 0
2087:LVR:0:POS:org.marc4j.converter.CharConverter@convert(byte[]):54:0 |==> 1
2088:LVR:0:NEG:org.marc4j.converter.CharConverter@convert(byte[]):54:0 |==> -1
2089:ROR:>=(int,int):==(int,int):org.marc4j.converter.CharConverter@convert(byte[]):54:b >= 0 |==> b == 0
2090:ROR:>=(int,int):>(int,int):org.marc4j.converter.CharConverter@convert(byte[]):54:b >= 0 |==> b > 0
2091:ROR:>=(int,int):TRUE(int,int):org.marc4j.converter.CharConverter@convert(byte[]):54:b >= 0 |==> true
2092:LVR:POS:0:org.marc4j.converter.CharConverter@convert(byte[]):54:256 |==> 0
2093:LVR:POS:NEG:org.marc4j.converter.CharConverter@convert(byte[]):54:256 |==> -256
2094:AOR:+(int,int):%(int,int):org.marc4j.converter.CharConverter@convert(byte[]):54:256 + b |==> 256 % b
2095:AOR:+(int,int):*(int,int):org.marc4j.converter.CharConverter@convert(byte[]):54:256 + b |==> 256 * b
2096:AOR:+(int,int):-(int,int):org.marc4j.converter.CharConverter@convert(byte[]):54:256 + b |==> 256 - b
2097:AOR:+(int,int):/(int,int):org.marc4j.converter.CharConverter@convert(byte[]):54:256 + b |==> 256 / b
2098:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.CharConverter@convert(byte[]):54:cData[i] = (char)(b >= 0 ? b : 256 + b) |==> <NO-OP>
2099:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.CharConverter@convert(byte[]):56:convert(cData) |==> null
2100:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.CharConverter@convert(java.lang.String):69:data = dataElement.toCharArray() |==> <NO-OP>
2101:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.CharConverter@convert(java.lang.String):70:convert(data) |==> null
2102:LVR:FALSE:TRUE:org.marc4j.converter.CharConverter@outputsUnicode():81:false |==> true
2103:LVR:0:POS:org.marc4j.MarcMultiplexReader:19:0 |==> 1
2104:LVR:0:NEG:org.marc4j.MarcMultiplexReader:19:0 |==> -1
2105:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcMultiplexReader@<init>(java.util.Collection<org.marc4j.MarcReader>,java.util.Collection<java.lang.String>):25:marcReaders |==> null
2106:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcMultiplexReader@<init>(java.util.Collection<org.marc4j.MarcReader>,java.util.Collection<java.lang.String>):26:readerNames |==> null
2107:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcMultiplexReader@<init>(java.util.Collection<org.marc4j.MarcReader>,java.util.Collection<java.lang.String>):27:readers.iterator() |==> null
2108:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcMultiplexReader@<init>(java.util.Collection<org.marc4j.MarcReader>,java.util.Collection<java.lang.String>):28:this.readerNames.iterator() |==> null
2109:LVR:FALSE:TRUE:org.marc4j.MarcMultiplexReader@hasNext():33:false |==> true
2110:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcMultiplexReader@hasNext():34:curReader == null |==> false
2111:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcMultiplexReader@hasNext():34:curReader == null || !(hasNext = curReader.hasNext()) |==> curReader == null != !(hasNext = curReader.hasNext())
2112:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcMultiplexReader@hasNext():34:curReader == null || !(hasNext = curReader.hasNext()) |==> curReader == null
2113:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcMultiplexReader@hasNext():34:curReader == null || !(hasNext = curReader.hasNext()) |==> !(hasNext = curReader.hasNext())
2114:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcMultiplexReader@hasNext():34:curReader == null || !(hasNext = curReader.hasNext()) |==> true
2115:COR:readerIterator.hasNext():TRUE:org.marc4j.MarcMultiplexReader@hasNext():35:readerIterator.hasNext() |==> false
2116:COR:readerIterator.hasNext():FALSE:org.marc4j.MarcMultiplexReader@hasNext():35:readerIterator.hasNext() |==> true
2117:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcMultiplexReader@hasNext():39:curReader = readerIterator.next() |==> <NO-OP>
2118:STD:<INC>:<NO-OP>:org.marc4j.MarcMultiplexReader@hasNext():40:readerCnt++ |==> <NO-OP>
2119:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcMultiplexReader@hasNext():42:curReader = null |==> <NO-OP>
2120:LVR:FALSE:TRUE:org.marc4j.MarcMultiplexReader@hasNext():43:false |==> true
2121:STD:<RETURN>:<NO-OP>:org.marc4j.MarcMultiplexReader@hasNext():43:return Config.__M_NO == 0 && Config.COVERED(2120, 2120) ? false : Config.__M_NO == 2120 ? true : false; |==> <NO-OP>
2122:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcMultiplexReader@hasNext():46:hasNext |==> false
2123:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcMultiplexReader@next():51:curReader.next() |==> null
2124:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader:126:false |==> true
2125:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader:128:false |==> true
2126:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader:130:true |==> false
2127:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader:132:200000 |==> 0
2128:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader:132:200000 |==> -200000
2129:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,boolean,boolean):166:this.permissive = permissive |==> <NO-OP>
2130:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,boolean,boolean):167:this.input = new DataInputStream(new BufferedInputStream(input)) |==> <NO-OP>
2131:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,boolean,boolean):168:MarcFactory.newInstance() |==> null
2132:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,boolean,boolean):169:this.convertToUTF8 = convertToUTF8 |==> <NO-OP>
2133:COR:permissive:TRUE:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,boolean,boolean):171:permissive |==> false
2134:COR:permissive:FALSE:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,boolean,boolean):171:permissive |==> true
2135:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,boolean,boolean):173:defaultEncoding = "BESTGUESS" |==> <NO-OP>
2136:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,org.marc4j.ErrorHandler,boolean):197:errors != null |==> true
2137:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,org.marc4j.ErrorHandler,boolean):198:true |==> false
2138:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,org.marc4j.ErrorHandler,boolean):198:permissive = true |==> <NO-OP>
2139:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,org.marc4j.ErrorHandler,boolean):199:defaultEncoding = "BESTGUESS" |==> <NO-OP>
2140:COR:input.markSupported():TRUE:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,org.marc4j.ErrorHandler,boolean):201:input.markSupported() |==> false
2141:COR:input.markSupported():FALSE:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,org.marc4j.ErrorHandler,boolean):201:input.markSupported() |==> true
2142:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,org.marc4j.ErrorHandler,boolean):201:this.input = new DataInputStream(input.markSupported() ? input : new BufferedInputStream(input)) |==> <NO-OP>
2143:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,org.marc4j.ErrorHandler,boolean):203:MarcFactory.newInstance() |==> null
2144:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,org.marc4j.ErrorHandler,boolean):204:this.convertToUTF8 = convertToUTF8 |==> <NO-OP>
2145:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,org.marc4j.ErrorHandler,boolean):205:errors |==> null
2146:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,boolean,boolean,java.lang.String):229:this.permissive = permissive |==> <NO-OP>
2147:COR:input.markSupported():TRUE:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,boolean,boolean,java.lang.String):230:input.markSupported() |==> false
2148:COR:input.markSupported():FALSE:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,boolean,boolean,java.lang.String):230:input.markSupported() |==> true
2149:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,boolean,boolean,java.lang.String):230:this.input = new DataInputStream(input.markSupported() ? input : new BufferedInputStream(input)) |==> <NO-OP>
2150:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,boolean,boolean,java.lang.String):232:MarcFactory.newInstance() |==> null
2151:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,boolean,boolean,java.lang.String):233:this.convertToUTF8 = convertToUTF8 |==> <NO-OP>
2152:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,boolean,boolean,java.lang.String):234:this.defaultEncoding = defaultEncoding |==> <NO-OP>
2153:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,org.marc4j.ErrorHandler,boolean,java.lang.String):267:true |==> false
2154:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,org.marc4j.ErrorHandler,boolean,java.lang.String):267:this.permissive = true |==> <NO-OP>
2155:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,org.marc4j.ErrorHandler,boolean,java.lang.String):268:this.input = new DataInputStream(new BufferedInputStream(input)) |==> <NO-OP>
2156:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,org.marc4j.ErrorHandler,boolean,java.lang.String):269:MarcFactory.newInstance() |==> null
2157:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,org.marc4j.ErrorHandler,boolean,java.lang.String):270:this.convertToUTF8 = convertToUTF8 |==> <NO-OP>
2158:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,org.marc4j.ErrorHandler,boolean,java.lang.String):271:this.defaultEncoding = defaultEncoding |==> <NO-OP>
2159:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@<init>(java.io.InputStream,org.marc4j.ErrorHandler,boolean,java.lang.String):272:errors |==> null
2160:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@isTranslateLosslessUnicodeNumericCodeReferencesEnabled():280:translateLosslessUnicodeNumericCodeReferencesEnabled |==> false
2161:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@setTranslateLosslessUnicodeNumericCodeReferencesEnabled(boolean):290:this.translateLosslessUnicodeNumericCodeReferencesEnabled = translateLosslessUnicodeNumericCodeReferencesEnabled |==> <NO-OP>
2162:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@hasNext():299:10 |==> 0
2163:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@hasNext():299:10 |==> -10
2164:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@hasNext():299:input.mark(10) |==> <NO-OP>
2165:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@hasNext():300:input.read() |==> 0
2166:LVR:NEG:0:org.marc4j.MarcPermissiveStreamReader@hasNext():301:-1 |==> 0
2167:LVR:NEG:POS:org.marc4j.MarcPermissiveStreamReader@hasNext():301:-1 |==> 1
2168:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@hasNext():301:byteread == -1 |==> byteread <= -1
2169:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@hasNext():301:byteread == -1 |==> byteread >= -1
2170:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@hasNext():301:byteread == -1 |==> false
2171:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@hasNext():302:false |==> true
2172:STD:<RETURN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@hasNext():302:return Config.__M_NO == 0 && Config.COVERED(2171, 2171) ? false : Config.__M_NO == 2171 ? true : false; |==> <NO-OP>
2173:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@hasNext():305:0 |==> 1
2174:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@hasNext():305:0 |==> -1
2175:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@hasNext():306:byteread < '0' |==> byteread != '0'
2176:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@hasNext():306:byteread < '0' |==> byteread <= '0'
2177:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@hasNext():306:byteread < '0' |==> false
2178:ROR:>(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@hasNext():306:byteread > '9' |==> byteread != '9'
2179:ROR:>(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@hasNext():306:byteread > '9' |==> byteread >= '9'
2180:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@hasNext():306:byteread > '9' |==> false
2181:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@hasNext():306:byteread < '0' || byteread > '9' |==> byteread < '0' != byteread > '9'
2182:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@hasNext():306:byteread < '0' || byteread > '9' |==> byteread < '0'
2183:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@hasNext():306:byteread < '0' || byteread > '9' |==> byteread > '9'
2184:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@hasNext():306:byteread < '0' || byteread > '9' |==> true
2185:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@hasNext():307:byteread = input.read() |==> <NO-OP>
2186:STD:<INC>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@hasNext():308:numBadBytes++ |==> <NO-OP>
2187:LVR:NEG:0:org.marc4j.MarcPermissiveStreamReader@hasNext():309:-1 |==> 0
2188:LVR:NEG:POS:org.marc4j.MarcPermissiveStreamReader@hasNext():309:-1 |==> 1
2189:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@hasNext():309:byteread == -1 |==> byteread <= -1
2190:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@hasNext():309:byteread == -1 |==> byteread >= -1
2191:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@hasNext():309:byteread == -1 |==> false
2192:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@hasNext():310:false |==> true
2193:STD:<RETURN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@hasNext():310:return Config.__M_NO == 0 && Config.COVERED(2192, 2192) ? false : Config.__M_NO == 2192 ? true : false; |==> <NO-OP>
2194:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@hasNext():313:input.reset() |==> <NO-OP>
2195:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@hasNext():314:0 |==> 1
2196:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@hasNext():314:0 |==> -1
2197:ROR:>(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@hasNext():314:numBadBytes > 0 |==> numBadBytes != 0
2198:ROR:>(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@hasNext():314:numBadBytes > 0 |==> numBadBytes >= 0
2199:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@hasNext():314:numBadBytes > 0 |==> false
2200:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@hasNext():315:byteread = input.read() |==> <NO-OP>
2201:STD:<DEC>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@hasNext():316:numBadBytes-- |==> <NO-OP>
2202:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@hasNext():321:true |==> false
2203:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@next():332:record = factory.newRecord() |==> <NO-OP>
2204:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcPermissiveStreamReader@next():333:errors != null |==> true
2205:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@next():334:errors.reset() |==> <NO-OP>
2206:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@next():338:24 |==> 0
2207:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@next():338:24 |==> -24
2208:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@next():340:input.readFully(byteArray) |==> <NO-OP>
2209:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@next():341:parseRecordLength(byteArray) |==> 0
2210:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@next():342:24 |==> 0
2211:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@next():342:24 |==> -24
2212:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@next():342:recordLength - 24 |==> recordLength % 24
2213:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@next():342:recordLength - 24 |==> recordLength * 24
2214:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@next():342:recordLength - 24 |==> recordLength + 24
2215:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@next():342:recordLength - 24 |==> recordLength / 24
2216:COR:permissive:TRUE:org.marc4j.MarcPermissiveStreamReader@next():343:permissive |==> false
2217:COR:permissive:FALSE:org.marc4j.MarcPermissiveStreamReader@next():343:permissive |==> true
2218:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@next():344:input.mark(marc_file_lookahead_buffer) |==> <NO-OP>
2219:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@next():345:input.readFully(recordBuf) |==> <NO-OP>
2220:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@next():346:1 |==> 0
2221:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@next():346:1 |==> -1
2222:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@next():346:recordBuf.length - 1 |==> recordBuf.length % 1
2223:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@next():346:recordBuf.length - 1 |==> recordBuf.length * 1
2224:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@next():346:recordBuf.length - 1 |==> recordBuf.length + 1
2225:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@next():346:recordBuf.length - 1 |==> recordBuf.length / 1
2226:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@next():346:recordBuf[recordBuf.length - 1] != Constants.RT |==> recordBuf[recordBuf.length - 1] < Constants.RT
2227:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@next():346:recordBuf[recordBuf.length - 1] != Constants.RT |==> recordBuf[recordBuf.length - 1] > Constants.RT
2228:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@next():346:recordBuf[recordBuf.length - 1] != Constants.RT |==> true
2229:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@next():347:record.addError("n/a", "n/a", MarcError.MAJOR_ERROR, "Record terminator character not found at end of record length") |==> <NO-OP>
2230:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@next():349:recordBuf = rereadPermissively(record, input, recordBuf, recordLength) |==> <NO-OP>
2231:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@next():350:24 |==> 0
2232:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@next():350:24 |==> -24
2233:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@next():350:recordBuf.length + 24 |==> recordBuf.length % 24
2234:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@next():350:recordBuf.length + 24 |==> recordBuf.length * 24
2235:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@next():350:recordBuf.length + 24 |==> recordBuf.length - 24
2236:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@next():350:recordBuf.length + 24 |==> recordBuf.length / 24
2237:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@next():350:recordLength = recordBuf.length + 24 |==> <NO-OP>
2238:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@next():353:input.readFully(recordBuf) |==> <NO-OP>
2239:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@next():356:parseRecord(record, byteArray, recordBuf, recordLength) |==> <NO-OP>
2240:COR:this.convertToUTF8:TRUE:org.marc4j.MarcPermissiveStreamReader@next():358:this.convertToUTF8 |==> false
2241:COR:this.convertToUTF8:FALSE:org.marc4j.MarcPermissiveStreamReader@next():358:this.convertToUTF8 |==> true
2242:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@next():359:record.getLeader() |==> null
2243:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@next():360:l.setCharCodingScheme('a') |==> <NO-OP>
2244:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@next():361:record.setLeader(l) |==> <NO-OP>
2245:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcPermissiveStreamReader@next():363:errors != null |==> true
2246:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@next():363:errors != null && record.hasErrors() |==> errors != null == record.hasErrors()
2247:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@next():363:errors != null && record.hasErrors() |==> false
2248:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@next():363:errors != null && record.hasErrors() |==> errors != null
2249:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@next():363:errors != null && record.hasErrors() |==> record.hasErrors()
2250:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@next():364:errors.addErrors(record.getControlNumber(), record.getErrors()) |==> <NO-OP>
2251:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@next():366:record |==> null
2252:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):376:arrayContainsAt(recordBuf, Constants.RT) |==> 0
2253:LVR:NEG:0:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):377:-1 |==> 0
2254:LVR:NEG:POS:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):377:-1 |==> 1
2255:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):377:loc != -1 |==> loc < -1
2256:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):377:loc != -1 |==> loc > -1
2257:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):377:loc != -1 |==> true
2258:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):379:record.addError("n/a", "n/a", MarcError.MAJOR_ERROR, "Record terminator appears before stated record length, using shorter record") |==> <NO-OP>
2259:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):381:24 |==> 0
2260:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):381:24 |==> -24
2261:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):381:loc + 24 |==> loc % 24
2262:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):381:loc + 24 |==> loc * 24
2263:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):381:loc + 24 |==> loc - 24
2264:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):381:loc + 24 |==> loc / 24
2265:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):381:recordLength = loc + 24 |==> <NO-OP>
2266:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):382:input.reset() |==> <NO-OP>
2267:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):383:24 |==> 0
2268:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):383:24 |==> -24
2269:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):383:recordLength - 24 |==> recordLength % 24
2270:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):383:recordLength - 24 |==> recordLength * 24
2271:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):383:recordLength - 24 |==> recordLength + 24
2272:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):383:recordLength - 24 |==> recordLength / 24
2273:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):383:recordBuf = new byte[recordLength - 24] |==> <NO-OP>
2274:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):384:input.readFully(recordBuf) |==> <NO-OP>
2275:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):387:24 |==> 0
2276:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):387:24 |==> -24
2277:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):387:recordLength - 24 |==> recordLength % 24
2278:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):387:recordLength - 24 |==> recordLength * 24
2279:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):387:recordLength - 24 |==> recordLength + 24
2280:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):387:recordLength - 24 |==> recordLength / 24
2281:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):387:loc = recordLength - 24 |==> <NO-OP>
2282:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):389:false |==> true
2283:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):392:0 |==> 1
2284:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):392:0 |==> -1
2285:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):394:c = input.read() |==> <NO-OP>
2286:STD:<INC>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):395:loc++ |==> <NO-OP>
2287:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:24 |==> 0
2288:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:24 |==> -24
2289:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:marc_file_lookahead_buffer - 24 |==> marc_file_lookahead_buffer % 24
2290:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:marc_file_lookahead_buffer - 24 |==> marc_file_lookahead_buffer * 24
2291:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:marc_file_lookahead_buffer - 24 |==> marc_file_lookahead_buffer + 24
2292:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:marc_file_lookahead_buffer - 24 |==> marc_file_lookahead_buffer / 24
2293:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:loc < marc_file_lookahead_buffer - 24 |==> loc != marc_file_lookahead_buffer - 24
2294:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:loc < marc_file_lookahead_buffer - 24 |==> loc <= marc_file_lookahead_buffer - 24
2295:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:loc < marc_file_lookahead_buffer - 24 |==> false
2296:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:c != Constants.RT |==> c < Constants.RT
2297:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:c != Constants.RT |==> c > Constants.RT
2298:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:c != Constants.RT |==> true
2299:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:loc < marc_file_lookahead_buffer - 24 && c != Constants.RT |==> loc < marc_file_lookahead_buffer - 24 == (c != Constants.RT)
2300:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:loc < marc_file_lookahead_buffer - 24 && c != Constants.RT |==> false
2301:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:loc < marc_file_lookahead_buffer - 24 && c != Constants.RT |==> loc < marc_file_lookahead_buffer - 24
2302:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:loc < marc_file_lookahead_buffer - 24 && c != Constants.RT |==> c != Constants.RT
2303:LVR:NEG:0:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:-1 |==> 0
2304:LVR:NEG:POS:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:-1 |==> 1
2305:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:c != -1 |==> c < -1
2306:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:c != -1 |==> c > -1
2307:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:c != -1 |==> true
2308:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:loc < marc_file_lookahead_buffer - 24 && c != Constants.RT && c != -1 |==> (loc < marc_file_lookahead_buffer - 24 && c != Constants.RT) == (c != -1)
2309:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:loc < marc_file_lookahead_buffer - 24 && c != Constants.RT && c != -1 |==> false
2310:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:loc < marc_file_lookahead_buffer - 24 && c != Constants.RT && c != -1 |==> loc < marc_file_lookahead_buffer - 24 && c != Constants.RT
2311:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):396:loc < marc_file_lookahead_buffer - 24 && c != Constants.RT && c != -1 |==> c != -1
2312:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):398:c == Constants.RT |==> c <= Constants.RT
2313:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):398:c == Constants.RT |==> c >= Constants.RT
2314:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):398:c == Constants.RT |==> false
2315:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):399:record.addError("n/a", "n/a", MarcError.MAJOR_ERROR, "Record terminator appears after stated record length, reading extra bytes") |==> <NO-OP>
2316:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):401:24 |==> 0
2317:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):401:24 |==> -24
2318:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):401:loc + 24 |==> loc % 24
2319:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):401:loc + 24 |==> loc * 24
2320:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):401:loc + 24 |==> loc - 24
2321:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):401:loc + 24 |==> loc / 24
2322:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):401:recordLength = loc + 24 |==> <NO-OP>
2323:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):402:input.reset() |==> <NO-OP>
2324:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):403:24 |==> 0
2325:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):403:24 |==> -24
2326:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):403:recordLength - 24 |==> recordLength % 24
2327:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):403:recordLength - 24 |==> recordLength * 24
2328:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):403:recordLength - 24 |==> recordLength + 24
2329:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):403:recordLength - 24 |==> recordLength / 24
2330:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):403:recordBuf = new byte[recordLength - 24] |==> <NO-OP>
2331:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):404:input.readFully(recordBuf) |==> <NO-OP>
2332:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):405:true |==> false
2333:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):405:done = true |==> <NO-OP>
2334:LVR:NEG:0:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):406:-1 |==> 0
2335:LVR:NEG:POS:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):406:-1 |==> 1
2336:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):406:c == -1 |==> c <= -1
2337:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):406:c == -1 |==> c >= -1
2338:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):406:c == -1 |==> false
2339:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):407:record.addError("n/a", "n/a", MarcError.MAJOR_ERROR, "No Record terminator found, end of file reached, Terminator appended") |==> <NO-OP>
2340:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):409:24 |==> 0
2341:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):409:24 |==> -24
2342:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):409:loc + 24 |==> loc % 24
2343:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):409:loc + 24 |==> loc * 24
2344:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):409:loc + 24 |==> loc - 24
2345:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):409:loc + 24 |==> loc / 24
2346:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):409:recordLength = loc + 24 |==> <NO-OP>
2347:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):410:input.reset() |==> <NO-OP>
2348:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):411:24 |==> 0
2349:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):411:24 |==> -24
2350:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):411:recordLength - 24 |==> recordLength % 24
2351:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):411:recordLength - 24 |==> recordLength * 24
2352:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):411:recordLength - 24 |==> recordLength + 24
2353:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):411:recordLength - 24 |==> recordLength / 24
2354:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):411:1 |==> 0
2355:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):411:1 |==> -1
2356:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):411:recordLength - 24 + 1 |==> (recordLength - 24) % 1
2357:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):411:recordLength - 24 + 1 |==> (recordLength - 24) * 1
2358:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):411:recordLength - 24 + 1 |==> recordLength - 24 - 1
2359:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):411:recordLength - 24 + 1 |==> (recordLength - 24) / 1
2360:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):411:recordBuf = new byte[recordLength - 24 + 1] |==> <NO-OP>
2361:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):412:input.readFully(recordBuf) |==> <NO-OP>
2362:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):413:1 |==> 0
2363:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):413:1 |==> -1
2364:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):413:recordBuf.length - 1 |==> recordBuf.length % 1
2365:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):413:recordBuf.length - 1 |==> recordBuf.length * 1
2366:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):413:recordBuf.length - 1 |==> recordBuf.length + 1
2367:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):413:recordBuf.length - 1 |==> recordBuf.length / 1
2368:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):413:recordBuf[recordBuf.length - 1] = Constants.RT |==> <NO-OP>
2369:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):414:true |==> false
2370:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):414:done = true |==> <NO-OP>
2371:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):416:record.addError("n/a", "n/a", MarcError.FATAL, "No Record terminator found within " + marc_file_lookahead_buffer + " bytes of start of record, getting desperate.") |==> <NO-OP>
2372:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):418:input.reset() |==> <NO-OP>
2373:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):419:2 |==> 0
2374:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):419:2 |==> -2
2375:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):419:marc_file_lookahead_buffer *= 2 |==> <NO-OP>
2376:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):420:input.mark(marc_file_lookahead_buffer) |==> <NO-OP>
2377:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):421:0 |==> 1
2378:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):421:0 |==> -1
2379:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):421:loc = 0 |==> <NO-OP>
2380:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@rereadPermissively(org.marc4j.marc.Record,java.io.DataInputStream,byte[],int):426:recordBuf |==> null
2381:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):433:0 |==> 1
2382:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):433:0 |==> -1
2383:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):435:factory.newLeader() |==> null
2384:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):436:ldr.setRecordLength(recordLength) |==> <NO-OP>
2385:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):442:conversionCheck1 = "" |==> <NO-OP>
2386:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):443:conversionCheck2 = "" |==> <NO-OP>
2387:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):444:conversionCheck3 = "" |==> <NO-OP>
2388:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):447:parseLeader(ldr, byteArray) |==> <NO-OP>
2389:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):448:24 |==> 0
2390:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):448:24 |==> -24
2391:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):448:1 |==> 0
2392:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):448:1 |==> -1
2393:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):448:24 + 1 |==> 24 % 1
2394:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):448:24 + 1 |==> 24 * 1
2395:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):448:24 + 1 |==> 24 - 1
2396:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):448:24 + 1 |==> 24 / 1
2397:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):448:ldr.getBaseAddressOfData() - (24 + 1) |==> ldr.getBaseAddressOfData() % (24 + 1)
2398:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):448:ldr.getBaseAddressOfData() - (24 + 1) |==> ldr.getBaseAddressOfData() * (24 + 1)
2399:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):448:ldr.getBaseAddressOfData() - (24 + 1) |==> ldr.getBaseAddressOfData() + (24 + 1)
2400:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):448:ldr.getBaseAddressOfData() - (24 + 1) |==> ldr.getBaseAddressOfData() / (24 + 1)
2401:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):448:directoryLength = ldr.getBaseAddressOfData() - (24 + 1) |==> <NO-OP>
2402:COR:permissive:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):452:permissive |==> false
2403:COR:permissive:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):452:permissive |==> true
2404:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:1 |==> 0
2405:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:1 |==> -1
2406:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf.length - 1 |==> recordBuf.length % 1
2407:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf.length - 1 |==> recordBuf.length * 1
2408:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf.length - 1 |==> recordBuf.length + 1
2409:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf.length - 1 |==> recordBuf.length / 1
2410:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf[recordBuf.length - 1] == Constants.RT |==> recordBuf[recordBuf.length - 1] <= Constants.RT
2411:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf[recordBuf.length - 1] == Constants.RT |==> recordBuf[recordBuf.length - 1] >= Constants.RT
2412:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf[recordBuf.length - 1] == Constants.RT |==> false
2413:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:2 |==> 0
2414:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:2 |==> -2
2415:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf.length - 2 |==> recordBuf.length % 2
2416:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf.length - 2 |==> recordBuf.length * 2
2417:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf.length - 2 |==> recordBuf.length + 2
2418:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf.length - 2 |==> recordBuf.length / 2
2419:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf[recordBuf.length - 2] == Constants.FT |==> recordBuf[recordBuf.length - 2] <= Constants.FT
2420:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf[recordBuf.length - 2] == Constants.FT |==> recordBuf[recordBuf.length - 2] >= Constants.FT
2421:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf[recordBuf.length - 2] == Constants.FT |==> false
2422:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf[recordBuf.length - 1] == Constants.RT && recordBuf[recordBuf.length - 2] == Constants.FT |==> recordBuf[recordBuf.length - 1] == Constants.RT == (recordBuf[recordBuf.length - 2] == Constants.FT)
2423:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf[recordBuf.length - 1] == Constants.RT && recordBuf[recordBuf.length - 2] == Constants.FT |==> false
2424:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf[recordBuf.length - 1] == Constants.RT && recordBuf[recordBuf.length - 2] == Constants.FT |==> recordBuf[recordBuf.length - 1] == Constants.RT
2425:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):453:recordBuf[recordBuf.length - 1] == Constants.RT && recordBuf[recordBuf.length - 2] == Constants.FT |==> recordBuf[recordBuf.length - 2] == Constants.FT
2426:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):454:record.addError("n/a", "n/a", MarcError.MAJOR_ERROR, "Error parsing leader, trying to re-read leader either shorter or longer") |==> <NO-OP>
2427:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):457:0 |==> 1
2428:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):457:0 |==> -1
2429:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):459:offset < recordBuf.length |==> offset != recordBuf.length
2430:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):459:offset < recordBuf.length |==> offset <= recordBuf.length
2431:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):459:offset < recordBuf.length |==> false
2432:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):460:recordBuf[offset] == Constants.FT |==> recordBuf[offset] <= Constants.FT
2433:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):460:recordBuf[offset] == Constants.FT |==> recordBuf[offset] >= Constants.FT
2434:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):460:recordBuf[offset] == Constants.FT |==> false
2435:STD:<BREAK>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):461:break; |==> <NO-OP>
2436:STD:<INC>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):464:offset++ |==> <NO-OP>
2437:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):467:12 |==> 0
2438:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):467:12 |==> -12
2439:AOR:%(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):467:offset % 12 |==> offset * 12
2440:AOR:%(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):467:offset % 12 |==> offset + 12
2441:AOR:%(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):467:offset % 12 |==> offset - 12
2442:AOR:%(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):467:offset % 12 |==> offset / 12
2443:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):467:1 |==> 0
2444:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):467:1 |==> -1
2445:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):467:offset % 12 == 1 |==> offset % 12 <= 1
2446:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):467:offset % 12 == 1 |==> offset % 12 >= 1
2447:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):467:offset % 12 == 1 |==> false
2448:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):470:record.addError("n/a", "n/a", MarcError.MAJOR_ERROR, "Leader appears to be too short, moving one byte from record body to leader, and trying again") |==> <NO-OP>
2449:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):472:recordBuf |==> null
2450:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):473:1 |==> 0
2451:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):473:1 |==> -1
2452:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):473:oldBody.length - 1 |==> oldBody.length % 1
2453:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):473:oldBody.length - 1 |==> oldBody.length * 1
2454:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):473:oldBody.length - 1 |==> oldBody.length + 1
2455:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):473:oldBody.length - 1 |==> oldBody.length / 1
2456:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):473:recordBuf = new byte[oldBody.length - 1] |==> <NO-OP>
2457:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):474:1 |==> 0
2458:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):474:1 |==> -1
2459:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):474:0 |==> 1
2460:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):474:0 |==> -1
2461:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):474:1 |==> 0
2462:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):474:1 |==> -1
2463:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):474:oldBody.length - 1 |==> oldBody.length % 1
2464:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):474:oldBody.length - 1 |==> oldBody.length * 1
2465:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):474:oldBody.length - 1 |==> oldBody.length + 1
2466:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):474:oldBody.length - 1 |==> oldBody.length / 1
2467:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):474:System.arraycopy(oldBody, 1, recordBuf, 0, oldBody.length - 1) |==> <NO-OP>
2468:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):475:1 |==> 0
2469:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):475:1 |==> -1
2470:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):475:offset - 1 |==> offset % 1
2471:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):475:offset - 1 |==> offset * 1
2472:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):475:offset - 1 |==> offset + 1
2473:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):475:offset - 1 |==> offset / 1
2474:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):475:directoryLength = offset - 1 |==> <NO-OP>
2475:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):476:2 |==> 0
2476:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):476:2 |==> -2
2477:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):476:ldr.setIndicatorCount(2) |==> <NO-OP>
2478:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):477:2 |==> 0
2479:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):477:2 |==> -2
2480:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):477:ldr.setSubfieldCodeLength(2) |==> <NO-OP>
2481:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):478:7 |==> 0
2482:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):478:7 |==> -7
2483:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):478:ldr.setImplDefined1(("" + (char)byteArray[7] + " ").toCharArray()) |==> <NO-OP>
2484:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):479:18 |==> 0
2485:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):479:18 |==> -18
2486:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):479:19 |==> 0
2487:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):479:19 |==> -19
2488:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):479:20 |==> 0
2489:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):479:20 |==> -20
2490:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):479:ldr.setImplDefined2(("" + (char)byteArray[18] + (char)byteArray[19] + (char)byteArray[20]).toCharArray()) |==> <NO-OP>
2491:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):481:ldr.setEntryMap("4500".toCharArray()) |==> <NO-OP>
2492:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):484:10 |==> 0
2493:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):484:10 |==> -10
2494:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):484:byteArray[10] == (byte)' ' |==> byteArray[10] <= (byte)' '
2495:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):484:byteArray[10] == (byte)' ' |==> byteArray[10] >= (byte)' '
2496:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):484:byteArray[10] == (byte)' ' |==> false
2497:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):484:10 |==> 0
2498:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):484:10 |==> -10
2499:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):484:byteArray[10] == (byte)'a' |==> byteArray[10] <= (byte)'a'
2500:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):484:byteArray[10] == (byte)'a' |==> byteArray[10] >= (byte)'a'
2501:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):484:byteArray[10] == (byte)'a' |==> false
2502:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):484:byteArray[10] == (byte)' ' || byteArray[10] == (byte)'a' |==> byteArray[10] == (byte)' ' != (byteArray[10] == (byte)'a')
2503:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):484:byteArray[10] == (byte)' ' || byteArray[10] == (byte)'a' |==> byteArray[10] == (byte)' '
2504:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):484:byteArray[10] == (byte)' ' || byteArray[10] == (byte)'a' |==> byteArray[10] == (byte)'a'
2505:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):484:byteArray[10] == (byte)' ' || byteArray[10] == (byte)'a' |==> true
2506:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):485:10 |==> 0
2507:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):485:10 |==> -10
2508:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):485:ldr.setCharCodingScheme((char)byteArray[10]) |==> <NO-OP>
2509:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):487:12 |==> 0
2510:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):487:12 |==> -12
2511:AOR:%(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):487:offset % 12 |==> offset * 12
2512:AOR:%(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):487:offset % 12 |==> offset + 12
2513:AOR:%(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):487:offset % 12 |==> offset - 12
2514:AOR:%(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):487:offset % 12 |==> offset / 12
2515:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):487:11 |==> 0
2516:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):487:11 |==> -11
2517:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):487:offset % 12 == 11 |==> offset % 12 <= 11
2518:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):487:offset % 12 == 11 |==> offset % 12 >= 11
2519:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):487:offset % 12 == 11 |==> false
2520:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):488:record.addError("n/a", "n/a", MarcError.MAJOR_ERROR, "Leader appears to be too long, moving one byte from leader to record body, and trying again") |==> <NO-OP>
2521:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):490:recordBuf |==> null
2522:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):491:1 |==> 0
2523:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):491:1 |==> -1
2524:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):491:oldBody.length + 1 |==> oldBody.length % 1
2525:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):491:oldBody.length + 1 |==> oldBody.length * 1
2526:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):491:oldBody.length + 1 |==> oldBody.length - 1
2527:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):491:oldBody.length + 1 |==> oldBody.length / 1
2528:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):491:recordBuf = new byte[oldBody.length + 1] |==> <NO-OP>
2529:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):492:0 |==> 1
2530:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):492:0 |==> -1
2531:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):492:1 |==> 0
2532:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):492:1 |==> -1
2533:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):492:System.arraycopy(oldBody, 0, recordBuf, 1, oldBody.length) |==> <NO-OP>
2534:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):493:0 |==> 1
2535:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):493:0 |==> -1
2536:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):493:recordBuf[0] = (byte)'0' |==> <NO-OP>
2537:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):494:1 |==> 0
2538:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):494:1 |==> -1
2539:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):494:offset + 1 |==> offset % 1
2540:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):494:offset + 1 |==> offset * 1
2541:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):494:offset + 1 |==> offset - 1
2542:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):494:offset + 1 |==> offset / 1
2543:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):494:directoryLength = offset + 1 |==> <NO-OP>
2544:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):495:2 |==> 0
2545:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):495:2 |==> -2
2546:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):495:ldr.setIndicatorCount(2) |==> <NO-OP>
2547:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):496:2 |==> 0
2548:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):496:2 |==> -2
2549:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):496:ldr.setSubfieldCodeLength(2) |==> <NO-OP>
2550:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):497:7 |==> 0
2551:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):497:7 |==> -7
2552:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):497:ldr.setImplDefined1(("" + (char)byteArray[7] + " ").toCharArray()) |==> <NO-OP>
2553:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):498:16 |==> 0
2554:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):498:16 |==> -16
2555:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):498:17 |==> 0
2556:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):498:17 |==> -17
2557:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):498:18 |==> 0
2558:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):498:18 |==> -18
2559:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):498:ldr.setImplDefined2(("" + (char)byteArray[16] + (char)byteArray[17] + (char)byteArray[18]).toCharArray()) |==> <NO-OP>
2560:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):500:ldr.setEntryMap("4500".toCharArray()) |==> <NO-OP>
2561:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):503:8 |==> 0
2562:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):503:8 |==> -8
2563:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):503:byteArray[8] == (byte)' ' |==> byteArray[8] <= (byte)' '
2564:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):503:byteArray[8] == (byte)' ' |==> byteArray[8] >= (byte)' '
2565:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):503:byteArray[8] == (byte)' ' |==> false
2566:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):503:8 |==> 0
2567:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):503:8 |==> -8
2568:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):503:byteArray[8] == (byte)'a' |==> byteArray[8] <= (byte)'a'
2569:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):503:byteArray[8] == (byte)'a' |==> byteArray[8] >= (byte)'a'
2570:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):503:byteArray[8] == (byte)'a' |==> false
2571:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):503:byteArray[8] == (byte)' ' || byteArray[8] == (byte)'a' |==> byteArray[8] == (byte)' ' != (byteArray[8] == (byte)'a')
2572:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):503:byteArray[8] == (byte)' ' || byteArray[8] == (byte)'a' |==> byteArray[8] == (byte)' '
2573:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):503:byteArray[8] == (byte)' ' || byteArray[8] == (byte)'a' |==> byteArray[8] == (byte)'a'
2574:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):503:byteArray[8] == (byte)' ' || byteArray[8] == (byte)'a' |==> true
2575:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):504:10 |==> 0
2576:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):504:10 |==> -10
2577:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):504:ldr.setCharCodingScheme((char)byteArray[10]) |==> <NO-OP>
2578:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):508:10 |==> 0
2579:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):508:10 |==> -10
2580:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):508:byteArray[10] == (byte)' ' |==> byteArray[10] <= (byte)' '
2581:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):508:byteArray[10] == (byte)' ' |==> byteArray[10] >= (byte)' '
2582:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):508:byteArray[10] == (byte)' ' |==> false
2583:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):508:10 |==> 0
2584:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):508:10 |==> -10
2585:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):508:byteArray[10] == (byte)'a' |==> byteArray[10] <= (byte)'a'
2586:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):508:byteArray[10] == (byte)'a' |==> byteArray[10] >= (byte)'a'
2587:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):508:byteArray[10] == (byte)'a' |==> false
2588:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):508:byteArray[10] == (byte)' ' || byteArray[10] == (byte)'a' |==> byteArray[10] == (byte)' ' != (byteArray[10] == (byte)'a')
2589:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):508:byteArray[10] == (byte)' ' || byteArray[10] == (byte)'a' |==> byteArray[10] == (byte)' '
2590:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):508:byteArray[10] == (byte)' ' || byteArray[10] == (byte)'a' |==> byteArray[10] == (byte)'a'
2591:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):508:byteArray[10] == (byte)' ' || byteArray[10] == (byte)'a' |==> true
2592:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):509:10 |==> 0
2593:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):509:10 |==> -10
2594:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):509:ldr.setCharCodingScheme((char)byteArray[10]) |==> <NO-OP>
2595:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):512:record.addError("n/a", "n/a", MarcError.FATAL, "error parsing leader with data: " + new String(byteArray)) |==> <NO-OP>
2596:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):523:ldr.getEntryMap() |==> null
2597:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):524:0 |==> 1
2598:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):524:0 |==> -1
2599:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):524:1 |==> 0
2600:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):524:1 |==> -1
2601:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):524:2 |==> 0
2602:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):524:2 |==> -2
2603:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):524:3 |==> 0
2604:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):524:3 |==> -3
2605:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):524:permissive && !("" + tmp[0] + tmp[1] + tmp[2] + tmp[3]).equals("4500") |==> permissive == !("" + tmp[0] + tmp[1] + tmp[2] + tmp[3]).equals("4500")
2606:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):524:permissive && !("" + tmp[0] + tmp[1] + tmp[2] + tmp[3]).equals("4500") |==> false
2607:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):524:permissive && !("" + tmp[0] + tmp[1] + tmp[2] + tmp[3]).equals("4500") |==> permissive
2608:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):524:permissive && !("" + tmp[0] + tmp[1] + tmp[2] + tmp[3]).equals("4500") |==> !("" + tmp[0] + tmp[1] + tmp[2] + tmp[3]).equals("4500")
2609:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:0 |==> 1
2610:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:0 |==> -1
2611:ROR:>=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' |==> tmp[0] == '0'
2612:ROR:>=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' |==> tmp[0] > '0'
2613:ROR:>=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' |==> true
2614:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:0 |==> 1
2615:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:0 |==> -1
2616:ROR:<=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] <= '9' |==> tmp[0] < '9'
2617:ROR:<=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] <= '9' |==> tmp[0] == '9'
2618:ROR:<=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] <= '9' |==> true
2619:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' |==> tmp[0] >= '0' == tmp[0] <= '9'
2620:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' |==> false
2621:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' |==> tmp[0] >= '0'
2622:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' |==> tmp[0] <= '9'
2623:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:1 |==> 0
2624:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:1 |==> -1
2625:ROR:>=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[1] >= '0' |==> tmp[1] == '0'
2626:ROR:>=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[1] >= '0' |==> tmp[1] > '0'
2627:ROR:>=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[1] >= '0' |==> true
2628:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' |==> (tmp[0] >= '0' && tmp[0] <= '9') == tmp[1] >= '0'
2629:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' |==> false
2630:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' |==> tmp[0] >= '0' && tmp[0] <= '9'
2631:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' |==> tmp[1] >= '0'
2632:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:1 |==> 0
2633:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:1 |==> -1
2634:ROR:<=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[1] <= '9' |==> tmp[1] < '9'
2635:ROR:<=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[1] <= '9' |==> tmp[1] == '9'
2636:ROR:<=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[1] <= '9' |==> true
2637:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' |==> (tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0') == tmp[1] <= '9'
2638:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' |==> false
2639:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' |==> tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0'
2640:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' |==> tmp[1] <= '9'
2641:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:2 |==> 0
2642:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:2 |==> -2
2643:ROR:>=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[2] >= '0' |==> tmp[2] == '0'
2644:ROR:>=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[2] >= '0' |==> tmp[2] > '0'
2645:ROR:>=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[2] >= '0' |==> true
2646:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' |==> (tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9') == tmp[2] >= '0'
2647:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' |==> false
2648:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' |==> tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9'
2649:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' |==> tmp[2] >= '0'
2650:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:2 |==> 0
2651:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:2 |==> -2
2652:ROR:<=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[2] <= '9' |==> tmp[2] < '9'
2653:ROR:<=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[2] <= '9' |==> tmp[2] == '9'
2654:ROR:<=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[2] <= '9' |==> true
2655:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' && tmp[2] <= '9' |==> (tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0') == tmp[2] <= '9'
2656:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' && tmp[2] <= '9' |==> false
2657:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' && tmp[2] <= '9' |==> tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0'
2658:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' && tmp[2] <= '9' |==> tmp[2] <= '9'
2659:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:3 |==> 0
2660:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:3 |==> -3
2661:ROR:>=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[3] >= '0' |==> tmp[3] == '0'
2662:ROR:>=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[3] >= '0' |==> tmp[3] > '0'
2663:ROR:>=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[3] >= '0' |==> true
2664:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' && tmp[2] <= '9' && tmp[3] >= '0' |==> (tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' && tmp[2] <= '9') == tmp[3] >= '0'
2665:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' && tmp[2] <= '9' && tmp[3] >= '0' |==> false
2666:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' && tmp[2] <= '9' && tmp[3] >= '0' |==> tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' && tmp[2] <= '9'
2667:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' && tmp[2] <= '9' && tmp[3] >= '0' |==> tmp[3] >= '0'
2668:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:3 |==> 0
2669:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:3 |==> -3
2670:ROR:<=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[3] <= '9' |==> tmp[3] < '9'
2671:ROR:<=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[3] <= '9' |==> tmp[3] == '9'
2672:ROR:<=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[3] <= '9' |==> true
2673:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' && tmp[2] <= '9' && tmp[3] >= '0' && tmp[3] <= '9' |==> (tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' && tmp[2] <= '9' && tmp[3] >= '0') == tmp[3] <= '9'
2674:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' && tmp[2] <= '9' && tmp[3] >= '0' && tmp[3] <= '9' |==> false
2675:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' && tmp[2] <= '9' && tmp[3] >= '0' && tmp[3] <= '9' |==> tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' && tmp[2] <= '9' && tmp[3] >= '0'
2676:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):525:tmp[0] >= '0' && tmp[0] <= '9' && tmp[1] >= '0' && tmp[1] <= '9' && tmp[2] >= '0' && tmp[2] <= '9' && tmp[3] >= '0' && tmp[3] <= '9' |==> tmp[3] <= '9'
2677:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):527:0 |==> 1
2678:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):527:0 |==> -1
2679:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):527:1 |==> 0
2680:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):527:1 |==> -1
2681:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):527:2 |==> 0
2682:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):527:2 |==> -2
2683:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):527:3 |==> 0
2684:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):527:3 |==> -3
2685:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):526:record.addError("n/a", "n/a", MarcError.ERROR_TYPO, "Unusual character found at end of leader [ " + tmp[0] + tmp[1] + tmp[2] + tmp[3] + " ]") |==> <NO-OP>
2686:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):530:0 |==> 1
2687:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):530:0 |==> -1
2688:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):530:1 |==> 0
2689:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):530:1 |==> -1
2690:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):530:2 |==> 0
2691:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):530:2 |==> -2
2692:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):530:3 |==> 0
2693:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):530:3 |==> -3
2694:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):529:record.addError("n/a", "n/a", MarcError.ERROR_TYPO, "Erroneous character found at end of leader [ " + tmp[0] + tmp[1] + tmp[2] + tmp[3] + " ]; changing them to the standard \"4500\"") |==> <NO-OP>
2695:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):531:ldr.setEntryMap("4500".toCharArray()) |==> <NO-OP>
2696:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):538:encoding = "UTF8" |==> <NO-OP>
2697:STD:<BREAK>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):539:break; |==> <NO-OP>
2698:COR:convertToUTF8:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):541:convertToUTF8 |==> false
2699:COR:convertToUTF8:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):541:convertToUTF8 |==> true
2700:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):542:encoding = defaultEncoding |==> <NO-OP>
2701:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):544:encoding = "ISO8859_1" |==> <NO-OP>
2702:STD:<BREAK>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):546:break; |==> <NO-OP>
2703:COR:convertToUTF8:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):548:convertToUTF8 |==> false
2704:COR:convertToUTF8:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):548:convertToUTF8 |==> true
2705:COR:permissive:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):549:permissive |==> false
2706:COR:permissive:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):549:permissive |==> true
2707:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):550:record.addError("n/a", "n/a", MarcError.MINOR_ERROR, "Record character encoding should be \'a\' or \' \' in this record it is \'" + ldr.getCharCodingScheme() + "\'. Attempting to guess the correct encoding.") |==> <NO-OP>
2708:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):553:encoding = "BESTGUESS" |==> <NO-OP>
2709:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):555:encoding = defaultEncoding |==> <NO-OP>
2710:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):558:encoding = "ISO8859_1" |==> <NO-OP>
2711:STD:<BREAK>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):560:break; |==> <NO-OP>
2712:COR:encoding.equalsIgnoreCase("BESTGUESS"):TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):564:encoding.equalsIgnoreCase("BESTGUESS") |==> false
2713:COR:encoding.equalsIgnoreCase("BESTGUESS"):FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):564:encoding.equalsIgnoreCase("BESTGUESS") |==> true
2714:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):566:new String(recordBuf, "ISO-8859-1") |==> null
2715:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):569:2 |==> 0
2716:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):569:2 |==> -2
2717:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):569:1 |==> 0
2718:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):569:1 |==> -1
2719:ROR:>(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):569:marc8EscSeqCheck.split("\\e[-(,)$bsp]", 2).length > 1 |==> marc8EscSeqCheck.split("\\e[-(,)$bsp]", 2).length != 1
2720:ROR:>(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):569:marc8EscSeqCheck.split("\\e[-(,)$bsp]", 2).length > 1 |==> marc8EscSeqCheck.split("\\e[-(,)$bsp]", 2).length >= 1
2721:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):569:marc8EscSeqCheck.split("\\e[-(,)$bsp]", 2).length > 1 |==> false
2722:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):570:encoding = "MARC8" |==> <NO-OP>
2723:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):572:false |==> true
2724:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):573:0 |==> 1
2725:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):573:0 |==> -1
2726:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):573:i < recordBuf.length |==> i != recordBuf.length
2727:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):573:i < recordBuf.length |==> i <= recordBuf.length
2728:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):573:i < recordBuf.length |==> false
2729:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):574:0 |==> 1
2730:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):574:0 |==> -1
2731:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):574:recordBuf[i] < 0 |==> recordBuf[i] != 0
2732:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):574:recordBuf[i] < 0 |==> recordBuf[i] <= 0
2733:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):574:recordBuf[i] < 0 |==> false
2734:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):576:true |==> false
2735:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):576:hasHighBitChars = true |==> <NO-OP>
2736:STD:<BREAK>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):577:break; |==> <NO-OP>
2737:COR:hasHighBitChars:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):580:hasHighBitChars |==> false
2738:COR:hasHighBitChars:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):580:hasHighBitChars |==> true
2739:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):581:encoding = "ISO8859_1" |==> <NO-OP>
2740:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):585:new String(recordBuf, "UTF-8") |==> null
2741:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):586:utfCheck.getBytes("UTF-8") |==> null
2742:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):587:encoding = "UTF8" |==> <NO-OP>
2743:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):589:recordBuf.length == byteCheck.length |==> recordBuf.length <= byteCheck.length
2744:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):589:recordBuf.length == byteCheck.length |==> recordBuf.length >= byteCheck.length
2745:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):589:recordBuf.length == byteCheck.length |==> false
2746:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):590:0 |==> 1
2747:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):590:0 |==> -1
2748:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):590:i < recordBuf.length |==> i != recordBuf.length
2749:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):590:i < recordBuf.length |==> i <= recordBuf.length
2750:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):590:i < recordBuf.length |==> false
2751:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):591:byteCheck[i] != recordBuf[i] |==> byteCheck[i] < recordBuf[i]
2752:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):591:byteCheck[i] != recordBuf[i] |==> byteCheck[i] > recordBuf[i]
2753:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):591:byteCheck[i] != recordBuf[i] |==> true
2754:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):592:encoding = "MARC8-Maybe" |==> <NO-OP>
2755:STD:<BREAK>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):593:break; |==> <NO-OP>
2756:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):597:encoding = "MARC8-Maybe" |==> <NO-OP>
2757:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):603:e.printStackTrace() |==> <NO-OP>
2758:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):605:permissive && encoding.equals("UTF8") |==> permissive == encoding.equals("UTF8")
2759:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):605:permissive && encoding.equals("UTF8") |==> false
2760:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):605:permissive && encoding.equals("UTF8") |==> permissive
2761:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):605:permissive && encoding.equals("UTF8") |==> encoding.equals("UTF8")
2762:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):607:new String(recordBuf, "UTF-8") |==> null
2763:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):608:utfCheck.getBytes("UTF-8") |==> null
2764:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):610:recordBuf.length != byteCheck.length |==> recordBuf.length < byteCheck.length
2765:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):610:recordBuf.length != byteCheck.length |==> recordBuf.length > byteCheck.length
2766:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):610:recordBuf.length != byteCheck.length |==> true
2767:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):611:false |==> true
2768:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):613:0 |==> 1
2769:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):613:0 |==> -1
2770:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):613:i < recordBuf.length |==> i != recordBuf.length
2771:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):613:i < recordBuf.length |==> i <= recordBuf.length
2772:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):613:i < recordBuf.length |==> false
2773:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):614:27 |==> 0
2774:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):614:27 |==> -27
2775:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):614:recordBuf[i] == 27 |==> recordBuf[i] <= 27
2776:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):614:recordBuf[i] == 27 |==> recordBuf[i] >= 27
2777:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):614:recordBuf[i] == 27 |==> false
2778:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):615:record.addError("n/a", "n/a", MarcError.MINOR_ERROR, "Record claims to be UTF-8, but its not. Its probably MARC8.") |==> <NO-OP>
2779:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):617:encoding = "MARC8-Maybe" |==> <NO-OP>
2780:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):618:true |==> false
2781:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):618:foundESC = true |==> <NO-OP>
2782:STD:<BREAK>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):619:break; |==> <NO-OP>
2783:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):622:byteCheck[i] != recordBuf[i] |==> byteCheck[i] < recordBuf[i]
2784:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):622:byteCheck[i] != recordBuf[i] |==> byteCheck[i] > recordBuf[i]
2785:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):622:byteCheck[i] != recordBuf[i] |==> true
2786:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):622:!foundESC && byteCheck[i] != recordBuf[i] |==> !foundESC == (byteCheck[i] != recordBuf[i])
2787:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):622:!foundESC && byteCheck[i] != recordBuf[i] |==> false
2788:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):622:!foundESC && byteCheck[i] != recordBuf[i] |==> !foundESC
2789:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):622:!foundESC && byteCheck[i] != recordBuf[i] |==> byteCheck[i] != recordBuf[i]
2790:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):623:encoding = "MARC8-Maybe" |==> <NO-OP>
2791:COR:foundESC:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):628:foundESC |==> false
2792:COR:foundESC:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):628:foundESC |==> true
2793:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):629:record.addError("n/a", "n/a", MarcError.MINOR_ERROR, "Record claims to be UTF-8, but its not. It may be MARC8, or maybe UNIMARC, or maybe raw ISO-8859-1 ") |==> <NO-OP>
2794:COR:utfCheck.contains("a$1!"):TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):634:utfCheck.contains("a$1!") |==> false
2795:COR:utfCheck.contains("a$1!"):FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):634:utfCheck.contains("a$1!") |==> true
2796:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):635:encoding = "MARC8-Broken" |==> <NO-OP>
2797:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):636:record.addError("n/a", "n/a", MarcError.MAJOR_ERROR, "Record claims to be UTF-8, but its not. It seems to be MARC8-encoded but with missing escape codes.") |==> <NO-OP>
2798:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):641:e.printStackTrace() |==> <NO-OP>
2799:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):643:permissive && !encoding.equals("UTF8") |==> permissive == !encoding.equals("UTF8")
2800:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):643:permissive && !encoding.equals("UTF8") |==> false
2801:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):643:permissive && !encoding.equals("UTF8") |==> permissive
2802:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):643:permissive && !encoding.equals("UTF8") |==> !encoding.equals("UTF8")
2803:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):643:permissive && !encoding.equals("UTF8") && convertToUTF8 |==> (permissive && !encoding.equals("UTF8")) == convertToUTF8
2804:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):643:permissive && !encoding.equals("UTF8") && convertToUTF8 |==> false
2805:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):643:permissive && !encoding.equals("UTF8") && convertToUTF8 |==> permissive && !encoding.equals("UTF8")
2806:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):643:permissive && !encoding.equals("UTF8") && convertToUTF8 |==> convertToUTF8
2807:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):645:new String(recordBuf, "ISO-8859-1") |==> null
2808:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):646:2 |==> 0
2809:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):646:2 |==> -2
2810:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):646:1 |==> 0
2811:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):646:1 |==> -1
2812:ROR:>(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):646:marc8EscSeqCheck.split("\\e[-(,)$bsp]", 2).length > 1 |==> marc8EscSeqCheck.split("\\e[-(,)$bsp]", 2).length != 1
2813:ROR:>(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):646:marc8EscSeqCheck.split("\\e[-(,)$bsp]", 2).length > 1 |==> marc8EscSeqCheck.split("\\e[-(,)$bsp]", 2).length >= 1
2814:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):646:marc8EscSeqCheck.split("\\e[-(,)$bsp]", 2).length > 1 |==> false
2815:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):647:new String(recordBuf, "UTF-8") |==> null
2816:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):648:utfCheck.getBytes("UTF-8") |==> null
2817:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):650:recordBuf.length == byteCheck.length |==> recordBuf.length <= byteCheck.length
2818:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):650:recordBuf.length == byteCheck.length |==> recordBuf.length >= byteCheck.length
2819:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):650:recordBuf.length == byteCheck.length |==> false
2820:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):651:0 |==> 1
2821:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):651:0 |==> -1
2822:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):651:i < recordBuf.length |==> i != recordBuf.length
2823:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):651:i < recordBuf.length |==> i <= recordBuf.length
2824:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):651:i < recordBuf.length |==> false
2825:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):654:0 |==> 1
2826:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):654:0 |==> -1
2827:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):654:recordBuf[i] < 0 |==> recordBuf[i] != 0
2828:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):654:recordBuf[i] < 0 |==> recordBuf[i] <= 0
2829:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):654:recordBuf[i] < 0 |==> false
2830:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):654:byteCheck[i] != recordBuf[i] |==> byteCheck[i] < recordBuf[i]
2831:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):654:byteCheck[i] != recordBuf[i] |==> byteCheck[i] > recordBuf[i]
2832:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):654:byteCheck[i] != recordBuf[i] |==> true
2833:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):654:recordBuf[i] < 0 || byteCheck[i] != recordBuf[i] |==> recordBuf[i] < 0 != (byteCheck[i] != recordBuf[i])
2834:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):654:recordBuf[i] < 0 || byteCheck[i] != recordBuf[i] |==> recordBuf[i] < 0
2835:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):654:recordBuf[i] < 0 || byteCheck[i] != recordBuf[i] |==> byteCheck[i] != recordBuf[i]
2836:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):654:recordBuf[i] < 0 || byteCheck[i] != recordBuf[i] |==> true
2837:COR:hasMarc8EscSeq:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):657:hasMarc8EscSeq |==> false
2838:COR:hasMarc8EscSeq:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):657:hasMarc8EscSeq |==> true
2839:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):658:record.addError("n/a", "n/a", MarcError.MINOR_ERROR, "Record has MARC8 escape sequences, but also seem to have UTF8-encoded characters.") |==> <NO-OP>
2840:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):660:encoding = "MARC8-Maybe" |==> <NO-OP>
2841:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):662:record.addError("n/a", "n/a", MarcError.MINOR_ERROR, "Record claims not to be UTF-8, but it seems to be.") |==> <NO-OP>
2842:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):664:encoding = "UTF8-Maybe" |==> <NO-OP>
2843:STD:<BREAK>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):666:break; |==> <NO-OP>
2844:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):672:e.printStackTrace() |==> <NO-OP>
2845:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):676:record.setLeader(ldr) |==> <NO-OP>
2846:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):678:12 |==> 0
2847:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):678:12 |==> -12
2848:AOR:/(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):678:directoryLength / 12 |==> directoryLength % 12
2849:AOR:/(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):678:directoryLength / 12 |==> directoryLength * 12
2850:AOR:/(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):678:directoryLength / 12 |==> directoryLength + 12
2851:AOR:/(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):678:directoryLength / 12 |==> directoryLength - 12
2852:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):680:new ArrayList<String>(size) |==> null
2853:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):681:new ArrayList<Integer>(size) |==> null
2854:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):682:new ArrayList<Integer>(size) |==> null
2855:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):683:new HashMap<Integer, Integer>() |==> null
2856:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):684:false |==> true
2857:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):685:0 |==> 1
2858:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):685:0 |==> -1
2859:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:12 |==> 0
2860:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:12 |==> -12
2861:AOR:%(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:directoryLength % 12 |==> directoryLength * 12
2862:AOR:%(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:directoryLength % 12 |==> directoryLength + 12
2863:AOR:%(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:directoryLength % 12 |==> directoryLength - 12
2864:AOR:%(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:directoryLength % 12 |==> directoryLength / 12
2865:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:0 |==> 1
2866:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:0 |==> -1
2867:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:directoryLength % 12 == 0 |==> directoryLength % 12 <= 0
2868:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:directoryLength % 12 == 0 |==> directoryLength % 12 >= 0
2869:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:directoryLength % 12 == 0 |==> false
2870:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:recordBuf[directoryLength] == Constants.FT |==> recordBuf[directoryLength] <= Constants.FT
2871:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:recordBuf[directoryLength] == Constants.FT |==> recordBuf[directoryLength] >= Constants.FT
2872:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:recordBuf[directoryLength] == Constants.FT |==> false
2873:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:directoryLength % 12 == 0 && recordBuf[directoryLength] == Constants.FT |==> directoryLength % 12 == 0 == (recordBuf[directoryLength] == Constants.FT)
2874:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:directoryLength % 12 == 0 && recordBuf[directoryLength] == Constants.FT |==> false
2875:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:directoryLength % 12 == 0 && recordBuf[directoryLength] == Constants.FT |==> directoryLength % 12 == 0
2876:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):687:directoryLength % 12 == 0 && recordBuf[directoryLength] == Constants.FT |==> recordBuf[directoryLength] == Constants.FT
2877:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):688:false |==> true
2878:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):689:0 |==> 1
2879:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):689:0 |==> -1
2880:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):690:0 |==> 1
2881:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):690:0 |==> -1
2882:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):691:0 |==> 1
2883:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):691:0 |==> -1
2884:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):693:offset |==> 0
2885:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):694:14 |==> 0
2886:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):694:14 |==> -14
2887:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):695:0 |==> 1
2888:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):695:0 |==> -1
2889:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):695:3 |==> 0
2890:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):695:3 |==> -3
2891:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):696:3 |==> 0
2892:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):696:3 |==> -3
2893:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):696:7 |==> 0
2894:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):696:7 |==> -7
2895:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):697:7 |==> 0
2896:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):697:7 |==> -7
2897:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):697:12 |==> 0
2898:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):697:12 |==> -12
2899:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):697:offset = Integer.parseInt(dirEntry.substring(7, 12)) |==> <NO-OP>
2900:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):698:tags.add(tag) |==> <NO-OP>
2901:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):699:lengths.add(length) |==> <NO-OP>
2902:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):700:99999 |==> 0
2903:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):700:99999 |==> -99999
2904:ROR:>=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):700:offset >= 99999 |==> offset == 99999
2905:ROR:>=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):700:offset >= 99999 |==> offset > 99999
2906:ROR:>=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):700:offset >= 99999 |==> true
2907:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):701:prevOffset + length |==> prevOffset % length
2908:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):701:prevOffset + length |==> prevOffset * length
2909:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):701:prevOffset + length |==> prevOffset - length
2910:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):701:prevOffset + length |==> prevOffset / length
2911:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):701:offset = prevOffset + length |==> <NO-OP>
2912:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):703:offsets.add(offset) |==> <NO-OP>
2913:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):704:offsetToFT += increment |==> <NO-OP>
2914:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):705:recordBuf[offsetToFT] == Constants.FT |==> recordBuf[offsetToFT] <= Constants.FT
2915:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):705:recordBuf[offsetToFT] == Constants.FT |==> recordBuf[offsetToFT] >= Constants.FT
2916:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):705:recordBuf[offsetToFT] == Constants.FT |==> false
2917:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):706:true |==> false
2918:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):706:doneWithDirectory = true |==> <NO-OP>
2919:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):708:offsetsMap.put(offset, i) |==> <NO-OP>
2920:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):709:offset != totalOffset |==> offset < totalOffset
2921:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):709:offset != totalOffset |==> offset > totalOffset
2922:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):709:offset != totalOffset |==> true
2923:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):709:99999 |==> 0
2924:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):709:99999 |==> -99999
2925:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):709:totalOffset < 99999 |==> totalOffset != 99999
2926:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):709:totalOffset < 99999 |==> totalOffset <= 99999
2927:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):709:totalOffset < 99999 |==> false
2928:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):709:offset != totalOffset && totalOffset < 99999 |==> offset != totalOffset == totalOffset < 99999
2929:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):709:offset != totalOffset && totalOffset < 99999 |==> false
2930:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):709:offset != totalOffset && totalOffset < 99999 |==> offset != totalOffset
2931:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):709:offset != totalOffset && totalOffset < 99999 |==> totalOffset < 99999
2932:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):710:true |==> false
2933:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):710:unsortedOffsets = true |==> <NO-OP>
2934:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):712:totalOffset += length |==> <NO-OP>
2935:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):714:size = tags.size() |==> <NO-OP>
2936:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):718:0 |==> 1
2937:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):718:0 |==> -1
2938:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):719:false |==> true
2939:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):719:false |==> true
2940:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):720:false |==> true
2941:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):721:0 |==> 1
2942:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):721:0 |==> -1
2943:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):722:12 |==> 0
2944:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):722:12 |==> -12
2945:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):723:14 |==> 0
2946:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):723:14 |==> -14
2947:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):724:dirEntry.indexOf(Constants.FT) |==> 0
2948:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):725:0 |==> 1
2949:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):725:0 |==> -1
2950:ROR:>(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):725:ftIndex > 0 |==> ftIndex != 0
2951:ROR:>(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):725:ftIndex > 0 |==> ftIndex >= 0
2952:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):725:ftIndex > 0 |==> false
2953:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):725:12 |==> 0
2954:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):725:12 |==> -12
2955:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):725:ftIndex < 12 |==> ftIndex != 12
2956:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):725:ftIndex < 12 |==> ftIndex <= 12
2957:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):725:ftIndex < 12 |==> false
2958:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):725:ftIndex > 0 && ftIndex < 12 |==> ftIndex > 0 == ftIndex < 12
2959:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):725:ftIndex > 0 && ftIndex < 12 |==> false
2960:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):725:ftIndex > 0 && ftIndex < 12 |==> ftIndex > 0
2961:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):725:ftIndex > 0 && ftIndex < 12 |==> ftIndex < 12
2962:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):726:record.addError("n/a", "n/a", MarcError.MAJOR_ERROR, "Field terminator in the middle of a directory entry. Discarding entry and trying to continue.") |==> <NO-OP>
2963:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):728:offsetToFT += dirEntry.indexOf(Constants.FT) |==> <NO-OP>
2964:STD:<BREAK>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):729:break; |==> <NO-OP>
2965:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):732:0 |==> 1
2966:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):732:0 |==> -1
2967:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):732:3 |==> 0
2968:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):732:3 |==> -3
2969:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):733:3 |==> 0
2970:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):733:3 |==> -3
2971:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):733:7 |==> 0
2972:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):733:7 |==> -7
2973:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):734:7 |==> 0
2974:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):734:7 |==> -7
2975:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):734:12 |==> 0
2976:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):734:12 |==> -12
2977:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:directoryLength - offsetToFT |==> directoryLength % offsetToFT
2978:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:directoryLength - offsetToFT |==> directoryLength * offsetToFT
2979:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:directoryLength - offsetToFT |==> directoryLength + offsetToFT
2980:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:directoryLength - offsetToFT |==> directoryLength / offsetToFT
2981:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:12 |==> 0
2982:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:12 |==> -12
2983:AOR:%(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:(directoryLength - offsetToFT) % 12 |==> (directoryLength - offsetToFT) * 12
2984:AOR:%(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:(directoryLength - offsetToFT) % 12 |==> (directoryLength - offsetToFT) + 12
2985:AOR:%(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:(directoryLength - offsetToFT) % 12 |==> (directoryLength - offsetToFT) - 12
2986:AOR:%(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:(directoryLength - offsetToFT) % 12 |==> (directoryLength - offsetToFT) / 12
2987:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:11 |==> 0
2988:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:11 |==> -11
2989:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:(directoryLength - offsetToFT) % 12 == 11 |==> (directoryLength - offsetToFT) % 12 <= 11
2990:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:(directoryLength - offsetToFT) % 12 == 11 |==> (directoryLength - offsetToFT) % 12 >= 11
2991:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:(directoryLength - offsetToFT) % 12 == 11 |==> false
2992:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:1 |==> 0
2993:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:1 |==> -1
2994:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:tag.charAt(1) != '0' |==> tag.charAt(1) < '0'
2995:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:tag.charAt(1) != '0' |==> tag.charAt(1) > '0'
2996:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:tag.charAt(1) != '0' |==> true
2997:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:(directoryLength - offsetToFT) % 12 == 11 && tag.charAt(1) != '0' |==> (directoryLength - offsetToFT) % 12 == 11 == (tag.charAt(1) != '0')
2998:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:(directoryLength - offsetToFT) % 12 == 11 && tag.charAt(1) != '0' |==> false
2999:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:(directoryLength - offsetToFT) % 12 == 11 && tag.charAt(1) != '0' |==> (directoryLength - offsetToFT) % 12 == 11
3000:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):737:(directoryLength - offsetToFT) % 12 == 11 && tag.charAt(1) != '0' |==> tag.charAt(1) != '0'
3001:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):738:0 |==> 1
3002:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):738:0 |==> -1
3003:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):738:2 |==> 0
3004:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):738:2 |==> -2
3005:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):739:2 |==> 0
3006:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):739:2 |==> -2
3007:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):739:6 |==> 0
3008:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):739:6 |==> -6
3009:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):740:6 |==> 0
3010:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):740:6 |==> -6
3011:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):740:11 |==> 0
3012:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):740:11 |==> -11
3013:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):741:recordBuf[directoryLength] == Constants.FT |==> recordBuf[directoryLength] <= Constants.FT
3014:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):741:recordBuf[directoryLength] == Constants.FT |==> recordBuf[directoryLength] >= Constants.FT
3015:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):741:recordBuf[directoryLength] == Constants.FT |==> false
3016:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):741:directoryLength + lengthA |==> directoryLength % lengthA
3017:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):741:directoryLength + lengthA |==> directoryLength * lengthA
3018:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):741:directoryLength + lengthA |==> directoryLength - lengthA
3019:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):741:directoryLength + lengthA |==> directoryLength / lengthA
3020:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):741:recordBuf[directoryLength + lengthA] == Constants.FT |==> recordBuf[directoryLength + lengthA] <= Constants.FT
3021:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):741:recordBuf[directoryLength + lengthA] == Constants.FT |==> recordBuf[directoryLength + lengthA] >= Constants.FT
3022:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):741:recordBuf[directoryLength + lengthA] == Constants.FT |==> false
3023:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):741:recordBuf[directoryLength] == Constants.FT && recordBuf[directoryLength + lengthA] == Constants.FT |==> recordBuf[directoryLength] == Constants.FT == (recordBuf[directoryLength + lengthA] == Constants.FT)
3024:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):741:recordBuf[directoryLength] == Constants.FT && recordBuf[directoryLength + lengthA] == Constants.FT |==> false
3025:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):741:recordBuf[directoryLength] == Constants.FT && recordBuf[directoryLength + lengthA] == Constants.FT |==> recordBuf[directoryLength] == Constants.FT
3026:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):741:recordBuf[directoryLength] == Constants.FT && recordBuf[directoryLength + lengthA] == Constants.FT |==> recordBuf[directoryLength + lengthA] == Constants.FT
3027:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):742:record.addError("n/a", "n/a", MarcError.MAJOR_ERROR, "Directory length is not a multiple of 12 bytes long.  Prepending a zero and trying to continue.") |==> <NO-OP>
3028:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):745:tag = tagA |==> <NO-OP>
3029:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):746:length = lengthA |==> <NO-OP>
3030:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):747:offset = offsetA |==> <NO-OP>
3031:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):748:11 |==> 0
3032:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):748:11 |==> -11
3033:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):748:increment = 11 |==> <NO-OP>
3034:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:totalOffset != offset |==> totalOffset < offset
3035:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:totalOffset != offset |==> totalOffset > offset
3036:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:totalOffset != offset |==> true
3037:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:99999 |==> 0
3038:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:99999 |==> -99999
3039:ROR:>(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:totalOffset > 99999 |==> totalOffset != 99999
3040:ROR:>(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:totalOffset > 99999 |==> totalOffset >= 99999
3041:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:totalOffset > 99999 |==> false
3042:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:totalOffset != offset && totalOffset > 99999 |==> totalOffset != offset == totalOffset > 99999
3043:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:totalOffset != offset && totalOffset > 99999 |==> false
3044:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:totalOffset != offset && totalOffset > 99999 |==> totalOffset != offset
3045:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:totalOffset != offset && totalOffset > 99999 |==> totalOffset > 99999
3046:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:99999 |==> 0
3047:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:99999 |==> -99999
3048:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:offset != 99999 |==> offset < 99999
3049:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:offset != 99999 |==> offset > 99999
3050:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:offset != 99999 |==> true
3051:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:totalOffset != offset && totalOffset > 99999 && offset != 99999 |==> (totalOffset != offset && totalOffset > 99999) == (offset != 99999)
3052:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:totalOffset != offset && totalOffset > 99999 && offset != 99999 |==> false
3053:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:totalOffset != offset && totalOffset > 99999 && offset != 99999 |==> totalOffset != offset && totalOffset > 99999
3054:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):752:totalOffset != offset && totalOffset > 99999 && offset != 99999 |==> offset != 99999
3055:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):755:7 |==> 0
3056:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):755:7 |==> -7
3057:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):755:13 |==> 0
3058:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):755:13 |==> -13
3059:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):756:8 |==> 0
3060:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):756:8 |==> -8
3061:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):756:13 |==> 0
3062:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):756:13 |==> -13
3063:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):757:3 |==> 0
3064:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):757:3 |==> -3
3065:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):757:8 |==> 0
3066:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):757:8 |==> -8
3067:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):758:offset1 == totalOffset |==> offset1 <= totalOffset
3068:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):758:offset1 == totalOffset |==> offset1 >= totalOffset
3069:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):758:offset1 == totalOffset |==> false
3070:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):759:offset = offset1 |==> <NO-OP>
3071:COR:flaggedError1:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):760:flaggedError1 |==> false
3072:COR:flaggedError1:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):760:flaggedError1 |==> true
3073:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):761:record.addError("n/a", "n/a", MarcError.MAJOR_ERROR, "Offset as stored in directory entry has more than 5 digits. Trying to continue.") |==> <NO-OP>
3074:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):763:true |==> false
3075:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):763:flaggedError1 = true |==> <NO-OP>
3076:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):765:13 |==> 0
3077:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):765:13 |==> -13
3078:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):765:increment = 13 |==> <NO-OP>
3079:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):766:offset2 == totalOffset |==> offset2 <= totalOffset
3080:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):766:offset2 == totalOffset |==> offset2 >= totalOffset
3081:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):766:offset2 == totalOffset |==> false
3082:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):766:0 |==> 1
3083:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):766:0 |==> -1
3084:ROR:>(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):766:totalOffset > 0 |==> totalOffset != 0
3085:ROR:>(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):766:totalOffset > 0 |==> totalOffset >= 0
3086:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):766:totalOffset > 0 |==> false
3087:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):766:offset2 == totalOffset && totalOffset > 0 |==> offset2 == totalOffset == totalOffset > 0
3088:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):766:offset2 == totalOffset && totalOffset > 0 |==> false
3089:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):766:offset2 == totalOffset && totalOffset > 0 |==> offset2 == totalOffset
3090:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):766:offset2 == totalOffset && totalOffset > 0 |==> totalOffset > 0
3091:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):767:offset = offset2 |==> <NO-OP>
3092:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):768:length = length2 |==> <NO-OP>
3093:COR:flaggedError2:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):769:flaggedError2 |==> false
3094:COR:flaggedError2:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):769:flaggedError2 |==> true
3095:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):770:record.addError("n/a", "n/a", MarcError.MAJOR_ERROR, "Field is longer than 9999 bytes.  Writing this record out will result in a bad record.") |==> <NO-OP>
3096:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):772:true |==> false
3097:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):772:flaggedError2 = true |==> <NO-OP>
3098:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):774:13 |==> 0
3099:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):774:13 |==> -13
3100:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):774:increment = 13 |==> <NO-OP>
3101:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):779:tags.add(tag) |==> <NO-OP>
3102:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):780:lengths.add(length) |==> <NO-OP>
3103:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):781:offsets.add(totalOffset) |==> <NO-OP>
3104:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):782:offsetToFT += increment |==> <NO-OP>
3105:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):783:recordBuf[offsetToFT] == Constants.FT |==> recordBuf[offsetToFT] <= Constants.FT
3106:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):783:recordBuf[offsetToFT] == Constants.FT |==> recordBuf[offsetToFT] >= Constants.FT
3107:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):783:recordBuf[offsetToFT] == Constants.FT |==> false
3108:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):784:true |==> false
3109:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):784:doneWithDirectory = true |==> <NO-OP>
3110:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):786:offsetsMap.put(offset, i) |==> <NO-OP>
3111:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):787:99999 |==> 0
3112:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):787:99999 |==> -99999
3113:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):787:totalOffset < 99999 |==> totalOffset != 99999
3114:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):787:totalOffset < 99999 |==> totalOffset <= 99999
3115:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):787:totalOffset < 99999 |==> false
3116:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):787:offset != totalOffset |==> offset < totalOffset
3117:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):787:offset != totalOffset |==> offset > totalOffset
3118:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):787:offset != totalOffset |==> true
3119:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):787:totalOffset < 99999 && offset != totalOffset |==> totalOffset < 99999 == (offset != totalOffset)
3120:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):787:totalOffset < 99999 && offset != totalOffset |==> false
3121:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):787:totalOffset < 99999 && offset != totalOffset |==> totalOffset < 99999
3122:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):787:totalOffset < 99999 && offset != totalOffset |==> offset != totalOffset
3123:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):788:record.addError("n/a", "n/a", MarcError.FATAL, "Offsets to fields are out of order AND the directory is messed up. Unable to continue.") |==> <NO-OP>
3124:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):793:totalOffset += length |==> <NO-OP>
3125:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):795:size = tags.size() |==> <NO-OP>
3126:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):797:directoryLength != offsetToFT |==> directoryLength < offsetToFT
3127:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):797:directoryLength != offsetToFT |==> directoryLength > offsetToFT
3128:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):797:directoryLength != offsetToFT |==> true
3129:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):798:record.addError("n/a", "n/a", MarcError.MINOR_ERROR, "Specified directory length not equal to actual directory length.") |==> <NO-OP>
3130:COR:unsortedOffsets:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):802:unsortedOffsets |==> false
3131:COR:unsortedOffsets:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):802:unsortedOffsets |==> true
3132:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):803:Collections.sort(offsets) |==> <NO-OP>
3133:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):807:new DataInputStream(new ByteArrayInputStream(recordBuf)) |==> null
3134:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):809:1 |==> 0
3135:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):809:1 |==> -1
3136:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):809:offsetToFT + 1 |==> offsetToFT % 1
3137:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):809:offsetToFT + 1 |==> offsetToFT * 1
3138:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):809:offsetToFT + 1 |==> offsetToFT - 1
3139:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):809:offsetToFT + 1 |==> offsetToFT / 1
3140:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):809:inputrec.skip(offsetToFT + 1) |==> <NO-OP>
3141:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):811:0 |==> 1
3142:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):811:0 |==> -1
3143:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):813:0 |==> 1
3144:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):813:0 |==> -1
3145:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):814:0 |==> 1
3146:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):814:0 |==> -1
3147:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):815:0 |==> 1
3148:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):815:0 |==> -1
3149:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):815:s < size |==> s != size
3150:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):815:s < size |==> s <= size
3151:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):815:s < size |==> false
3152:COR:unsortedOffsets:TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):816:unsortedOffsets |==> false
3153:COR:unsortedOffsets:FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):816:unsortedOffsets |==> true
3154:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):816:i = unsortedOffsets ? offsetsMap.get(offsets.get(s)).intValue() : s |==> <NO-OP>
3155:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):817:getFieldLength(inputrec) |==> 0
3156:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):818:1 |==> 0
3157:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):818:1 |==> -1
3158:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):818:fieldLength + 1 |==> fieldLength % 1
3159:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):818:fieldLength + 1 |==> fieldLength * 1
3160:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):818:fieldLength + 1 |==> fieldLength - 1
3161:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):818:fieldLength + 1 |==> fieldLength / 1
3162:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):818:fieldLength + 1 != lengths.get(i) |==> fieldLength + 1 < lengths.get(i)
3163:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):818:fieldLength + 1 != lengths.get(i) |==> fieldLength + 1 > lengths.get(i)
3164:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):818:fieldLength + 1 != lengths.get(i) |==> true
3165:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):818:fieldLength + 1 != lengths.get(i) && permissive |==> fieldLength + 1 != lengths.get(i) == permissive
3166:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):818:fieldLength + 1 != lengths.get(i) && permissive |==> false
3167:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):818:fieldLength + 1 != lengths.get(i) && permissive |==> fieldLength + 1 != lengths.get(i)
3168:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):818:fieldLength + 1 != lengths.get(i) && permissive |==> permissive
3169:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:5 |==> 0
3170:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:5 |==> -5
3171:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:numBadLengths < 5 |==> numBadLengths != 5
3172:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:numBadLengths < 5 |==> numBadLengths <= 5
3173:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:numBadLengths < 5 |==> false
3174:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:totalLength + fieldLength |==> totalLength % fieldLength
3175:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:totalLength + fieldLength |==> totalLength * fieldLength
3176:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:totalLength + fieldLength |==> totalLength - fieldLength
3177:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:totalLength + fieldLength |==> totalLength / fieldLength
3178:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:26 |==> 0
3179:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:26 |==> -26
3180:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:recordLength + 26 |==> recordLength % 26
3181:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:recordLength + 26 |==> recordLength * 26
3182:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:recordLength + 26 |==> recordLength - 26
3183:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:recordLength + 26 |==> recordLength / 26
3184:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:totalLength + fieldLength < recordLength + 26 |==> totalLength + fieldLength != recordLength + 26
3185:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:totalLength + fieldLength < recordLength + 26 |==> totalLength + fieldLength <= recordLength + 26
3186:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:totalLength + fieldLength < recordLength + 26 |==> false
3187:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:numBadLengths < 5 && totalLength + fieldLength < recordLength + 26 |==> numBadLengths < 5 == totalLength + fieldLength < recordLength + 26
3188:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:numBadLengths < 5 && totalLength + fieldLength < recordLength + 26 |==> false
3189:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:numBadLengths < 5 && totalLength + fieldLength < recordLength + 26 |==> numBadLengths < 5
3190:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):819:numBadLengths < 5 && totalLength + fieldLength < recordLength + 26 |==> totalLength + fieldLength < recordLength + 26
3191:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):820:9999 |==> 0
3192:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):820:9999 |==> -9999
3193:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):820:inputrec.mark(9999) |==> <NO-OP>
3194:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):821:byteArray = new byte[lengths.get(i)] |==> <NO-OP>
3195:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):822:inputrec.readFully(byteArray) |==> <NO-OP>
3196:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):823:inputrec.reset() |==> <NO-OP>
3197:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:1 |==> 0
3198:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:1 |==> -1
3199:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:fieldLength + 1 |==> fieldLength % 1
3200:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:fieldLength + 1 |==> fieldLength * 1
3201:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:fieldLength + 1 |==> fieldLength - 1
3202:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:fieldLength + 1 |==> fieldLength / 1
3203:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:fieldLength + 1 < lengths.get(i) |==> fieldLength + 1 != lengths.get(i)
3204:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:fieldLength + 1 < lengths.get(i) |==> fieldLength + 1 <= lengths.get(i)
3205:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:fieldLength + 1 < lengths.get(i) |==> false
3206:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:1 |==> 0
3207:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:1 |==> -1
3208:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:lengths.get(i) - 1 |==> lengths.get(i) % 1
3209:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:lengths.get(i) - 1 |==> lengths.get(i) * 1
3210:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:lengths.get(i) - 1 |==> lengths.get(i) + 1
3211:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:lengths.get(i) - 1 |==> lengths.get(i) / 1
3212:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:byteArray[lengths.get(i) - 1] == Constants.FT |==> byteArray[lengths.get(i) - 1] <= Constants.FT
3213:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:byteArray[lengths.get(i) - 1] == Constants.FT |==> byteArray[lengths.get(i) - 1] >= Constants.FT
3214:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:byteArray[lengths.get(i) - 1] == Constants.FT |==> false
3215:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:fieldLength + 1 < lengths.get(i) && byteArray[lengths.get(i) - 1] == Constants.FT |==> fieldLength + 1 < lengths.get(i) == (byteArray[lengths.get(i) - 1] == Constants.FT)
3216:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:fieldLength + 1 < lengths.get(i) && byteArray[lengths.get(i) - 1] == Constants.FT |==> false
3217:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:fieldLength + 1 < lengths.get(i) && byteArray[lengths.get(i) - 1] == Constants.FT |==> fieldLength + 1 < lengths.get(i)
3218:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):824:fieldLength + 1 < lengths.get(i) && byteArray[lengths.get(i) - 1] == Constants.FT |==> byteArray[lengths.get(i) - 1] == Constants.FT
3219:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):825:record.addError("n/a", "n/a", MarcError.MINOR_ERROR, "Field Terminator character found in the middle of a field.") |==> <NO-OP>
3220:STD:<INC>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):828:numBadLengths++ |==> <NO-OP>
3221:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):829:1 |==> 0
3222:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):829:1 |==> -1
3223:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):829:fieldLength + 1 |==> fieldLength % 1
3224:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):829:fieldLength + 1 |==> fieldLength * 1
3225:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):829:fieldLength + 1 |==> fieldLength - 1
3226:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):829:fieldLength + 1 |==> fieldLength / 1
3227:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):829:lengths.set(i, fieldLength + 1) |==> <NO-OP>
3228:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):830:record.addError("n/a", "n/a", MarcError.MINOR_ERROR, "Field length found in record different from length stated in the directory.") |==> <NO-OP>
3229:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):832:1 |==> 0
3230:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):832:1 |==> -1
3231:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):832:fieldLength + 1 |==> fieldLength % 1
3232:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):832:fieldLength + 1 |==> fieldLength * 1
3233:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):832:fieldLength + 1 |==> fieldLength - 1
3234:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):832:fieldLength + 1 |==> fieldLength / 1
3235:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):832:9999 |==> 0
3236:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):832:9999 |==> -9999
3237:ROR:>(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):832:fieldLength + 1 > 9999 |==> fieldLength + 1 != 9999
3238:ROR:>(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):832:fieldLength + 1 > 9999 |==> fieldLength + 1 >= 9999
3239:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):832:fieldLength + 1 > 9999 |==> false
3240:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):833:record.addError("n/a", "n/a", MarcError.FATAL, "Field length is greater than 9999, record cannot be represented as a binary Marc record.") |==> <NO-OP>
3241:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):841:totalLength += lengths.get(i) |==> <NO-OP>
3242:COR:isControlField(tags.get(i)):TRUE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):842:isControlField(tags.get(i)) |==> false
3243:COR:isControlField(tags.get(i)):FALSE:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):842:isControlField(tags.get(i)) |==> true
3244:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):843:1 |==> 0
3245:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):843:1 |==> -1
3246:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):843:lengths.get(i) - 1 |==> lengths.get(i) % 1
3247:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):843:lengths.get(i) - 1 |==> lengths.get(i) * 1
3248:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):843:lengths.get(i) - 1 |==> lengths.get(i) + 1
3249:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):843:lengths.get(i) - 1 |==> lengths.get(i) / 1
3250:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):843:byteArray = new byte[lengths.get(i) - 1] |==> <NO-OP>
3251:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):844:inputrec.readFully(byteArray) |==> <NO-OP>
3252:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):846:inputrec.read() != Constants.FT |==> inputrec.read() < Constants.FT
3253:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):846:inputrec.read() != Constants.FT |==> inputrec.read() > Constants.FT
3254:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):846:inputrec.read() != Constants.FT |==> true
3255:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):847:record.addError("n/a", "n/a", MarcError.FATAL, "Expected field terminator at end of field. Unable to continue.") |==> <NO-OP>
3256:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):852:factory.newControlField() |==> null
3257:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):853:field.setTag(tags.get(i)) |==> <NO-OP>
3258:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):854:field.setData(getDataAsString(byteArray)) |==> <NO-OP>
3259:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):855:record.addVariableField(field) |==> <NO-OP>
3260:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):858:byteArray = new byte[lengths.get(i)] |==> <NO-OP>
3261:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):859:inputrec.readFully(byteArray) |==> <NO-OP>
3262:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):861:record.addVariableField(parseDataField(record, tags.get(i), byteArray)) |==> <NO-OP>
3263:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):874:1 |==> 0
3264:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):874:1 |==> -1
3265:ROR:>(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):874:conversionCheck1.length() > 1 |==> conversionCheck1.length() != 1
3266:ROR:>(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):874:conversionCheck1.length() > 1 |==> conversionCheck1.length() >= 1
3267:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):874:conversionCheck1.length() > 1 |==> false
3268:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):874:permissive && conversionCheck1.length() > 1 |==> permissive == conversionCheck1.length() > 1
3269:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):874:permissive && conversionCheck1.length() > 1 |==> false
3270:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):874:permissive && conversionCheck1.length() > 1 |==> permissive
3271:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):874:permissive && conversionCheck1.length() > 1 |==> conversionCheck1.length() > 1
3272:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):875:1 |==> 0
3273:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):875:1 |==> -1
3274:ROR:>(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):875:conversionCheck2.length() > 1 |==> conversionCheck2.length() != 1
3275:ROR:>(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):875:conversionCheck2.length() > 1 |==> conversionCheck2.length() >= 1
3276:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):875:conversionCheck2.length() > 1 |==> false
3277:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):874:permissive && conversionCheck1.length() > 1 && conversionCheck2.length() > 1 |==> (permissive && conversionCheck1.length() > 1) == conversionCheck2.length() > 1
3278:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):874:permissive && conversionCheck1.length() > 1 && conversionCheck2.length() > 1 |==> false
3279:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):874:permissive && conversionCheck1.length() > 1 && conversionCheck2.length() > 1 |==> permissive && conversionCheck1.length() > 1
3280:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):875:permissive && conversionCheck1.length() > 1 && conversionCheck2.length() > 1 |==> conversionCheck2.length() > 1
3281:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):875:1 |==> 0
3282:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):875:1 |==> -1
3283:ROR:>(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):875:conversionCheck3.length() > 1 |==> conversionCheck3.length() != 1
3284:ROR:>(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):875:conversionCheck3.length() > 1 |==> conversionCheck3.length() >= 1
3285:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):875:conversionCheck3.length() > 1 |==> false
3286:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):874:permissive && conversionCheck1.length() > 1 && conversionCheck2.length() > 1 && conversionCheck3.length() > 1 |==> (permissive && conversionCheck1.length() > 1 && conversionCheck2.length() > 1) == conversionCheck3.length() > 1
3287:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):875:permissive && conversionCheck1.length() > 1 && conversionCheck2.length() > 1 && conversionCheck3.length() > 1 |==> false
3288:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):874:permissive && conversionCheck1.length() > 1 && conversionCheck2.length() > 1 && conversionCheck3.length() > 1 |==> permissive && conversionCheck1.length() > 1 && conversionCheck2.length() > 1
3289:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):875:permissive && conversionCheck1.length() > 1 && conversionCheck2.length() > 1 && conversionCheck3.length() > 1 |==> conversionCheck3.length() > 1
3290:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):876:guessAndSelectCorrectNonUTF8Encoding() |==> <NO-OP>
3291:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):878:inputrec.read() != Constants.RT |==> inputrec.read() < Constants.RT
3292:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):878:inputrec.read() != Constants.RT |==> inputrec.read() > Constants.RT
3293:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):878:inputrec.read() != Constants.RT |==> true
3294:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):879:record.addError("n/a", "n/a", MarcError.FATAL, "Expected record terminator at end of record. Unable to continue.") |==> <NO-OP>
3295:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):884:record.addError("n/a", "n/a", MarcError.FATAL, "Error reading from data file. Unable to continue.") |==> <NO-OP>
3296:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@addError(int,java.lang.String):902:record.addError(currentField, currentSubfield, severity, message) |==> <NO-OP>
3297:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@isControlField(java.lang.String):906:false |==> true
3298:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@isControlField(java.lang.String):908:isControl = Verifier.isControlField(tag) |==> <NO-OP>
3299:COR:permissive:TRUE:org.marc4j.MarcPermissiveStreamReader@isControlField(java.lang.String):910:permissive |==> false
3300:COR:permissive:FALSE:org.marc4j.MarcPermissiveStreamReader@isControlField(java.lang.String):910:permissive |==> true
3301:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@isControlField(java.lang.String):911:record.addError(tag, "n/a", MarcError.ERROR_TYPO, "Field tag contains non-numeric characters (" + tag + ").") |==> <NO-OP>
3302:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@isControlField(java.lang.String):913:false |==> true
3303:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@isControlField(java.lang.String):913:isControl = false |==> <NO-OP>
3304:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@isControlField(java.lang.String):916:isControl |==> false
3305:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():920:0 |==> 1
3306:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():920:0 |==> -1
3307:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():922:record.getVariableField("245") == null |==> false
3308:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():923:1 |==> 0
3309:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():923:1 |==> -1
3310:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():923:defaultPart = 1 |==> <NO-OP>
3311:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():926:0 |==> 1
3312:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():926:0 |==> -1
3313:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():927:conversionCheck1.length() |==> 0
3314:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():928:conversionCheck2.length() |==> 0
3315:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():929:conversionCheck3.length() |==> 0
3316:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:l1 < l3 |==> l1 != l3
3317:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:l1 < l3 |==> l1 <= l3
3318:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:l1 < l3 |==> false
3319:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:l2 == l3 |==> l2 <= l3
3320:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:l2 == l3 |==> l2 >= l3
3321:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:l2 == l3 |==> false
3322:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:l1 < l3 && l2 == l3 |==> l1 < l3 == (l2 == l3)
3323:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:l1 < l3 && l2 == l3 |==> false
3324:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:l1 < l3 && l2 == l3 |==> l1 < l3
3325:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:l1 < l3 && l2 == l3 |==> l2 == l3
3326:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:0 |==> 1
3327:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:0 |==> -1
3328:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:defaultPart == 0 |==> defaultPart <= 0
3329:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:defaultPart == 0 |==> defaultPart >= 0
3330:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:defaultPart == 0 |==> false
3331:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:l1 < l3 && l2 == l3 && defaultPart == 0 |==> (l1 < l3 && l2 == l3) == (defaultPart == 0)
3332:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:l1 < l3 && l2 == l3 && defaultPart == 0 |==> false
3333:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:l1 < l3 && l2 == l3 && defaultPart == 0 |==> l1 < l3 && l2 == l3
3334:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():932:l1 < l3 && l2 == l3 && defaultPart == 0 |==> defaultPart == 0
3335:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():933:addError(MarcError.INFO, "MARC8 translation shorter than ISO-8859-1, choosing MARC8.") |==> <NO-OP>
3336:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():934:0 |==> 1
3337:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():934:0 |==> -1
3338:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():934:partToUse = 0 |==> <NO-OP>
3339:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:2 |==> 0
3340:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:2 |==> -2
3341:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l1 - 2 |==> l1 % 2
3342:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l1 - 2 |==> l1 * 2
3343:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l1 - 2 |==> l1 + 2
3344:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l1 - 2 |==> l1 / 2
3345:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l2 < l1 - 2 |==> l2 != l1 - 2
3346:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l2 < l1 - 2 |==> l2 <= l1 - 2
3347:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l2 < l1 - 2 |==> false
3348:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:2 |==> 0
3349:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:2 |==> -2
3350:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l3 - 2 |==> l3 % 2
3351:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l3 - 2 |==> l3 * 2
3352:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l3 - 2 |==> l3 + 2
3353:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l3 - 2 |==> l3 / 2
3354:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l2 < l3 - 2 |==> l2 != l3 - 2
3355:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l2 < l3 - 2 |==> l2 <= l3 - 2
3356:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l2 < l3 - 2 |==> false
3357:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l2 < l1 - 2 && l2 < l3 - 2 |==> l2 < l1 - 2 == l2 < l3 - 2
3358:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l2 < l1 - 2 && l2 < l3 - 2 |==> false
3359:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l2 < l1 - 2 && l2 < l3 - 2 |==> l2 < l1 - 2
3360:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():935:l2 < l1 - 2 && l2 < l3 - 2 |==> l2 < l3 - 2
3361:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():936:addError(MarcError.INFO, "Unimarc translation shortest, choosing it.") |==> <NO-OP>
3362:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():937:1 |==> 0
3363:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():937:1 |==> -1
3364:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():937:partToUse = 1 |==> <NO-OP>
3365:LVR:NEG:0:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():939:-1 |==> 0
3366:LVR:NEG:POS:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():939:-1 |==> 1
3367:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():938:(tst = onlyOneStartsWithUpperCase(conversionCheck1, conversionCheck2, conversionCheck3)) != -1 |==> (tst = onlyOneStartsWithUpperCase(conversionCheck1, conversionCheck2, conversionCheck3)) < -1
3368:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():938:(tst = onlyOneStartsWithUpperCase(conversionCheck1, conversionCheck2, conversionCheck3)) != -1 |==> (tst = onlyOneStartsWithUpperCase(conversionCheck1, conversionCheck2, conversionCheck3)) > -1
3369:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():940:partToUse = tst |==> <NO-OP>
3370:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():941:l2 < l1 |==> l2 != l1
3371:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():941:l2 < l1 |==> l2 <= l1
3372:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():941:l2 < l1 |==> false
3373:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():941:l2 < l3 |==> l2 != l3
3374:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():941:l2 < l3 |==> l2 <= l3
3375:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():941:l2 < l3 |==> false
3376:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():941:l2 < l1 && l2 < l3 |==> l2 < l1 == l2 < l3
3377:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():941:l2 < l1 && l2 < l3 |==> false
3378:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():941:l2 < l1 && l2 < l3 |==> l2 < l1
3379:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():941:l2 < l1 && l2 < l3 |==> l2 < l3
3380:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():942:addError(MarcError.INFO, "Unimarc translation shortest, choosing it.") |==> <NO-OP>
3381:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():943:1 |==> 0
3382:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():943:1 |==> -1
3383:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():943:partToUse = 1 |==> <NO-OP>
3384:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():944:conversionCheck2.equals(conversionCheck3) && !conversionCheck1.trim().contains(" ") |==> conversionCheck2.equals(conversionCheck3) == !conversionCheck1.trim().contains(" ")
3385:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():944:conversionCheck2.equals(conversionCheck3) && !conversionCheck1.trim().contains(" ") |==> false
3386:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():944:conversionCheck2.equals(conversionCheck3) && !conversionCheck1.trim().contains(" ") |==> conversionCheck2.equals(conversionCheck3)
3387:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():944:conversionCheck2.equals(conversionCheck3) && !conversionCheck1.trim().contains(" ") |==> !conversionCheck1.trim().contains(" ")
3388:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():946:addError(MarcError.INFO, "Unimarc and ISO-8859-1 translations identical, choosing ISO-8859-1.") |==> <NO-OP>
3389:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():948:2 |==> 0
3390:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():948:2 |==> -2
3391:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():948:partToUse = 2 |==> <NO-OP>
3392:COR:specialCharIsBetweenLetters(conversionCheck1):TRUE:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():949:specialCharIsBetweenLetters(conversionCheck1) |==> false
3393:COR:specialCharIsBetweenLetters(conversionCheck1):FALSE:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():949:specialCharIsBetweenLetters(conversionCheck1) |==> true
3394:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():951:0 |==> 1
3395:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():951:0 |==> -1
3396:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():951:defaultPart == 0 |==> defaultPart <= 0
3397:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():951:defaultPart == 0 |==> defaultPart >= 0
3398:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():951:defaultPart == 0 |==> false
3399:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():950:addError(MarcError.INFO, "To few letters in translations, choosing " + (defaultPart == 0 ? "MARC8" : "Unimarc")) |==> <NO-OP>
3400:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():952:partToUse = defaultPart |==> <NO-OP>
3401:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():953:l2 == l3 |==> l2 <= l3
3402:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():953:l2 == l3 |==> l2 >= l3
3403:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():953:l2 == l3 |==> false
3404:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():953:1 |==> 0
3405:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():953:1 |==> -1
3406:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():953:defaultPart == 1 |==> defaultPart <= 1
3407:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():953:defaultPart == 1 |==> defaultPart >= 1
3408:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():953:defaultPart == 1 |==> false
3409:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():953:l2 == l3 && defaultPart == 1 |==> l2 == l3 == (defaultPart == 1)
3410:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():953:l2 == l3 && defaultPart == 1 |==> false
3411:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():953:l2 == l3 && defaultPart == 1 |==> l2 == l3
3412:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():953:l2 == l3 && defaultPart == 1 |==> defaultPart == 1
3413:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():954:addError(MarcError.INFO, "Unimarc and ISO-8859-1 translations equal length, choosing ISO-8859-1.") |==> <NO-OP>
3414:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():956:2 |==> 0
3415:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():956:2 |==> -2
3416:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():956:partToUse = 2 |==> <NO-OP>
3417:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():959:0 |==> 1
3418:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():959:0 |==> -1
3419:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():959:defaultPart == 0 |==> defaultPart <= 0
3420:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():959:defaultPart == 0 |==> defaultPart >= 0
3421:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():959:defaultPart == 0 |==> false
3422:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():958:addError(MarcError.INFO, "No Determination made, defaulting to " + (defaultPart == 0 ? "MARC8" : "Unimarc")) |==> <NO-OP>
3423:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():960:partToUse = defaultPart |==> <NO-OP>
3424:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():962:record.getVariableFields() |==> null
3425:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():963:fields.iterator() |==> null
3426:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():965:iter.next() |==> null
3427:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():967:(DataField)field |==> null
3428:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():968:df.getSubfields() |==> null
3429:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():969:subf.iterator() |==> null
3430:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():971:sfiter.next() |==> null
3431:COR:sf.getData().contains("%%@%%"):TRUE:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():972:sf.getData().contains("%%@%%") |==> false
3432:COR:sf.getData().contains("%%@%%"):FALSE:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():972:sf.getData().contains("%%@%%") |==> true
3433:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():973:3 |==> 0
3434:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():973:3 |==> -3
3435:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@guessAndSelectCorrectNonUTF8Encoding():974:sf.setData(parts[partToUse]) |==> <NO-OP>
3436:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:0 |==> 1
3437:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:0 |==> -1
3438:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:conversionCheck1.length() == 0 |==> conversionCheck1.length() <= 0
3439:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:conversionCheck1.length() == 0 |==> conversionCheck1.length() >= 0
3440:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:conversionCheck1.length() == 0 |==> false
3441:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:0 |==> 1
3442:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:0 |==> -1
3443:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:conversionCheck2.length() == 0 |==> conversionCheck2.length() <= 0
3444:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:conversionCheck2.length() == 0 |==> conversionCheck2.length() >= 0
3445:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:conversionCheck2.length() == 0 |==> false
3446:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:conversionCheck1.length() == 0 || conversionCheck2.length() == 0 |==> conversionCheck1.length() == 0 != (conversionCheck2.length() == 0)
3447:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:conversionCheck1.length() == 0 || conversionCheck2.length() == 0 |==> conversionCheck1.length() == 0
3448:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:conversionCheck1.length() == 0 || conversionCheck2.length() == 0 |==> conversionCheck2.length() == 0
3449:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:conversionCheck1.length() == 0 || conversionCheck2.length() == 0 |==> true
3450:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):984:0 |==> 1
3451:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):984:0 |==> -1
3452:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:conversionCheck3.length() == 0 |==> conversionCheck3.length() <= 0
3453:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:conversionCheck3.length() == 0 |==> conversionCheck3.length() >= 0
3454:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):984:conversionCheck3.length() == 0 |==> false
3455:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:conversionCheck1.length() == 0 || conversionCheck2.length() == 0 || conversionCheck3.length() == 0 |==> (conversionCheck1.length() == 0 || conversionCheck2.length() == 0) != (conversionCheck3.length() == 0)
3456:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:conversionCheck1.length() == 0 || conversionCheck2.length() == 0 || conversionCheck3.length() == 0 |==> conversionCheck1.length() == 0 || conversionCheck2.length() == 0
3457:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:conversionCheck1.length() == 0 || conversionCheck2.length() == 0 || conversionCheck3.length() == 0 |==> conversionCheck3.length() == 0
3458:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):983:conversionCheck1.length() == 0 || conversionCheck2.length() == 0 || conversionCheck3.length() == 0 |==> true
3459:LVR:NEG:0:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):985:-1 |==> 0
3460:LVR:NEG:POS:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):985:-1 |==> 1
3461:STD:<RETURN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):985:return Config.__M_NO == 0 && Config.COVERED(3459, 3460) ? -1 : Config.__M_NO == 3460 ? 1 : Config.__M_NO == 3459 ? 0 : -1; |==> <NO-OP>
3462:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):987:conversionCheck1.trim().split("[|]>") |==> null
3463:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):988:conversionCheck2.trim().split("[|]>") |==> null
3464:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):989:conversionCheck3.trim().split("[|]>") |==> null
3465:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:1 |==> 0
3466:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:1 |==> -1
3467:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:i < check1Parts.length |==> i != check1Parts.length
3468:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:i < check1Parts.length |==> i <= check1Parts.length
3469:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:i < check1Parts.length |==> false
3470:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:i < check2Parts.length |==> i != check2Parts.length
3471:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:i < check2Parts.length |==> i <= check2Parts.length
3472:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:i < check2Parts.length |==> false
3473:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:i < check1Parts.length && i < check2Parts.length |==> i < check1Parts.length == i < check2Parts.length
3474:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:i < check1Parts.length && i < check2Parts.length |==> false
3475:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:i < check1Parts.length && i < check2Parts.length |==> i < check1Parts.length
3476:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:i < check1Parts.length && i < check2Parts.length |==> i < check2Parts.length
3477:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:i < check3Parts.length |==> i != check3Parts.length
3478:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:i < check3Parts.length |==> i <= check3Parts.length
3479:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:i < check3Parts.length |==> false
3480:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:i < check1Parts.length && i < check2Parts.length && i < check3Parts.length |==> (i < check1Parts.length && i < check2Parts.length) == i < check3Parts.length
3481:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:i < check1Parts.length && i < check2Parts.length && i < check3Parts.length |==> false
3482:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:i < check1Parts.length && i < check2Parts.length && i < check3Parts.length |==> i < check1Parts.length && i < check2Parts.length
3483:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):990:i < check1Parts.length && i < check2Parts.length && i < check3Parts.length |==> i < check3Parts.length
3484:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):991:0 |==> 1
3485:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):991:0 |==> -1
3486:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):992:0 |==> 1
3487:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):992:0 |==> -1
3488:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):993:0 |==> 1
3489:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):993:0 |==> -1
3490:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):994:tst1 && !tst2 |==> tst1 == !tst2
3491:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):994:tst1 && !tst2 |==> false
3492:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):994:tst1 && !tst2 |==> tst1
3493:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):994:tst1 && !tst2 |==> !tst2
3494:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):994:tst1 && !tst2 && !tst3 |==> (tst1 && !tst2) == !tst3
3495:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):994:tst1 && !tst2 && !tst3 |==> false
3496:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):994:tst1 && !tst2 && !tst3 |==> tst1 && !tst2
3497:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):994:tst1 && !tst2 && !tst3 |==> !tst3
3498:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):995:0 |==> 1
3499:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):995:0 |==> -1
3500:STD:<RETURN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):995:return Config.__M_NO == 0 && Config.COVERED(3498, 3499) ? 0 : Config.__M_NO == 3499 ? -1 : Config.__M_NO == 3498 ? 1 : 0; |==> <NO-OP>
3501:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):997:!tst1 && tst2 |==> !tst1 == tst2
3502:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):997:!tst1 && tst2 |==> false
3503:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):997:!tst1 && tst2 |==> !tst1
3504:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):997:!tst1 && tst2 |==> tst2
3505:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):997:!tst1 && tst2 && !tst3 |==> (!tst1 && tst2) == !tst3
3506:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):997:!tst1 && tst2 && !tst3 |==> false
3507:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):997:!tst1 && tst2 && !tst3 |==> !tst1 && tst2
3508:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):997:!tst1 && tst2 && !tst3 |==> !tst3
3509:LVR:NEG:0:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):998:-1 |==> 0
3510:LVR:NEG:POS:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):998:-1 |==> 1
3511:STD:<RETURN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):998:return Config.__M_NO == 0 && Config.COVERED(3509, 3510) ? -1 : Config.__M_NO == 3510 ? 1 : Config.__M_NO == 3509 ? 0 : -1; |==> <NO-OP>
3512:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):1000:!tst1 && !tst2 |==> !tst1 == !tst2
3513:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):1000:!tst1 && !tst2 |==> false
3514:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):1000:!tst1 && !tst2 |==> !tst1
3515:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):1000:!tst1 && !tst2 |==> !tst2
3516:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):1000:!tst1 && !tst2 && tst3 |==> (!tst1 && !tst2) == tst3
3517:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):1000:!tst1 && !tst2 && tst3 |==> false
3518:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):1000:!tst1 && !tst2 && tst3 |==> !tst1 && !tst2
3519:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):1000:!tst1 && !tst2 && tst3 |==> tst3
3520:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):1001:2 |==> 0
3521:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):1001:2 |==> -2
3522:STD:<RETURN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):1001:return Config.__M_NO == 0 && Config.COVERED(3520, 3521) ? 2 : Config.__M_NO == 3521 ? -2 : Config.__M_NO == 3520 ? 0 : 2; |==> <NO-OP>
3523:LVR:NEG:0:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):1004:-1 |==> 0
3524:LVR:NEG:POS:org.marc4j.MarcPermissiveStreamReader@onlyOneStartsWithUpperCase(java.lang.String,java.lang.String,java.lang.String):1004:-1 |==> 1
3525:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1008:true |==> false
3526:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1010:0 |==> 1
3527:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1010:0 |==> -1
3528:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1010:i < conversionCheck.length() |==> i != conversionCheck.length()
3529:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1010:i < conversionCheck.length() |==> i <= conversionCheck.length()
3530:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1010:i < conversionCheck.length() |==> false
3531:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1011:conversionCheck.charAt(i) |==> 0
3532:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1013:127 |==> 0
3533:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1013:127 |==> -127
3534:ROR:>(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1013:charCode > 127 |==> charCode != 127
3535:ROR:>(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1013:charCode > 127 |==> charCode >= 127
3536:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1013:charCode > 127 |==> false
3537:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1014:false |==> true
3538:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1014:bewteenLetters = false |==> <NO-OP>
3539:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:0 |==> 1
3540:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:0 |==> -1
3541:ROR:>(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i > 0 |==> i != 0
3542:ROR:>(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i > 0 |==> i >= 0
3543:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i > 0 |==> false
3544:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:1 |==> 0
3545:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:1 |==> -1
3546:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i - 1 |==> i % 1
3547:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i - 1 |==> i * 1
3548:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i - 1 |==> i + 1
3549:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i - 1 |==> i / 1
3550:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i > 0 && Character.isLetter((int)conversionCheck.charAt(i - 1)) |==> i > 0 == Character.isLetter((int)conversionCheck.charAt(i - 1))
3551:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i > 0 && Character.isLetter((int)conversionCheck.charAt(i - 1)) |==> false
3552:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i > 0 && Character.isLetter((int)conversionCheck.charAt(i - 1)) |==> i > 0
3553:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i > 0 && Character.isLetter((int)conversionCheck.charAt(i - 1)) |==> Character.isLetter((int)conversionCheck.charAt(i - 1))
3554:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1016:1 |==> 0
3555:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1016:1 |==> -1
3556:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:conversionCheck.length() - 1 |==> conversionCheck.length() % 1
3557:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:conversionCheck.length() - 1 |==> conversionCheck.length() * 1
3558:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:conversionCheck.length() - 1 |==> conversionCheck.length() + 1
3559:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:conversionCheck.length() - 1 |==> conversionCheck.length() / 1
3560:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i < conversionCheck.length() - 1 |==> i != conversionCheck.length() - 1
3561:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i < conversionCheck.length() - 1 |==> i <= conversionCheck.length() - 1
3562:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i < conversionCheck.length() - 1 |==> false
3563:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1016:1 |==> 0
3564:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1016:1 |==> -1
3565:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1016:i + 1 |==> i % 1
3566:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1016:i + 1 |==> i * 1
3567:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1016:i + 1 |==> i - 1
3568:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1016:i + 1 |==> i / 1
3569:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i < conversionCheck.length() - 1 && Character.isLetter((int)conversionCheck.charAt(i + 1)) |==> i < conversionCheck.length() - 1 == Character.isLetter((int)conversionCheck.charAt(i + 1))
3570:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1016:i < conversionCheck.length() - 1 && Character.isLetter((int)conversionCheck.charAt(i + 1)) |==> false
3571:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i < conversionCheck.length() - 1 && Character.isLetter((int)conversionCheck.charAt(i + 1)) |==> i < conversionCheck.length() - 1
3572:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1016:i < conversionCheck.length() - 1 && Character.isLetter((int)conversionCheck.charAt(i + 1)) |==> Character.isLetter((int)conversionCheck.charAt(i + 1))
3573:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i > 0 && Character.isLetter((int)conversionCheck.charAt(i - 1)) || i < conversionCheck.length() - 1 && Character.isLetter((int)conversionCheck.charAt(i + 1)) |==> (i > 0 && Character.isLetter((int)conversionCheck.charAt(i - 1))) != (i < conversionCheck.length() - 1 && Character.isLetter((int)conversionCheck.charAt(i + 1)))
3574:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i > 0 && Character.isLetter((int)conversionCheck.charAt(i - 1)) || i < conversionCheck.length() - 1 && Character.isLetter((int)conversionCheck.charAt(i + 1)) |==> i > 0 && Character.isLetter((int)conversionCheck.charAt(i - 1))
3575:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i > 0 && Character.isLetter((int)conversionCheck.charAt(i - 1)) || i < conversionCheck.length() - 1 && Character.isLetter((int)conversionCheck.charAt(i + 1)) |==> i < conversionCheck.length() - 1 && Character.isLetter((int)conversionCheck.charAt(i + 1))
3576:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1015:i > 0 && Character.isLetter((int)conversionCheck.charAt(i - 1)) || i < conversionCheck.length() - 1 && Character.isLetter((int)conversionCheck.charAt(i + 1)) |==> true
3577:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1017:true |==> false
3578:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1017:bewteenLetters = true |==> <NO-OP>
3579:STD:<BREAK>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1018:break; |==> <NO-OP>
3580:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@specialCharIsBetweenLetters(java.lang.String):1023:bewteenLetters |==> false
3581:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@arrayContainsAt(byte[],int):1027:0 |==> 1
3582:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@arrayContainsAt(byte[],int):1027:0 |==> -1
3583:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@arrayContainsAt(byte[],int):1027:i < byteArray.length |==> i != byteArray.length
3584:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@arrayContainsAt(byte[],int):1027:i < byteArray.length |==> i <= byteArray.length
3585:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@arrayContainsAt(byte[],int):1027:i < byteArray.length |==> false
3586:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@arrayContainsAt(byte[],int):1028:byteArray[i] == (byte)ft |==> byteArray[i] <= (byte)ft
3587:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@arrayContainsAt(byte[],int):1028:byteArray[i] == (byte)ft |==> byteArray[i] >= (byte)ft
3588:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@arrayContainsAt(byte[],int):1028:byteArray[i] == (byte)ft |==> false
3589:STD:<RETURN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@arrayContainsAt(byte[],int):1029:return i; |==> <NO-OP>
3590:LVR:NEG:0:org.marc4j.MarcPermissiveStreamReader@arrayContainsAt(byte[],int):1033:-1 |==> 0
3591:LVR:NEG:POS:org.marc4j.MarcPermissiveStreamReader@arrayContainsAt(byte[],int):1033:-1 |==> 1
3592:COR:permissive:TRUE:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1038:permissive |==> false
3593:COR:permissive:FALSE:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1038:permissive |==> true
3594:COR:tag.equals("880"):TRUE:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1039:tag.equals("880") |==> false
3595:COR:tag.equals("880"):FALSE:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1039:tag.equals("880") |==> true
3596:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1040:new String(field) |==> null
3597:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1041:fieldTag = fieldTag.replaceFirst("^.*\\x1F6", "").replaceFirst("([-0-9]*).*", "$1") |==> <NO-OP>
3598:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1042:currentField = tag + "(" + fieldTag + ")" |==> <NO-OP>
3599:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1044:currentField = tag |==> <NO-OP>
3600:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1046:currentSubfield = "n/a" |==> <NO-OP>
3601:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1047:cleanupBadFieldSeperators(field, record) |==> <NO-OP>
3602:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1049:new ByteArrayInputStream(field) |==> null
3603:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1050:(char)bais.read() |==> 0
3604:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1051:(char)bais.read() |==> 0
3605:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1053:factory.newDataField() |==> null
3606:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1054:dataField.setTag(tag) |==> <NO-OP>
3607:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1055:dataField.setIndicator1(ind1) |==> <NO-OP>
3608:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1056:dataField.setIndicator2(ind2) |==> <NO-OP>
3609:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1065:bais.read() |==> 0
3610:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1067:0 |==> 1
3611:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1067:0 |==> -1
3612:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1067:readByte < 0 |==> readByte != 0
3613:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1067:readByte < 0 |==> readByte <= 0
3614:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1067:readByte < 0 |==> false
3615:STD:<BREAK>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1068:break; |==> <NO-OP>
3616:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1073:bais.read() |==> 0
3617:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1075:0 |==> 1
3618:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1075:0 |==> -1
3619:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1075:code < 0 |==> code != 0
3620:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1075:code < 0 |==> code <= 0
3621:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1075:code < 0 |==> false
3622:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1079:code == Constants.FT |==> code <= Constants.FT
3623:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1079:code == Constants.FT |==> code >= Constants.FT
3624:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1079:code == Constants.FT |==> false
3625:STD:<BREAK>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1080:break; |==> <NO-OP>
3626:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1083:getSubfieldLength(bais) |==> 0
3627:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1085:0 |==> 1
3628:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1085:0 |==> -1
3629:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1085:size == 0 |==> size <= 0
3630:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1085:size == 0 |==> size >= 0
3631:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1085:size == 0 |==> false
3632:COR:permissive:TRUE:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1086:permissive |==> false
3633:COR:permissive:FALSE:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1086:permissive |==> true
3634:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1087:addError(MarcError.MINOR_ERROR, "Subfield of zero length encountered, ignoring it.") |==> <NO-OP>
3635:STD:<CONT>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1089:continue; |==> <NO-OP>
3636:EVR:<NEW_ARRAY>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1095:new byte[size] |==> null
3637:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1096:bais.read(data) |==> <NO-OP>
3638:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1097:factory.newSubfield() |==> null
3639:COR:permissive:TRUE:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1099:permissive |==> false
3640:COR:permissive:FALSE:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1099:permissive |==> true
3641:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1100:currentSubfield = "" + (char)code |==> <NO-OP>
3642:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1103:getDataAsString(data) |==> null
3643:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1105:code == Constants.US |==> code <= Constants.US
3644:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1105:code == Constants.US |==> code >= Constants.US
3645:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1105:code == Constants.US |==> false
3646:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1105:permissive && code == Constants.US |==> permissive == (code == Constants.US)
3647:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1105:permissive && code == Constants.US |==> false
3648:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1105:permissive && code == Constants.US |==> permissive
3649:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1105:permissive && code == Constants.US |==> code == Constants.US
3650:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1106:0 |==> 1
3651:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1106:0 |==> -1
3652:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1106:code = data[0] |==> <NO-OP>
3653:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1107:1 |==> 0
3654:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1107:1 |==> -1
3655:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1107:dataAsString = dataAsString.substring(1) |==> <NO-OP>
3656:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1108:addError(MarcError.MAJOR_ERROR, "Subfield tag is a subfield separator, using first character of field as subfield tag.") |==> <NO-OP>
3657:LVR:NEG:0:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1110:-1 |==> 0
3658:LVR:NEG:POS:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1110:-1 |==> 1
3659:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1110:validSubfieldCodes.indexOf(code) == -1 |==> validSubfieldCodes.indexOf(code) <= -1
3660:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1110:validSubfieldCodes.indexOf(code) == -1 |==> validSubfieldCodes.indexOf(code) >= -1
3661:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1110:validSubfieldCodes.indexOf(code) == -1 |==> false
3662:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1110:permissive && validSubfieldCodes.indexOf(code) == -1 |==> permissive == (validSubfieldCodes.indexOf(code) == -1)
3663:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1110:permissive && validSubfieldCodes.indexOf(code) == -1 |==> false
3664:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1110:permissive && validSubfieldCodes.indexOf(code) == -1 |==> permissive
3665:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1110:permissive && validSubfieldCodes.indexOf(code) == -1 |==> validSubfieldCodes.indexOf(code) == -1
3666:ROR:>=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1111:code >= 'A' |==> code == 'A'
3667:ROR:>=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1111:code >= 'A' |==> code > 'A'
3668:ROR:>=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1111:code >= 'A' |==> true
3669:ROR:<=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1111:code <= 'Z' |==> code < 'Z'
3670:ROR:<=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1111:code <= 'Z' |==> code == 'Z'
3671:ROR:<=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1111:code <= 'Z' |==> true
3672:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1111:code >= 'A' && code <= 'Z' |==> code >= 'A' == code <= 'Z'
3673:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1111:code >= 'A' && code <= 'Z' |==> false
3674:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1111:code >= 'A' && code <= 'Z' |==> code >= 'A'
3675:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1111:code >= 'A' && code <= 'Z' |==> code <= 'Z'
3676:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1113:false |==> true
3677:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1113:Boolean.parseBoolean(System.getProperty(upperCaseSubfieldsProperty, "false")) == false |==> false
3678:ROR:==(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1112:Boolean.parseBoolean(System.getProperty(upperCaseSubfieldsProperty, "false")) == false |==> Boolean.parseBoolean(System.getProperty(upperCaseSubfieldsProperty, "false"))
3679:ROR:==(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1113:Boolean.parseBoolean(System.getProperty(upperCaseSubfieldsProperty, "false")) == false |==> false
3680:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1114:code = Character.toLowerCase(code) |==> <NO-OP>
3681:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1115:addError(MarcError.MINOR_ERROR, "Subfield tag is an invalid uppercase character, changing it to lower case.") |==> <NO-OP>
3682:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1124:127 |==> 0
3683:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1124:127 |==> -127
3684:ROR:>(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1124:code > 127 |==> code != 127
3685:ROR:>(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1124:code > 127 |==> code >= 127
3686:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1124:code > 127 |==> false
3687:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1125:0 |==> 1
3688:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1125:0 |==> -1
3689:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1125:code = data[0] |==> <NO-OP>
3690:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1126:1 |==> 0
3691:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1126:1 |==> -1
3692:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1126:dataAsString = dataAsString.substring(1) |==> <NO-OP>
3693:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1127:addError(MarcError.MAJOR_ERROR, "Subfield tag is an invalid character greater than 0x7f, using first character of field as subfield tag.") |==> <NO-OP>
3694:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1130:code == '[' |==> code <= '['
3695:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1130:code == '[' |==> code >= '['
3696:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1130:code == '[' |==> false
3697:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1130:code == '[' && tag.equals("245") |==> code == '[' == tag.equals("245")
3698:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1130:code == '[' && tag.equals("245") |==> false
3699:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1130:code == '[' && tag.equals("245") |==> code == '['
3700:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1130:code == '[' && tag.equals("245") |==> tag.equals("245")
3701:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1131:code = 'h' |==> <NO-OP>
3702:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1132:dataAsString = '[' + dataAsString |==> <NO-OP>
3703:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1133:addError(MarcError.MAJOR_ERROR, "Subfield tag is an open bracket, generating a code \'h\' and pushing the bracket to the data.") |==> <NO-OP>
3704:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1135:code == ' ' |==> code <= ' '
3705:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1135:code == ' ' |==> code >= ' '
3706:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1135:code == ' ' |==> false
3707:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1136:addError(MarcError.MAJOR_ERROR, "Subfield tag is a space which is an invalid character") |==> <NO-OP>
3708:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1139:addError(MarcError.MAJOR_ERROR, "Subfield tag is an invalid character, [ " + (char)code + " ]") |==> <NO-OP>
3709:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1143:subfield.setCode((char)code) |==> <NO-OP>
3710:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1144:subfield.setData(dataAsString) |==> <NO-OP>
3711:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1145:dataField.addSubfield(subfield) |==> <NO-OP>
3712:STD:<BREAK>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1148:break; |==> <NO-OP>
3713:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseDataField(org.marc4j.marc.Record,java.lang.String,byte[]):1151:dataField |==> null
3714:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1157:conv == null |==> false
3715:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1158:true |==> false
3716:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1158:conv = new AnselToUnicode(true) |==> <NO-OP>
3717:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1161:false |==> true
3718:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1162:false |==> true
3719:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1163:false |==> true
3720:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1164:0 |==> 1
3721:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1164:0 |==> -1
3722:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1165:false |==> true
3723:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1166:0 |==> 1
3724:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1166:0 |==> -1
3725:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1168:0 |==> 1
3726:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1168:0 |==> -1
3727:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1168:1 |==> 0
3728:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1168:1 |==> -1
3729:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1168:field.length - 1 |==> field.length % 1
3730:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1168:field.length - 1 |==> field.length * 1
3731:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1168:field.length - 1 |==> field.length + 1
3732:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1168:field.length - 1 |==> field.length / 1
3733:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1168:i < field.length - 1 |==> i != field.length - 1
3734:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1168:i < field.length - 1 |==> i <= field.length - 1
3735:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1168:i < field.length - 1 |==> false
3736:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1169:27 |==> 0
3737:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1169:27 |==> -27
3738:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1169:field[i] == 27 |==> field[i] <= 27
3739:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1169:field[i] == 27 |==> field[i] >= 27
3740:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1169:field[i] == 27 |==> false
3741:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1170:true |==> false
3742:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1170:hasEsc = true |==> <NO-OP>
3743:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1172:1 |==> 0
3744:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1172:1 |==> -1
3745:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1172:i + 1 |==> i % 1
3746:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1172:i + 1 |==> i * 1
3747:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1172:i + 1 |==> i - 1
3748:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1172:i + 1 |==> i / 1
3749:LVR:NEG:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1172:-1 |==> 0
3750:LVR:NEG:POS:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1172:-1 |==> 1
3751:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1172:"(,)-\'".indexOf((char)field[i + 1]) != -1 |==> "(,)-\'".indexOf((char)field[i + 1]) < -1
3752:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1172:"(,)-\'".indexOf((char)field[i + 1]) != -1 |==> "(,)-\'".indexOf((char)field[i + 1]) > -1
3753:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1172:"(,)-\'".indexOf((char)field[i + 1]) != -1 |==> true
3754:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1173:false |==> true
3755:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1173:inMultiByte = false |==> <NO-OP>
3756:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:2 |==> 0
3757:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:2 |==> -2
3758:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:i + 2 |==> i % 2
3759:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:i + 2 |==> i * 2
3760:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:i + 2 |==> i - 2
3761:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:i + 2 |==> i / 2
3762:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:i + 2 < field.length |==> i + 2 != field.length
3763:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:i + 2 < field.length |==> i + 2 <= field.length
3764:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:i + 2 < field.length |==> false
3765:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:2 |==> 0
3766:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:2 |==> -2
3767:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:i + 2 |==> i % 2
3768:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:i + 2 |==> i * 2
3769:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:i + 2 |==> i - 2
3770:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:i + 2 |==> i / 2
3771:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:(char)field[i + 2] == 'N' |==> (char)field[i + 2] <= 'N'
3772:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:(char)field[i + 2] == 'N' |==> (char)field[i + 2] >= 'N'
3773:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:(char)field[i + 2] == 'N' |==> false
3774:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:i + 2 < field.length && (char)field[i + 2] == 'N' |==> i + 2 < field.length == ((char)field[i + 2] == 'N')
3775:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:i + 2 < field.length && (char)field[i + 2] == 'N' |==> false
3776:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:i + 2 < field.length && (char)field[i + 2] == 'N' |==> i + 2 < field.length
3777:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1175:i + 2 < field.length && (char)field[i + 2] == 'N' |==> (char)field[i + 2] == 'N'
3778:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1176:true |==> false
3779:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1176:inCyrillic = true |==> <NO-OP>
3780:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1178:false |==> true
3781:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1178:inCyrillic = false |==> <NO-OP>
3782:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:2 |==> 0
3783:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:2 |==> -2
3784:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 |==> i % 2
3785:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 |==> i * 2
3786:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 |==> i - 2
3787:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 |==> i / 2
3788:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 < field.length |==> i + 2 != field.length
3789:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 < field.length |==> i + 2 <= field.length
3790:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 < field.length |==> false
3791:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:1 |==> 0
3792:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:1 |==> -1
3793:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 1 |==> i % 1
3794:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 1 |==> i * 1
3795:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 1 |==> i - 1
3796:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 1 |==> i / 1
3797:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:field[i + 1] == '$' |==> field[i + 1] <= '$'
3798:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:field[i + 1] == '$' |==> field[i + 1] >= '$'
3799:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:field[i + 1] == '$' |==> false
3800:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 < field.length && field[i + 1] == '$' |==> i + 2 < field.length == (field[i + 1] == '$')
3801:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 < field.length && field[i + 1] == '$' |==> false
3802:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 < field.length && field[i + 1] == '$' |==> i + 2 < field.length
3803:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 < field.length && field[i + 1] == '$' |==> field[i + 1] == '$'
3804:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:2 |==> 0
3805:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:2 |==> -2
3806:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 |==> i % 2
3807:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 |==> i * 2
3808:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 |==> i - 2
3809:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 |==> i / 2
3810:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:field[i + 2] == '1' |==> field[i + 2] <= '1'
3811:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:field[i + 2] == '1' |==> field[i + 2] >= '1'
3812:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:field[i + 2] == '1' |==> false
3813:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 < field.length && field[i + 1] == '$' && field[i + 2] == '1' |==> (i + 2 < field.length && field[i + 1] == '$') == (field[i + 2] == '1')
3814:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 < field.length && field[i + 1] == '$' && field[i + 2] == '1' |==> false
3815:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 < field.length && field[i + 1] == '$' && field[i + 2] == '1' |==> i + 2 < field.length && field[i + 1] == '$'
3816:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1180:i + 2 < field.length && field[i + 1] == '$' && field[i + 2] == '1' |==> field[i + 2] == '1'
3817:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1181:true |==> false
3818:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1181:inMultiByte = true |==> <NO-OP>
3819:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1182:3 |==> 0
3820:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1182:3 |==> -3
3821:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1182:mbOffset = 3 |==> <NO-OP>
3822:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:3 |==> 0
3823:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:3 |==> -3
3824:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 |==> i % 3
3825:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 |==> i * 3
3826:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 |==> i - 3
3827:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 |==> i / 3
3828:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 < field.length |==> i + 3 != field.length
3829:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 < field.length |==> i + 3 <= field.length
3830:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 < field.length |==> false
3831:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:1 |==> 0
3832:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:1 |==> -1
3833:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 1 |==> i % 1
3834:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 1 |==> i * 1
3835:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 1 |==> i - 1
3836:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 1 |==> i / 1
3837:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 1] == '$' |==> field[i + 1] <= '$'
3838:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 1] == '$' |==> field[i + 1] >= '$'
3839:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 1] == '$' |==> false
3840:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:2 |==> 0
3841:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:2 |==> -2
3842:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 2 |==> i % 2
3843:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 2 |==> i * 2
3844:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 2 |==> i - 2
3845:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 2 |==> i / 2
3846:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 2] == '$' |==> field[i + 2] <= '$'
3847:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 2] == '$' |==> field[i + 2] >= '$'
3848:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 2] == '$' |==> false
3849:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 1] == '$' || field[i + 2] == '$' |==> field[i + 1] == '$' != (field[i + 2] == '$')
3850:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 1] == '$' || field[i + 2] == '$' |==> field[i + 1] == '$'
3851:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 1] == '$' || field[i + 2] == '$' |==> field[i + 2] == '$'
3852:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 1] == '$' || field[i + 2] == '$' |==> true
3853:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 < field.length && (field[i + 1] == '$' || field[i + 2] == '$') |==> i + 3 < field.length == (field[i + 1] == '$' || field[i + 2] == '$')
3854:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 < field.length && (field[i + 1] == '$' || field[i + 2] == '$') |==> false
3855:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 < field.length && (field[i + 1] == '$' || field[i + 2] == '$') |==> i + 3 < field.length
3856:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 < field.length && (field[i + 1] == '$' || field[i + 2] == '$') |==> (field[i + 1] == '$' || field[i + 2] == '$')
3857:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:2 |==> 0
3858:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:2 |==> -2
3859:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 2 |==> i % 2
3860:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 2 |==> i * 2
3861:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 2 |==> i - 2
3862:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 2 |==> i / 2
3863:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 2] == '1' |==> field[i + 2] <= '1'
3864:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 2] == '1' |==> field[i + 2] >= '1'
3865:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 2] == '1' |==> false
3866:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:3 |==> 0
3867:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:3 |==> -3
3868:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 |==> i % 3
3869:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 |==> i * 3
3870:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 |==> i - 3
3871:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 |==> i / 3
3872:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 3] == '1' |==> field[i + 3] <= '1'
3873:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 3] == '1' |==> field[i + 3] >= '1'
3874:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 3] == '1' |==> false
3875:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 2] == '1' || field[i + 3] == '1' |==> field[i + 2] == '1' != (field[i + 3] == '1')
3876:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 2] == '1' || field[i + 3] == '1' |==> field[i + 2] == '1'
3877:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 2] == '1' || field[i + 3] == '1' |==> field[i + 3] == '1'
3878:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:field[i + 2] == '1' || field[i + 3] == '1' |==> true
3879:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 < field.length && (field[i + 1] == '$' || field[i + 2] == '$') && (field[i + 2] == '1' || field[i + 3] == '1') |==> (i + 3 < field.length && (field[i + 1] == '$' || field[i + 2] == '$')) == (field[i + 2] == '1' || field[i + 3] == '1')
3880:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 < field.length && (field[i + 1] == '$' || field[i + 2] == '$') && (field[i + 2] == '1' || field[i + 3] == '1') |==> false
3881:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 < field.length && (field[i + 1] == '$' || field[i + 2] == '$') && (field[i + 2] == '1' || field[i + 3] == '1') |==> i + 3 < field.length && (field[i + 1] == '$' || field[i + 2] == '$')
3882:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1183:i + 3 < field.length && (field[i + 1] == '$' || field[i + 2] == '$') && (field[i + 2] == '1' || field[i + 3] == '1') |==> (field[i + 2] == '1' || field[i + 3] == '1')
3883:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1184:true |==> false
3884:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1184:inMultiByte = true |==> <NO-OP>
3885:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1185:4 |==> 0
3886:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1185:4 |==> -4
3887:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1185:mbOffset = 4 |==> <NO-OP>
3888:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:32 |==> 0
3889:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:32 |==> -32
3890:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:field[i] != 32 |==> field[i] < 32
3891:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:field[i] != 32 |==> field[i] > 32
3892:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:field[i] != 32 |==> true
3893:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:inMultiByte && field[i] != 32 |==> inMultiByte == (field[i] != 32)
3894:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:inMultiByte && field[i] != 32 |==> false
3895:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:inMultiByte && field[i] != 32 |==> inMultiByte
3896:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:inMultiByte && field[i] != 32 |==> field[i] != 32
3897:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:0 |==> 1
3898:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:0 |==> -1
3899:ROR:>=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:field[i] >= 0 |==> field[i] == 0
3900:ROR:>=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:field[i] >= 0 |==> field[i] > 0
3901:ROR:>=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:field[i] >= 0 |==> true
3902:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:inMultiByte && field[i] != 32 && field[i] >= 0 |==> (inMultiByte && field[i] != 32) == field[i] >= 0
3903:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:inMultiByte && field[i] != 32 && field[i] >= 0 |==> false
3904:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:inMultiByte && field[i] != 32 && field[i] >= 0 |==> inMultiByte && field[i] != 32
3905:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1188:inMultiByte && field[i] != 32 && field[i] >= 0 |==> field[i] >= 0
3906:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1189:0 |==> 1
3907:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1189:0 |==> -1
3908:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1189:mbOffset == 0 |==> mbOffset <= 0
3909:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1189:mbOffset == 0 |==> mbOffset >= 0
3910:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1189:mbOffset == 0 |==> false
3911:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1189:2 |==> 0
3912:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1189:2 |==> -2
3913:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1189:1 |==> 0
3914:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1189:1 |==> -1
3915:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1189:mbOffset - 1 |==> mbOffset % 1
3916:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1189:mbOffset - 1 |==> mbOffset * 1
3917:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1189:mbOffset - 1 |==> mbOffset + 1
3918:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1189:mbOffset - 1 |==> mbOffset / 1
3919:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1189:mbOffset = mbOffset == 0 ? 2 : mbOffset - 1 |==> <NO-OP>
3920:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:0 |==> 1
3921:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:0 |==> -1
3922:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:mbOffset == 0 |==> mbOffset <= 0
3923:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:mbOffset == 0 |==> mbOffset >= 0
3924:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:mbOffset == 0 |==> false
3925:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:inMultiByte && mbOffset == 0 |==> inMultiByte == (mbOffset == 0)
3926:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:inMultiByte && mbOffset == 0 |==> false
3927:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:inMultiByte && mbOffset == 0 |==> inMultiByte
3928:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:inMultiByte && mbOffset == 0 |==> mbOffset == 0
3929:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:2 |==> 0
3930:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:2 |==> -2
3931:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:i + 2 |==> i % 2
3932:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:i + 2 |==> i * 2
3933:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:i + 2 |==> i - 2
3934:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:i + 2 |==> i / 2
3935:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:i + 2 < field.length |==> i + 2 != field.length
3936:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:i + 2 < field.length |==> i + 2 <= field.length
3937:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:i + 2 < field.length |==> false
3938:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:inMultiByte && mbOffset == 0 && i + 2 < field.length |==> (inMultiByte && mbOffset == 0) == i + 2 < field.length
3939:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:inMultiByte && mbOffset == 0 && i + 2 < field.length |==> false
3940:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:inMultiByte && mbOffset == 0 && i + 2 < field.length |==> inMultiByte && mbOffset == 0
3941:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:inMultiByte && mbOffset == 0 && i + 2 < field.length |==> i + 2 < field.length
3942:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:0 |==> 1
3943:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:0 |==> -1
3944:ROR:>(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:field[i] > 0 |==> field[i] != 0
3945:ROR:>(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:field[i] > 0 |==> field[i] >= 0
3946:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:field[i] > 0 |==> false
3947:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:inMultiByte && mbOffset == 0 && i + 2 < field.length && field[i] > 0 |==> (inMultiByte && mbOffset == 0 && i + 2 < field.length) == field[i] > 0
3948:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:inMultiByte && mbOffset == 0 && i + 2 < field.length && field[i] > 0 |==> false
3949:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:inMultiByte && mbOffset == 0 && i + 2 < field.length && field[i] > 0 |==> inMultiByte && mbOffset == 0 && i + 2 < field.length
3950:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1191:inMultiByte && mbOffset == 0 && i + 2 < field.length && field[i] > 0 |==> field[i] > 0
3951:EVR:<ARRAY_ACCESS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1193:field[i] |==> 0
3952:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:1 |==> 0
3953:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:1 |==> -1
3954:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:i + 1 |==> i % 1
3955:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:i + 1 |==> i * 1
3956:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:i + 1 |==> i - 1
3957:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:i + 1 |==> i / 1
3958:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:32 |==> 0
3959:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:32 |==> -32
3960:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:field[i + 1] == 32 |==> field[i + 1] <= 32
3961:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:field[i + 1] == 32 |==> field[i + 1] >= 32
3962:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:field[i + 1] == 32 |==> false
3963:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:2 |==> 0
3964:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:2 |==> -2
3965:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:i + 2 |==> i % 2
3966:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:i + 2 |==> i * 2
3967:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:i + 2 |==> i - 2
3968:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:i + 2 |==> i / 2
3969:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:1 |==> 0
3970:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:1 |==> -1
3971:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:i + 1 |==> i % 1
3972:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:i + 1 |==> i * 1
3973:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:i + 1 |==> i - 1
3974:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1194:i + 1 |==> i / 1
3975:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:1 |==> 0
3976:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:1 |==> -1
3977:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:i + 1 |==> i % 1
3978:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:i + 1 |==> i * 1
3979:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:i + 1 |==> i - 1
3980:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:i + 1 |==> i / 1
3981:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:32 |==> 0
3982:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:32 |==> -32
3983:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:field[i + 1] == 32 |==> field[i + 1] <= 32
3984:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:field[i + 1] == 32 |==> field[i + 1] >= 32
3985:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:field[i + 1] == 32 |==> false
3986:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:2 |==> 0
3987:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:2 |==> -2
3988:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:i + 2 |==> i % 2
3989:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:i + 2 |==> i * 2
3990:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:i + 2 |==> i - 2
3991:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:i + 2 |==> i / 2
3992:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:32 |==> 0
3993:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:32 |==> -32
3994:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:field[i + 2] == 32 |==> field[i + 2] <= 32
3995:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:field[i + 2] == 32 |==> field[i + 2] >= 32
3996:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:field[i + 2] == 32 |==> false
3997:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:field[i + 1] == 32 || field[i + 2] == 32 |==> field[i + 1] == 32 != (field[i + 2] == 32)
3998:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:field[i + 1] == 32 || field[i + 2] == 32 |==> field[i + 1] == 32
3999:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:field[i + 1] == 32 || field[i + 2] == 32 |==> field[i + 2] == 32
4000:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:field[i + 1] == 32 || field[i + 2] == 32 |==> true
4001:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:3 |==> 0
4002:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:3 |==> -3
4003:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:i + 3 |==> i % 3
4004:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:i + 3 |==> i * 3
4005:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:i + 3 |==> i - 3
4006:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1195:i + 3 |==> i / 3
4007:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1196:2 |==> 0
4008:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1196:2 |==> -2
4009:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1196:i + 2 |==> i % 2
4010:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1196:i + 2 |==> i * 2
4011:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1196:i + 2 |==> i - 2
4012:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1196:i + 2 |==> i / 2
4013:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1197:f1 == Constants.US |==> f1 <= Constants.US
4014:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1197:f1 == Constants.US |==> f1 >= Constants.US
4015:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1197:f1 == Constants.US |==> false
4016:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1197:124 |==> 0
4017:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1197:124 |==> -124
4018:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1198:f2 == Constants.US |==> f2 <= Constants.US
4019:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1198:f2 == Constants.US |==> f2 >= Constants.US
4020:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1198:f2 == Constants.US |==> false
4021:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1198:124 |==> 0
4022:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1198:124 |==> -124
4023:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1198:f3 == Constants.US |==> f3 <= Constants.US
4024:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1198:f3 == Constants.US |==> f3 >= Constants.US
4025:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1198:f3 == Constants.US |==> false
4026:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1198:124 |==> 0
4027:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1198:124 |==> -124
4028:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1200:0 |==> 1
4029:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1200:0 |==> -1
4030:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1200:c == 0 |==> c <= 0
4031:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1200:c == 0 |==> c >= 0
4032:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1200:c == 0 |==> false
4033:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1200:c == 0 && !justCleaned |==> c == 0 == !justCleaned
4034:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1200:c == 0 && !justCleaned |==> false
4035:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1200:c == 0 && !justCleaned |==> c == 0
4036:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1200:c == 0 && !justCleaned |==> !justCleaned
4037:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1201:addError(MarcError.MAJOR_ERROR, "Bad Multibyte character found, reinterpreting data as non-multibyte data") |==> <NO-OP>
4038:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1203:false |==> true
4039:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1203:inMultiByte = false |==> <NO-OP>
4040:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1204:0 |==> 1
4041:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1204:0 |==> -1
4042:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1204:c == 0 |==> c <= 0
4043:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1204:c == 0 |==> c >= 0
4044:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1204:c == 0 |==> false
4045:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1204:c == 0 && justCleaned |==> c == 0 == justCleaned
4046:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1204:c == 0 && justCleaned |==> false
4047:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1204:c == 0 && justCleaned |==> c == 0
4048:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1204:c == 0 && justCleaned |==> justCleaned
4049:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1205:f2 == Constants.US |==> f2 <= Constants.US
4050:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1205:f2 == Constants.US |==> f2 >= Constants.US
4051:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1205:f2 == Constants.US |==> false
4052:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1205:124 |==> 0
4053:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1205:124 |==> -124
4054:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1206:f3 == Constants.US |==> f3 <= Constants.US
4055:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1206:f3 == Constants.US |==> f3 >= Constants.US
4056:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1206:f3 == Constants.US |==> false
4057:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1206:124 |==> 0
4058:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1206:124 |==> -124
4059:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1205:c = conv.getMBChar(conv.makeMultibyte('!', (char)(f2 == Constants.US ? 124 : f2), (char)(f3 == Constants.US ? 124 : f3))) |==> <NO-OP>
4060:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1207:0 |==> 1
4061:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1207:0 |==> -1
4062:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1207:c == 0 |==> c <= 0
4063:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1207:c == 0 |==> c >= 0
4064:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1207:c == 0 |==> false
4065:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1208:addError(MarcError.MAJOR_ERROR, "Bad Multibyte character found, reinterpreting data as non-multibyte data") |==> <NO-OP>
4066:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1210:false |==> true
4067:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1210:inMultiByte = false |==> <NO-OP>
4068:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1212:addError(MarcError.MAJOR_ERROR, "Character after restored vertical bar character makes bad multibyte character, changing it to \"!\"") |==> <NO-OP>
4069:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1215:field[i] = '!' |==> <NO-OP>
4070:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1219:false |==> true
4071:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1219:justCleaned = false |==> <NO-OP>
4072:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1220:field[i] == Constants.US |==> field[i] <= Constants.US
4073:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1220:field[i] == Constants.US |==> field[i] >= Constants.US
4074:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1220:field[i] == Constants.US |==> false
4075:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1221:0 |==> 1
4076:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1221:0 |==> -1
4077:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1221:mbOffset != 0 |==> mbOffset < 0
4078:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1221:mbOffset != 0 |==> mbOffset > 0
4079:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1221:mbOffset != 0 |==> true
4080:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1221:inMultiByte && mbOffset != 0 |==> inMultiByte == (mbOffset != 0)
4081:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1221:inMultiByte && mbOffset != 0 |==> false
4082:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1221:inMultiByte && mbOffset != 0 |==> inMultiByte
4083:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1221:inMultiByte && mbOffset != 0 |==> mbOffset != 0
4084:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1222:124 |==> 0
4085:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1222:124 |==> -124
4086:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1222:field[i] = 124 |==> <NO-OP>
4087:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1223:addError(MarcError.MAJOR_ERROR, "Subfield separator found in middle of a multibyte character, changing it to a vertical bar, and continuing") |==> <NO-OP>
4088:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1226:1 |==> 0
4089:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1226:1 |==> -1
4090:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1226:i + 1 |==> i % 1
4091:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1226:i + 1 |==> i * 1
4092:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1226:i + 1 |==> i - 1
4093:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1226:i + 1 |==> i / 1
4094:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1226:field[i + 1] == '0' |==> field[i + 1] <= '0'
4095:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1226:field[i + 1] == '0' |==> field[i + 1] >= '0'
4096:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1226:field[i + 1] == '0' |==> false
4097:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:2 |==> 0
4098:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:2 |==> -2
4099:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:i + 2 |==> i % 2
4100:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:i + 2 |==> i * 2
4101:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:i + 2 |==> i - 2
4102:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:i + 2 |==> i / 2
4103:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:field[i + 2] == '(' |==> field[i + 2] <= '('
4104:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:field[i + 2] == '(' |==> field[i + 2] >= '('
4105:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:field[i + 2] == '(' |==> false
4106:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:3 |==> 0
4107:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:3 |==> -3
4108:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:i + 3 |==> i % 3
4109:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:i + 3 |==> i * 3
4110:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:i + 3 |==> i - 3
4111:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:i + 3 |==> i / 3
4112:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:field[i + 3] == 'B' |==> field[i + 3] <= 'B'
4113:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:field[i + 3] == 'B' |==> field[i + 3] >= 'B'
4114:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:field[i + 3] == 'B' |==> false
4115:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:field[i + 2] == '(' && field[i + 3] == 'B' |==> field[i + 2] == '(' == (field[i + 3] == 'B')
4116:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:field[i + 2] == '(' && field[i + 3] == 'B' |==> false
4117:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:field[i + 2] == '(' && field[i + 3] == 'B' |==> field[i + 2] == '('
4118:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1227:field[i + 2] == '(' && field[i + 3] == 'B' |==> field[i + 3] == 'B'
4119:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1228:1 |==> 0
4120:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1228:1 |==> -1
4121:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1228:i + 1 |==> i % 1
4122:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1228:i + 1 |==> i * 1
4123:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1228:i + 1 |==> i - 1
4124:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1228:i + 1 |==> i / 1
4125:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1228:27 |==> 0
4126:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1228:27 |==> -27
4127:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1228:field[i + 1] = 27 |==> <NO-OP>
4128:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1229:addError(MarcError.MAJOR_ERROR, "Character after restored vertical bar character makes bad multibyte character, changing it to ESC") |==> <NO-OP>
4129:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1232:1 |==> 0
4130:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1232:1 |==> -1
4131:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1232:i + 1 |==> i % 1
4132:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1232:i + 1 |==> i * 1
4133:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1232:i + 1 |==> i - 1
4134:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1232:i + 1 |==> i / 1
4135:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1232:33 |==> 0
4136:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1232:33 |==> -33
4137:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1232:field[i + 1] = 33 |==> <NO-OP>
4138:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1233:addError(MarcError.MAJOR_ERROR, "Character after restored vertical bar character makes bad multibyte character, changing it to \"!\"") |==> <NO-OP>
4139:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1238:true |==> false
4140:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1238:justCleaned = true |==> <NO-OP>
4141:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1239:hasEsc && inCyrillic |==> hasEsc == inCyrillic
4142:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1239:hasEsc && inCyrillic |==> false
4143:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1239:hasEsc && inCyrillic |==> hasEsc
4144:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1239:hasEsc && inCyrillic |==> inCyrillic
4145:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1240:1 |==> 0
4146:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1240:1 |==> -1
4147:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1240:flen - 1 |==> flen % 1
4148:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1240:flen - 1 |==> flen * 1
4149:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1240:flen - 1 |==> flen + 1
4150:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1240:flen - 1 |==> flen / 1
4151:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1240:i - (flen - 1) |==> i % (flen - 1)
4152:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1240:i - (flen - 1) |==> i * (flen - 1)
4153:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1240:i - (flen - 1) |==> i + (flen - 1)
4154:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1240:i - (flen - 1) |==> i / (flen - 1)
4155:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1240:1 |==> 0
4156:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1240:1 |==> -1
4157:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1240:flen - 1 |==> flen % 1
4158:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1240:flen - 1 |==> flen * 1
4159:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1240:flen - 1 |==> flen + 1
4160:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1240:flen - 1 |==> flen / 1
4161:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:1 |==> 0
4162:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:1 |==> -1
4163:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:i + 1 |==> i % 1
4164:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:i + 1 |==> i * 1
4165:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:i + 1 |==> i - 1
4166:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:i + 1 |==> i / 1
4167:ROR:>=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:field[i + 1] >= 'a' |==> field[i + 1] == 'a'
4168:ROR:>=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:field[i + 1] >= 'a' |==> field[i + 1] > 'a'
4169:ROR:>=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:field[i + 1] >= 'a' |==> true
4170:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:1 |==> 0
4171:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:1 |==> -1
4172:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:i + 1 |==> i % 1
4173:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:i + 1 |==> i * 1
4174:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:i + 1 |==> i - 1
4175:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:i + 1 |==> i / 1
4176:ROR:<=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:field[i + 1] <= 'z' |==> field[i + 1] < 'z'
4177:ROR:<=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:field[i + 1] <= 'z' |==> field[i + 1] == 'z'
4178:ROR:<=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:field[i + 1] <= 'z' |==> true
4179:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:field[i + 1] >= 'a' && field[i + 1] <= 'z' |==> field[i + 1] >= 'a' == field[i + 1] <= 'z'
4180:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:field[i + 1] >= 'a' && field[i + 1] <= 'z' |==> false
4181:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:field[i + 1] >= 'a' && field[i + 1] <= 'z' |==> field[i + 1] >= 'a'
4182:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:field[i + 1] >= 'a' && field[i + 1] <= 'z' |==> field[i + 1] <= 'z'
4183:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:!(field[i + 1] >= 'a' && field[i + 1] <= 'z') || prev.equals("\u001b(N") |==> !(field[i + 1] >= 'a' && field[i + 1] <= 'z') != prev.equals("\u001b(N")
4184:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:!(field[i + 1] >= 'a' && field[i + 1] <= 'z') || prev.equals("\u001b(N") |==> !(field[i + 1] >= 'a' && field[i + 1] <= 'z')
4185:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:!(field[i + 1] >= 'a' && field[i + 1] <= 'z') || prev.equals("\u001b(N") |==> prev.equals("\u001b(N")
4186:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1242:!(field[i + 1] >= 'a' && field[i + 1] <= 'z') || prev.equals("\u001b(N") |==> true
4187:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1243:addError(MarcError.MINOR_ERROR, "Subfield separator found in Cyrillic string, changing separator to a vertical bar, and continuing") |==> <NO-OP>
4188:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1245:124 |==> 0
4189:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1245:124 |==> -124
4190:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1245:field[i] = 124 |==> <NO-OP>
4191:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1246:true |==> false
4192:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1246:justCleaned = true |==> <NO-OP>
4193:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:1 |==> 0
4194:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:1 |==> -1
4195:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:i + 1 |==> i % 1
4196:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:i + 1 |==> i * 1
4197:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:i + 1 |==> i - 1
4198:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:i + 1 |==> i / 1
4199:ROR:>=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= 'a' |==> field[i + 1] == 'a'
4200:ROR:>=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= 'a' |==> field[i + 1] > 'a'
4201:ROR:>=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= 'a' |==> true
4202:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:1 |==> 0
4203:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:1 |==> -1
4204:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:i + 1 |==> i % 1
4205:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:i + 1 |==> i * 1
4206:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:i + 1 |==> i - 1
4207:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:i + 1 |==> i / 1
4208:ROR:<=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] <= 'z' |==> field[i + 1] < 'z'
4209:ROR:<=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] <= 'z' |==> field[i + 1] == 'z'
4210:ROR:<=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] <= 'z' |==> true
4211:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= 'a' && field[i + 1] <= 'z' |==> field[i + 1] >= 'a' == field[i + 1] <= 'z'
4212:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= 'a' && field[i + 1] <= 'z' |==> false
4213:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= 'a' && field[i + 1] <= 'z' |==> field[i + 1] >= 'a'
4214:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= 'a' && field[i + 1] <= 'z' |==> field[i + 1] <= 'z'
4215:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:1 |==> 0
4216:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:1 |==> -1
4217:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:i + 1 |==> i % 1
4218:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:i + 1 |==> i * 1
4219:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:i + 1 |==> i - 1
4220:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:i + 1 |==> i / 1
4221:ROR:>=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= '0' |==> field[i + 1] == '0'
4222:ROR:>=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= '0' |==> field[i + 1] > '0'
4223:ROR:>=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= '0' |==> true
4224:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:1 |==> 0
4225:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:1 |==> -1
4226:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:i + 1 |==> i % 1
4227:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:i + 1 |==> i * 1
4228:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:i + 1 |==> i - 1
4229:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:i + 1 |==> i / 1
4230:ROR:<=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] <= '9' |==> field[i + 1] < '9'
4231:ROR:<=(int,int):==(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] <= '9' |==> field[i + 1] == '9'
4232:ROR:<=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] <= '9' |==> true
4233:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= '0' && field[i + 1] <= '9' |==> field[i + 1] >= '0' == field[i + 1] <= '9'
4234:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= '0' && field[i + 1] <= '9' |==> false
4235:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= '0' && field[i + 1] <= '9' |==> field[i + 1] >= '0'
4236:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= '0' && field[i + 1] <= '9' |==> field[i + 1] <= '9'
4237:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= 'a' && field[i + 1] <= 'z' || field[i + 1] >= '0' && field[i + 1] <= '9' |==> (field[i + 1] >= 'a' && field[i + 1] <= 'z') != (field[i + 1] >= '0' && field[i + 1] <= '9')
4238:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= 'a' && field[i + 1] <= 'z' || field[i + 1] >= '0' && field[i + 1] <= '9' |==> field[i + 1] >= 'a' && field[i + 1] <= 'z'
4239:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= 'a' && field[i + 1] <= 'z' || field[i + 1] >= '0' && field[i + 1] <= '9' |==> field[i + 1] >= '0' && field[i + 1] <= '9'
4240:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:field[i + 1] >= 'a' && field[i + 1] <= 'z' || field[i + 1] >= '0' && field[i + 1] <= '9' |==> true
4241:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:hasEsc && !(field[i + 1] >= 'a' && field[i + 1] <= 'z' || field[i + 1] >= '0' && field[i + 1] <= '9') |==> hasEsc == !(field[i + 1] >= 'a' && field[i + 1] <= 'z' || field[i + 1] >= '0' && field[i + 1] <= '9')
4242:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:hasEsc && !(field[i + 1] >= 'a' && field[i + 1] <= 'z' || field[i + 1] >= '0' && field[i + 1] <= '9') |==> false
4243:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:hasEsc && !(field[i + 1] >= 'a' && field[i + 1] <= 'z' || field[i + 1] >= '0' && field[i + 1] <= '9') |==> hasEsc
4244:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1248:hasEsc && !(field[i + 1] >= 'a' && field[i + 1] <= 'z' || field[i + 1] >= '0' && field[i + 1] <= '9') |==> !(field[i + 1] >= 'a' && field[i + 1] <= 'z' || field[i + 1] >= '0' && field[i + 1] <= '9')
4245:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1249:addError(MarcError.MAJOR_ERROR, "Subfield separator followed by invalid subfield tag, changing separator to a vertical bar, and continuing") |==> <NO-OP>
4246:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1252:124 |==> 0
4247:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1252:124 |==> -124
4248:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1252:field[i] = 124 |==> <NO-OP>
4249:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1253:true |==> false
4250:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1253:justCleaned = true |==> <NO-OP>
4251:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:3 |==> 0
4252:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:3 |==> -3
4253:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:field.length - 3 |==> field.length % 3
4254:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:field.length - 3 |==> field.length * 3
4255:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:field.length - 3 |==> field.length + 3
4256:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:field.length - 3 |==> field.length / 3
4257:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:i < field.length - 3 |==> i != field.length - 3
4258:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:i < field.length - 3 |==> i <= field.length - 3
4259:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:i < field.length - 3 |==> false
4260:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:hasEsc && i < field.length - 3 |==> hasEsc == i < field.length - 3
4261:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:hasEsc && i < field.length - 3 |==> false
4262:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:hasEsc && i < field.length - 3 |==> hasEsc
4263:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:hasEsc && i < field.length - 3 |==> i < field.length - 3
4264:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:1 |==> 0
4265:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:1 |==> -1
4266:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:i + 1 |==> i % 1
4267:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:i + 1 |==> i * 1
4268:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:i + 1 |==> i - 1
4269:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:i + 1 |==> i / 1
4270:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:field[i + 1] == '0' |==> field[i + 1] <= '0'
4271:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:field[i + 1] == '0' |==> field[i + 1] >= '0'
4272:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:field[i + 1] == '0' |==> false
4273:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:hasEsc && i < field.length - 3 && field[i + 1] == '0' |==> (hasEsc && i < field.length - 3) == (field[i + 1] == '0')
4274:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:hasEsc && i < field.length - 3 && field[i + 1] == '0' |==> false
4275:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:hasEsc && i < field.length - 3 && field[i + 1] == '0' |==> hasEsc && i < field.length - 3
4276:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:hasEsc && i < field.length - 3 && field[i + 1] == '0' |==> field[i + 1] == '0'
4277:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:2 |==> 0
4278:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:2 |==> -2
4279:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:i + 2 |==> i % 2
4280:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:i + 2 |==> i * 2
4281:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:i + 2 |==> i - 2
4282:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:i + 2 |==> i / 2
4283:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:field[i + 2] == '(' |==> field[i + 2] <= '('
4284:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:field[i + 2] == '(' |==> field[i + 2] >= '('
4285:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:field[i + 2] == '(' |==> false
4286:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:hasEsc && i < field.length - 3 && field[i + 1] == '0' && field[i + 2] == '(' |==> (hasEsc && i < field.length - 3 && field[i + 1] == '0') == (field[i + 2] == '(')
4287:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:hasEsc && i < field.length - 3 && field[i + 1] == '0' && field[i + 2] == '(' |==> false
4288:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:hasEsc && i < field.length - 3 && field[i + 1] == '0' && field[i + 2] == '(' |==> hasEsc && i < field.length - 3 && field[i + 1] == '0'
4289:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:hasEsc && i < field.length - 3 && field[i + 1] == '0' && field[i + 2] == '(' |==> field[i + 2] == '('
4290:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:3 |==> 0
4291:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:3 |==> -3
4292:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:i + 3 |==> i % 3
4293:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:i + 3 |==> i * 3
4294:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:i + 3 |==> i - 3
4295:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:i + 3 |==> i / 3
4296:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:field[i + 3] == 'B' |==> field[i + 3] <= 'B'
4297:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:field[i + 3] == 'B' |==> field[i + 3] >= 'B'
4298:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:field[i + 3] == 'B' |==> false
4299:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:hasEsc && i < field.length - 3 && field[i + 1] == '0' && field[i + 2] == '(' && field[i + 3] == 'B' |==> (hasEsc && i < field.length - 3 && field[i + 1] == '0' && field[i + 2] == '(') == (field[i + 3] == 'B')
4300:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:hasEsc && i < field.length - 3 && field[i + 1] == '0' && field[i + 2] == '(' && field[i + 3] == 'B' |==> false
4301:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:hasEsc && i < field.length - 3 && field[i + 1] == '0' && field[i + 2] == '(' && field[i + 3] == 'B' |==> hasEsc && i < field.length - 3 && field[i + 1] == '0' && field[i + 2] == '('
4302:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1254:hasEsc && i < field.length - 3 && field[i + 1] == '0' && field[i + 2] == '(' && field[i + 3] == 'B' |==> field[i + 3] == 'B'
4303:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1255:addError(MarcError.MAJOR_ERROR, "Subfield separator followed by invalid subfield tag, changing separator to a vertical bar, and continuing") |==> <NO-OP>
4304:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1258:124 |==> 0
4305:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1258:124 |==> -124
4306:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1258:field[i] = 124 |==> <NO-OP>
4307:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1259:1 |==> 0
4308:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1259:1 |==> -1
4309:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1259:i + 1 |==> i % 1
4310:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1259:i + 1 |==> i * 1
4311:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1259:i + 1 |==> i - 1
4312:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1259:i + 1 |==> i / 1
4313:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1259:27 |==> 0
4314:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1259:27 |==> -27
4315:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1259:field[i + 1] = 27 |==> <NO-OP>
4316:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1260:true |==> false
4317:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1260:justCleaned = true |==> <NO-OP>
4318:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1261:1 |==> 0
4319:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1261:1 |==> -1
4320:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1261:i + 1 |==> i % 1
4321:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1261:i + 1 |==> i * 1
4322:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1261:i + 1 |==> i - 1
4323:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1261:i + 1 |==> i / 1
4324:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1261:field[i + 1] == '0' |==> field[i + 1] <= '0'
4325:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1261:field[i + 1] == '0' |==> field[i + 1] >= '0'
4326:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1261:field[i + 1] == '0' |==> false
4327:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1261:hasEsc && field[i + 1] == '0' |==> hasEsc == (field[i + 1] == '0')
4328:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1261:hasEsc && field[i + 1] == '0' |==> false
4329:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1261:hasEsc && field[i + 1] == '0' |==> hasEsc
4330:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1261:hasEsc && field[i + 1] == '0' |==> field[i + 1] == '0'
4331:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1262:addError(MarcError.MAJOR_ERROR, "Subfield separator followed by invalid subfield tag, changing separator to a vertical bar, and continuing") |==> <NO-OP>
4332:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1265:124 |==> 0
4333:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1265:124 |==> -124
4334:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1265:field[i] = 124 |==> <NO-OP>
4335:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1266:1 |==> 0
4336:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1266:1 |==> -1
4337:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1266:i + 1 |==> i % 1
4338:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1266:i + 1 |==> i * 1
4339:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1266:i + 1 |==> i - 1
4340:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1266:i + 1 |==> i / 1
4341:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1266:33 |==> 0
4342:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1266:33 |==> -33
4343:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1266:field[i + 1] = 33 |==> <NO-OP>
4344:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1267:true |==> false
4345:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1267:justCleaned = true |==> <NO-OP>
4346:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:1 |==> 0
4347:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:1 |==> -1
4348:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:i + 1 |==> i % 1
4349:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:i + 1 |==> i * 1
4350:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:i + 1 |==> i - 1
4351:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:i + 1 |==> i / 1
4352:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:field[i + 1] == Constants.US |==> field[i + 1] <= Constants.US
4353:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:field[i + 1] == Constants.US |==> field[i + 1] >= Constants.US
4354:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:field[i + 1] == Constants.US |==> false
4355:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:2 |==> 0
4356:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:2 |==> -2
4357:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:i + 2 |==> i % 2
4358:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:i + 2 |==> i * 2
4359:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:i + 2 |==> i - 2
4360:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:i + 2 |==> i / 2
4361:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:field[i + 2] == Constants.US |==> field[i + 2] <= Constants.US
4362:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:field[i + 2] == Constants.US |==> field[i + 2] >= Constants.US
4363:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:field[i + 2] == Constants.US |==> false
4364:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:field[i + 1] == Constants.US && field[i + 2] == Constants.US |==> field[i + 1] == Constants.US == (field[i + 2] == Constants.US)
4365:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:field[i + 1] == Constants.US && field[i + 2] == Constants.US |==> false
4366:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:field[i + 1] == Constants.US && field[i + 2] == Constants.US |==> field[i + 1] == Constants.US
4367:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1268:field[i + 1] == Constants.US && field[i + 2] == Constants.US |==> field[i + 2] == Constants.US
4368:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1269:addError(MarcError.MAJOR_ERROR, "Three consecutive subfield separators, changing first two to vertical bars.") |==> <NO-OP>
4369:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1271:124 |==> 0
4370:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1271:124 |==> -124
4371:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1271:field[i] = 124 |==> <NO-OP>
4372:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1272:1 |==> 0
4373:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1272:1 |==> -1
4374:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1272:i + 1 |==> i % 1
4375:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1272:i + 1 |==> i * 1
4376:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1272:i + 1 |==> i - 1
4377:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1272:i + 1 |==> i / 1
4378:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1272:124 |==> 0
4379:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1272:124 |==> -124
4380:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1272:field[i + 1] = 124 |==> <NO-OP>
4381:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1273:true |==> false
4382:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1273:justCleaned = true |==> <NO-OP>
4383:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1277:field[i] == Constants.US |==> field[i] <= Constants.US
4384:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1277:field[i] == Constants.US |==> field[i] >= Constants.US
4385:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1277:field[i] == Constants.US |==> false
4386:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1278:0 |==> 1
4387:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1278:0 |==> -1
4388:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1278:flen = 0 |==> <NO-OP>
4389:STD:<INC>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@cleanupBadFieldSeperators(byte[],org.marc4j.marc.Record):1280:flen++ |==> <NO-OP>
4390:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@getFieldLength(java.io.DataInputStream):1286:9999 |==> 0
4391:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@getFieldLength(java.io.DataInputStream):1286:9999 |==> -9999
4392:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getFieldLength(java.io.DataInputStream):1286:bais.mark(9999) |==> <NO-OP>
4393:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@getFieldLength(java.io.DataInputStream):1287:0 |==> 1
4394:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@getFieldLength(java.io.DataInputStream):1287:0 |==> -1
4395:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getFieldLength(java.io.DataInputStream):1291:bais.reset() |==> <NO-OP>
4396:STD:<RETURN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getFieldLength(java.io.DataInputStream):1292:return bytesRead; |==> <NO-OP>
4397:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getFieldLength(java.io.DataInputStream):1294:bais.reset() |==> <NO-OP>
4398:COR:permissive:TRUE:org.marc4j.MarcPermissiveStreamReader@getFieldLength(java.io.DataInputStream):1295:permissive |==> false
4399:COR:permissive:FALSE:org.marc4j.MarcPermissiveStreamReader@getFieldLength(java.io.DataInputStream):1295:permissive |==> true
4400:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getFieldLength(java.io.DataInputStream):1296:addError(MarcError.MINOR_ERROR, "Field not terminated trying to continue") |==> <NO-OP>
4401:STD:<RETURN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getFieldLength(java.io.DataInputStream):1297:return bytesRead; |==> <NO-OP>
4402:STD:<INC>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getFieldLength(java.io.DataInputStream):1303:bytesRead++ |==> <NO-OP>
4403:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):1309:9999 |==> 0
4404:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):1309:9999 |==> -9999
4405:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):1309:bais.mark(9999) |==> <NO-OP>
4406:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):1311:0 |==> 1
4407:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):1311:0 |==> -1
4408:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):1316:bais.reset() |==> <NO-OP>
4409:STD:<RETURN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):1317:return bytesRead; |==> <NO-OP>
4410:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):1319:bais.reset() |==> <NO-OP>
4411:STD:<RETURN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):1320:return bytesRead; |==> <NO-OP>
4412:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):1322:bais.reset() |==> <NO-OP>
4413:COR:permissive:TRUE:org.marc4j.MarcPermissiveStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):1323:permissive |==> false
4414:COR:permissive:FALSE:org.marc4j.MarcPermissiveStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):1323:permissive |==> true
4415:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):1324:addError(MarcError.MINOR_ERROR, "Subfield not terminated trying to continue") |==> <NO-OP>
4416:STD:<RETURN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):1326:return bytesRead; |==> <NO-OP>
4417:STD:<INC>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):1331:bytesRead++ |==> <NO-OP>
4418:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecordLength(byte[]):1337:new InputStreamReader(new ByteArrayInputStream(leaderData)) |==> null
4419:LVR:NEG:0:org.marc4j.MarcPermissiveStreamReader@parseRecordLength(byte[]):1338:-1 |==> 0
4420:LVR:NEG:POS:org.marc4j.MarcPermissiveStreamReader@parseRecordLength(byte[]):1338:-1 |==> 1
4421:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseRecordLength(byte[]):1339:5 |==> 0
4422:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseRecordLength(byte[]):1339:5 |==> -5
4423:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecordLength(byte[]):1340:isr.read(tmp) |==> <NO-OP>
4424:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecordLength(byte[]):1343:length = Integer.parseInt(new String(tmp)) |==> <NO-OP>
4425:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseRecordLength(byte[]):1345:addError(MarcError.FATAL, "Unable to parse record length, Unable to Continue") |==> <NO-OP>
4426:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseRecordLength(byte[]):1349:length |==> 0
4427:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1353:new InputStreamReader(new ByteArrayInputStream(leaderData), "ISO-8859-1") |==> null
4428:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1356:5 |==> 0
4429:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1356:5 |==> -5
4430:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1357:isr.read(tmp) |==> <NO-OP>
4431:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1360:ldr.setRecordStatus((char)isr.read()) |==> <NO-OP>
4432:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1361:ldr.setTypeOfRecord((char)isr.read()) |==> <NO-OP>
4433:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1362:2 |==> 0
4434:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1362:2 |==> -2
4435:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1362:tmp = new char[2] |==> <NO-OP>
4436:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1363:isr.read(tmp) |==> <NO-OP>
4437:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1364:ldr.setImplDefined1(tmp) |==> <NO-OP>
4438:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1365:ldr.setCharCodingScheme((char)isr.read()) |==> <NO-OP>
4439:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1367:(char)isr.read() |==> 0
4440:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1368:(char)isr.read() |==> 0
4441:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1369:5 |==> 0
4442:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1369:5 |==> -5
4443:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1371:isr.read(baseAddr) |==> <NO-OP>
4444:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1372:3 |==> 0
4445:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1372:3 |==> -3
4446:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1372:tmp = new char[3] |==> <NO-OP>
4447:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1373:isr.read(tmp) |==> <NO-OP>
4448:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1374:ldr.setImplDefined2(tmp) |==> <NO-OP>
4449:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1375:4 |==> 0
4450:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1375:4 |==> -4
4451:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1375:tmp = new char[4] |==> <NO-OP>
4452:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1376:isr.read(tmp) |==> <NO-OP>
4453:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1377:ldr.setEntryMap(tmp) |==> <NO-OP>
4454:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1378:isr.close() |==> <NO-OP>
4455:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1381:ldr.setIndicatorCount(Integer.parseInt(String.valueOf(indicatorCount))) |==> <NO-OP>
4456:COR:permissive:TRUE:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1383:permissive |==> false
4457:COR:permissive:FALSE:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1383:permissive |==> true
4458:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1386:255 |==> 0
4459:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1386:255 |==> -255
4460:LOR:&(int,int):^(int,int):org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1386:indicatorCount & 255 |==> indicatorCount ^ 255
4461:LOR:&(int,int):|(int,int):org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1386:indicatorCount & 255 |==> indicatorCount | 255
4462:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1385:addError(MarcError.ERROR_TYPO, "bogus indicator count - byte value =  " + Integer.toHexString(indicatorCount & 255)) |==> <NO-OP>
4463:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1387:2 |==> 0
4464:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1387:2 |==> -2
4465:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1387:ldr.setIndicatorCount(2) |==> <NO-OP>
4466:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1393:ldr.setSubfieldCodeLength(Integer.parseInt(String.valueOf(subfieldCodeLength))) |==> <NO-OP>
4467:COR:permissive:TRUE:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1395:permissive |==> false
4468:COR:permissive:FALSE:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1395:permissive |==> true
4469:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1398:255 |==> 0
4470:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1398:255 |==> -255
4471:LOR:&(int,int):^(int,int):org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1398:subfieldCodeLength & 255 |==> subfieldCodeLength ^ 255
4472:LOR:&(int,int):|(int,int):org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1398:subfieldCodeLength & 255 |==> subfieldCodeLength | 255
4473:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1397:addError(MarcError.ERROR_TYPO, "bogus subfield count - byte value =  " + Integer.toHexString(subfieldCodeLength & 255)) |==> <NO-OP>
4474:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1399:2 |==> 0
4475:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1399:2 |==> -2
4476:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1399:ldr.setSubfieldCodeLength(2) |==> <NO-OP>
4477:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):1406:ldr.setBaseAddressOfData(Integer.parseInt(new String(baseAddr))) |==> <NO-OP>
4478:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1416:encoding.equals("UTF-8") || encoding.equals("UTF8") |==> encoding.equals("UTF-8") != encoding.equals("UTF8")
4479:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1416:encoding.equals("UTF-8") || encoding.equals("UTF8") |==> encoding.equals("UTF-8")
4480:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1416:encoding.equals("UTF-8") || encoding.equals("UTF8") |==> encoding.equals("UTF8")
4481:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1416:encoding.equals("UTF-8") || encoding.equals("UTF8") |==> true
4482:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1418:new String(bytes, "UTF-8") |==> null
4483:COR:encoding.equals("UTF8-Maybe"):TRUE:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1422:encoding.equals("UTF8-Maybe") |==> false
4484:COR:encoding.equals("UTF8-Maybe"):FALSE:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1422:encoding.equals("UTF8-Maybe") |==> true
4485:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1424:new String(bytes, "UTF-8") |==> null
4486:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1428:encoding.equals("MARC-8") || encoding.equals("MARC8") |==> encoding.equals("MARC-8") != encoding.equals("MARC8")
4487:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1428:encoding.equals("MARC-8") || encoding.equals("MARC8") |==> encoding.equals("MARC-8")
4488:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1428:encoding.equals("MARC-8") || encoding.equals("MARC8") |==> encoding.equals("MARC8")
4489:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1428:encoding.equals("MARC-8") || encoding.equals("MARC8") |==> true
4490:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1429:dataElement = getMarc8Conversion(bytes) |==> <NO-OP>
4491:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1430:encoding.equalsIgnoreCase("Unimarc") || encoding.equals("IS05426") |==> encoding.equalsIgnoreCase("Unimarc") != encoding.equals("IS05426")
4492:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1430:encoding.equalsIgnoreCase("Unimarc") || encoding.equals("IS05426") |==> encoding.equalsIgnoreCase("Unimarc")
4493:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1430:encoding.equalsIgnoreCase("Unimarc") || encoding.equals("IS05426") |==> encoding.equals("IS05426")
4494:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1430:encoding.equalsIgnoreCase("Unimarc") || encoding.equals("IS05426") |==> true
4495:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1431:dataElement = getUnimarcConversion(bytes) |==> <NO-OP>
4496:COR:encoding.equals("MARC8-Maybe"):TRUE:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1432:encoding.equals("MARC8-Maybe") |==> false
4497:COR:encoding.equals("MARC8-Maybe"):FALSE:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1432:encoding.equals("MARC8-Maybe") |==> true
4498:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1433:getMarc8Conversion(bytes) |==> null
4499:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1434:getUnimarcConversion(bytes) |==> null
4500:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1439:new String(bytes, "ISO-8859-1") |==> null
4501:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1442:e.printStackTrace() |==> <NO-OP>
4502:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1444:dataElement1.equals(dataElement2) && dataElement1.equals(dataElement3) |==> dataElement1.equals(dataElement2) == dataElement1.equals(dataElement3)
4503:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1444:dataElement1.equals(dataElement2) && dataElement1.equals(dataElement3) |==> false
4504:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1444:dataElement1.equals(dataElement2) && dataElement1.equals(dataElement3) |==> dataElement1.equals(dataElement2)
4505:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1444:dataElement1.equals(dataElement2) && dataElement1.equals(dataElement3) |==> dataElement1.equals(dataElement3)
4506:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1445:dataElement = dataElement1 |==> <NO-OP>
4507:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1447:conversionCheck1 = conversionCheck1 + "|>" + Normalizer.normalize(dataElement1, Normalizer.Form.NFC) |==> <NO-OP>
4508:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1449:conversionCheck2 = conversionCheck2 + "|>" + dataElement2 |==> <NO-OP>
4509:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1450:conversionCheck3 = conversionCheck3 + "|>" + dataElement3 |==> <NO-OP>
4510:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1451:dataElement = dataElement1 + "%%@%%" + dataElement2 + "%%@%%" + dataElement3 |==> <NO-OP>
4511:COR:encoding.equals("MARC8-Broken"):TRUE:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1453:encoding.equals("MARC8-Broken") |==> false
4512:COR:encoding.equals("MARC8-Broken"):FALSE:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1453:encoding.equals("MARC8-Broken") |==> true
4513:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1455:new String(bytes, "ISO-8859-1") |==> null
4514:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1458:e.printStackTrace() |==> <NO-OP>
4515:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1461:dataElement.replaceAll("&lt;", "<") |==> null
4516:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1463:newdataElement = newdataElement.replaceAll("&gt;", ">") |==> <NO-OP>
4517:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1464:newdataElement = newdataElement.replaceAll("&amp;", "&") |==> <NO-OP>
4518:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1465:newdataElement = newdataElement.replaceAll("&apos;", "\'") |==> <NO-OP>
4519:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1466:newdataElement = newdataElement.replaceAll("&quot;", "\"") |==> <NO-OP>
4520:COR:newdataElement.equals(dataElement):TRUE:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1468:newdataElement.equals(dataElement) |==> false
4521:COR:newdataElement.equals(dataElement):FALSE:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1468:newdataElement.equals(dataElement) |==> true
4522:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1469:dataElement = newdataElement |==> <NO-OP>
4523:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1470:addError(MarcError.ERROR_TYPO, "Subfield contains escaped html character entities, un-escaping them. ") |==> <NO-OP>
4524:EVR:<PLUS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1474:"" + (char)27 + "\\$1$1" |==> null
4525:EVR:<PLUS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1475:"" + (char)27 + "\\(B" |==> null
4526:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1477:newdataElement = dataElement.replaceAll("\\$1(.)", rep1) |==> <NO-OP>
4527:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1478:newdataElement = newdataElement.replaceAll("\\(B", rep2) |==> <NO-OP>
4528:COR:newdataElement.equals(dataElement):TRUE:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1480:newdataElement.equals(dataElement) |==> false
4529:COR:newdataElement.equals(dataElement):FALSE:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1480:newdataElement.equals(dataElement) |==> true
4530:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1481:dataElement = newdataElement |==> <NO-OP>
4531:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1482:addError(MarcError.MAJOR_ERROR, "Subfield seems to be missing MARC8 escape sequences, trying to restore them.") |==> <NO-OP>
4532:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1487:getMarc8Conversion(dataElement.getBytes("ISO-8859-1")) |==> null
4533:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1490:e.printStackTrace() |==> <NO-OP>
4534:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1492:encoding.equals("ISO-8859-1") || encoding.equals("ISO8859_1") |==> encoding.equals("ISO-8859-1") != encoding.equals("ISO8859_1")
4535:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1492:encoding.equals("ISO-8859-1") || encoding.equals("ISO8859_1") |==> encoding.equals("ISO-8859-1")
4536:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1492:encoding.equals("ISO-8859-1") || encoding.equals("ISO8859_1") |==> encoding.equals("ISO8859_1")
4537:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1492:encoding.equals("ISO-8859-1") || encoding.equals("ISO8859_1") |==> true
4538:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1494:new String(bytes, "ISO-8859-1") |==> null
4539:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1500:new String(bytes, encoding) |==> null
4540:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1507:record != null |==> true
4541:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1507:record != null && dataElement.matches("[^&]*&[a-z]*;.*") |==> record != null == dataElement.matches("[^&]*&[a-z]*;.*")
4542:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1507:record != null && dataElement.matches("[^&]*&[a-z]*;.*") |==> false
4543:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1507:record != null && dataElement.matches("[^&]*&[a-z]*;.*") |==> record != null
4544:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1507:record != null && dataElement.matches("[^&]*&[a-z]*;.*") |==> dataElement.matches("[^&]*&[a-z]*;.*")
4545:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1508:dataElement.replaceAll("&lt;", "<") |==> null
4546:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1510:newdataElement = newdataElement.replaceAll("&gt;", ">") |==> <NO-OP>
4547:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1511:newdataElement = newdataElement.replaceAll("&amp;", "&") |==> <NO-OP>
4548:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1512:newdataElement = newdataElement.replaceAll("&apos;", "\'") |==> <NO-OP>
4549:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1513:newdataElement = newdataElement.replaceAll("&quot;", "\"") |==> <NO-OP>
4550:COR:newdataElement.equals(dataElement):TRUE:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1515:newdataElement.equals(dataElement) |==> false
4551:COR:newdataElement.equals(dataElement):FALSE:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1515:newdataElement.equals(dataElement) |==> true
4552:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1516:dataElement = newdataElement |==> <NO-OP>
4553:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1517:addError(MarcError.ERROR_TYPO, "Subfield contains escaped html character entities, un-escaping them. ") |==> <NO-OP>
4554:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getDataAsString(byte[]):1521:dataElement |==> null
4555:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1525:0 |==> 1
4556:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1525:0 |==> -1
4557:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1525:bytes.length - seq.length |==> bytes.length % seq.length
4558:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1525:bytes.length - seq.length |==> bytes.length * seq.length
4559:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1525:bytes.length - seq.length |==> bytes.length + seq.length
4560:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1525:bytes.length - seq.length |==> bytes.length / seq.length
4561:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1525:i < bytes.length - seq.length |==> i != bytes.length - seq.length
4562:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1525:i < bytes.length - seq.length |==> i <= bytes.length - seq.length
4563:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1525:i < bytes.length - seq.length |==> false
4564:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1526:0 |==> 1
4565:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1526:0 |==> -1
4566:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1526:bytes[i] == seq[0] |==> bytes[i] <= seq[0]
4567:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1526:bytes[i] == seq[0] |==> bytes[i] >= seq[0]
4568:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1526:bytes[i] == seq[0] |==> false
4569:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1527:0 |==> 1
4570:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1527:0 |==> -1
4571:ROR:<(int,int):!=(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1527:j < seq.length |==> j != seq.length
4572:ROR:<(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1527:j < seq.length |==> j <= seq.length
4573:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1527:j < seq.length |==> false
4574:AOR:+(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1528:i + j |==> i % j
4575:AOR:+(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1528:i + j |==> i * j
4576:AOR:+(int,int):-(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1528:i + j |==> i - j
4577:AOR:+(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1528:i + j |==> i / j
4578:ROR:!=(int,int):<(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1528:bytes[i + j] != seq[j] |==> bytes[i + j] < seq[j]
4579:ROR:!=(int,int):>(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1528:bytes[i + j] != seq[j] |==> bytes[i + j] > seq[j]
4580:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1528:bytes[i + j] != seq[j] |==> true
4581:STD:<BREAK>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1529:break; |==> <NO-OP>
4582:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1532:1 |==> 0
4583:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1532:1 |==> -1
4584:AOR:-(int,int):%(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1532:seq.length - 1 |==> seq.length % 1
4585:AOR:-(int,int):*(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1532:seq.length - 1 |==> seq.length * 1
4586:AOR:-(int,int):+(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1532:seq.length - 1 |==> seq.length + 1
4587:AOR:-(int,int):/(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1532:seq.length - 1 |==> seq.length / 1
4588:ROR:==(int,int):<=(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1532:j == seq.length - 1 |==> j <= seq.length - 1
4589:ROR:==(int,int):>=(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1532:j == seq.length - 1 |==> j >= seq.length - 1
4590:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1532:j == seq.length - 1 |==> false
4591:LVR:TRUE:FALSE:org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1533:true |==> false
4592:STD:<RETURN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1533:return Config.__M_NO == 0 && Config.COVERED(4591, 4591) ? true : Config.__M_NO == 4591 ? false : true; |==> <NO-OP>
4593:LVR:FALSE:TRUE:org.marc4j.MarcPermissiveStreamReader@byteArrayContains(byte[],byte[]):1539:false |==> true
4594:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader:1542:27 |==> 0
4595:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader:1542:27 |==> -27
4596:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader:1544:175 |==> 0
4597:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader:1544:175 |==> -175
4598:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1560:byteArrayContains(bytes, badEsc) || byteArrayContains(bytes, overbar) |==> byteArrayContains(bytes, badEsc) != byteArrayContains(bytes, overbar)
4599:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1560:byteArrayContains(bytes, badEsc) || byteArrayContains(bytes, overbar) |==> byteArrayContains(bytes, badEsc)
4600:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1560:byteArrayContains(bytes, badEsc) || byteArrayContains(bytes, overbar) |==> byteArrayContains(bytes, overbar)
4601:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1560:byteArrayContains(bytes, badEsc) || byteArrayContains(bytes, overbar) |==> true
4602:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1560:permissive && (byteArrayContains(bytes, badEsc) || byteArrayContains(bytes, overbar)) |==> permissive == (byteArrayContains(bytes, badEsc) || byteArrayContains(bytes, overbar))
4603:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1560:permissive && (byteArrayContains(bytes, badEsc) || byteArrayContains(bytes, overbar)) |==> false
4604:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1560:permissive && (byteArrayContains(bytes, badEsc) || byteArrayContains(bytes, overbar)) |==> permissive
4605:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1560:permissive && (byteArrayContains(bytes, badEsc) || byteArrayContains(bytes, overbar)) |==> (byteArrayContains(bytes, badEsc) || byteArrayContains(bytes, overbar))
4606:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1564:new String(bytes, "ISO-8859-1") |==> null
4607:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1565:newDataElement = dataElement.replaceAll("(\\e)b-\\es([psb$()])", "$1$2") |==> <NO-OP>
4608:COR:newDataElement.equals(dataElement):TRUE:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1567:newDataElement.equals(dataElement) |==> false
4609:COR:newDataElement.equals(dataElement):FALSE:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1567:newDataElement.equals(dataElement) |==> true
4610:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1568:dataElement = newDataElement |==> <NO-OP>
4611:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1569:addError(MarcError.MINOR_ERROR, "Subfield contains odd pattern of subscript or superscript escapes. ") |==> <NO-OP>
4612:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1573:175 |==> 0
4613:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1573:175 |==> -175
4614:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1573:229 |==> 0
4615:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1573:229 |==> -229
4616:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1573:newDataElement = dataElement.replace((char)175, (char)229) |==> <NO-OP>
4617:COR:newDataElement.equals(dataElement):TRUE:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1575:newDataElement.equals(dataElement) |==> false
4618:COR:newDataElement.equals(dataElement):FALSE:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1575:newDataElement.equals(dataElement) |==> true
4619:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1576:dataElement = newDataElement |==> <NO-OP>
4620:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1577:addError(MarcError.ERROR_TYPO, "Subfield contains 0xaf overbar character, changing it to proper MARC8 representation ") |==> <NO-OP>
4621:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1581:dataElement = conv.convert(dataElement) |==> <NO-OP>
4622:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1584:e.printStackTrace() |==> <NO-OP>
4623:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1587:dataElement = conv.convert(bytes) |==> <NO-OP>
4624:COR:doNCR:TRUE:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1590:doNCR |==> false
4625:COR:doNCR:FALSE:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1590:doNCR |==> true
4626:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1594:permissive && dataElement.matches("[^&]*&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][^;].*") |==> permissive == dataElement.matches("[^&]*&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][^;].*")
4627:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1594:permissive && dataElement.matches("[^&]*&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][^;].*") |==> false
4628:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1594:permissive && dataElement.matches("[^&]*&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][^;].*") |==> permissive
4629:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1594:permissive && dataElement.matches("[^&]*&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][^;].*") |==> dataElement.matches("[^&]*&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][^;].*")
4630:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1597:Pattern.compile("&#x([0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])(%x)?;?") |==> null
4631:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1598:pattern.matcher(dataElement) |==> null
4632:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1599:new StringBuffer() |==> null
4633:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1601:0 |==> 1
4634:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1601:0 |==> -1
4635:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1604:newElement.append(dataElement.substring(prevEnd, matcher.start())) |==> <NO-OP>
4636:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1605:1 |==> 0
4637:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1605:1 |==> -1
4638:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1605:newElement.append(getChar(matcher.group(1))) |==> <NO-OP>
4639:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1607:1 |==> 0
4640:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1607:1 |==> -1
4641:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1607:1 |==> 0
4642:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1607:1 |==> -1
4643:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1607:matcher.group(1).contains("%x") || !matcher.group(1).endsWith(";") |==> matcher.group(1).contains("%x") != !matcher.group(1).endsWith(";")
4644:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1607:matcher.group(1).contains("%x") || !matcher.group(1).endsWith(";") |==> matcher.group(1).contains("%x")
4645:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1607:matcher.group(1).contains("%x") || !matcher.group(1).endsWith(";") |==> !matcher.group(1).endsWith(";")
4646:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1607:matcher.group(1).contains("%x") || !matcher.group(1).endsWith(";") |==> true
4647:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1611:0 |==> 1
4648:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1611:0 |==> -1
4649:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1608:addError(MarcError.MINOR_ERROR, "Subfield contains malformed Unicode Numeric Character Reference : " + matcher.group(0)) |==> <NO-OP>
4650:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1613:prevEnd = matcher.end() |==> <NO-OP>
4651:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1616:newElement.append(dataElement.substring(prevEnd)) |==> <NO-OP>
4652:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1617:dataElement = newElement.toString() |==> <NO-OP>
4653:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[],org.marc4j.converter.impl.AnselToUnicode,boolean,org.marc4j.marc.Record,boolean):1621:dataElement |==> null
4654:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[]):1626:converterAnsel == null |==> false
4655:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[]):1627:converterAnsel = new AnselToUnicode(this) |==> <NO-OP>
4656:COR:isTranslateLosslessUnicodeNumericCodeReferencesEnabled():TRUE:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[]):1629:isTranslateLosslessUnicodeNumericCodeReferencesEnabled() |==> false
4657:COR:isTranslateLosslessUnicodeNumericCodeReferencesEnabled():FALSE:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[]):1629:isTranslateLosslessUnicodeNumericCodeReferencesEnabled() |==> true
4658:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[]):1630:converterAnsel |==> null
4659:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[]):1631:anselConverter.setTranslateNCR(isTranslateLosslessUnicodeNumericCodeReferencesEnabled()) |==> <NO-OP>
4660:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[]):1634:dataElement = getMarc8Conversion(bytes, converterAnsel, permissive, record, translateLosslessUnicodeNumericCodeReferencesEnabled) |==> <NO-OP>
4661:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getMarc8Conversion(byte[]):1636:dataElement |==> null
4662:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1640:converterUnimarc == null |==> false
4663:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1641:converterUnimarc = new Iso5426ToUnicode() |==> <NO-OP>
4664:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1644:converterUnimarc.convert(bytes) |==> null
4665:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1646:dataElement = dataElement.replaceAll("\u0088", "") |==> <NO-OP>
4666:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1647:dataElement = dataElement.replaceAll("\u0089", "") |==> <NO-OP>
4667:COR:dataElement.matches("[^<]*<U[+][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]>.*"):TRUE:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1649:dataElement.matches("[^<]*<U[+][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]>.*") |==> false
4668:COR:dataElement.matches("[^<]*<U[+][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]>.*"):FALSE:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1649:dataElement.matches("[^<]*<U[+][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]>.*") |==> true
4669:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1651:Pattern.compile("<U[+]([0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])>") |==> null
4670:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1652:pattern.matcher(dataElement) |==> null
4671:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1653:new StringBuffer() |==> null
4672:LVR:0:POS:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1655:0 |==> 1
4673:LVR:0:NEG:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1655:0 |==> -1
4674:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1658:newElement.append(dataElement.substring(prevEnd, matcher.start())) |==> <NO-OP>
4675:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1659:1 |==> 0
4676:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1659:1 |==> -1
4677:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1659:newElement.append(getChar(matcher.group(1))) |==> <NO-OP>
4678:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1660:prevEnd = matcher.end() |==> <NO-OP>
4679:STD:<CALL>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1663:newElement.append(dataElement.substring(prevEnd)) |==> <NO-OP>
4680:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1664:dataElement = newElement.toString() |==> <NO-OP>
4681:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getUnimarcConversion(byte[]):1667:dataElement |==> null
4682:LVR:POS:0:org.marc4j.MarcPermissiveStreamReader@getChar(java.lang.String):1671:16 |==> 0
4683:LVR:POS:NEG:org.marc4j.MarcPermissiveStreamReader@getChar(java.lang.String):1671:16 |==> -16
4684:EVR:<PLUS>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getChar(java.lang.String):1672:"" + (char)charNum |==> null
4685:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcPermissiveStreamReader@getChar(java.lang.String):1673:result |==> null
4686:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode$Queue@put(java.lang.Character):61:addElement(item) |==> <NO-OP>
4687:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode$Queue@put(java.lang.Character):62:item |==> null
4688:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode$Queue@get():71:peek() |==> null
4689:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode$Queue@get():72:0 |==> 1
4690:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode$Queue@get():72:0 |==> -1
4691:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode$Queue@get():72:removeElementAt(0) |==> <NO-OP>
4692:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode$Queue@get():74:obj |==> null
4693:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode$Queue@peek():81:0 |==> 1
4694:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode$Queue@peek():81:0 |==> -1
4695:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode$Queue@empty():88:0 |==> 1
4696:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode$Queue@empty():88:0 |==> -1
4697:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode$Queue@empty():88:size() == 0 |==> size() <= 0
4698:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode$Queue@empty():88:size() == 0 |==> size() >= 0
4699:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode$Queue@empty():88:size() == 0 |==> false
4700:EVR:<PLUS>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode$CodeTracker@toString():105:"Offset: " + offset + " G0: " + Integer.toHexString(g0) + " G1: " + Integer.toHexString(g1) + " Multibyte: " + multibyte |==> null
4701:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode:111:false |==> true
4702:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode:118:false |==> true
4703:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@shouldTranslateNCR():126:translateNCR |==> false
4704:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@setTranslateNCR(boolean):135:this.translateNCR = translateNCR |==> <NO-OP>
4705:LVR:TRUE:FALSE:org.marc4j.converter.impl.AnselToUnicode@outputsUnicode():145:true |==> false
4706:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@<init>():155:false |==> true
4707:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@<init>():155:ct = loadGeneratedTable(false) |==> <NO-OP>
4708:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@<init>(boolean):164:ct = loadGeneratedTable(loadMultibyte) |==> <NO-OP>
4709:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@<init>(org.marc4j.MarcPermissiveStreamReader):174:false |==> true
4710:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@<init>(org.marc4j.MarcPermissiveStreamReader):174:ct = loadGeneratedTable(false) |==> <NO-OP>
4711:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@<init>(org.marc4j.MarcPermissiveStreamReader):175:this.curReader = curReader |==> <NO-OP>
4712:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@loadGeneratedTable(boolean):181:Class.forName("org.marc4j.converter.impl.CodeTableGenerated") |==> null
4713:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@loadGeneratedTable(boolean):182:generated.getConstructor() |==> null
4714:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@loadGeneratedTable(boolean):183:cons.newInstance() |==> null
4715:LVR:TRUE:FALSE:org.marc4j.converter.impl.AnselToUnicode@loadGeneratedTable(boolean):185:true |==> false
4716:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@loadGeneratedTable(boolean):185:loadedMultibyte = true |==> <NO-OP>
4717:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@loadGeneratedTable(boolean):186:(CodeTableInterface)ct |==> null
4718:COR:loadMultibyte:TRUE:org.marc4j.converter.impl.AnselToUnicode@loadGeneratedTable(boolean):190:loadMultibyte |==> false
4719:COR:loadMultibyte:FALSE:org.marc4j.converter.impl.AnselToUnicode@loadGeneratedTable(boolean):190:loadMultibyte |==> true
4720:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@loadGeneratedTable(boolean):191:new CodeTable(AnselToUnicode.class.getResourceAsStream("resources/codetables.xml")) |==> null
4721:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@loadGeneratedTable(boolean):194:new CodeTable(AnselToUnicode.class.getResourceAsStream("resources/codetablesnocjk.xml")) |==> null
4722:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@loadGeneratedTable(boolean):198:loadedMultibyte = loadMultibyte |==> <NO-OP>
4723:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@loadGeneratedTable(boolean):199:ct |==> null
4724:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@<init>(java.lang.String):213:ct = new CodeTable(pathname) |==> <NO-OP>
4725:LVR:TRUE:FALSE:org.marc4j.converter.impl.AnselToUnicode@<init>(java.lang.String):214:true |==> false
4726:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@<init>(java.lang.String):214:loadedMultibyte = true |==> <NO-OP>
4727:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@<init>(java.io.InputStream):227:ct = new CodeTable(in) |==> <NO-OP>
4728:LVR:TRUE:FALSE:org.marc4j.converter.impl.AnselToUnicode@<init>(java.io.InputStream):228:true |==> false
4729:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@<init>(java.io.InputStream):228:loadedMultibyte = true |==> <NO-OP>
4730:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@loadMultibyte():235:ct = new CodeTable(getClass().getResourceAsStream("resources/codetables.xml")) |==> <NO-OP>
4731:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):239:0 |==> 1
4732:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):239:0 |==> -1
4733:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):240:0 |==> 1
4734:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):240:0 |==> -1
4735:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):242:cdt.offset + extra |==> cdt.offset % extra
4736:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):242:cdt.offset + extra |==> cdt.offset * extra
4737:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):242:cdt.offset + extra |==> cdt.offset - extra
4738:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):242:cdt.offset + extra |==> cdt.offset / extra
4739:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):242:cdt.offset + extra + extra2 |==> (cdt.offset + extra) % extra2
4740:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):242:cdt.offset + extra + extra2 |==> (cdt.offset + extra) * extra2
4741:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):242:cdt.offset + extra + extra2 |==> cdt.offset + extra - extra2
4742:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):242:cdt.offset + extra + extra2 |==> (cdt.offset + extra) / extra2
4743:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):242:cdt.offset + extra + extra2 < data.length |==> cdt.offset + extra + extra2 != data.length
4744:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):242:cdt.offset + extra + extra2 < data.length |==> cdt.offset + extra + extra2 <= data.length
4745:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):242:cdt.offset + extra + extra2 < data.length |==> false
4746:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):242:cdt.offset + extra + extra2 < data.length && isEscape(data[cdt.offset]) |==> cdt.offset + extra + extra2 < data.length == isEscape(data[cdt.offset])
4747:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):242:cdt.offset + extra + extra2 < data.length && isEscape(data[cdt.offset]) |==> false
4748:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):242:cdt.offset + extra + extra2 < data.length && isEscape(data[cdt.offset]) |==> cdt.offset + extra + extra2 < data.length
4749:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):242:cdt.offset + extra + extra2 < data.length && isEscape(data[cdt.offset]) |==> isEscape(data[cdt.offset])
4750:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):243:cdt.offset + extra |==> cdt.offset % extra
4751:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):243:cdt.offset + extra |==> cdt.offset * extra
4752:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):243:cdt.offset + extra |==> cdt.offset - extra
4753:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):243:cdt.offset + extra |==> cdt.offset / extra
4754:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):243:cdt.offset + extra + extra2 |==> (cdt.offset + extra) % extra2
4755:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):243:cdt.offset + extra + extra2 |==> (cdt.offset + extra) * extra2
4756:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):243:cdt.offset + extra + extra2 |==> cdt.offset + extra - extra2
4757:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):243:cdt.offset + extra + extra2 |==> (cdt.offset + extra) / extra2
4758:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):243:1 |==> 0
4759:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):243:1 |==> -1
4760:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):243:cdt.offset + extra + extra2 + 1 |==> (cdt.offset + extra + extra2) % 1
4761:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):243:cdt.offset + extra + extra2 + 1 |==> (cdt.offset + extra + extra2) * 1
4762:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):243:cdt.offset + extra + extra2 + 1 |==> cdt.offset + extra + extra2 - 1
4763:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):243:cdt.offset + extra + extra2 + 1 |==> (cdt.offset + extra + extra2) / 1
4764:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):243:cdt.offset + extra + extra2 + 1 == data.length |==> cdt.offset + extra + extra2 + 1 <= data.length
4765:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):243:cdt.offset + extra + extra2 + 1 == data.length |==> cdt.offset + extra + extra2 + 1 >= data.length
4766:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):243:cdt.offset + extra + extra2 + 1 == data.length |==> false
4767:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):244:1 |==> 0
4768:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):244:1 |==> -1
4769:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):244:cdt.offset += 1 |==> <NO-OP>
4770:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):245:curReader != null |==> true
4771:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):246:curReader.addError(MarcError.MINOR_ERROR, "Escape character found at end of field, discarding it.") |==> <NO-OP>
4772:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):252:break; |==> <NO-OP>
4773:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):255:1 |==> 0
4774:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):255:1 |==> -1
4775:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):255:cdt.offset + 1 |==> cdt.offset % 1
4776:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):255:cdt.offset + 1 |==> cdt.offset * 1
4777:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):255:cdt.offset + 1 |==> cdt.offset - 1
4778:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):255:cdt.offset + 1 |==> cdt.offset / 1
4779:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):255:cdt.offset + 1 + extra |==> (cdt.offset + 1) % extra
4780:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):255:cdt.offset + 1 + extra |==> (cdt.offset + 1) * extra
4781:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):255:cdt.offset + 1 + extra |==> cdt.offset + 1 - extra
4782:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):255:cdt.offset + 1 + extra |==> (cdt.offset + 1) / extra
4783:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):258:0 |==> 1
4784:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):258:0 |==> -1
4785:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):258:2 |==> 0
4786:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):258:2 |==> -2
4787:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):258:2 + extra |==> 2 % extra
4788:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):258:2 + extra |==> 2 * extra
4789:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):258:2 + extra |==> 2 - extra
4790:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):258:2 + extra |==> 2 / extra
4791:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):258:false |==> true
4792:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):258:set_cdt(cdt, 0, data, 2 + extra, false) |==> <NO-OP>
4793:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):259:break; |==> <NO-OP>
4794:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):262:1 |==> 0
4795:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):262:1 |==> -1
4796:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):262:2 |==> 0
4797:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):262:2 |==> -2
4798:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):262:2 + extra |==> 2 % extra
4799:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):262:2 + extra |==> 2 * extra
4800:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):262:2 + extra |==> 2 - extra
4801:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):262:2 + extra |==> 2 / extra
4802:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):262:false |==> true
4803:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):262:set_cdt(cdt, 1, data, 2 + extra, false) |==> <NO-OP>
4804:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):263:break; |==> <NO-OP>
4805:COR:loadedMultibyte:TRUE:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):265:loadedMultibyte |==> false
4806:COR:loadedMultibyte:FALSE:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):265:loadedMultibyte |==> true
4807:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):266:loadMultibyte() |==> <NO-OP>
4808:LVR:TRUE:FALSE:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):267:true |==> false
4809:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):267:loadedMultibyte = true |==> <NO-OP>
4810:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):270:2 |==> 0
4811:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):270:2 |==> -2
4812:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):270:cdt.offset + 2 |==> cdt.offset % 2
4813:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):270:cdt.offset + 2 |==> cdt.offset * 2
4814:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):270:cdt.offset + 2 |==> cdt.offset - 2
4815:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):270:cdt.offset + 2 |==> cdt.offset / 2
4816:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):270:cdt.offset + 2 + extra |==> (cdt.offset + 2) % extra
4817:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):270:cdt.offset + 2 + extra |==> (cdt.offset + 2) * extra
4818:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):270:cdt.offset + 2 + extra |==> cdt.offset + 2 - extra
4819:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):270:cdt.offset + 2 + extra |==> (cdt.offset + 2) / extra
4820:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):270:cdt.offset + 2 + extra + extra2 |==> (cdt.offset + 2 + extra) % extra2
4821:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):270:cdt.offset + 2 + extra + extra2 |==> (cdt.offset + 2 + extra) * extra2
4822:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):270:cdt.offset + 2 + extra + extra2 |==> cdt.offset + 2 + extra - extra2
4823:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):270:cdt.offset + 2 + extra + extra2 |==> (cdt.offset + 2 + extra) / extra2
4824:ROR:>=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):271:switchOffset >= data.length |==> switchOffset == data.length
4825:ROR:>=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):271:switchOffset >= data.length |==> switchOffset > data.length
4826:ROR:>=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):271:switchOffset >= data.length |==> true
4827:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):272:1 |==> 0
4828:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):272:1 |==> -1
4829:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):272:cdt.offset += 1 |==> <NO-OP>
4830:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):273:curReader != null |==> true
4831:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):274:curReader.addError(MarcError.MINOR_ERROR, "Incomplete character set code found following escape character. Discarding escape character.") |==> <NO-OP>
4832:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):278:break; |==> <NO-OP>
4833:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):283:3 |==> 0
4834:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):283:3 |==> -3
4835:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):283:3 + extra |==> 3 % extra
4836:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):283:3 + extra |==> 3 * extra
4837:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):283:3 + extra |==> 3 - extra
4838:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):283:3 + extra |==> 3 / extra
4839:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):283:3 + extra + extra2 |==> (3 + extra) % extra2
4840:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):283:3 + extra + extra2 |==> (3 + extra) * extra2
4841:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):283:3 + extra + extra2 |==> 3 + extra - extra2
4842:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):283:3 + extra + extra2 |==> (3 + extra) / extra2
4843:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):284:cdt.offset + offset2d |==> cdt.offset % offset2d
4844:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):284:cdt.offset + offset2d |==> cdt.offset * offset2d
4845:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):284:cdt.offset + offset2d |==> cdt.offset - offset2d
4846:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):284:cdt.offset + offset2d |==> cdt.offset / offset2d
4847:ROR:>=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):284:cdt.offset + offset2d >= data.length |==> cdt.offset + offset2d == data.length
4848:ROR:>=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):284:cdt.offset + offset2d >= data.length |==> cdt.offset + offset2d > data.length
4849:ROR:>=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):284:cdt.offset + offset2d >= data.length |==> true
4850:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):285:1 |==> 0
4851:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):285:1 |==> -1
4852:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):285:cdt.offset += 1 |==> <NO-OP>
4853:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):286:curReader != null |==> true
4854:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):287:curReader.addError(MarcError.MINOR_ERROR, "Incomplete character set code found following escape character. Discarding escape character.") |==> <NO-OP>
4855:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):291:break; |==> <NO-OP>
4856:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):293:1 |==> 0
4857:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):293:1 |==> -1
4858:LVR:TRUE:FALSE:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):293:true |==> false
4859:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):293:set_cdt(cdt, 1, data, offset2d, true) |==> <NO-OP>
4860:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):296:3 |==> 0
4861:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):296:3 |==> -3
4862:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):296:3 + extra |==> 3 % extra
4863:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):296:3 + extra |==> 3 * extra
4864:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):296:3 + extra |==> 3 - extra
4865:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):296:3 + extra |==> 3 / extra
4866:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):296:3 + extra + extra2 |==> (3 + extra) % extra2
4867:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):296:3 + extra + extra2 |==> (3 + extra) * extra2
4868:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):296:3 + extra + extra2 |==> 3 + extra - extra2
4869:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):296:3 + extra + extra2 |==> (3 + extra) / extra2
4870:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):297:cdt.offset + offset2c |==> cdt.offset % offset2c
4871:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):297:cdt.offset + offset2c |==> cdt.offset * offset2c
4872:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):297:cdt.offset + offset2c |==> cdt.offset - offset2c
4873:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):297:cdt.offset + offset2c |==> cdt.offset / offset2c
4874:ROR:>=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):297:cdt.offset + offset2c >= data.length |==> cdt.offset + offset2c == data.length
4875:ROR:>=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):297:cdt.offset + offset2c >= data.length |==> cdt.offset + offset2c > data.length
4876:ROR:>=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):297:cdt.offset + offset2c >= data.length |==> true
4877:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):298:1 |==> 0
4878:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):298:1 |==> -1
4879:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):298:cdt.offset += 1 |==> <NO-OP>
4880:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):299:curReader != null |==> true
4881:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):300:curReader.addError(MarcError.MINOR_ERROR, "Incomplete character set code found following escape character. Discarding escape character.") |==> <NO-OP>
4882:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):304:break; |==> <NO-OP>
4883:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):306:0 |==> 1
4884:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):306:0 |==> -1
4885:LVR:TRUE:FALSE:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):306:true |==> false
4886:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):306:set_cdt(cdt, 0, data, offset2c, true) |==> <NO-OP>
4887:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):309:2 |==> 0
4888:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):309:2 |==> -2
4889:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):309:cdt.offset + 2 |==> cdt.offset % 2
4890:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):309:cdt.offset + 2 |==> cdt.offset * 2
4891:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):309:cdt.offset + 2 |==> cdt.offset - 2
4892:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):309:cdt.offset + 2 |==> cdt.offset / 2
4893:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):309:cdt.offset + 2 + extra |==> (cdt.offset + 2) % extra
4894:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):309:cdt.offset + 2 + extra |==> (cdt.offset + 2) * extra
4895:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):309:cdt.offset + 2 + extra |==> cdt.offset + 2 - extra
4896:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):309:cdt.offset + 2 + extra |==> (cdt.offset + 2) / extra
4897:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):309:cdt.offset + 2 + extra + extra2 |==> (cdt.offset + 2 + extra) % extra2
4898:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):309:cdt.offset + 2 + extra + extra2 |==> (cdt.offset + 2 + extra) * extra2
4899:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):309:cdt.offset + 2 + extra + extra2 |==> cdt.offset + 2 + extra - extra2
4900:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):309:cdt.offset + 2 + extra + extra2 |==> (cdt.offset + 2 + extra) / extra2
4901:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):309:cdt.g0 = data[cdt.offset + 2 + extra + extra2] |==> <NO-OP>
4902:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):310:3 |==> 0
4903:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):310:3 |==> -3
4904:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):310:3 + extra |==> 3 % extra
4905:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):310:3 + extra |==> 3 * extra
4906:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):310:3 + extra |==> 3 - extra
4907:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):310:3 + extra |==> 3 / extra
4908:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):310:3 + extra + extra2 |==> (3 + extra) % extra2
4909:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):310:3 + extra + extra2 |==> (3 + extra) * extra2
4910:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):310:3 + extra + extra2 |==> 3 + extra - extra2
4911:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):310:3 + extra + extra2 |==> (3 + extra) / extra2
4912:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):310:cdt.offset += 3 + extra + extra2 |==> <NO-OP>
4913:LVR:TRUE:FALSE:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):311:true |==> false
4914:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):311:cdt.multibyte = true |==> <NO-OP>
4915:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):312:break; |==> <NO-OP>
4916:STD:<INC>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):316:extra2++ |==> <NO-OP>
4917:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):317:break; |==> <NO-OP>
4918:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):321:1 |==> 0
4919:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):321:1 |==> -1
4920:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):321:cdt.offset += 1 |==> <NO-OP>
4921:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):323:curReader != null |==> true
4922:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):324:curReader.addError(MarcError.MINOR_ERROR, "Unknown character set code found following escape character. Discarding escape character.") |==> <NO-OP>
4923:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):331:break; |==> <NO-OP>
4924:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):338:1 |==> 0
4925:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):338:1 |==> -1
4926:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):338:cdt.offset + 1 |==> cdt.offset % 1
4927:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):338:cdt.offset + 1 |==> cdt.offset * 1
4928:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):338:cdt.offset + 1 |==> cdt.offset - 1
4929:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):338:cdt.offset + 1 |==> cdt.offset / 1
4930:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):338:cdt.offset + 1 + extra |==> (cdt.offset + 1) % extra
4931:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):338:cdt.offset + 1 + extra |==> (cdt.offset + 1) * extra
4932:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):338:cdt.offset + 1 + extra |==> cdt.offset + 1 - extra
4933:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):338:cdt.offset + 1 + extra |==> (cdt.offset + 1) / extra
4934:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):338:cdt.g0 = data[cdt.offset + 1 + extra] |==> <NO-OP>
4935:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):339:2 |==> 0
4936:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):339:2 |==> -2
4937:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):339:2 + extra |==> 2 % extra
4938:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):339:2 + extra |==> 2 * extra
4939:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):339:2 + extra |==> 2 - extra
4940:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):339:2 + extra |==> 2 / extra
4941:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):339:cdt.offset += 2 + extra |==> <NO-OP>
4942:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):340:false |==> true
4943:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):340:cdt.multibyte = false |==> <NO-OP>
4944:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):341:break; |==> <NO-OP>
4945:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):343:66 |==> 0
4946:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):343:66 |==> -66
4947:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):343:cdt.g0 = 66 |==> <NO-OP>
4948:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):344:2 |==> 0
4949:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):344:2 |==> -2
4950:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):344:2 + extra |==> 2 % extra
4951:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):344:2 + extra |==> 2 * extra
4952:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):344:2 + extra |==> 2 - extra
4953:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):344:2 + extra |==> 2 / extra
4954:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):344:cdt.offset += 2 + extra |==> <NO-OP>
4955:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):345:false |==> true
4956:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):345:cdt.multibyte = false |==> <NO-OP>
4957:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):346:break; |==> <NO-OP>
4958:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):349:curReader == null |==> false
4959:STD:<INC>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):353:extra++ |==> <NO-OP>
4960:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):354:break; |==> <NO-OP>
4961:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):358:1 |==> 0
4962:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):358:1 |==> -1
4963:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):358:cdt.offset += 1 |==> <NO-OP>
4964:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):360:curReader != null |==> true
4965:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):361:curReader.addError(MarcError.MINOR_ERROR, "Unknown character set code found following escape character. Discarding escape character.") |==> <NO-OP>
4966:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):368:break; |==> <NO-OP>
4967:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:curReader != null |==> true
4968:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:0 |==> 1
4969:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:0 |==> -1
4970:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:extra != 0 |==> extra < 0
4971:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:extra != 0 |==> extra > 0
4972:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:extra != 0 |==> true
4973:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:0 |==> 1
4974:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:0 |==> -1
4975:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:extra2 != 0 |==> extra2 < 0
4976:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:extra2 != 0 |==> extra2 > 0
4977:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:extra2 != 0 |==> true
4978:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:extra != 0 || extra2 != 0 |==> extra != 0 != (extra2 != 0)
4979:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:extra != 0 || extra2 != 0 |==> extra != 0
4980:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:extra != 0 || extra2 != 0 |==> extra2 != 0
4981:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:extra != 0 || extra2 != 0 |==> true
4982:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:curReader != null && (extra != 0 || extra2 != 0) |==> curReader != null == (extra != 0 || extra2 != 0)
4983:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:curReader != null && (extra != 0 || extra2 != 0) |==> false
4984:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:curReader != null && (extra != 0 || extra2 != 0) |==> curReader != null
4985:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):371:curReader != null && (extra != 0 || extra2 != 0) |==> (extra != 0 || extra2 != 0)
4986:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):373:extra + extra2 |==> extra % extra2
4987:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):373:extra + extra2 |==> extra * extra2
4988:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):373:extra + extra2 |==> extra - extra2
4989:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):373:extra + extra2 |==> extra / extra2
4990:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@checkMode(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):372:curReader.addError(MarcError.ERROR_TYPO, "" + (extra + extra2) + " extraneous space characters found within MARC8 character set escape sequence") |==> <NO-OP>
4991:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):379:aAddnlOffset |==> 0
4992:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:cdt.offset + addnlOffset |==> cdt.offset % addnlOffset
4993:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:cdt.offset + addnlOffset |==> cdt.offset * addnlOffset
4994:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:cdt.offset + addnlOffset |==> cdt.offset - addnlOffset
4995:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:cdt.offset + addnlOffset |==> cdt.offset / addnlOffset
4996:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:data[cdt.offset + addnlOffset] == '!' |==> data[cdt.offset + addnlOffset] <= '!'
4997:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:data[cdt.offset + addnlOffset] == '!' |==> data[cdt.offset + addnlOffset] >= '!'
4998:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:data[cdt.offset + addnlOffset] == '!' |==> false
4999:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:cdt.offset + addnlOffset |==> cdt.offset % addnlOffset
5000:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:cdt.offset + addnlOffset |==> cdt.offset * addnlOffset
5001:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:cdt.offset + addnlOffset |==> cdt.offset - addnlOffset
5002:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:cdt.offset + addnlOffset |==> cdt.offset / addnlOffset
5003:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:1 |==> 0
5004:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:1 |==> -1
5005:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:cdt.offset + addnlOffset + 1 |==> (cdt.offset + addnlOffset) % 1
5006:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:cdt.offset + addnlOffset + 1 |==> (cdt.offset + addnlOffset) * 1
5007:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:cdt.offset + addnlOffset + 1 |==> cdt.offset + addnlOffset - 1
5008:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:cdt.offset + addnlOffset + 1 |==> (cdt.offset + addnlOffset) / 1
5009:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:data[cdt.offset + addnlOffset + 1] == 'E' |==> data[cdt.offset + addnlOffset + 1] <= 'E'
5010:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:data[cdt.offset + addnlOffset + 1] == 'E' |==> data[cdt.offset + addnlOffset + 1] >= 'E'
5011:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:data[cdt.offset + addnlOffset + 1] == 'E' |==> false
5012:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:data[cdt.offset + addnlOffset] == '!' && data[cdt.offset + addnlOffset + 1] == 'E' |==> data[cdt.offset + addnlOffset] == '!' == (data[cdt.offset + addnlOffset + 1] == 'E')
5013:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:data[cdt.offset + addnlOffset] == '!' && data[cdt.offset + addnlOffset + 1] == 'E' |==> false
5014:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:data[cdt.offset + addnlOffset] == '!' && data[cdt.offset + addnlOffset + 1] == 'E' |==> data[cdt.offset + addnlOffset] == '!'
5015:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):381:data[cdt.offset + addnlOffset] == '!' && data[cdt.offset + addnlOffset + 1] == 'E' |==> data[cdt.offset + addnlOffset + 1] == 'E'
5016:STD:<INC>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):382:addnlOffset++ |==> <NO-OP>
5017:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):383:cdt.offset + addnlOffset |==> cdt.offset % addnlOffset
5018:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):383:cdt.offset + addnlOffset |==> cdt.offset * addnlOffset
5019:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):383:cdt.offset + addnlOffset |==> cdt.offset - addnlOffset
5020:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):383:cdt.offset + addnlOffset |==> cdt.offset / addnlOffset
5021:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):383:data[cdt.offset + addnlOffset] == ' ' |==> data[cdt.offset + addnlOffset] <= ' '
5022:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):383:data[cdt.offset + addnlOffset] == ' ' |==> data[cdt.offset + addnlOffset] >= ' '
5023:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):383:data[cdt.offset + addnlOffset] == ' ' |==> false
5024:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):384:curReader != null |==> true
5025:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):385:curReader.addError(MarcError.ERROR_TYPO, "Extraneous space character found within MARC8 character set escape sequence. Skipping over space.") |==> <NO-OP>
5026:STD:<INC>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):391:addnlOffset++ |==> <NO-OP>
5027:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):392:cdt.offset + addnlOffset |==> cdt.offset % addnlOffset
5028:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):392:cdt.offset + addnlOffset |==> cdt.offset * addnlOffset
5029:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):392:cdt.offset + addnlOffset |==> cdt.offset - addnlOffset
5030:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):392:cdt.offset + addnlOffset |==> cdt.offset / addnlOffset
5031:LVR:NEG:0:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):392:-1 |==> 0
5032:LVR:NEG:POS:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):392:-1 |==> 1
5033:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):392:"(,)-$!".indexOf(data[cdt.offset + addnlOffset]) != -1 |==> "(,)-$!".indexOf(data[cdt.offset + addnlOffset]) < -1
5034:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):392:"(,)-$!".indexOf(data[cdt.offset + addnlOffset]) != -1 |==> "(,)-$!".indexOf(data[cdt.offset + addnlOffset]) > -1
5035:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):392:"(,)-$!".indexOf(data[cdt.offset + addnlOffset]) != -1 |==> true
5036:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):393:curReader != null |==> true
5037:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):394:curReader.addError(MarcError.MINOR_ERROR, "Extraneaous intermediate character found following escape character. Discarding intermediate character.") |==> <NO-OP>
5038:STD:<INC>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):401:addnlOffset++ |==> <NO-OP>
5039:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):404:cdt.offset + addnlOffset |==> cdt.offset % addnlOffset
5040:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):404:cdt.offset + addnlOffset |==> cdt.offset * addnlOffset
5041:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):404:cdt.offset + addnlOffset |==> cdt.offset - addnlOffset
5042:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):404:cdt.offset + addnlOffset |==> cdt.offset / addnlOffset
5043:LVR:NEG:0:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):404:-1 |==> 0
5044:LVR:NEG:POS:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):404:-1 |==> 1
5045:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):404:"34BE1NQS2".indexOf(data[cdt.offset + addnlOffset]) == -1 |==> "34BE1NQS2".indexOf(data[cdt.offset + addnlOffset]) <= -1
5046:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):404:"34BE1NQS2".indexOf(data[cdt.offset + addnlOffset]) == -1 |==> "34BE1NQS2".indexOf(data[cdt.offset + addnlOffset]) >= -1
5047:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):404:"34BE1NQS2".indexOf(data[cdt.offset + addnlOffset]) == -1 |==> false
5048:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):405:1 |==> 0
5049:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):405:1 |==> -1
5050:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):405:cdt.offset += 1 |==> <NO-OP>
5051:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):406:false |==> true
5052:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):406:cdt.multibyte = false |==> <NO-OP>
5053:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):408:curReader != null |==> true
5054:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):409:curReader.addError(MarcError.MINOR_ERROR, "Unknown character set code found following escape character. Discarding escape character.") |==> <NO-OP>
5055:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):417:0 |==> 1
5056:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):417:0 |==> -1
5057:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):417:g0_or_g1 == 0 |==> g0_or_g1 <= 0
5058:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):417:g0_or_g1 == 0 |==> g0_or_g1 >= 0
5059:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):417:g0_or_g1 == 0 |==> false
5060:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):418:cdt.offset + addnlOffset |==> cdt.offset % addnlOffset
5061:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):418:cdt.offset + addnlOffset |==> cdt.offset * addnlOffset
5062:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):418:cdt.offset + addnlOffset |==> cdt.offset - addnlOffset
5063:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):418:cdt.offset + addnlOffset |==> cdt.offset / addnlOffset
5064:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):418:cdt.g0 = data[cdt.offset + addnlOffset] |==> <NO-OP>
5065:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):420:cdt.offset + addnlOffset |==> cdt.offset % addnlOffset
5066:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):420:cdt.offset + addnlOffset |==> cdt.offset * addnlOffset
5067:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):420:cdt.offset + addnlOffset |==> cdt.offset - addnlOffset
5068:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):420:cdt.offset + addnlOffset |==> cdt.offset / addnlOffset
5069:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):420:cdt.g1 = data[cdt.offset + addnlOffset] |==> <NO-OP>
5070:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):423:1 |==> 0
5071:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):423:1 |==> -1
5072:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):423:1 + addnlOffset |==> 1 % addnlOffset
5073:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):423:1 + addnlOffset |==> 1 * addnlOffset
5074:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):423:1 + addnlOffset |==> 1 - addnlOffset
5075:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):423:1 + addnlOffset |==> 1 / addnlOffset
5076:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):423:cdt.offset += 1 + addnlOffset |==> <NO-OP>
5077:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@set_cdt(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,int,char[],int,boolean):424:cdt.multibyte = multibyte |==> <NO-OP>
5078:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):438:new StringBuffer() |==> null
5079:EVR:<MEMBER_SELECT>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):439:data.length |==> 0
5080:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):440:new CodeTracker() |==> null
5081:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):442:66 |==> 0
5082:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):442:66 |==> -66
5083:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):442:cdt.g0 = 66 |==> <NO-OP>
5084:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):443:69 |==> 0
5085:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):443:69 |==> -69
5086:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):443:cdt.g1 = 69 |==> <NO-OP>
5087:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):444:false |==> true
5088:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):444:cdt.multibyte = false |==> <NO-OP>
5089:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):445:0 |==> 1
5090:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):445:0 |==> -1
5091:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):445:cdt.offset = 0 |==> <NO-OP>
5092:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):447:checkMode(data, cdt) |==> <NO-OP>
5093:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):449:new Queue() |==> null
5094:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):451:cdt.offset < data.length |==> cdt.offset != data.length
5095:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):451:cdt.offset < data.length |==> cdt.offset <= data.length
5096:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):451:cdt.offset < data.length |==> false
5097:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):452:ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1) && hasNext(cdt.offset, len) |==> ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1) == hasNext(cdt.offset, len)
5098:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):452:ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1) && hasNext(cdt.offset, len) |==> false
5099:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):452:ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1) && hasNext(cdt.offset, len) |==> ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1)
5100:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):452:ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1) && hasNext(cdt.offset, len) |==> hasNext(cdt.offset, len)
5101:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):453:cdt.offset < len |==> cdt.offset != len
5102:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):453:cdt.offset < len |==> cdt.offset <= len
5103:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):453:cdt.offset < len |==> false
5104:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):453:cdt.offset < len && ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1) |==> cdt.offset < len == ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1)
5105:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):453:cdt.offset < len && ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1) |==> false
5106:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):453:cdt.offset < len && ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1) |==> cdt.offset < len
5107:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):453:cdt.offset < len && ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1) |==> ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1)
5108:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):453:cdt.offset < len && ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1) && hasNext(cdt.offset, len) |==> (cdt.offset < len && ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1)) == hasNext(cdt.offset, len)
5109:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):453:cdt.offset < len && ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1) && hasNext(cdt.offset, len) |==> false
5110:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):453:cdt.offset < len && ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1) && hasNext(cdt.offset, len) |==> cdt.offset < len && ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1)
5111:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):454:cdt.offset < len && ct.isCombining(data[cdt.offset], cdt.g0, cdt.g1) && hasNext(cdt.offset, len) |==> hasNext(cdt.offset, len)
5112:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):455:getCharCDT(data, cdt) |==> 0
5113:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):456:0 |==> 1
5114:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):456:0 |==> -1
5115:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):456:c != 0 |==> c < 0
5116:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):456:c != 0 |==> c > 0
5117:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):456:c != 0 |==> true
5118:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):457:diacritics.put(new Character(c)) |==> <NO-OP>
5119:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):459:checkMode(data, cdt) |==> <NO-OP>
5120:ROR:>=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):461:cdt.offset >= len |==> cdt.offset == len
5121:ROR:>=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):461:cdt.offset >= len |==> cdt.offset > len
5122:ROR:>=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):461:cdt.offset >= len |==> true
5123:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):462:curReader != null |==> true
5124:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):463:curReader.addError(MarcError.MINOR_ERROR, "Diacritic found at the end of field, without the character that it is supposed to decorate") |==> <NO-OP>
5125:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):465:break; |==> <NO-OP>
5126:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):469:getCharCDT(data, cdt) |==> 0
5127:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):471:checkMode(data, cdt) |==> <NO-OP>
5128:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):473:0 |==> 1
5129:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):473:0 |==> -1
5130:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):473:c2 != 0 |==> c2 < 0
5131:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):473:c2 != 0 |==> c2 > 0
5132:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):473:c2 != 0 |==> true
5133:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):474:sb.append(c2) |==> <NO-OP>
5134:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):478:((Character)diacritics.get()).charValue() |==> 0
5135:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):479:sb.append(c1) |==> <NO-OP>
5136:COR:cdt.multibyte:TRUE:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):482:cdt.multibyte |==> false
5137:COR:cdt.multibyte:FALSE:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):482:cdt.multibyte |==> true
5138:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):483:convertMultibyte(cdt, data) |==> null
5139:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):484:sb.append(mbstr) |==> <NO-OP>
5140:EVR:<MEMBER_SELECT>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):486:cdt.offset |==> 0
5141:EVR:<ARRAY_ACCESS>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):487:data[offset] |==> 0
5142:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):489:getCharCDT(data, cdt) |==> 0
5143:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):490:false |==> true
5144:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:curReader != null |==> true
5145:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:83 |==> 0
5146:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:83 |==> -83
5147:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:cdt.g0 == 83 |==> cdt.g0 <= 83
5148:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:cdt.g0 == 83 |==> cdt.g0 >= 83
5149:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:cdt.g0 == 83 |==> false
5150:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:curReader != null && cdt.g0 == 83 |==> curReader != null == (cdt.g0 == 83)
5151:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:curReader != null && cdt.g0 == 83 |==> false
5152:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:curReader != null && cdt.g0 == 83 |==> curReader != null
5153:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:curReader != null && cdt.g0 == 83 |==> cdt.g0 == 83
5154:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:32 |==> 0
5155:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:32 |==> -32
5156:ROR:>(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:data[offset] > 32 |==> data[offset] != 32
5157:ROR:>(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:data[offset] > 32 |==> data[offset] >= 32
5158:ROR:>(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:data[offset] > 32 |==> false
5159:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:curReader != null && cdt.g0 == 83 && data[offset] > 32 |==> (curReader != null && cdt.g0 == 83) == data[offset] > 32
5160:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:curReader != null && cdt.g0 == 83 && data[offset] > 32 |==> false
5161:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:curReader != null && cdt.g0 == 83 && data[offset] > 32 |==> curReader != null && cdt.g0 == 83
5162:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:curReader != null && cdt.g0 == 83 && data[offset] > 32 |==> data[offset] > 32
5163:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:64 |==> 0
5164:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:64 |==> -64
5165:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:data[offset] < 64 |==> data[offset] != 64
5166:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:data[offset] < 64 |==> data[offset] <= 64
5167:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:data[offset] < 64 |==> false
5168:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:curReader != null && cdt.g0 == 83 && data[offset] > 32 && data[offset] < 64 |==> (curReader != null && cdt.g0 == 83 && data[offset] > 32) == data[offset] < 64
5169:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:curReader != null && cdt.g0 == 83 && data[offset] > 32 && data[offset] < 64 |==> false
5170:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:curReader != null && cdt.g0 == 83 && data[offset] > 32 && data[offset] < 64 |==> curReader != null && cdt.g0 == 83 && data[offset] > 32
5171:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):492:curReader != null && cdt.g0 == 83 && data[offset] > 32 && data[offset] < 64 |==> data[offset] < 64
5172:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:0 |==> 1
5173:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:0 |==> -1
5174:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:c == 0 |==> c <= 0
5175:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:c == 0 |==> c >= 0
5176:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:c == 0 |==> false
5177:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:32 |==> 0
5178:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:32 |==> -32
5179:ROR:>(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:data[offset] > 32 |==> data[offset] != 32
5180:ROR:>(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:data[offset] > 32 |==> data[offset] >= 32
5181:ROR:>(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:data[offset] > 32 |==> false
5182:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:c == 0 && data[offset] > 32 |==> c == 0 == data[offset] > 32
5183:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:c == 0 && data[offset] > 32 |==> false
5184:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:c == 0 && data[offset] > 32 |==> c == 0
5185:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:c == 0 && data[offset] > 32 |==> data[offset] > 32
5186:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:64 |==> 0
5187:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:64 |==> -64
5188:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:data[offset] < 64 |==> data[offset] != 64
5189:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:data[offset] < 64 |==> data[offset] <= 64
5190:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:data[offset] < 64 |==> false
5191:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:c == 0 && data[offset] > 32 && data[offset] < 64 |==> (c == 0 && data[offset] > 32) == data[offset] < 64
5192:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:c == 0 && data[offset] > 32 && data[offset] < 64 |==> false
5193:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:c == 0 && data[offset] > 32 && data[offset] < 64 |==> c == 0 && data[offset] > 32
5194:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):493:c == 0 && data[offset] > 32 && data[offset] < 64 |==> data[offset] < 64
5195:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):494:curReader.addError(MarcError.MINOR_ERROR, "Unknown punctuation mark found in Greek character set, inserting change to default character set") |==> <NO-OP>
5196:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):496:66 |==> 0
5197:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):496:66 |==> -66
5198:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):496:cdt.g0 = 66 |==> <NO-OP>
5199:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):497:c = getChar(data[offset], cdt.g0, cdt.g1) |==> <NO-OP>
5200:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):499:0 |==> 1
5201:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):499:0 |==> -1
5202:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):499:c != 0 |==> c < 0
5203:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):499:c != 0 |==> c > 0
5204:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):499:c != 0 |==> true
5205:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):500:sb.append(c) |==> <NO-OP>
5206:LVR:TRUE:FALSE:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):501:true |==> false
5207:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):501:greekErrorFixed = true |==> <NO-OP>
5208:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:1 |==> 0
5209:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:1 |==> -1
5210:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 |==> offset % 1
5211:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 |==> offset * 1
5212:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 |==> offset - 1
5213:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 |==> offset / 1
5214:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length |==> offset + 1 != data.length
5215:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length |==> offset + 1 <= data.length
5216:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length |==> false
5217:ROR:>=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:data[offset] >= '0' |==> data[offset] == '0'
5218:ROR:>=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:data[offset] >= '0' |==> data[offset] > '0'
5219:ROR:>=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:data[offset] >= '0' |==> true
5220:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length && data[offset] >= '0' |==> offset + 1 < data.length == data[offset] >= '0'
5221:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length && data[offset] >= '0' |==> false
5222:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length && data[offset] >= '0' |==> offset + 1 < data.length
5223:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length && data[offset] >= '0' |==> data[offset] >= '0'
5224:ROR:<=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:data[offset] <= '9' |==> data[offset] < '9'
5225:ROR:<=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:data[offset] <= '9' |==> data[offset] == '9'
5226:ROR:<=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:data[offset] <= '9' |==> true
5227:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length && data[offset] >= '0' && data[offset] <= '9' |==> (offset + 1 < data.length && data[offset] >= '0') == data[offset] <= '9'
5228:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length && data[offset] >= '0' && data[offset] <= '9' |==> false
5229:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length && data[offset] >= '0' && data[offset] <= '9' |==> offset + 1 < data.length && data[offset] >= '0'
5230:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length && data[offset] >= '0' && data[offset] <= '9' |==> data[offset] <= '9'
5231:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:1 |==> 0
5232:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:1 |==> -1
5233:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 |==> offset % 1
5234:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 |==> offset * 1
5235:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 |==> offset - 1
5236:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 |==> offset / 1
5237:ROR:>=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:data[offset + 1] >= '0' |==> data[offset + 1] == '0'
5238:ROR:>=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:data[offset + 1] >= '0' |==> data[offset + 1] > '0'
5239:ROR:>=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:data[offset + 1] >= '0' |==> true
5240:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length && data[offset] >= '0' && data[offset] <= '9' && data[offset + 1] >= '0' |==> (offset + 1 < data.length && data[offset] >= '0' && data[offset] <= '9') == data[offset + 1] >= '0'
5241:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length && data[offset] >= '0' && data[offset] <= '9' && data[offset + 1] >= '0' |==> false
5242:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length && data[offset] >= '0' && data[offset] <= '9' && data[offset + 1] >= '0' |==> offset + 1 < data.length && data[offset] >= '0' && data[offset] <= '9'
5243:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length && data[offset] >= '0' && data[offset] <= '9' && data[offset + 1] >= '0' |==> data[offset + 1] >= '0'
5244:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:1 |==> 0
5245:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:1 |==> -1
5246:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 |==> offset % 1
5247:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 |==> offset * 1
5248:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 |==> offset - 1
5249:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 |==> offset / 1
5250:ROR:<=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:data[offset + 1] <= '9' |==> data[offset + 1] < '9'
5251:ROR:<=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:data[offset + 1] <= '9' |==> data[offset + 1] == '9'
5252:ROR:<=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:data[offset + 1] <= '9' |==> true
5253:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length && data[offset] >= '0' && data[offset] <= '9' && data[offset + 1] >= '0' && data[offset + 1] <= '9' |==> (offset + 1 < data.length && data[offset] >= '0' && data[offset] <= '9' && data[offset + 1] >= '0') == data[offset + 1] <= '9'
5254:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length && data[offset] >= '0' && data[offset] <= '9' && data[offset + 1] >= '0' && data[offset + 1] <= '9' |==> false
5255:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length && data[offset] >= '0' && data[offset] <= '9' && data[offset + 1] >= '0' && data[offset + 1] <= '9' |==> offset + 1 < data.length && data[offset] >= '0' && data[offset] <= '9' && data[offset + 1] >= '0'
5256:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):503:offset + 1 < data.length && data[offset] >= '0' && data[offset] <= '9' && data[offset + 1] >= '0' && data[offset + 1] <= '9' |==> data[offset + 1] <= '9'
5257:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):504:curReader.addError(MarcError.MINOR_ERROR, "Unlikely sequence of punctuation mark found in Greek character set, it likely a number, inserting change to default character set") |==> <NO-OP>
5258:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):507:66 |==> 0
5259:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):507:66 |==> -66
5260:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):507:cdt.g0 = 66 |==> <NO-OP>
5261:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):509:getChar(data[offset], cdt.g0, cdt.g1) |==> 0
5262:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):511:0 |==> 1
5263:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):511:0 |==> -1
5264:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):511:c1 != 0 |==> c1 < 0
5265:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):511:c1 != 0 |==> c1 > 0
5266:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):511:c1 != 0 |==> true
5267:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):512:sb.append(c1) |==> <NO-OP>
5268:LVR:TRUE:FALSE:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):513:true |==> false
5269:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):513:greekErrorFixed = true |==> <NO-OP>
5270:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):518:0 |==> 1
5271:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):518:0 |==> -1
5272:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):518:c != 0 |==> c < 0
5273:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):518:c != 0 |==> c > 0
5274:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):518:c != 0 |==> true
5275:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):518:!greekErrorFixed && c != 0 |==> !greekErrorFixed == (c != 0)
5276:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):518:!greekErrorFixed && c != 0 |==> false
5277:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):518:!greekErrorFixed && c != 0 |==> !greekErrorFixed
5278:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):518:!greekErrorFixed && c != 0 |==> c != 0
5279:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):519:sb.append(c) |==> <NO-OP>
5280:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):520:0 |==> 1
5281:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):520:0 |==> -1
5282:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):520:c == 0 |==> c <= 0
5283:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):520:c == 0 |==> c >= 0
5284:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):520:c == 0 |==> false
5285:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):520:!greekErrorFixed && c == 0 |==> !greekErrorFixed == (c == 0)
5286:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):520:!greekErrorFixed && c == 0 |==> false
5287:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):520:!greekErrorFixed && c == 0 |==> !greekErrorFixed
5288:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):520:!greekErrorFixed && c == 0 |==> c == 0
5289:EVR:<PLUS>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):521:"0000" + Integer.toHexString(cdtchar) |==> null
5290:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):522:4 |==> 0
5291:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):522:4 |==> -4
5292:AOR:-(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):522:val.length() - 4 |==> val.length() % 4
5293:AOR:-(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):522:val.length() - 4 |==> val.length() * 4
5294:AOR:-(int,int):+(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):522:val.length() - 4 |==> val.length() + 4
5295:AOR:-(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):522:val.length() - 4 |==> val.length() / 4
5296:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):522:sb.append("<U+" + val.substring(val.length() - 4, val.length()) + ">") |==> <NO-OP>
5297:COR:hasNext(cdt.offset, len):TRUE:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):526:hasNext(cdt.offset, len) |==> false
5298:COR:hasNext(cdt.offset, len):FALSE:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):526:hasNext(cdt.offset, len) |==> true
5299:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):527:checkMode(data, cdt) |==> <NO-OP>
5300:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):531:sb.toString() |==> null
5301:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):533:translateNCR && dataElement.matches("[^&]*&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f];.*") |==> translateNCR == dataElement.matches("[^&]*&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f];.*")
5302:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):533:translateNCR && dataElement.matches("[^&]*&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f];.*") |==> false
5303:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):533:translateNCR && dataElement.matches("[^&]*&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f];.*") |==> translateNCR
5304:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convert(char[]):533:translateNCR && dataElement.matches("[^&]*&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f];.*") |==> dataElement.matches("[^&]*&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f];.*")
5305:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):536:Pattern.compile("&#x([0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]);") |==> null
5306:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):537:pattern.matcher(dataElement) |==> null
5307:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):538:new StringBuffer() |==> null
5308:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):540:0 |==> 1
5309:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):540:0 |==> -1
5310:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):543:newElement.append(dataElement.substring(prevEnd, matcher.start())) |==> <NO-OP>
5311:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):544:1 |==> 0
5312:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):544:1 |==> -1
5313:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):544:newElement.append(getCharFromCodePoint(matcher.group(1))) |==> <NO-OP>
5314:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):545:prevEnd = matcher.end() |==> <NO-OP>
5315:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):548:newElement.append(dataElement.substring(prevEnd)) |==> <NO-OP>
5316:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):549:dataElement = newElement.toString() |==> <NO-OP>
5317:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convert(char[]):552:dataElement |==> null
5318:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):556:new StringBuffer() |==> null
5319:EVR:<MEMBER_SELECT>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):558:cdt.offset |==> 0
5320:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):560:offset < data.length |==> offset != data.length
5321:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):560:offset < data.length |==> offset <= data.length
5322:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):560:offset < data.length |==> false
5323:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):560:27 |==> 0
5324:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):560:27 |==> -27
5325:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):560:data[offset] != 27 |==> data[offset] < 27
5326:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):560:data[offset] != 27 |==> data[offset] > 27
5327:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):560:data[offset] != 27 |==> true
5328:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):560:offset < data.length && data[offset] != 27 |==> offset < data.length == (data[offset] != 27)
5329:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):560:offset < data.length && data[offset] != 27 |==> false
5330:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):560:offset < data.length && data[offset] != 27 |==> offset < data.length
5331:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):560:offset < data.length && data[offset] != 27 |==> data[offset] != 27
5332:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):561:getRawMBLength(data, offset) |==> 0
5333:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):562:getNumSpacesInMBLength(data, offset) |==> 0
5334:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):564:false |==> true
5335:AOR:-(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):566:length - spaces |==> length % spaces
5336:AOR:-(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):566:length - spaces |==> length * spaces
5337:AOR:-(int,int):+(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):566:length - spaces |==> length + spaces
5338:AOR:-(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):566:length - spaces |==> length / spaces
5339:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):566:3 |==> 0
5340:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):566:3 |==> -3
5341:AOR:%(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):566:(length - spaces) % 3 |==> (length - spaces) * 3
5342:AOR:%(int,int):+(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):566:(length - spaces) % 3 |==> (length - spaces) + 3
5343:AOR:%(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):566:(length - spaces) % 3 |==> (length - spaces) - 3
5344:AOR:%(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):566:(length - spaces) % 3 |==> (length - spaces) / 3
5345:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):566:0 |==> 1
5346:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):566:0 |==> -1
5347:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):566:(length - spaces) % 3 != 0 |==> (length - spaces) % 3 < 0
5348:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):566:(length - spaces) % 3 != 0 |==> (length - spaces) % 3 > 0
5349:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):566:(length - spaces) % 3 != 0 |==> true
5350:LVR:TRUE:FALSE:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):567:true |==> false
5351:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):567:errorsPresent = true |==> <NO-OP>
5352:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):572:32 |==> 0
5353:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):572:32 |==> -32
5354:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):572:data[offset] == 32 |==> data[offset] <= 32
5355:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):572:data[offset] == 32 |==> data[offset] >= 32
5356:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):572:data[offset] == 32 |==> false
5357:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):573:sb.append(' ') |==> <NO-OP>
5358:STD:<INC>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):574:offset++ |==> <NO-OP>
5359:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):575:128 |==> 0
5360:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):575:128 |==> -128
5361:ROR:>=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):575:data[offset] >= 128 |==> data[offset] == 128
5362:ROR:>=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):575:data[offset] >= 128 |==> data[offset] > 128
5363:ROR:>=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):575:data[offset] >= 128 |==> true
5364:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):576:getChar(data[offset], cdt.g0, cdt.g1) |==> 0
5365:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):577:sb.append(c2) |==> <NO-OP>
5366:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):578:1 |==> 0
5367:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):578:1 |==> -1
5368:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):578:offset += 1 |==> <NO-OP>
5369:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):579:curReader == null |==> false
5370:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):580:3 |==> 0
5371:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):580:3 |==> -3
5372:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):580:offset + 3 |==> offset % 3
5373:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):580:offset + 3 |==> offset * 3
5374:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):580:offset + 3 |==> offset - 3
5375:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):580:offset + 3 |==> offset / 3
5376:ROR:<=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):580:offset + 3 <= data.length |==> offset + 3 < data.length
5377:ROR:<=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):580:offset + 3 <= data.length |==> offset + 3 == data.length
5378:ROR:<=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):580:offset + 3 <= data.length |==> true
5379:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):581:1 |==> 0
5380:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):581:1 |==> -1
5381:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):581:offset + 1 |==> offset % 1
5382:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):581:offset + 1 |==> offset * 1
5383:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):581:offset + 1 |==> offset - 1
5384:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):581:offset + 1 |==> offset / 1
5385:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):582:2 |==> 0
5386:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):582:2 |==> -2
5387:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):582:offset + 2 |==> offset % 2
5388:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):582:offset + 2 |==> offset * 2
5389:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):582:offset + 2 |==> offset - 2
5390:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):582:offset + 2 |==> offset / 2
5391:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):583:0 |==> 1
5392:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):583:0 |==> -1
5393:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):583:c != 0 |==> c < 0
5394:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):583:c != 0 |==> c > 0
5395:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):583:c != 0 |==> true
5396:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):584:sb.append(c) |==> <NO-OP>
5397:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):585:3 |==> 0
5398:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):585:3 |==> -3
5399:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):585:offset += 3 |==> <NO-OP>
5400:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):587:sb.append(data[offset]) |==> <NO-OP>
5401:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):588:1 |==> 0
5402:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):588:1 |==> -1
5403:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):588:offset + 1 |==> offset % 1
5404:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):588:offset + 1 |==> offset * 1
5405:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):588:offset + 1 |==> offset - 1
5406:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):588:offset + 1 |==> offset / 1
5407:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):588:sb.append(data[offset + 1]) |==> <NO-OP>
5408:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):589:2 |==> 0
5409:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):589:2 |==> -2
5410:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):589:offset + 2 |==> offset % 2
5411:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):589:offset + 2 |==> offset * 2
5412:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):589:offset + 2 |==> offset - 2
5413:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):589:offset + 2 |==> offset / 2
5414:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):589:sb.append(data[offset + 2]) |==> <NO-OP>
5415:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):590:3 |==> 0
5416:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):590:3 |==> -3
5417:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):590:offset += 3 |==> <NO-OP>
5418:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):593:offset < data.length |==> offset != data.length
5419:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):593:offset < data.length |==> offset <= data.length
5420:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):593:offset < data.length |==> false
5421:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):594:sb.append(data[offset++]) |==> <NO-OP>
5422:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:false |==> true
5423:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:errorsPresent == false |==> false
5424:ROR:==(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:errorsPresent == false |==> errorsPresent
5425:ROR:==(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:errorsPresent == false |==> false
5426:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:3 |==> 0
5427:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:3 |==> -3
5428:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:offset + 3 |==> offset % 3
5429:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:offset + 3 |==> offset * 3
5430:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:offset + 3 |==> offset - 3
5431:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:offset + 3 |==> offset / 3
5432:ROR:<=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:offset + 3 <= data.length |==> offset + 3 < data.length
5433:ROR:<=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:offset + 3 <= data.length |==> offset + 3 == data.length
5434:ROR:<=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:offset + 3 <= data.length |==> true
5435:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:errorsPresent == false && offset + 3 <= data.length |==> errorsPresent == false == offset + 3 <= data.length
5436:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:errorsPresent == false && offset + 3 <= data.length |==> false
5437:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:errorsPresent == false && offset + 3 <= data.length |==> errorsPresent == false
5438:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:errorsPresent == false && offset + 3 <= data.length |==> offset + 3 <= data.length
5439:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:curReader == null |==> false
5440:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:1 |==> 0
5441:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:1 |==> -1
5442:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:offset + 1 |==> offset % 1
5443:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:offset + 1 |==> offset * 1
5444:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:offset + 1 |==> offset - 1
5445:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:offset + 1 |==> offset / 1
5446:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:32 |==> 0
5447:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:32 |==> -32
5448:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:data[offset + 1] != 32 |==> data[offset + 1] < 32
5449:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:data[offset + 1] != 32 |==> data[offset + 1] > 32
5450:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:data[offset + 1] != 32 |==> true
5451:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:2 |==> 0
5452:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:2 |==> -2
5453:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:offset + 2 |==> offset % 2
5454:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:offset + 2 |==> offset * 2
5455:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:offset + 2 |==> offset - 2
5456:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:offset + 2 |==> offset / 2
5457:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:32 |==> 0
5458:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:32 |==> -32
5459:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:data[offset + 2] != 32 |==> data[offset + 2] < 32
5460:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:data[offset + 2] != 32 |==> data[offset + 2] > 32
5461:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:data[offset + 2] != 32 |==> true
5462:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:data[offset + 1] != 32 && data[offset + 2] != 32 |==> data[offset + 1] != 32 == (data[offset + 2] != 32)
5463:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:data[offset + 1] != 32 && data[offset + 2] != 32 |==> false
5464:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:data[offset + 1] != 32 && data[offset + 2] != 32 |==> data[offset + 1] != 32
5465:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:data[offset + 1] != 32 && data[offset + 2] != 32 |==> data[offset + 2] != 32
5466:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:curReader == null || data[offset + 1] != 32 && data[offset + 2] != 32 |==> curReader == null != (data[offset + 1] != 32 && data[offset + 2] != 32)
5467:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:curReader == null || data[offset + 1] != 32 && data[offset + 2] != 32 |==> curReader == null
5468:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:curReader == null || data[offset + 1] != 32 && data[offset + 2] != 32 |==> data[offset + 1] != 32 && data[offset + 2] != 32
5469:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:curReader == null || data[offset + 1] != 32 && data[offset + 2] != 32 |==> true
5470:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:errorsPresent == false && offset + 3 <= data.length && (curReader == null || data[offset + 1] != 32 && data[offset + 2] != 32) |==> (errorsPresent == false && offset + 3 <= data.length) == (curReader == null || data[offset + 1] != 32 && data[offset + 2] != 32)
5471:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:errorsPresent == false && offset + 3 <= data.length && (curReader == null || data[offset + 1] != 32 && data[offset + 2] != 32) |==> false
5472:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:errorsPresent == false && offset + 3 <= data.length && (curReader == null || data[offset + 1] != 32 && data[offset + 2] != 32) |==> errorsPresent == false && offset + 3 <= data.length
5473:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:errorsPresent == false && offset + 3 <= data.length && (curReader == null || data[offset + 1] != 32 && data[offset + 2] != 32) |==> (curReader == null || data[offset + 1] != 32 && data[offset + 2] != 32)
5474:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):598:1 |==> 0
5475:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):598:1 |==> -1
5476:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):598:offset + 1 |==> offset % 1
5477:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):598:offset + 1 |==> offset * 1
5478:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):598:offset + 1 |==> offset - 1
5479:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):598:offset + 1 |==> offset / 1
5480:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):598:2 |==> 0
5481:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):598:2 |==> -2
5482:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):598:offset + 2 |==> offset % 2
5483:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):598:offset + 2 |==> offset * 2
5484:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):598:offset + 2 |==> offset - 2
5485:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):598:offset + 2 |==> offset / 2
5486:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):598:0 |==> 1
5487:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):598:0 |==> -1
5488:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:getMBChar(makeMultibyte(data[offset], data[offset + 1], data[offset + 2])) != 0 |==> getMBChar(makeMultibyte(data[offset], data[offset + 1], data[offset + 2])) < 0
5489:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:getMBChar(makeMultibyte(data[offset], data[offset + 1], data[offset + 2])) != 0 |==> getMBChar(makeMultibyte(data[offset], data[offset + 1], data[offset + 2])) > 0
5490:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):598:getMBChar(makeMultibyte(data[offset], data[offset + 1], data[offset + 2])) != 0 |==> true
5491:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:errorsPresent == false && offset + 3 <= data.length && (curReader == null || data[offset + 1] != 32 && data[offset + 2] != 32) && getMBChar(makeMultibyte(data[offset], data[offset + 1], data[offset + 2])) != 0 |==> (errorsPresent == false && offset + 3 <= data.length && (curReader == null || data[offset + 1] != 32 && data[offset + 2] != 32)) == (getMBChar(makeMultibyte(data[offset], data[offset + 1], data[offset + 2])) != 0)
5492:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:errorsPresent == false && offset + 3 <= data.length && (curReader == null || data[offset + 1] != 32 && data[offset + 2] != 32) && getMBChar(makeMultibyte(data[offset], data[offset + 1], data[offset + 2])) != 0 |==> false
5493:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:errorsPresent == false && offset + 3 <= data.length && (curReader == null || data[offset + 1] != 32 && data[offset + 2] != 32) && getMBChar(makeMultibyte(data[offset], data[offset + 1], data[offset + 2])) != 0 |==> errorsPresent == false && offset + 3 <= data.length && (curReader == null || data[offset + 1] != 32 && data[offset + 2] != 32)
5494:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):597:errorsPresent == false && offset + 3 <= data.length && (curReader == null || data[offset + 1] != 32 && data[offset + 2] != 32) && getMBChar(makeMultibyte(data[offset], data[offset + 1], data[offset + 2])) != 0 |==> getMBChar(makeMultibyte(data[offset], data[offset + 1], data[offset + 2])) != 0
5495:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):599:1 |==> 0
5496:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):599:1 |==> -1
5497:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):599:offset + 1 |==> offset % 1
5498:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):599:offset + 1 |==> offset * 1
5499:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):599:offset + 1 |==> offset - 1
5500:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):599:offset + 1 |==> offset / 1
5501:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):600:2 |==> 0
5502:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):600:2 |==> -2
5503:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):600:offset + 2 |==> offset % 2
5504:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):600:offset + 2 |==> offset * 2
5505:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):600:offset + 2 |==> offset - 2
5506:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):600:offset + 2 |==> offset / 2
5507:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):602:curReader == null |==> false
5508:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):602:0 |==> 1
5509:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):602:0 |==> -1
5510:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):602:c != 0 |==> c < 0
5511:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):602:c != 0 |==> c > 0
5512:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):602:c != 0 |==> true
5513:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):602:curReader == null || c != 0 |==> curReader == null != (c != 0)
5514:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):602:curReader == null || c != 0 |==> curReader == null
5515:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):602:curReader == null || c != 0 |==> c != 0
5516:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):602:curReader == null || c != 0 |==> true
5517:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):603:sb.append(c) |==> <NO-OP>
5518:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):604:3 |==> 0
5519:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):604:3 |==> -3
5520:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):604:offset += 3 |==> <NO-OP>
5521:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:6 |==> 0
5522:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:6 |==> -6
5523:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 |==> offset % 6
5524:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 |==> offset * 6
5525:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 |==> offset - 6
5526:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 |==> offset / 6
5527:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length |==> offset + 6 != data.length
5528:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length |==> offset + 6 <= data.length
5529:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length |==> false
5530:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:3 |==> 0
5531:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:3 |==> -3
5532:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 3 |==> offset % 3
5533:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 3 |==> offset * 3
5534:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 3 |==> offset - 3
5535:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 3 |==> offset / 3
5536:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') |==> offset + 6 < data.length == noneEquals(data, offset, offset + 3, ' ')
5537:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') |==> false
5538:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') |==> offset + 6 < data.length
5539:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') |==> noneEquals(data, offset, offset + 3, ' ')
5540:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:0 |==> 1
5541:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:0 |==> -1
5542:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:offset + 0 |==> offset % 0
5543:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:offset + 0 |==> offset * 0
5544:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:offset + 0 |==> offset - 0
5545:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:offset + 0 |==> offset / 0
5546:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:1 |==> 0
5547:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:1 |==> -1
5548:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:offset + 1 |==> offset % 1
5549:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:offset + 1 |==> offset * 1
5550:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:offset + 1 |==> offset - 1
5551:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:offset + 1 |==> offset / 1
5552:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:2 |==> 0
5553:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:2 |==> -2
5554:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:offset + 2 |==> offset % 2
5555:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:offset + 2 |==> offset * 2
5556:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:offset + 2 |==> offset - 2
5557:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:offset + 2 |==> offset / 2
5558:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:0 |==> 1
5559:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:0 |==> -1
5560:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 |==> getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) <= 0
5561:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 |==> getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) >= 0
5562:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 |==> false
5563:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:3 |==> 0
5564:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:3 |==> -3
5565:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:offset + 3 |==> offset % 3
5566:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:offset + 3 |==> offset * 3
5567:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:offset + 3 |==> offset - 3
5568:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:offset + 3 |==> offset / 3
5569:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:4 |==> 0
5570:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:4 |==> -4
5571:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:offset + 4 |==> offset % 4
5572:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:offset + 4 |==> offset * 4
5573:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:offset + 4 |==> offset - 4
5574:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:offset + 4 |==> offset / 4
5575:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:5 |==> 0
5576:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:5 |==> -5
5577:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:offset + 5 |==> offset % 5
5578:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:offset + 5 |==> offset * 5
5579:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:offset + 5 |==> offset - 5
5580:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:offset + 5 |==> offset / 5
5581:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:0 |==> 1
5582:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:0 |==> -1
5583:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0 |==> getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) <= 0
5584:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0 |==> getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) >= 0
5585:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0 |==> false
5586:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0 |==> getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 != (getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0)
5587:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0 |==> getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0
5588:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0 |==> getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0
5589:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0 |==> true
5590:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) |==> (offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ')) == (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0)
5591:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) |==> false
5592:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) |==> offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ')
5593:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):607:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) |==> (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0)
5594:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:2 |==> 0
5595:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:2 |==> -2
5596:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:offset + 2 |==> offset % 2
5597:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:offset + 2 |==> offset * 2
5598:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:offset + 2 |==> offset - 2
5599:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:offset + 2 |==> offset / 2
5600:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:3 |==> 0
5601:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:3 |==> -3
5602:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:offset + 3 |==> offset % 3
5603:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:offset + 3 |==> offset * 3
5604:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:offset + 3 |==> offset - 3
5605:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:offset + 3 |==> offset / 3
5606:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:4 |==> 0
5607:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:4 |==> -4
5608:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:offset + 4 |==> offset % 4
5609:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:offset + 4 |==> offset * 4
5610:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:offset + 4 |==> offset - 4
5611:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:offset + 4 |==> offset / 4
5612:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:0 |==> 1
5613:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:0 |==> -1
5614:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 |==> getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) < 0
5615:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 |==> getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) > 0
5616:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 |==> true
5617:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 |==> (offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0)) == (getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0)
5618:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):608:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 |==> false
5619:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 |==> offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0)
5620:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 |==> getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0
5621:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):610:5 |==> 0
5622:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):610:5 |==> -5
5623:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):610:offset + 5 |==> offset % 5
5624:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):610:offset + 5 |==> offset * 5
5625:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):610:offset + 5 |==> offset - 5
5626:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):610:offset + 5 |==> offset / 5
5627:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):610:27 |==> 0
5628:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):610:27 |==> -27
5629:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 && noneEquals(data, offset, offset + 5, 27) |==> (offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0) == noneEquals(data, offset, offset + 5, 27)
5630:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):609:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 && noneEquals(data, offset, offset + 5, 27) |==> false
5631:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 && noneEquals(data, offset, offset + 5, 27) |==> offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0
5632:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):610:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 && noneEquals(data, offset, offset + 5, 27) |==> noneEquals(data, offset, offset + 5, 27)
5633:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):611:5 |==> 0
5634:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):611:5 |==> -5
5635:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):611:offset + 5 |==> offset % 5
5636:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):611:offset + 5 |==> offset * 5
5637:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):611:offset + 5 |==> offset - 5
5638:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):611:offset + 5 |==> offset / 5
5639:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):611:128 |==> 0
5640:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):611:128 |==> -128
5641:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):611:255 |==> 0
5642:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):611:255 |==> -255
5643:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 && noneEquals(data, offset, offset + 5, 27) && noneInRange(data, offset, offset + 5, 128, 255) |==> (offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 && noneEquals(data, offset, offset + 5, 27)) == noneInRange(data, offset, offset + 5, 128, 255)
5644:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):610:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 && noneEquals(data, offset, offset + 5, 27) && noneInRange(data, offset, offset + 5, 128, 255) |==> false
5645:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 && noneEquals(data, offset, offset + 5, 27) && noneInRange(data, offset, offset + 5, 128, 255) |==> offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 && noneEquals(data, offset, offset + 5, 27)
5646:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):611:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 && noneEquals(data, offset, offset + 5, 27) && noneInRange(data, offset, offset + 5, 128, 255) |==> noneInRange(data, offset, offset + 5, 128, 255)
5647:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 && noneEquals(data, offset, offset + 5, 27) && noneInRange(data, offset, offset + 5, 128, 255) && !nextEscIsMB(data, offset, data.length) |==> (offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 && noneEquals(data, offset, offset + 5, 27) && noneInRange(data, offset, offset + 5, 128, 255)) == !nextEscIsMB(data, offset, data.length)
5648:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):611:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 && noneEquals(data, offset, offset + 5, 27) && noneInRange(data, offset, offset + 5, 128, 255) && !nextEscIsMB(data, offset, data.length) |==> false
5649:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):606:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 && noneEquals(data, offset, offset + 5, 27) && noneInRange(data, offset, offset + 5, 128, 255) && !nextEscIsMB(data, offset, data.length) |==> offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 && noneEquals(data, offset, offset + 5, 27) && noneInRange(data, offset, offset + 5, 128, 255)
5650:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):612:offset + 6 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 2], data[offset + 3], data[offset + 4])) != 0 && noneEquals(data, offset, offset + 5, 27) && noneInRange(data, offset, offset + 5, 128, 255) && !nextEscIsMB(data, offset, data.length) |==> !nextEscIsMB(data, offset, data.length)
5651:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):614:1 |==> 0
5652:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):614:1 |==> -1
5653:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):614:offset + 1 |==> offset % 1
5654:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):614:offset + 1 |==> offset * 1
5655:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):614:offset + 1 |==> offset - 1
5656:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):614:offset + 1 |==> offset / 1
5657:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):615:1 |==> 0
5658:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):615:1 |==> -1
5659:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):615:offset + 1 |==> offset % 1
5660:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):615:offset + 1 |==> offset * 1
5661:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):615:offset + 1 |==> offset - 1
5662:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):615:offset + 1 |==> offset / 1
5663:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):616:1 |==> 0
5664:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):616:1 |==> -1
5665:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):616:offset + 1 |==> offset % 1
5666:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):616:offset + 1 |==> offset * 1
5667:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):616:offset + 1 |==> offset - 1
5668:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):616:offset + 1 |==> offset / 1
5669:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):617:1 |==> 0
5670:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):617:1 |==> -1
5671:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):617:offset + 1 |==> offset % 1
5672:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):617:offset + 1 |==> offset * 1
5673:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):617:offset + 1 |==> offset - 1
5674:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):617:offset + 1 |==> offset / 1
5675:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):618:1 |==> 0
5676:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):618:1 |==> -1
5677:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):618:mbstr.length() == 1 |==> mbstr.length() <= 1
5678:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):618:mbstr.length() == 1 |==> mbstr.length() >= 1
5679:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):618:mbstr.length() == 1 |==> false
5680:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):619:curReader != null |==> true
5681:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):620:curReader.addError(MarcError.MINOR_ERROR, "Missing square brace character in MARC8 multibyte character, inserting one to create the only valid option") |==> <NO-OP>
5682:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):624:sb.append(mbstr) |==> <NO-OP>
5683:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):625:2 |==> 0
5684:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):625:2 |==> -2
5685:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):625:offset += 2 |==> <NO-OP>
5686:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):626:1 |==> 0
5687:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):626:1 |==> -1
5688:ROR:>(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):626:mbstr.length() > 1 |==> mbstr.length() != 1
5689:ROR:>(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):626:mbstr.length() > 1 |==> mbstr.length() >= 1
5690:ROR:>(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):626:mbstr.length() > 1 |==> false
5691:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):627:curReader != null |==> true
5692:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):628:curReader.addError(MarcError.MAJOR_ERROR, "Missing square brace character in MARC8 multibyte character, inserting one to create a randomly chosen valid option") |==> <NO-OP>
5693:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):632:0 |==> 1
5694:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):632:0 |==> -1
5695:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):632:1 |==> 0
5696:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):632:1 |==> -1
5697:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):632:sb.append(mbstr.subSequence(0, 1)) |==> <NO-OP>
5698:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):633:2 |==> 0
5699:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):633:2 |==> -2
5700:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):633:offset += 2 |==> <NO-OP>
5701:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):634:0 |==> 1
5702:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):634:0 |==> -1
5703:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):634:mbstr.length() == 0 |==> mbstr.length() <= 0
5704:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):634:mbstr.length() == 0 |==> mbstr.length() >= 0
5705:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):634:mbstr.length() == 0 |==> false
5706:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):635:curReader != null |==> true
5707:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):636:curReader.addError(MarcError.MINOR_ERROR, "Erroneous MARC8 multibyte character, Discarding bad character and continuing reading Multibyte characters") |==> <NO-OP>
5708:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):640:sb.append("[?]") |==> <NO-OP>
5709:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):641:2 |==> 0
5710:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):641:2 |==> -2
5711:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):641:offset += 2 |==> <NO-OP>
5712:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:7 |==> 0
5713:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:7 |==> -7
5714:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 |==> offset % 7
5715:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 |==> offset * 7
5716:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 |==> offset - 7
5717:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 |==> offset / 7
5718:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length |==> offset + 7 != data.length
5719:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length |==> offset + 7 <= data.length
5720:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length |==> false
5721:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:3 |==> 0
5722:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:3 |==> -3
5723:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 3 |==> offset % 3
5724:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 3 |==> offset * 3
5725:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 3 |==> offset - 3
5726:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 3 |==> offset / 3
5727:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') |==> offset + 7 < data.length == noneEquals(data, offset, offset + 3, ' ')
5728:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') |==> false
5729:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') |==> offset + 7 < data.length
5730:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') |==> noneEquals(data, offset, offset + 3, ' ')
5731:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:0 |==> 1
5732:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:0 |==> -1
5733:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:offset + 0 |==> offset % 0
5734:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:offset + 0 |==> offset * 0
5735:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:offset + 0 |==> offset - 0
5736:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:offset + 0 |==> offset / 0
5737:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:1 |==> 0
5738:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:1 |==> -1
5739:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:offset + 1 |==> offset % 1
5740:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:offset + 1 |==> offset * 1
5741:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:offset + 1 |==> offset - 1
5742:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:offset + 1 |==> offset / 1
5743:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:2 |==> 0
5744:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:2 |==> -2
5745:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:offset + 2 |==> offset % 2
5746:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:offset + 2 |==> offset * 2
5747:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:offset + 2 |==> offset - 2
5748:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:offset + 2 |==> offset / 2
5749:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:0 |==> 1
5750:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:0 |==> -1
5751:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 |==> getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) <= 0
5752:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 |==> getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) >= 0
5753:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 |==> false
5754:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:3 |==> 0
5755:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:3 |==> -3
5756:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:offset + 3 |==> offset % 3
5757:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:offset + 3 |==> offset * 3
5758:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:offset + 3 |==> offset - 3
5759:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:offset + 3 |==> offset / 3
5760:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:4 |==> 0
5761:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:4 |==> -4
5762:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:offset + 4 |==> offset % 4
5763:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:offset + 4 |==> offset * 4
5764:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:offset + 4 |==> offset - 4
5765:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:offset + 4 |==> offset / 4
5766:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:5 |==> 0
5767:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:5 |==> -5
5768:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:offset + 5 |==> offset % 5
5769:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:offset + 5 |==> offset * 5
5770:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:offset + 5 |==> offset - 5
5771:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:offset + 5 |==> offset / 5
5772:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:0 |==> 1
5773:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:0 |==> -1
5774:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0 |==> getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) <= 0
5775:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0 |==> getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) >= 0
5776:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0 |==> false
5777:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0 |==> getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 != (getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0)
5778:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0 |==> getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0
5779:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0 |==> getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0
5780:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0 |==> true
5781:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) |==> (offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ')) == (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0)
5782:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) |==> false
5783:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) |==> offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ')
5784:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):644:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) |==> (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0)
5785:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:4 |==> 0
5786:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:4 |==> -4
5787:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:offset + 4 |==> offset % 4
5788:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:offset + 4 |==> offset * 4
5789:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:offset + 4 |==> offset - 4
5790:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:offset + 4 |==> offset / 4
5791:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:5 |==> 0
5792:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:5 |==> -5
5793:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:offset + 5 |==> offset % 5
5794:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:offset + 5 |==> offset * 5
5795:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:offset + 5 |==> offset - 5
5796:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:offset + 5 |==> offset / 5
5797:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:6 |==> 0
5798:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:6 |==> -6
5799:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:offset + 6 |==> offset % 6
5800:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:offset + 6 |==> offset * 6
5801:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:offset + 6 |==> offset - 6
5802:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:offset + 6 |==> offset / 6
5803:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:0 |==> 1
5804:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:0 |==> -1
5805:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 |==> getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) < 0
5806:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 |==> getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) > 0
5807:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 |==> true
5808:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 |==> (offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0)) == (getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0)
5809:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):645:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 |==> false
5810:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 |==> offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0)
5811:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 |==> getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0
5812:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):647:6 |==> 0
5813:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):647:6 |==> -6
5814:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):647:offset + 6 |==> offset % 6
5815:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):647:offset + 6 |==> offset * 6
5816:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):647:offset + 6 |==> offset - 6
5817:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):647:offset + 6 |==> offset / 6
5818:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):647:27 |==> 0
5819:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):647:27 |==> -27
5820:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 && noneEquals(data, offset, offset + 6, 27) |==> (offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0) == noneEquals(data, offset, offset + 6, 27)
5821:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):646:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 && noneEquals(data, offset, offset + 6, 27) |==> false
5822:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 && noneEquals(data, offset, offset + 6, 27) |==> offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0
5823:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):647:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 && noneEquals(data, offset, offset + 6, 27) |==> noneEquals(data, offset, offset + 6, 27)
5824:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):648:6 |==> 0
5825:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):648:6 |==> -6
5826:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):648:offset + 6 |==> offset % 6
5827:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):648:offset + 6 |==> offset * 6
5828:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):648:offset + 6 |==> offset - 6
5829:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):648:offset + 6 |==> offset / 6
5830:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):648:128 |==> 0
5831:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):648:128 |==> -128
5832:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):648:255 |==> 0
5833:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):648:255 |==> -255
5834:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 && noneEquals(data, offset, offset + 6, 27) && noneInRange(data, offset, offset + 6, 128, 255) |==> (offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 && noneEquals(data, offset, offset + 6, 27)) == noneInRange(data, offset, offset + 6, 128, 255)
5835:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):647:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 && noneEquals(data, offset, offset + 6, 27) && noneInRange(data, offset, offset + 6, 128, 255) |==> false
5836:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 && noneEquals(data, offset, offset + 6, 27) && noneInRange(data, offset, offset + 6, 128, 255) |==> offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 && noneEquals(data, offset, offset + 6, 27)
5837:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):648:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 && noneEquals(data, offset, offset + 6, 27) && noneInRange(data, offset, offset + 6, 128, 255) |==> noneInRange(data, offset, offset + 6, 128, 255)
5838:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 && noneEquals(data, offset, offset + 6, 27) && noneInRange(data, offset, offset + 6, 128, 255) && !nextEscIsMB(data, offset, data.length) |==> (offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 && noneEquals(data, offset, offset + 6, 27) && noneInRange(data, offset, offset + 6, 128, 255)) == !nextEscIsMB(data, offset, data.length)
5839:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):648:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 && noneEquals(data, offset, offset + 6, 27) && noneInRange(data, offset, offset + 6, 128, 255) && !nextEscIsMB(data, offset, data.length) |==> false
5840:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):643:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 && noneEquals(data, offset, offset + 6, 27) && noneInRange(data, offset, offset + 6, 128, 255) && !nextEscIsMB(data, offset, data.length) |==> offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 && noneEquals(data, offset, offset + 6, 27) && noneInRange(data, offset, offset + 6, 128, 255)
5841:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):648:offset + 7 < data.length && noneEquals(data, offset, offset + 3, ' ') && (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) == 0 || getMBChar(makeMultibyte(data[offset + 3], data[offset + 4], data[offset + 5])) == 0) && getMBChar(makeMultibyte(data[offset + 4], data[offset + 5], data[offset + 6])) != 0 && noneEquals(data, offset, offset + 6, 27) && noneInRange(data, offset, offset + 6, 128, 255) && !nextEscIsMB(data, offset, data.length) |==> !nextEscIsMB(data, offset, data.length)
5842:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):650:1 |==> 0
5843:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):650:1 |==> -1
5844:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):650:offset + 1 |==> offset % 1
5845:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):650:offset + 1 |==> offset * 1
5846:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):650:offset + 1 |==> offset - 1
5847:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):650:offset + 1 |==> offset / 1
5848:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):651:1 |==> 0
5849:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):651:1 |==> -1
5850:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):651:offset + 1 |==> offset % 1
5851:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):651:offset + 1 |==> offset * 1
5852:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):651:offset + 1 |==> offset - 1
5853:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):651:offset + 1 |==> offset / 1
5854:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):652:1 |==> 0
5855:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):652:1 |==> -1
5856:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):652:offset + 1 |==> offset % 1
5857:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):652:offset + 1 |==> offset * 1
5858:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):652:offset + 1 |==> offset - 1
5859:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):652:offset + 1 |==> offset / 1
5860:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):653:1 |==> 0
5861:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):653:1 |==> -1
5862:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):653:offset + 1 |==> offset % 1
5863:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):653:offset + 1 |==> offset * 1
5864:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):653:offset + 1 |==> offset - 1
5865:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):653:offset + 1 |==> offset / 1
5866:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):654:1 |==> 0
5867:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):654:1 |==> -1
5868:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):654:mbstr.length() == 1 |==> mbstr.length() <= 1
5869:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):654:mbstr.length() == 1 |==> mbstr.length() >= 1
5870:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):654:mbstr.length() == 1 |==> false
5871:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):655:curReader != null |==> true
5872:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):656:curReader.addError(MarcError.MINOR_ERROR, "Missing square brace character in MARC8 multibyte character, inserting one to create the only valid option") |==> <NO-OP>
5873:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):659:sb.append(mbstr) |==> <NO-OP>
5874:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):660:2 |==> 0
5875:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):660:2 |==> -2
5876:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):660:offset += 2 |==> <NO-OP>
5877:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):661:1 |==> 0
5878:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):661:1 |==> -1
5879:ROR:>(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):661:mbstr.length() > 1 |==> mbstr.length() != 1
5880:ROR:>(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):661:mbstr.length() > 1 |==> mbstr.length() >= 1
5881:ROR:>(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):661:mbstr.length() > 1 |==> false
5882:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):662:curReader != null |==> true
5883:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):663:curReader.addError(MarcError.MAJOR_ERROR, "Missing square brace character in MARC8 multibyte character, inserting one to create a randomly chosen valid option") |==> <NO-OP>
5884:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):666:0 |==> 1
5885:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):666:0 |==> -1
5886:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):666:1 |==> 0
5887:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):666:1 |==> -1
5888:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):666:sb.append(mbstr.subSequence(0, 1)) |==> <NO-OP>
5889:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):667:2 |==> 0
5890:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):667:2 |==> -2
5891:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):667:offset += 2 |==> <NO-OP>
5892:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):668:0 |==> 1
5893:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):668:0 |==> -1
5894:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):668:mbstr.length() == 0 |==> mbstr.length() <= 0
5895:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):668:mbstr.length() == 0 |==> mbstr.length() >= 0
5896:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):668:mbstr.length() == 0 |==> false
5897:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):669:curReader != null |==> true
5898:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):670:curReader.addError(MarcError.MINOR_ERROR, "Erroneous MARC8 multibyte character, Discarding bad character and continuing reading Multibyte characters") |==> <NO-OP>
5899:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):673:sb.append("[?]") |==> <NO-OP>
5900:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):674:2 |==> 0
5901:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):674:2 |==> -2
5902:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):674:offset += 2 |==> <NO-OP>
5903:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:4 |==> 0
5904:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:4 |==> -4
5905:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:offset + 4 |==> offset % 4
5906:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:offset + 4 |==> offset * 4
5907:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:offset + 4 |==> offset - 4
5908:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:offset + 4 |==> offset / 4
5909:ROR:<=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:offset + 4 <= data.length |==> offset + 4 < data.length
5910:ROR:<=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:offset + 4 <= data.length |==> offset + 4 == data.length
5911:ROR:<=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:offset + 4 <= data.length |==> true
5912:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:127 |==> 0
5913:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:127 |==> -127
5914:ROR:>(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:data[offset] > 127 |==> data[offset] != 127
5915:ROR:>(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:data[offset] > 127 |==> data[offset] >= 127
5916:ROR:>(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:data[offset] > 127 |==> false
5917:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:offset + 4 <= data.length && data[offset] > 127 |==> offset + 4 <= data.length == data[offset] > 127
5918:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:offset + 4 <= data.length && data[offset] > 127 |==> false
5919:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:offset + 4 <= data.length && data[offset] > 127 |==> offset + 4 <= data.length
5920:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:offset + 4 <= data.length && data[offset] > 127 |==> data[offset] > 127
5921:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:1 |==> 0
5922:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:1 |==> -1
5923:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:offset + 1 |==> offset % 1
5924:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:offset + 1 |==> offset * 1
5925:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:offset + 1 |==> offset - 1
5926:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:offset + 1 |==> offset / 1
5927:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:2 |==> 0
5928:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:2 |==> -2
5929:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:offset + 2 |==> offset % 2
5930:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:offset + 2 |==> offset * 2
5931:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:offset + 2 |==> offset - 2
5932:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:offset + 2 |==> offset / 2
5933:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:3 |==> 0
5934:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:3 |==> -3
5935:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:offset + 3 |==> offset % 3
5936:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:offset + 3 |==> offset * 3
5937:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:offset + 3 |==> offset - 3
5938:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:offset + 3 |==> offset / 3
5939:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:0 |==> 1
5940:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:0 |==> -1
5941:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:getMBChar(makeMultibyte(data[offset + 1], data[offset + 2], data[offset + 3])) != 0 |==> getMBChar(makeMultibyte(data[offset + 1], data[offset + 2], data[offset + 3])) < 0
5942:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:getMBChar(makeMultibyte(data[offset + 1], data[offset + 2], data[offset + 3])) != 0 |==> getMBChar(makeMultibyte(data[offset + 1], data[offset + 2], data[offset + 3])) > 0
5943:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:getMBChar(makeMultibyte(data[offset + 1], data[offset + 2], data[offset + 3])) != 0 |==> true
5944:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:offset + 4 <= data.length && data[offset] > 127 && getMBChar(makeMultibyte(data[offset + 1], data[offset + 2], data[offset + 3])) != 0 |==> (offset + 4 <= data.length && data[offset] > 127) == (getMBChar(makeMultibyte(data[offset + 1], data[offset + 2], data[offset + 3])) != 0)
5945:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:offset + 4 <= data.length && data[offset] > 127 && getMBChar(makeMultibyte(data[offset + 1], data[offset + 2], data[offset + 3])) != 0 |==> false
5946:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):676:offset + 4 <= data.length && data[offset] > 127 && getMBChar(makeMultibyte(data[offset + 1], data[offset + 2], data[offset + 3])) != 0 |==> offset + 4 <= data.length && data[offset] > 127
5947:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):677:offset + 4 <= data.length && data[offset] > 127 && getMBChar(makeMultibyte(data[offset + 1], data[offset + 2], data[offset + 3])) != 0 |==> getMBChar(makeMultibyte(data[offset + 1], data[offset + 2], data[offset + 3])) != 0
5948:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):679:curReader != null |==> true
5949:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):680:curReader.addError(MarcError.MINOR_ERROR, "Erroneous character in MARC8 multibyte character, Copying bad character and continuing reading Multibyte characters") |==> <NO-OP>
5950:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):684:66 |==> 0
5951:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):684:66 |==> -66
5952:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):684:69 |==> 0
5953:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):684:69 |==> -69
5954:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):684:sb.append(getChar(data[offset], 66, 69)) |==> <NO-OP>
5955:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):685:1 |==> 0
5956:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):685:1 |==> -1
5957:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):685:offset += 1 |==> <NO-OP>
5958:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:curReader != null |==> true
5959:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:4 |==> 0
5960:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:4 |==> -4
5961:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:offset + 4 |==> offset % 4
5962:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:offset + 4 |==> offset * 4
5963:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:offset + 4 |==> offset - 4
5964:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:offset + 4 |==> offset / 4
5965:ROR:<=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:offset + 4 <= data.length |==> offset + 4 < data.length
5966:ROR:<=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:offset + 4 <= data.length |==> offset + 4 == data.length
5967:ROR:<=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:offset + 4 <= data.length |==> true
5968:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:curReader != null && offset + 4 <= data.length |==> curReader != null == offset + 4 <= data.length
5969:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:curReader != null && offset + 4 <= data.length |==> false
5970:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:curReader != null && offset + 4 <= data.length |==> curReader != null
5971:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:curReader != null && offset + 4 <= data.length |==> offset + 4 <= data.length
5972:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:1 |==> 0
5973:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:1 |==> -1
5974:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:offset + 1 |==> offset % 1
5975:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:offset + 1 |==> offset * 1
5976:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:offset + 1 |==> offset - 1
5977:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:offset + 1 |==> offset / 1
5978:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:32 |==> 0
5979:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:32 |==> -32
5980:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:data[offset + 1] == 32 |==> data[offset + 1] <= 32
5981:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:data[offset + 1] == 32 |==> data[offset + 1] >= 32
5982:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:data[offset + 1] == 32 |==> false
5983:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:2 |==> 0
5984:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:2 |==> -2
5985:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:offset + 2 |==> offset % 2
5986:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:offset + 2 |==> offset * 2
5987:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:offset + 2 |==> offset - 2
5988:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:offset + 2 |==> offset / 2
5989:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:32 |==> 0
5990:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:32 |==> -32
5991:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:data[offset + 2] == 32 |==> data[offset + 2] <= 32
5992:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:data[offset + 2] == 32 |==> data[offset + 2] >= 32
5993:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:data[offset + 2] == 32 |==> false
5994:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:data[offset + 1] == 32 || data[offset + 2] == 32 |==> data[offset + 1] == 32 != (data[offset + 2] == 32)
5995:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:data[offset + 1] == 32 || data[offset + 2] == 32 |==> data[offset + 1] == 32
5996:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:data[offset + 1] == 32 || data[offset + 2] == 32 |==> data[offset + 2] == 32
5997:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:data[offset + 1] == 32 || data[offset + 2] == 32 |==> true
5998:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:curReader != null && offset + 4 <= data.length && (data[offset + 1] == 32 || data[offset + 2] == 32) |==> (curReader != null && offset + 4 <= data.length) == (data[offset + 1] == 32 || data[offset + 2] == 32)
5999:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:curReader != null && offset + 4 <= data.length && (data[offset + 1] == 32 || data[offset + 2] == 32) |==> false
6000:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:curReader != null && offset + 4 <= data.length && (data[offset + 1] == 32 || data[offset + 2] == 32) |==> curReader != null && offset + 4 <= data.length
6001:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):687:curReader != null && offset + 4 <= data.length && (data[offset + 1] == 32 || data[offset + 2] == 32) |==> (data[offset + 1] == 32 || data[offset + 2] == 32)
6002:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:1 |==> 0
6003:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:1 |==> -1
6004:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:offset + 1 |==> offset % 1
6005:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:offset + 1 |==> offset * 1
6006:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:offset + 1 |==> offset - 1
6007:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:offset + 1 |==> offset / 1
6008:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:32 |==> 0
6009:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:32 |==> -32
6010:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:data[offset + 1] != 32 |==> data[offset + 1] < 32
6011:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:data[offset + 1] != 32 |==> data[offset + 1] > 32
6012:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:data[offset + 1] != 32 |==> true
6013:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:1 |==> 0
6014:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:1 |==> -1
6015:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:offset + 1 |==> offset % 1
6016:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:offset + 1 |==> offset * 1
6017:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:offset + 1 |==> offset - 1
6018:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:offset + 1 |==> offset / 1
6019:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:2 |==> 0
6020:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:2 |==> -2
6021:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:offset + 2 |==> offset % 2
6022:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:offset + 2 |==> offset * 2
6023:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:offset + 2 |==> offset - 2
6024:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):689:offset + 2 |==> offset / 2
6025:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):690:3 |==> 0
6026:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):690:3 |==> -3
6027:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):690:offset + 3 |==> offset % 3
6028:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):690:offset + 3 |==> offset * 3
6029:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):690:offset + 3 |==> offset - 3
6030:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):690:offset + 3 |==> offset / 3
6031:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):691:getMBChar(multiByte) |==> 0
6032:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):692:0 |==> 1
6033:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):692:0 |==> -1
6034:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):692:c != 0 |==> c < 0
6035:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):692:c != 0 |==> c > 0
6036:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):692:c != 0 |==> true
6037:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):693:curReader != null |==> true
6038:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):694:curReader.addError(MarcError.ERROR_TYPO, "Extraneous space found within MARC8 multibyte character") |==> <NO-OP>
6039:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):697:sb.append(c) |==> <NO-OP>
6040:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):698:sb.append(' ') |==> <NO-OP>
6041:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):699:4 |==> 0
6042:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):699:4 |==> -4
6043:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):699:offset += 4 |==> <NO-OP>
6044:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):701:curReader != null |==> true
6045:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):702:curReader.addError(MarcError.MINOR_ERROR, "Erroneous MARC8 multibyte character, inserting change to default character set") |==> <NO-OP>
6046:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):705:false |==> true
6047:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):705:cdt.multibyte = false |==> <NO-OP>
6048:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):706:66 |==> 0
6049:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):706:66 |==> -66
6050:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):706:cdt.g0 = 66 |==> <NO-OP>
6051:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):707:69 |==> 0
6052:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):707:69 |==> -69
6053:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):707:cdt.g1 = 69 |==> <NO-OP>
6054:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):708:break; |==> <NO-OP>
6055:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:3 |==> 0
6056:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:3 |==> -3
6057:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 |==> offset % 3
6058:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 |==> offset * 3
6059:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 |==> offset - 3
6060:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 |==> offset / 3
6061:ROR:>(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 > data.length |==> offset + 3 != data.length
6062:ROR:>(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 > data.length |==> offset + 3 >= data.length
6063:ROR:>(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 > data.length |==> false
6064:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:3 |==> 0
6065:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:3 |==> -3
6066:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 |==> offset % 3
6067:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 |==> offset * 3
6068:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 |==> offset - 3
6069:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 |==> offset / 3
6070:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 == data.length |==> offset + 3 <= data.length
6071:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 == data.length |==> offset + 3 >= data.length
6072:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 == data.length |==> false
6073:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:1 |==> 0
6074:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:1 |==> -1
6075:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 1 |==> offset % 1
6076:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 1 |==> offset * 1
6077:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 1 |==> offset - 1
6078:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 1 |==> offset / 1
6079:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:32 |==> 0
6080:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:32 |==> -32
6081:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:data[offset + 1] == 32 |==> data[offset + 1] <= 32
6082:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:data[offset + 1] == 32 |==> data[offset + 1] >= 32
6083:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:data[offset + 1] == 32 |==> false
6084:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:2 |==> 0
6085:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:2 |==> -2
6086:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 2 |==> offset % 2
6087:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 2 |==> offset * 2
6088:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 2 |==> offset - 2
6089:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 2 |==> offset / 2
6090:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:32 |==> 0
6091:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:32 |==> -32
6092:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:data[offset + 2] == 32 |==> data[offset + 2] <= 32
6093:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:data[offset + 2] == 32 |==> data[offset + 2] >= 32
6094:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:data[offset + 2] == 32 |==> false
6095:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:data[offset + 1] == 32 || data[offset + 2] == 32 |==> data[offset + 1] == 32 != (data[offset + 2] == 32)
6096:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:data[offset + 1] == 32 || data[offset + 2] == 32 |==> data[offset + 1] == 32
6097:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:data[offset + 1] == 32 || data[offset + 2] == 32 |==> data[offset + 2] == 32
6098:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:data[offset + 1] == 32 || data[offset + 2] == 32 |==> true
6099:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 == data.length && (data[offset + 1] == 32 || data[offset + 2] == 32) |==> offset + 3 == data.length == (data[offset + 1] == 32 || data[offset + 2] == 32)
6100:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 == data.length && (data[offset + 1] == 32 || data[offset + 2] == 32) |==> false
6101:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 == data.length && (data[offset + 1] == 32 || data[offset + 2] == 32) |==> offset + 3 == data.length
6102:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 == data.length && (data[offset + 1] == 32 || data[offset + 2] == 32) |==> (data[offset + 1] == 32 || data[offset + 2] == 32)
6103:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 > data.length || offset + 3 == data.length && (data[offset + 1] == 32 || data[offset + 2] == 32) |==> offset + 3 > data.length != (offset + 3 == data.length && (data[offset + 1] == 32 || data[offset + 2] == 32))
6104:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 > data.length || offset + 3 == data.length && (data[offset + 1] == 32 || data[offset + 2] == 32) |==> offset + 3 > data.length
6105:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 > data.length || offset + 3 == data.length && (data[offset + 1] == 32 || data[offset + 2] == 32) |==> offset + 3 == data.length && (data[offset + 1] == 32 || data[offset + 2] == 32)
6106:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):710:offset + 3 > data.length || offset + 3 == data.length && (data[offset + 1] == 32 || data[offset + 2] == 32) |==> true
6107:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):711:curReader != null |==> true
6108:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):712:curReader.addError(MarcError.MINOR_ERROR, "Partial MARC8 multibyte character, inserting change to default character set") |==> <NO-OP>
6109:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):715:false |==> true
6110:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):715:cdt.multibyte = false |==> <NO-OP>
6111:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):716:66 |==> 0
6112:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):716:66 |==> -66
6113:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):716:cdt.g0 = 66 |==> <NO-OP>
6114:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):717:69 |==> 0
6115:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):717:69 |==> -69
6116:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):717:cdt.g1 = 69 |==> <NO-OP>
6117:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):718:break; |==> <NO-OP>
6118:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:3 |==> 0
6119:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:3 |==> -3
6120:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:offset + 3 |==> offset % 3
6121:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:offset + 3 |==> offset * 3
6122:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:offset + 3 |==> offset - 3
6123:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:offset + 3 |==> offset / 3
6124:ROR:<=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:offset + 3 <= data.length |==> offset + 3 < data.length
6125:ROR:<=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:offset + 3 <= data.length |==> offset + 3 == data.length
6126:ROR:<=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:offset + 3 <= data.length |==> true
6127:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:0 |==> 1
6128:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:0 |==> -1
6129:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:offset + 0 |==> offset % 0
6130:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:offset + 0 |==> offset * 0
6131:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:offset + 0 |==> offset - 0
6132:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:offset + 0 |==> offset / 0
6133:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):720:1 |==> 0
6134:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):720:1 |==> -1
6135:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):720:offset + 1 |==> offset % 1
6136:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):720:offset + 1 |==> offset * 1
6137:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):720:offset + 1 |==> offset - 1
6138:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):720:offset + 1 |==> offset / 1
6139:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):720:2 |==> 0
6140:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):720:2 |==> -2
6141:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):720:offset + 2 |==> offset % 2
6142:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):720:offset + 2 |==> offset * 2
6143:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):720:offset + 2 |==> offset - 2
6144:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):720:offset + 2 |==> offset / 2
6145:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):720:0 |==> 1
6146:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):720:0 |==> -1
6147:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) != 0 |==> getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) < 0
6148:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) != 0 |==> getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) > 0
6149:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):720:getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) != 0 |==> true
6150:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:offset + 3 <= data.length && getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) != 0 |==> offset + 3 <= data.length == (getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) != 0)
6151:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:offset + 3 <= data.length && getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) != 0 |==> false
6152:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:offset + 3 <= data.length && getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) != 0 |==> offset + 3 <= data.length
6153:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):719:offset + 3 <= data.length && getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) != 0 |==> getMBChar(makeMultibyte(data[offset + 0], data[offset + 1], data[offset + 2])) != 0
6154:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):721:1 |==> 0
6155:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):721:1 |==> -1
6156:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):721:offset + 1 |==> offset % 1
6157:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):721:offset + 1 |==> offset * 1
6158:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):721:offset + 1 |==> offset - 1
6159:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):721:offset + 1 |==> offset / 1
6160:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):722:2 |==> 0
6161:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):722:2 |==> -2
6162:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):722:offset + 2 |==> offset % 2
6163:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):722:offset + 2 |==> offset * 2
6164:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):722:offset + 2 |==> offset - 2
6165:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):722:offset + 2 |==> offset / 2
6166:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):723:curReader == null |==> false
6167:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):723:0 |==> 1
6168:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):723:0 |==> -1
6169:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):723:c != 0 |==> c < 0
6170:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):723:c != 0 |==> c > 0
6171:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):723:c != 0 |==> true
6172:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):723:curReader == null || c != 0 |==> curReader == null != (c != 0)
6173:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):723:curReader == null || c != 0 |==> curReader == null
6174:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):723:curReader == null || c != 0 |==> c != 0
6175:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):723:curReader == null || c != 0 |==> true
6176:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):724:sb.append(c) |==> <NO-OP>
6177:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):725:3 |==> 0
6178:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):725:3 |==> -3
6179:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):725:offset += 3 |==> <NO-OP>
6180:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):728:curReader != null |==> true
6181:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):729:curReader.addError(MarcError.MINOR_ERROR, "Erroneous MARC8 multibyte character, inserting change to default character set") |==> <NO-OP>
6182:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):732:false |==> true
6183:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):732:cdt.multibyte = false |==> <NO-OP>
6184:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):733:66 |==> 0
6185:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):733:66 |==> -66
6186:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):733:cdt.g0 = 66 |==> <NO-OP>
6187:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):734:69 |==> 0
6188:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):734:69 |==> -69
6189:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):734:cdt.g1 = 69 |==> <NO-OP>
6190:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):736:break; |==> <NO-OP>
6191:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):740:cdt.offset = offset |==> <NO-OP>
6192:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@convertMultibyte(org.marc4j.converter.impl.AnselToUnicode.CodeTracker,char[]):742:sb.toString() |==> null
6193:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):746:start |==> 0
6194:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):746:1 |==> 0
6195:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):746:1 |==> -1
6196:AOR:-(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):746:length - 1 |==> length % 1
6197:AOR:-(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):746:length - 1 |==> length * 1
6198:AOR:-(int,int):+(int,int):org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):746:length - 1 |==> length + 1
6199:AOR:-(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):746:length - 1 |==> length / 1
6200:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):746:offset < length - 1 |==> offset != length - 1
6201:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):746:offset < length - 1 |==> offset <= length - 1
6202:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):746:offset < length - 1 |==> false
6203:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):747:27 |==> 0
6204:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):747:27 |==> -27
6205:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):747:data[offset] == (char)27 |==> data[offset] <= (char)27
6206:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):747:data[offset] == (char)27 |==> data[offset] >= (char)27
6207:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):747:data[offset] == (char)27 |==> false
6208:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):748:1 |==> 0
6209:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):748:1 |==> -1
6210:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):748:offset + 1 |==> offset % 1
6211:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):748:offset + 1 |==> offset * 1
6212:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):748:offset + 1 |==> offset - 1
6213:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):748:offset + 1 |==> offset / 1
6214:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):748:data[offset + 1] == '$' |==> data[offset + 1] <= '$'
6215:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):748:data[offset + 1] == '$' |==> data[offset + 1] >= '$'
6216:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):748:data[offset + 1] == '$' |==> false
6217:LVR:TRUE:FALSE:org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):749:true |==> false
6218:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):749:return Config.__M_NO == 0 && Config.COVERED(6217, 6217) ? true : Config.__M_NO == 6217 ? false : true; |==> <NO-OP>
6219:STD:<BREAK>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):751:break; |==> <NO-OP>
6220:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@nextEscIsMB(char[],int,int):755:false |==> true
6221:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@noneEquals(char[],int,int,int):759:start |==> 0
6222:ROR:<=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@noneEquals(char[],int,int,int):759:offset <= end |==> offset < end
6223:ROR:<=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@noneEquals(char[],int,int,int):759:offset <= end |==> offset == end
6224:ROR:<=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@noneEquals(char[],int,int,int):759:offset <= end |==> true
6225:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@noneEquals(char[],int,int,int):760:data[offset] == (char)val |==> data[offset] <= (char)val
6226:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@noneEquals(char[],int,int,int):760:data[offset] == (char)val |==> data[offset] >= (char)val
6227:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@noneEquals(char[],int,int,int):760:data[offset] == (char)val |==> false
6228:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@noneEquals(char[],int,int,int):761:false |==> true
6229:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@noneEquals(char[],int,int,int):761:return Config.__M_NO == 0 && Config.COVERED(6228, 6228) ? false : Config.__M_NO == 6228 ? true : false; |==> <NO-OP>
6230:LVR:TRUE:FALSE:org.marc4j.converter.impl.AnselToUnicode@noneEquals(char[],int,int,int):764:true |==> false
6231:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@noneInRange(char[],int,int,int,int):769:start |==> 0
6232:ROR:<=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@noneInRange(char[],int,int,int,int):769:offset <= end |==> offset < end
6233:ROR:<=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@noneInRange(char[],int,int,int,int):769:offset <= end |==> offset == end
6234:ROR:<=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@noneInRange(char[],int,int,int,int):769:offset <= end |==> true
6235:ROR:>=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@noneInRange(char[],int,int,int,int):770:data[offset] >= (char)val1 |==> data[offset] == (char)val1
6236:ROR:>=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@noneInRange(char[],int,int,int,int):770:data[offset] >= (char)val1 |==> data[offset] > (char)val1
6237:ROR:>=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@noneInRange(char[],int,int,int,int):770:data[offset] >= (char)val1 |==> true
6238:ROR:<=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@noneInRange(char[],int,int,int,int):770:data[offset] <= (char)val2 |==> data[offset] < (char)val2
6239:ROR:<=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@noneInRange(char[],int,int,int,int):770:data[offset] <= (char)val2 |==> data[offset] == (char)val2
6240:ROR:<=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@noneInRange(char[],int,int,int,int):770:data[offset] <= (char)val2 |==> true
6241:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@noneInRange(char[],int,int,int,int):770:data[offset] >= (char)val1 && data[offset] <= (char)val2 |==> data[offset] >= (char)val1 == data[offset] <= (char)val2
6242:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@noneInRange(char[],int,int,int,int):770:data[offset] >= (char)val1 && data[offset] <= (char)val2 |==> false
6243:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@noneInRange(char[],int,int,int,int):770:data[offset] >= (char)val1 && data[offset] <= (char)val2 |==> data[offset] >= (char)val1
6244:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@noneInRange(char[],int,int,int,int):770:data[offset] >= (char)val1 && data[offset] <= (char)val2 |==> data[offset] <= (char)val2
6245:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@noneInRange(char[],int,int,int,int):771:false |==> true
6246:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@noneInRange(char[],int,int,int,int):771:return Config.__M_NO == 0 && Config.COVERED(6245, 6245) ? false : Config.__M_NO == 6245 ? true : false; |==> <NO-OP>
6247:LVR:TRUE:FALSE:org.marc4j.converter.impl.AnselToUnicode@noneInRange(char[],int,int,int,int):774:true |==> false
6248:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@getRawMBLength(char[],int):778:0 |==> 1
6249:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@getRawMBLength(char[],int):778:0 |==> -1
6250:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@getRawMBLength(char[],int):780:offset < data.length |==> offset != data.length
6251:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@getRawMBLength(char[],int):780:offset < data.length |==> offset <= data.length
6252:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@getRawMBLength(char[],int):780:offset < data.length |==> false
6253:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@getRawMBLength(char[],int):780:27 |==> 0
6254:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@getRawMBLength(char[],int):780:27 |==> -27
6255:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@getRawMBLength(char[],int):780:data[offset] != 27 |==> data[offset] < 27
6256:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@getRawMBLength(char[],int):780:data[offset] != 27 |==> data[offset] > 27
6257:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@getRawMBLength(char[],int):780:data[offset] != 27 |==> true
6258:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getRawMBLength(char[],int):780:offset < data.length && data[offset] != 27 |==> offset < data.length == (data[offset] != 27)
6259:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getRawMBLength(char[],int):780:offset < data.length && data[offset] != 27 |==> false
6260:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getRawMBLength(char[],int):780:offset < data.length && data[offset] != 27 |==> offset < data.length
6261:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getRawMBLength(char[],int):780:offset < data.length && data[offset] != 27 |==> data[offset] != 27
6262:STD:<INC>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@getRawMBLength(char[],int):781:offset++ |==> <NO-OP>
6263:STD:<INC>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@getRawMBLength(char[],int):782:length++ |==> <NO-OP>
6264:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@getRawMBLength(char[],int):784:length |==> 0
6265:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):788:0 |==> 1
6266:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):788:0 |==> -1
6267:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):790:offset < data.length |==> offset != data.length
6268:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):790:offset < data.length |==> offset <= data.length
6269:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):790:offset < data.length |==> false
6270:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):790:27 |==> 0
6271:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):790:27 |==> -27
6272:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):790:data[offset] != 27 |==> data[offset] < 27
6273:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):790:data[offset] != 27 |==> data[offset] > 27
6274:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):790:data[offset] != 27 |==> true
6275:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):790:offset < data.length && data[offset] != 27 |==> offset < data.length == (data[offset] != 27)
6276:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):790:offset < data.length && data[offset] != 27 |==> false
6277:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):790:offset < data.length && data[offset] != 27 |==> offset < data.length
6278:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):790:offset < data.length && data[offset] != 27 |==> data[offset] != 27
6279:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):791:data[offset] == ' ' |==> data[offset] <= ' '
6280:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):791:data[offset] == ' ' |==> data[offset] >= ' '
6281:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):791:data[offset] == ' ' |==> false
6282:STD:<INC>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):792:cnt++ |==> <NO-OP>
6283:STD:<INC>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):795:offset++ |==> <NO-OP>
6284:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@getNumSpacesInMBLength(char[],int):798:cnt |==> 0
6285:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):802:getChar(data[cdt.offset], cdt.g0, cdt.g1) |==> 0
6286:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:c == '&' |==> c <= '&'
6287:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:c == '&' |==> c >= '&'
6288:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:c == '&' |==> false
6289:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:translateNCR && c == '&' |==> translateNCR == (c == '&')
6290:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:translateNCR && c == '&' |==> false
6291:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:translateNCR && c == '&' |==> translateNCR
6292:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:translateNCR && c == '&' |==> c == '&'
6293:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:8 |==> 0
6294:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:8 |==> -8
6295:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:cdt.offset + 8 |==> cdt.offset % 8
6296:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:cdt.offset + 8 |==> cdt.offset * 8
6297:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:cdt.offset + 8 |==> cdt.offset - 8
6298:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:cdt.offset + 8 |==> cdt.offset / 8
6299:ROR:>=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:data.length >= cdt.offset + 8 |==> data.length == cdt.offset + 8
6300:ROR:>=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:data.length >= cdt.offset + 8 |==> data.length > cdt.offset + 8
6301:ROR:>=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:data.length >= cdt.offset + 8 |==> true
6302:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:translateNCR && c == '&' && data.length >= cdt.offset + 8 |==> (translateNCR && c == '&') == data.length >= cdt.offset + 8
6303:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:translateNCR && c == '&' && data.length >= cdt.offset + 8 |==> false
6304:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:translateNCR && c == '&' && data.length >= cdt.offset + 8 |==> translateNCR && c == '&'
6305:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):804:translateNCR && c == '&' && data.length >= cdt.offset + 8 |==> data.length >= cdt.offset + 8
6306:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):805:8 |==> 0
6307:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):805:8 |==> -8
6308:COR:tmp.matches("&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f];"):TRUE:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):806:tmp.matches("&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f];") |==> false
6309:COR:tmp.matches("&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f];"):FALSE:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):806:tmp.matches("&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f];") |==> true
6310:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):807:3 |==> 0
6311:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):807:3 |==> -3
6312:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):807:7 |==> 0
6313:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):807:7 |==> -7
6314:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):807:c = getCharFromCodePoint(tmp.substring(3, 7)) |==> <NO-OP>
6315:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):808:8 |==> 0
6316:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):808:8 |==> -8
6317:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):808:cdt.offset += 8 |==> <NO-OP>
6318:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):809:10 |==> 0
6319:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):809:10 |==> -10
6320:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):809:cdt.offset + 10 |==> cdt.offset % 10
6321:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):809:cdt.offset + 10 |==> cdt.offset * 10
6322:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):809:cdt.offset + 10 |==> cdt.offset - 10
6323:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):809:cdt.offset + 10 |==> cdt.offset / 10
6324:ROR:>=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):809:data.length >= cdt.offset + 10 |==> data.length == cdt.offset + 10
6325:ROR:>=(int,int):>(int,int):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):809:data.length >= cdt.offset + 10 |==> data.length > cdt.offset + 10
6326:ROR:>=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):809:data.length >= cdt.offset + 10 |==> true
6327:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):809:tmp.matches("&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]%") && data.length >= cdt.offset + 10 |==> tmp.matches("&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]%") == data.length >= cdt.offset + 10
6328:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):809:tmp.matches("&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]%") && data.length >= cdt.offset + 10 |==> false
6329:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):809:tmp.matches("&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]%") && data.length >= cdt.offset + 10 |==> tmp.matches("&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]%")
6330:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):809:tmp.matches("&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]%") && data.length >= cdt.offset + 10 |==> data.length >= cdt.offset + 10
6331:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):810:10 |==> 0
6332:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):810:10 |==> -10
6333:COR:tmp1.matches("&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]%x;"):TRUE:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):811:tmp1.matches("&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]%x;") |==> false
6334:COR:tmp1.matches("&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]%x;"):FALSE:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):811:tmp1.matches("&#x[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]%x;") |==> true
6335:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):812:3 |==> 0
6336:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):812:3 |==> -3
6337:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):812:7 |==> 0
6338:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):812:7 |==> -7
6339:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):812:c = getCharFromCodePoint(tmp1.substring(3, 7)) |==> <NO-OP>
6340:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):813:10 |==> 0
6341:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):813:10 |==> -10
6342:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):813:cdt.offset += 10 |==> <NO-OP>
6343:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):814:curReader != null |==> true
6344:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):815:curReader.addError(MarcError.MINOR_ERROR, "Subfield contains malformed Unicode Numeric Character Reference : " + tmp1) |==> <NO-OP>
6345:STD:<INC>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):819:cdt.offset++ |==> <NO-OP>
6346:STD:<INC>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):822:cdt.offset++ |==> <NO-OP>
6347:STD:<INC>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):825:cdt.offset++ |==> <NO-OP>
6348:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@getCharCDT(char[],org.marc4j.converter.impl.AnselToUnicode.CodeTracker):828:c |==> 0
6349:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@getCharFromCodePoint(java.lang.String):832:16 |==> 0
6350:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@getCharFromCodePoint(java.lang.String):832:16 |==> -16
6351:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@getCharFromCodePoint(java.lang.String):833:(char)charNum |==> 0
6352:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):845:3 |==> 0
6353:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):845:3 |==> -3
6354:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):847:0 |==> 1
6355:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):847:0 |==> -1
6356:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):847:16 |==> 0
6357:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):847:16 |==> -16
6358:SOR:<<(int,int):>>(int,int):org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):847:c1 << 16 |==> c1 >> 16
6359:SOR:<<(int,int):>>>(int,int):org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):847:c1 << 16 |==> c1 >>> 16
6360:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):847:chars[0] = c1 << 16 |==> <NO-OP>
6361:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):848:1 |==> 0
6362:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):848:1 |==> -1
6363:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):848:8 |==> 0
6364:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):848:8 |==> -8
6365:SOR:<<(int,int):>>(int,int):org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):848:c2 << 8 |==> c2 >> 8
6366:SOR:<<(int,int):>>>(int,int):org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):848:c2 << 8 |==> c2 >>> 8
6367:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):848:chars[1] = c2 << 8 |==> <NO-OP>
6368:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):849:2 |==> 0
6369:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):849:2 |==> -2
6370:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):849:chars[2] = c3 |==> <NO-OP>
6371:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):851:0 |==> 1
6372:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):851:0 |==> -1
6373:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):851:1 |==> 0
6374:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):851:1 |==> -1
6375:LOR:|(int,int):&(int,int):org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):851:chars[0] | chars[1] |==> chars[0] & chars[1]
6376:LOR:|(int,int):^(int,int):org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):851:chars[0] | chars[1] |==> chars[0] ^ chars[1]
6377:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):851:2 |==> 0
6378:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):851:2 |==> -2
6379:LOR:|(int,int):&(int,int):org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):851:chars[0] | chars[1] | chars[2] |==> (chars[0] | chars[1]) & chars[2]
6380:LOR:|(int,int):^(int,int):org.marc4j.converter.impl.AnselToUnicode@makeMultibyte(char,char,char):851:chars[0] | chars[1] | chars[2] |==> (chars[0] | chars[1]) ^ chars[2]
6381:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@getChar(int,int,int):855:126 |==> 0
6382:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@getChar(int,int,int):855:126 |==> -126
6383:ROR:<=(int,int):<(int,int):org.marc4j.converter.impl.AnselToUnicode@getChar(int,int,int):855:ch <= 126 |==> ch < 126
6384:ROR:<=(int,int):==(int,int):org.marc4j.converter.impl.AnselToUnicode@getChar(int,int,int):855:ch <= 126 |==> ch == 126
6385:ROR:<=(int,int):TRUE(int,int):org.marc4j.converter.impl.AnselToUnicode@getChar(int,int,int):855:ch <= 126 |==> true
6386:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@getChar(int,int,int):856:ct.getChar(ch, g0) |==> 0
6387:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@getChar(int,int,int):858:ct.getChar(ch, g1) |==> 0
6388:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@getMBChar(int):869:49 |==> 0
6389:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@getMBChar(int):869:49 |==> -49
6390:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@getMBCharStr(int):879:49 |==> 0
6391:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@getMBCharStr(int):879:49 |==> -49
6392:LVR:0:POS:org.marc4j.converter.impl.AnselToUnicode@getMBCharStr(int):881:0 |==> 1
6393:LVR:0:NEG:org.marc4j.converter.impl.AnselToUnicode@getMBCharStr(int):881:0 |==> -1
6394:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@getMBCharStr(int):881:c == 0 |==> c <= 0
6395:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@getMBCharStr(int):881:c == 0 |==> c >= 0
6396:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@getMBCharStr(int):881:c == 0 |==> false
6397:EVR:<PLUS>:<DEFAULT>:org.marc4j.converter.impl.AnselToUnicode@getMBCharStr(int):884:"" + c |==> null
6398:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@hasNext(int,int):889:1 |==> 0
6399:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@hasNext(int,int):889:1 |==> -1
6400:AOR:-(int,int):%(int,int):org.marc4j.converter.impl.AnselToUnicode@hasNext(int,int):889:len - 1 |==> len % 1
6401:AOR:-(int,int):*(int,int):org.marc4j.converter.impl.AnselToUnicode@hasNext(int,int):889:len - 1 |==> len * 1
6402:AOR:-(int,int):+(int,int):org.marc4j.converter.impl.AnselToUnicode@hasNext(int,int):889:len - 1 |==> len + 1
6403:AOR:-(int,int):/(int,int):org.marc4j.converter.impl.AnselToUnicode@hasNext(int,int):889:len - 1 |==> len / 1
6404:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.AnselToUnicode@hasNext(int,int):889:pos < len - 1 |==> pos != len - 1
6405:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@hasNext(int,int):889:pos < len - 1 |==> pos <= len - 1
6406:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@hasNext(int,int):889:pos < len - 1 |==> false
6407:LVR:TRUE:FALSE:org.marc4j.converter.impl.AnselToUnicode@hasNext(int,int):890:true |==> false
6408:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@hasNext(int,int):890:return Config.__M_NO == 0 && Config.COVERED(6407, 6407) ? true : Config.__M_NO == 6407 ? false : true; |==> <NO-OP>
6409:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@hasNext(int,int):893:false |==> true
6410:LVR:POS:0:org.marc4j.converter.impl.AnselToUnicode@isEscape(int):897:27 |==> 0
6411:LVR:POS:NEG:org.marc4j.converter.impl.AnselToUnicode@isEscape(int):897:27 |==> -27
6412:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.AnselToUnicode@isEscape(int):897:i == 27 |==> i <= 27
6413:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.AnselToUnicode@isEscape(int):897:i == 27 |==> i >= 27
6414:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.AnselToUnicode@isEscape(int):897:i == 27 |==> false
6415:LVR:TRUE:FALSE:org.marc4j.converter.impl.AnselToUnicode@isEscape(int):898:true |==> false
6416:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.AnselToUnicode@isEscape(int):898:return Config.__M_NO == 0 && Config.COVERED(6415, 6415) ? true : Config.__M_NO == 6415 ? false : true; |==> <NO-OP>
6417:LVR:FALSE:TRUE:org.marc4j.converter.impl.AnselToUnicode@isEscape(int):901:false |==> true
6418:STD:<CALL>:<NO-OP>:org.marc4j.MarcReaderConfig@<init>(java.util.Properties):31:setCombineConsecutiveRecordsFields(configProps.getProperty("marc.combine_records"), configProps.getProperty("marc.combine_records.left_field"), configProps.getProperty("marc.combine_records.right_field")) |==> <NO-OP>
6419:STD:<CALL>:<NO-OP>:org.marc4j.MarcReaderConfig@<init>(java.util.Properties):35:setPermissiveReader(Boolean.parseBoolean(configProps.getProperty("marc.permissive"))) |==> <NO-OP>
6420:STD:<CALL>:<NO-OP>:org.marc4j.MarcReaderConfig@<init>(java.util.Properties):37:setDefaultEncoding(configProps.getProperty("marc.default_encoding")) |==> <NO-OP>
6421:STD:<CALL>:<NO-OP>:org.marc4j.MarcReaderConfig@<init>(java.util.Properties):39:setToUtf8(Boolean.parseBoolean(configProps.getProperty("marc.to_utf_8"))) |==> <NO-OP>
6422:STD:<CALL>:<NO-OP>:org.marc4j.MarcReaderConfig@<init>(java.util.Properties):41:setUnicodeNormalize(configProps.getProperty("marc.unicode_normalize")) |==> <NO-OP>
6423:STD:<CALL>:<NO-OP>:org.marc4j.MarcReaderConfig@<init>(java.util.Properties):43:setFilterParams(configProps.getProperty("marc.include_if_present"), configProps.getProperty("marc.include_if_missing")) |==> <NO-OP>
6424:STD:<CALL>:<NO-OP>:org.marc4j.MarcReaderConfig@<init>(java.util.Properties):46:setDeleteSubfieldSpec(configProps.getProperty("marc.delete_subfields")) |==> <NO-OP>
6425:STD:<CALL>:<NO-OP>:org.marc4j.MarcReaderConfig@<init>(java.util.Properties):48:setMarcRemapFilename(configProps.getProperty("marc.reader.remap")) |==> <NO-OP>
6426:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@<init>():52:defaultEncoding = null |==> <NO-OP>
6427:LVR:FALSE:TRUE:org.marc4j.MarcReaderConfig@<init>():53:false |==> true
6428:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@<init>():53:permissiveReader = false |==> <NO-OP>
6429:LVR:FALSE:TRUE:org.marc4j.MarcReaderConfig@<init>():54:false |==> true
6430:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@<init>():54:to_utf_8 = false |==> <NO-OP>
6431:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@<init>():55:combineConsecutiveRecordsFields = null |==> <NO-OP>
6432:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@<init>():56:unicodeNormalize = null |==> <NO-OP>
6433:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderConfig@isPermissiveReader():60:permissiveReader |==> false
6434:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setPermissiveReader(boolean):64:this.permissiveReader = permissiveReader |==> <NO-OP>
6435:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderConfig@setPermissiveReader(boolean):65:this |==> null
6436:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcReaderConfig@getDefaultEncoding():69:defaultEncoding == null |==> false
6437:EVR:<CONDITIONAL_EXPRESSION>:<DEFAULT>:org.marc4j.MarcReaderConfig@getDefaultEncoding():70:(isPermissiveReader()) ? "BESTGUESS" : "MARC8" |==> null
6438:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderConfig@getDefaultEncoding():72:defaultEncoding |==> null
6439:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcReaderConfig@setDefaultEncoding(java.lang.String):77:defaultEncoding == null |==> false
6440:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setDefaultEncoding(java.lang.String):78:this.defaultEncoding = null |==> <NO-OP>
6441:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setDefaultEncoding(java.lang.String):80:this.defaultEncoding = defaultEncoding.trim() |==> <NO-OP>
6442:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderConfig@setDefaultEncoding(java.lang.String):82:this |==> null
6443:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderConfig@toUtf8():86:to_utf_8 |==> false
6444:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setToUtf8(boolean):90:this.to_utf_8 = to_utf_8 |==> <NO-OP>
6445:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderConfig@setToUtf8(boolean):91:this |==> null
6446:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderConfig@getCombineConsecutiveRecordsFields():95:combineConsecutiveRecordsFields |==> null
6447:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderConfig@getCombineRecordsLeftField():99:combineRecordsLeftField |==> null
6448:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderConfig@getCombineRecordsRightField():103:combineRecordsRightField |==> null
6449:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setCombineConsecutiveRecordsFields(java.lang.String,java.lang.String,java.lang.String):109:this.combineConsecutiveRecordsFields = combineConsecutiveRecordsFields |==> <NO-OP>
6450:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcReaderConfig@setCombineConsecutiveRecordsFields(java.lang.String,java.lang.String,java.lang.String):111:combineConsecutiveRecordsFields != null |==> true
6451:LVR:0:POS:org.marc4j.MarcReaderConfig@setCombineConsecutiveRecordsFields(java.lang.String,java.lang.String,java.lang.String):111:0 |==> 1
6452:LVR:0:NEG:org.marc4j.MarcReaderConfig@setCombineConsecutiveRecordsFields(java.lang.String,java.lang.String,java.lang.String):111:0 |==> -1
6453:ROR:==(int,int):<=(int,int):org.marc4j.MarcReaderConfig@setCombineConsecutiveRecordsFields(java.lang.String,java.lang.String,java.lang.String):111:combineConsecutiveRecordsFields.length() == 0 |==> combineConsecutiveRecordsFields.length() <= 0
6454:ROR:==(int,int):>=(int,int):org.marc4j.MarcReaderConfig@setCombineConsecutiveRecordsFields(java.lang.String,java.lang.String,java.lang.String):111:combineConsecutiveRecordsFields.length() == 0 |==> combineConsecutiveRecordsFields.length() >= 0
6455:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcReaderConfig@setCombineConsecutiveRecordsFields(java.lang.String,java.lang.String,java.lang.String):111:combineConsecutiveRecordsFields.length() == 0 |==> false
6456:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcReaderConfig@setCombineConsecutiveRecordsFields(java.lang.String,java.lang.String,java.lang.String):111:combineConsecutiveRecordsFields != null && combineConsecutiveRecordsFields.length() == 0 |==> combineConsecutiveRecordsFields != null == (combineConsecutiveRecordsFields.length() == 0)
6457:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcReaderConfig@setCombineConsecutiveRecordsFields(java.lang.String,java.lang.String,java.lang.String):111:combineConsecutiveRecordsFields != null && combineConsecutiveRecordsFields.length() == 0 |==> false
6458:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcReaderConfig@setCombineConsecutiveRecordsFields(java.lang.String,java.lang.String,java.lang.String):111:combineConsecutiveRecordsFields != null && combineConsecutiveRecordsFields.length() == 0 |==> combineConsecutiveRecordsFields != null
6459:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcReaderConfig@setCombineConsecutiveRecordsFields(java.lang.String,java.lang.String,java.lang.String):111:combineConsecutiveRecordsFields != null && combineConsecutiveRecordsFields.length() == 0 |==> combineConsecutiveRecordsFields.length() == 0
6460:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setCombineConsecutiveRecordsFields(java.lang.String,java.lang.String,java.lang.String):112:this.combineConsecutiveRecordsFields = null |==> <NO-OP>
6461:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setCombineConsecutiveRecordsFields(java.lang.String,java.lang.String,java.lang.String):114:combineRecordsLeftField = leftField |==> <NO-OP>
6462:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setCombineConsecutiveRecordsFields(java.lang.String,java.lang.String,java.lang.String):115:combineRecordsRightField = rightField |==> <NO-OP>
6463:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderConfig@setCombineConsecutiveRecordsFields(java.lang.String,java.lang.String,java.lang.String):117:this |==> null
6464:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderConfig@getUnicodeNormalize():121:unicodeNormalize |==> null
6465:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):132:unicodeNormalizeStr == null |==> false
6466:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):133:unicodeNormalize = null |==> <NO-OP>
6467:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):134:unicodeNormalizeStr.equalsIgnoreCase("KC") || unicodeNormalizeStr.equalsIgnoreCase("CompatibilityCompose") |==> unicodeNormalizeStr.equalsIgnoreCase("KC") != unicodeNormalizeStr.equalsIgnoreCase("CompatibilityCompose")
6468:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):134:unicodeNormalizeStr.equalsIgnoreCase("KC") || unicodeNormalizeStr.equalsIgnoreCase("CompatibilityCompose") |==> unicodeNormalizeStr.equalsIgnoreCase("KC")
6469:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):134:unicodeNormalizeStr.equalsIgnoreCase("KC") || unicodeNormalizeStr.equalsIgnoreCase("CompatibilityCompose") |==> unicodeNormalizeStr.equalsIgnoreCase("CompatibilityCompose")
6470:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):134:unicodeNormalizeStr.equalsIgnoreCase("KC") || unicodeNormalizeStr.equalsIgnoreCase("CompatibilityCompose") |==> true
6471:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):136:unicodeNormalize = "KC" |==> <NO-OP>
6472:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):137:unicodeNormalizeStr.equalsIgnoreCase("C") || unicodeNormalizeStr.equalsIgnoreCase("Compose") |==> unicodeNormalizeStr.equalsIgnoreCase("C") != unicodeNormalizeStr.equalsIgnoreCase("Compose")
6473:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):137:unicodeNormalizeStr.equalsIgnoreCase("C") || unicodeNormalizeStr.equalsIgnoreCase("Compose") |==> unicodeNormalizeStr.equalsIgnoreCase("C")
6474:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):137:unicodeNormalizeStr.equalsIgnoreCase("C") || unicodeNormalizeStr.equalsIgnoreCase("Compose") |==> unicodeNormalizeStr.equalsIgnoreCase("Compose")
6475:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):137:unicodeNormalizeStr.equalsIgnoreCase("C") || unicodeNormalizeStr.equalsIgnoreCase("Compose") |==> true
6476:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):137:unicodeNormalizeStr.equalsIgnoreCase("C") || unicodeNormalizeStr.equalsIgnoreCase("Compose") || unicodeNormalizeStr.equalsIgnoreCase("true") |==> (unicodeNormalizeStr.equalsIgnoreCase("C") || unicodeNormalizeStr.equalsIgnoreCase("Compose")) != unicodeNormalizeStr.equalsIgnoreCase("true")
6477:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):137:unicodeNormalizeStr.equalsIgnoreCase("C") || unicodeNormalizeStr.equalsIgnoreCase("Compose") || unicodeNormalizeStr.equalsIgnoreCase("true") |==> unicodeNormalizeStr.equalsIgnoreCase("C") || unicodeNormalizeStr.equalsIgnoreCase("Compose")
6478:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):138:unicodeNormalizeStr.equalsIgnoreCase("C") || unicodeNormalizeStr.equalsIgnoreCase("Compose") || unicodeNormalizeStr.equalsIgnoreCase("true") |==> unicodeNormalizeStr.equalsIgnoreCase("true")
6479:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):138:unicodeNormalizeStr.equalsIgnoreCase("C") || unicodeNormalizeStr.equalsIgnoreCase("Compose") || unicodeNormalizeStr.equalsIgnoreCase("true") |==> true
6480:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):139:unicodeNormalize = "C" |==> <NO-OP>
6481:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):140:unicodeNormalizeStr.equalsIgnoreCase("D") || unicodeNormalizeStr.equalsIgnoreCase("Decompose") |==> unicodeNormalizeStr.equalsIgnoreCase("D") != unicodeNormalizeStr.equalsIgnoreCase("Decompose")
6482:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):140:unicodeNormalizeStr.equalsIgnoreCase("D") || unicodeNormalizeStr.equalsIgnoreCase("Decompose") |==> unicodeNormalizeStr.equalsIgnoreCase("D")
6483:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):140:unicodeNormalizeStr.equalsIgnoreCase("D") || unicodeNormalizeStr.equalsIgnoreCase("Decompose") |==> unicodeNormalizeStr.equalsIgnoreCase("Decompose")
6484:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):140:unicodeNormalizeStr.equalsIgnoreCase("D") || unicodeNormalizeStr.equalsIgnoreCase("Decompose") |==> true
6485:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):142:unicodeNormalize = "D" |==> <NO-OP>
6486:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):143:unicodeNormalizeStr.equalsIgnoreCase("KD") || unicodeNormalizeStr.equalsIgnoreCase("CompatibiltyDecompose") |==> unicodeNormalizeStr.equalsIgnoreCase("KD") != unicodeNormalizeStr.equalsIgnoreCase("CompatibiltyDecompose")
6487:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):143:unicodeNormalizeStr.equalsIgnoreCase("KD") || unicodeNormalizeStr.equalsIgnoreCase("CompatibiltyDecompose") |==> unicodeNormalizeStr.equalsIgnoreCase("KD")
6488:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):143:unicodeNormalizeStr.equalsIgnoreCase("KD") || unicodeNormalizeStr.equalsIgnoreCase("CompatibiltyDecompose") |==> unicodeNormalizeStr.equalsIgnoreCase("CompatibiltyDecompose")
6489:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):143:unicodeNormalizeStr.equalsIgnoreCase("KD") || unicodeNormalizeStr.equalsIgnoreCase("CompatibiltyDecompose") |==> true
6490:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):145:unicodeNormalize = "KD" |==> <NO-OP>
6491:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):147:unicodeNormalize = null |==> <NO-OP>
6492:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderConfig@setUnicodeNormalize(java.lang.String):149:this |==> null
6493:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.MarcReaderConfig@getIncludeIfPresent():153:(includeIfPresent) |==> null
6494:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.MarcReaderConfig@getIncludeIfMissing():157:(includeIfMissing) |==> null
6495:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcReaderConfig@shouldFilter():161:includeIfPresent != null |==> true
6496:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcReaderConfig@shouldFilter():161:includeIfMissing != null |==> true
6497:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcReaderConfig@shouldFilter():161:includeIfPresent != null || includeIfMissing != null |==> includeIfPresent != null != (includeIfMissing != null)
6498:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcReaderConfig@shouldFilter():161:includeIfPresent != null || includeIfMissing != null |==> includeIfPresent != null
6499:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcReaderConfig@shouldFilter():161:includeIfPresent != null || includeIfMissing != null |==> includeIfMissing != null
6500:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcReaderConfig@shouldFilter():161:includeIfPresent != null || includeIfMissing != null |==> true
6501:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setFilterParams(java.lang.String,java.lang.String):165:includeIfPresent = ifPresent |==> <NO-OP>
6502:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setFilterParams(java.lang.String,java.lang.String):166:includeIfMissing = ifMissing |==> <NO-OP>
6503:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderConfig@setFilterParams(java.lang.String,java.lang.String):167:this |==> null
6504:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.MarcReaderConfig@getDeleteSubfieldSpec():171:(marcDeleteSubfields) |==> null
6505:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcReaderConfig@setDeleteSubfieldSpec(java.lang.String):175:marcDeleteSubfields != null |==> true
6506:COR:marcDeleteSubfields.equals("nomap"):TRUE:org.marc4j.MarcReaderConfig@setDeleteSubfieldSpec(java.lang.String):176:marcDeleteSubfields.equals("nomap") |==> false
6507:COR:marcDeleteSubfields.equals("nomap"):FALSE:org.marc4j.MarcReaderConfig@setDeleteSubfieldSpec(java.lang.String):176:marcDeleteSubfields.equals("nomap") |==> true
6508:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setDeleteSubfieldSpec(java.lang.String):177:this.marcDeleteSubfields = null |==> <NO-OP>
6509:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setDeleteSubfieldSpec(java.lang.String):179:this.marcDeleteSubfields = marcDeleteSubfields.trim() |==> <NO-OP>
6510:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setDeleteSubfieldSpec(java.lang.String):182:this.marcDeleteSubfields = null |==> <NO-OP>
6511:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderConfig@setDeleteSubfieldSpec(java.lang.String):184:this |==> null
6512:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.MarcReaderConfig@getMarcRemapFilename():188:(marcRemapFile) |==> null
6513:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcReaderConfig@setMarcRemapFilename(java.lang.String):192:marcRemapFile != null |==> true
6514:COR:marcRemapFile.equals("nomap"):TRUE:org.marc4j.MarcReaderConfig@setMarcRemapFilename(java.lang.String):193:marcRemapFile.equals("nomap") |==> false
6515:COR:marcRemapFile.equals("nomap"):FALSE:org.marc4j.MarcReaderConfig@setMarcRemapFilename(java.lang.String):193:marcRemapFile.equals("nomap") |==> true
6516:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setMarcRemapFilename(java.lang.String):194:this.marcRemapFile = null |==> <NO-OP>
6517:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setMarcRemapFilename(java.lang.String):196:this.marcRemapFile = marcRemapFile.trim() |==> <NO-OP>
6518:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderConfig@setMarcRemapFilename(java.lang.String):199:this.marcRemapFile = null |==> <NO-OP>
6519:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderConfig@setMarcRemapFilename(java.lang.String):201:this |==> null
6520:LVR:0:POS:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):22:0 |==> 1
6521:LVR:0:NEG:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):22:0 |==> -1
6522:ROR:==(int,int):<=(int,int):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):22:inputFilenames.length == 0 |==> inputFilenames.length <= 0
6523:ROR:==(int,int):>=(int,int):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):22:inputFilenames.length == 0 |==> inputFilenames.length >= 0
6524:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):22:inputFilenames.length == 0 |==> false
6525:STD:<RETURN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):23:return makeReader(config, searchDirectories, "stdin"); |==> <NO-OP>
6526:LVR:POS:0:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):24:1 |==> 0
6527:LVR:POS:NEG:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):24:1 |==> -1
6528:ROR:==(int,int):<=(int,int):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):24:inputFilenames.length == 1 |==> inputFilenames.length <= 1
6529:ROR:==(int,int):>=(int,int):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):24:inputFilenames.length == 1 |==> inputFilenames.length >= 1
6530:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):24:inputFilenames.length == 1 |==> false
6531:LVR:0:POS:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):25:0 |==> 1
6532:LVR:0:NEG:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):25:0 |==> -1
6533:STD:<RETURN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):25:return makeReader(config, searchDirectories, inputFilenames[Config.__M_NO == 0 && Config.COVERED(6531, 6532) ? 0 : Config.__M_NO == 6532 ? -1 : Config.__M_NO == 6531 ? 1 : 0]); |==> <NO-OP>
6534:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):27:new ArrayList<MarcReader>() |==> null
6535:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):29:makeReaderPart(config, inputFilename) |==> null
6536:STD:<CALL>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):30:readers.add(reader) |==> <NO-OP>
6537:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):32:new MarcMultiplexReader(readers, Arrays.asList(inputFilenames)) |==> null
6538:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):33:result = decorateMarcReader(result, config, searchDirectories) |==> <NO-OP>
6539:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String[]):34:result |==> null
6540:LVR:0:POS:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):40:0 |==> 1
6541:LVR:0:NEG:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):40:0 |==> -1
6542:ROR:==(int,int):<=(int,int):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):40:inputFilenames.size() == 0 |==> inputFilenames.size() <= 0
6543:ROR:==(int,int):>=(int,int):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):40:inputFilenames.size() == 0 |==> inputFilenames.size() >= 0
6544:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):40:inputFilenames.size() == 0 |==> false
6545:STD:<RETURN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):41:return makeReader(config, searchDirectories, "stdin"); |==> <NO-OP>
6546:LVR:POS:0:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):42:1 |==> 0
6547:LVR:POS:NEG:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):42:1 |==> -1
6548:ROR:==(int,int):<=(int,int):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):42:inputFilenames.size() == 1 |==> inputFilenames.size() <= 1
6549:ROR:==(int,int):>=(int,int):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):42:inputFilenames.size() == 1 |==> inputFilenames.size() >= 1
6550:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):42:inputFilenames.size() == 1 |==> false
6551:STD:<RETURN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):43:return makeReader(config, searchDirectories, inputFilenames.iterator().next()); |==> <NO-OP>
6552:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):46:new ArrayList<MarcReader>() |==> null
6553:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):49:makeReaderPart(config, inputFilename) |==> null
6554:STD:<CALL>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):50:readers.add(reader) |==> <NO-OP>
6555:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):52:new MarcMultiplexReader(readers, inputFilenames) |==> null
6556:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):53:result = decorateMarcReader(result, config, searchDirectories) |==> <NO-OP>
6557:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.util.List<java.lang.String>):54:result |==> null
6558:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String):62:inputFilename.equals("-") || inputFilename.equals("stdin") |==> inputFilename.equals("-") != inputFilename.equals("stdin")
6559:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String):62:inputFilename.equals("-") || inputFilename.equals("stdin") |==> inputFilename.equals("-")
6560:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String):62:inputFilename.equals("-") || inputFilename.equals("stdin") |==> inputFilename.equals("stdin")
6561:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String):62:inputFilename.equals("-") || inputFilename.equals("stdin") |==> true
6562:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String):63:new BufferedInputStream(System.in) |==> null
6563:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String):65:new BufferedInputStream(new FileInputStream(inputFilename)) |==> null
6564:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String):67:makeReader(config, is) |==> null
6565:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String):68:reader = decorateMarcReader(reader, config, searchDirectories) |==> <NO-OP>
6566:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.lang.String[],java.lang.String):69:reader |==> null
6567:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReaderPart(org.marc4j.MarcReaderConfig,java.lang.String):75:new FileInputStream(inputFilename) |==> null
6568:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReaderPart(org.marc4j.MarcReaderConfig,java.lang.String):76:makeReader(config, is) |==> null
6569:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReaderPart(org.marc4j.MarcReaderConfig,java.lang.String):77:reader |==> null
6570:LVR:FALSE:TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):83:false |==> true
6571:LVR:FALSE:TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):85:false |==> true
6572:LVR:FALSE:TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):87:false |==> true
6573:LVR:FALSE:TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):89:false |==> true
6574:COR:input.markSupported():TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):94:input.markSupported() |==> false
6575:COR:input.markSupported():FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):94:input.markSupported() |==> true
6576:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):95:input |==> null
6577:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):97:new BufferedInputStream(input) |==> null
6578:LVR:POS:0:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):99:20 |==> 0
6579:LVR:POS:NEG:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):99:20 |==> -20
6580:STD:<CALL>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):99:is.mark(20) |==> <NO-OP>
6581:LVR:POS:0:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):100:15 |==> 0
6582:LVR:POS:NEG:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):100:15 |==> -15
6583:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):106:is.read(buffer) |==> 0
6584:STD:<CALL>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):107:is.reset() |==> <NO-OP>
6585:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):112:new String(buffer) |==> null
6586:LVR:FALSE:TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):113:false |==> true
6587:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):113:inputTypeXML = false |==> <NO-OP>
6588:LVR:FALSE:TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):114:false |==> true
6589:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):114:inputTypeBinary = false |==> <NO-OP>
6590:LVR:FALSE:TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):115:false |==> true
6591:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):115:inputTypeJSON = false |==> <NO-OP>
6592:LVR:0:POS:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):117:0 |==> 1
6593:LVR:0:NEG:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):117:0 |==> -1
6594:LVR:POS:0:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):117:5 |==> 0
6595:LVR:POS:NEG:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):117:5 |==> -5
6596:COR:filestart.substring(0, 5).equalsIgnoreCase("<?xml"):TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):117:filestart.substring(0, 5).equalsIgnoreCase("<?xml") |==> false
6597:COR:filestart.substring(0, 5).equalsIgnoreCase("<?xml"):FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):117:filestart.substring(0, 5).equalsIgnoreCase("<?xml") |==> true
6598:LVR:TRUE:FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):118:true |==> false
6599:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):118:inputTypeXML = true |==> <NO-OP>
6600:COR:filestart.startsWith("{"):TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):119:filestart.startsWith("{") |==> false
6601:COR:filestart.startsWith("{"):FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):119:filestart.startsWith("{") |==> true
6602:LVR:TRUE:FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):120:true |==> false
6603:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):120:inputTypeJSON = true |==> <NO-OP>
6604:LVR:0:POS:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):121:0 |==> 1
6605:LVR:0:NEG:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):121:0 |==> -1
6606:LVR:POS:0:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):121:5 |==> 0
6607:LVR:POS:NEG:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):121:5 |==> -5
6608:COR:filestart.substring(0, 5).matches("\\d\\d\\d\\d\\d"):TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):121:filestart.substring(0, 5).matches("\\d\\d\\d\\d\\d") |==> false
6609:COR:filestart.substring(0, 5).matches("\\d\\d\\d\\d\\d"):FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):121:filestart.substring(0, 5).matches("\\d\\d\\d\\d\\d") |==> true
6610:LVR:TRUE:FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):122:true |==> false
6611:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):122:inputTypeBinary = true |==> <NO-OP>
6612:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):123:filestart.contains("<?xml") || filestart.contains("<?XML") |==> filestart.contains("<?xml") != filestart.contains("<?XML")
6613:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):123:filestart.contains("<?xml") || filestart.contains("<?XML") |==> filestart.contains("<?xml")
6614:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):123:filestart.contains("<?xml") || filestart.contains("<?XML") |==> filestart.contains("<?XML")
6615:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):123:filestart.contains("<?xml") || filestart.contains("<?XML") |==> true
6616:LVR:TRUE:FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):124:true |==> false
6617:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):124:inputTypeXML = true |==> <NO-OP>
6618:COR:filestart.contains("<collection"):TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):125:filestart.contains("<collection") |==> false
6619:COR:filestart.contains("<collection"):FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):125:filestart.contains("<collection") |==> true
6620:LVR:TRUE:FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):126:true |==> false
6621:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):126:inputTypeXML = true |==> <NO-OP>
6622:COR:filestart.contains("<record"):TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):127:filestart.contains("<record") |==> false
6623:COR:filestart.contains("<record"):FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):127:filestart.contains("<record") |==> true
6624:LVR:TRUE:FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):128:true |==> false
6625:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):128:inputTypeXML = true |==> <NO-OP>
6626:COR:filestart.contains("<!--"):TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):129:filestart.contains("<!--") |==> false
6627:COR:filestart.contains("<!--"):FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):129:filestart.contains("<!--") |==> true
6628:LVR:TRUE:FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):130:true |==> false
6629:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):130:inputTypeXML = true |==> <NO-OP>
6630:COR:filestart.contains("=LDR  "):TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):131:filestart.contains("=LDR  ") |==> false
6631:COR:filestart.contains("=LDR  "):FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):131:filestart.contains("=LDR  ") |==> true
6632:LVR:TRUE:FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):132:true |==> false
6633:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):132:inputTypeMrk8 = true |==> <NO-OP>
6634:COR:inputTypeXML:TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):135:inputTypeXML |==> false
6635:COR:inputTypeXML:FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):135:inputTypeXML |==> true
6636:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):137:new MarcUnprettyXmlReader(is) |==> null
6637:COR:inputTypeJSON:TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):138:inputTypeJSON |==> false
6638:COR:inputTypeJSON:FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):138:inputTypeJSON |==> true
6639:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):140:new MarcJsonReader(is) |==> null
6640:COR:inputTypeMrk8:TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):141:inputTypeMrk8 |==> false
6641:COR:inputTypeMrk8:FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):141:inputTypeMrk8 |==> true
6642:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):143:new Mrk8StreamReader(is, config.toUtf8()) |==> null
6643:COR:inputTypeBinary:TRUE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):144:inputTypeBinary |==> false
6644:COR:inputTypeBinary:FALSE:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):144:inputTypeBinary |==> true
6645:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):145:new MarcPermissiveStreamReader(is, config.isPermissiveReader(), config.toUtf8(), config.getDefaultEncoding()) |==> null
6646:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.MarcReaderFactory@makeReader(org.marc4j.MarcReaderConfig,java.io.InputStream):152:(reader) |==> null
6647:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):158:r |==> null
6648:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):162:reader != null |==> true
6649:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):162:config.getCombineConsecutiveRecordsFields() != null |==> true
6650:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):162:reader != null && config.getCombineConsecutiveRecordsFields() != null |==> reader != null == (config.getCombineConsecutiveRecordsFields() != null)
6651:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):162:reader != null && config.getCombineConsecutiveRecordsFields() != null |==> false
6652:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):162:reader != null && config.getCombineConsecutiveRecordsFields() != null |==> reader != null
6653:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):162:reader != null && config.getCombineConsecutiveRecordsFields() != null |==> config.getCombineConsecutiveRecordsFields() != null
6654:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):163:reader = new MarcCombiningReader(reader, config.getCombineConsecutiveRecordsFields(), config.getCombineRecordsLeftField(), config.getCombineRecordsRightField()) |==> <NO-OP>
6655:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):169:reader != null |==> true
6656:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):169:reader != null && (config.shouldFilter()) |==> reader != null == (config.shouldFilter())
6657:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):169:reader != null && (config.shouldFilter()) |==> false
6658:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):169:reader != null && (config.shouldFilter()) |==> reader != null
6659:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):169:reader != null && (config.shouldFilter()) |==> (config.shouldFilter())
6660:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):170:reader = new MarcFilteredReader(reader, config.getIncludeIfPresent(), config.getIncludeIfMissing()) |==> <NO-OP>
6661:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):176:config.getDeleteSubfieldSpec() |==> null
6662:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):178:config.getMarcRemapFilename() |==> null
6663:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):180:reader != null |==> true
6664:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):180:marcDeleteSubfields != null |==> true
6665:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):180:marcRemapRecord != null |==> true
6666:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):180:marcDeleteSubfields != null || marcRemapRecord != null |==> marcDeleteSubfields != null != (marcRemapRecord != null)
6667:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):180:marcDeleteSubfields != null || marcRemapRecord != null |==> marcDeleteSubfields != null
6668:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):180:marcDeleteSubfields != null || marcRemapRecord != null |==> marcRemapRecord != null
6669:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):180:marcDeleteSubfields != null || marcRemapRecord != null |==> true
6670:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):180:reader != null && (marcDeleteSubfields != null || marcRemapRecord != null) |==> reader != null == (marcDeleteSubfields != null || marcRemapRecord != null)
6671:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):180:reader != null && (marcDeleteSubfields != null || marcRemapRecord != null) |==> false
6672:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):180:reader != null && (marcDeleteSubfields != null || marcRemapRecord != null) |==> reader != null
6673:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):180:reader != null && (marcDeleteSubfields != null || marcRemapRecord != null) |==> (marcDeleteSubfields != null || marcRemapRecord != null)
6674:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):181:marcRemapRecord != null |==> true
6675:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):183:FileFinderUtil.getFileInputStream(searchDirectories, marcRemapRecord) |==> null
6676:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):186:new Properties() |==> null
6677:STD:<CALL>:<NO-OP>:org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):187:remapProps.load(remapInputStream) |==> <NO-OP>
6678:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):189:reader = new MarcScriptedRecordEditReader(reader, marcDeleteSubfields, remapProps) |==> <NO-OP>
6679:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):197:reader != null |==> true
6680:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):197:reader != null && config.toUtf8() |==> reader != null == config.toUtf8()
6681:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):197:reader != null && config.toUtf8() |==> false
6682:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):197:reader != null && config.toUtf8() |==> reader != null
6683:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):197:reader != null && config.toUtf8() |==> config.toUtf8()
6684:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):197:config.getUnicodeNormalize() != null |==> true
6685:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):197:reader != null && config.toUtf8() && config.getUnicodeNormalize() != null |==> (reader != null && config.toUtf8()) == (config.getUnicodeNormalize() != null)
6686:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):197:reader != null && config.toUtf8() && config.getUnicodeNormalize() != null |==> false
6687:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):197:reader != null && config.toUtf8() && config.getUnicodeNormalize() != null |==> reader != null && config.toUtf8()
6688:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):197:reader != null && config.toUtf8() && config.getUnicodeNormalize() != null |==> config.getUnicodeNormalize() != null
6689:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):198:reader = new MarcTranslatedReader(reader, config.getUnicodeNormalize()) |==> <NO-OP>
6690:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcReaderFactory@decorateMarcReader(org.marc4j.MarcReader,org.marc4j.MarcReaderConfig,java.lang.String[]):201:reader |==> null
6691:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@<init>(org.marc4j.MarcReader,java.lang.String,java.util.Properties):65:reader |==> null
6692:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@<init>(org.marc4j.MarcReader,java.lang.String,java.util.Properties):66:deleteSubfieldStr |==> null
6693:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@<init>(org.marc4j.MarcReader,java.lang.String,java.util.Properties):67:remapProperties |==> null
6694:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@<init>(org.marc4j.MarcReader,java.lang.String):76:reader |==> null
6695:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@<init>(org.marc4j.MarcReader,java.lang.String):77:deleteSubfieldStr |==> null
6696:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@<init>(org.marc4j.MarcReader,java.util.Properties):87:reader |==> null
6697:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@<init>(org.marc4j.MarcReader,java.util.Properties):89:remapProperties |==> null
6698:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@hasNext():98:currentRecord == null |==> false
6699:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@hasNext():99:currentRecord = next() |==> <NO-OP>
6700:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@hasNext():101:currentRecord != null |==> true
6701:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@next():111:currentRecord != null |==> true
6702:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@next():112:currentRecord |==> null
6703:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@next():113:currentRecord = null |==> <NO-OP>
6704:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@next():114:return tmp; |==> <NO-OP>
6705:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@next():117:currentRecord == null |==> false
6706:COR:reader.hasNext():TRUE:org.marc4j.MarcScriptedRecordEditReader@next():118:reader.hasNext() |==> false
6707:COR:reader.hasNext():FALSE:org.marc4j.MarcScriptedRecordEditReader@next():118:reader.hasNext() |==> true
6708:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@next():119:return null; |==> <NO-OP>
6709:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@next():124:rec = reader.next() |==> <NO-OP>
6710:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@next():128:deleteSubfieldsSpec != null |==> true
6711:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@next():129:deleteSubfields(rec) |==> <NO-OP>
6712:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@next():131:remapProperties != null |==> true
6713:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@next():132:remapRecord(rec) |==> false
6714:LVR:FALSE:TRUE:org.marc4j.MarcScriptedRecordEditReader@next():133:false |==> true
6715:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@next():133:keepRecord == false |==> false
6716:ROR:==(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@next():133:keepRecord == false |==> keepRecord
6717:ROR:==(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@next():133:keepRecord == false |==> false
6718:STD:<CONT>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@next():136:continue; |==> <NO-OP>
6719:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@next():139:currentRecord = rec |==> <NO-OP>
6720:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@next():141:currentRecord |==> null
6721:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):145:deleteSubfieldsSpec.split(":") |==> null
6722:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):147:0 |==> 1
6723:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):147:0 |==> -1
6724:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):147:3 |==> 0
6725:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):147:3 |==> -3
6726:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):149:3 |==> 0
6727:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):149:3 |==> -3
6728:ROR:>(int,int):!=(int,int):org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):149:fieldSpec.length() > 3 |==> fieldSpec.length() != 3
6729:ROR:>(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):149:fieldSpec.length() > 3 |==> fieldSpec.length() >= 3
6730:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):149:fieldSpec.length() > 3 |==> false
6731:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):150:3 |==> 0
6732:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):150:3 |==> -3
6733:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):150:subfield = fieldSpec.substring(3) |==> <NO-OP>
6734:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):152:rec.getVariableFields(tag) |==> null
6735:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):155:(DataField)field |==> null
6736:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):156:subfield != null |==> true
6737:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):157:0 |==> 1
6738:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):157:0 |==> -1
6739:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):158:sfs != null |==> true
6740:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):158:0 |==> 1
6741:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):158:0 |==> -1
6742:ROR:!=(int,int):<(int,int):org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):158:sfs.size() != 0 |==> sfs.size() < 0
6743:ROR:!=(int,int):>(int,int):org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):158:sfs.size() != 0 |==> sfs.size() > 0
6744:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):158:sfs.size() != 0 |==> true
6745:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):158:sfs != null && sfs.size() != 0 |==> sfs != null == (sfs.size() != 0)
6746:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):158:sfs != null && sfs.size() != 0 |==> false
6747:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):158:sfs != null && sfs.size() != 0 |==> sfs != null
6748:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):158:sfs != null && sfs.size() != 0 |==> sfs.size() != 0
6749:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):159:rec.removeVariableField(df) |==> <NO-OP>
6750:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):161:df.removeSubfield(sf) |==> <NO-OP>
6751:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):163:rec.addVariableField(df) |==> <NO-OP>
6752:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@deleteSubfields(org.marc4j.marc.Record):166:rec.removeVariableField(df) |==> <NO-OP>
6753:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):174:rec.getVariableFields() |==> null
6754:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):175:new ArrayList<VariableField>() |==> null
6755:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):176:new ArrayList<VariableField>() |==> null
6756:LVR:TRUE:FALSE:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):177:true |==> false
6757:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):179:field.getTag() |==> null
6758:EVR:<PLUS>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):180:tag + "_0" |==> null
6759:COR:remapProperties.containsKey(tagPlus0):TRUE:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):181:remapProperties.containsKey(tagPlus0) |==> false
6760:COR:remapProperties.containsKey(tagPlus0):FALSE:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):181:remapProperties.containsKey(tagPlus0) |==> true
6761:COR:Verifier.isControlNumberField(tag):TRUE:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):182:Verifier.isControlNumberField(tag) |==> false
6762:COR:Verifier.isControlNumberField(tag):FALSE:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):182:Verifier.isControlNumberField(tag) |==> true
6763:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):183:0 |==> 1
6764:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):183:0 |==> -1
6765:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):184:remapProperties.getProperty(tag + "_" + i) |==> null
6766:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):185:remapString.split("=>") |==> null
6767:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):186:0 |==> 1
6768:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):186:0 |==> -1
6769:COR:eval(mapParts[0], field, rec):TRUE:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):186:eval(mapParts[0], field, rec) |==> false
6770:COR:eval(mapParts[0], field, rec):FALSE:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):186:eval(mapParts[0], field, rec) |==> true
6771:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):187:1 |==> 0
6772:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):187:1 |==> -1
6773:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):187:keepRecord &= process(mapParts[1], field, null, fToDelete, fToInsert, rec) |==> <NO-OP>
6774:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):194:new ArrayList<Subfield>() |==> null
6775:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):195:0 |==> 1
6776:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):195:0 |==> -1
6777:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):196:remapProperties.getProperty(tag + "_" + i) |==> null
6778:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):197:remapString.split("=>") |==> null
6779:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):198:0 |==> 1
6780:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):198:0 |==> -1
6781:COR:eval(mapParts[0], field, rec):TRUE:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):198:eval(mapParts[0], field, rec) |==> false
6782:COR:eval(mapParts[0], field, rec):FALSE:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):198:eval(mapParts[0], field, rec) |==> true
6783:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):199:1 |==> 0
6784:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):199:1 |==> -1
6785:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):199:keepRecord &= process(mapParts[1], field, sfToDelete, fToDelete, fToInsert, rec) |==> <NO-OP>
6786:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):204:0 |==> 1
6787:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):204:0 |==> -1
6788:ROR:!=(int,int):<(int,int):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):204:sfToDelete.size() != 0 |==> sfToDelete.size() < 0
6789:ROR:!=(int,int):>(int,int):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):204:sfToDelete.size() != 0 |==> sfToDelete.size() > 0
6790:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):204:sfToDelete.size() != 0 |==> true
6791:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):206:((DataField)field).removeSubfield(sf) |==> <NO-OP>
6792:COR:keepRecord:TRUE:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):211:keepRecord |==> false
6793:COR:keepRecord:FALSE:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):211:keepRecord |==> true
6794:STD:<BREAK>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):212:break; |==> <NO-OP>
6795:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):216:keepRecord && remapProperties.containsKey("tagPlus0") |==> keepRecord == remapProperties.containsKey("tagPlus0")
6796:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):216:keepRecord && remapProperties.containsKey("tagPlus0") |==> false
6797:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):216:keepRecord && remapProperties.containsKey("tagPlus0") |==> keepRecord
6798:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):216:keepRecord && remapProperties.containsKey("tagPlus0") |==> remapProperties.containsKey("tagPlus0")
6799:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):218:0 |==> 1
6800:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):218:0 |==> -1
6801:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):219:remapProperties.getProperty("once_" + i) |==> null
6802:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):220:remapString.split("=>") |==> null
6803:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):221:0 |==> 1
6804:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):221:0 |==> -1
6805:COR:eval(mapParts[0], null, rec):TRUE:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):221:eval(mapParts[0], null, rec) |==> false
6806:COR:eval(mapParts[0], null, rec):FALSE:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):221:eval(mapParts[0], null, rec) |==> true
6807:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):222:1 |==> 0
6808:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):222:1 |==> -1
6809:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):222:keepRecord &= process(mapParts[1], null, null, fToDelete, fToInsert, rec) |==> <NO-OP>
6810:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):226:0 |==> 1
6811:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):226:0 |==> -1
6812:ROR:!=(int,int):<(int,int):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):226:fToDelete.size() != 0 |==> fToDelete.size() < 0
6813:ROR:!=(int,int):>(int,int):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):226:fToDelete.size() != 0 |==> fToDelete.size() > 0
6814:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):226:fToDelete.size() != 0 |==> true
6815:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):226:keepRecord && fToDelete.size() != 0 |==> keepRecord == (fToDelete.size() != 0)
6816:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):226:keepRecord && fToDelete.size() != 0 |==> false
6817:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):226:keepRecord && fToDelete.size() != 0 |==> keepRecord
6818:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):226:keepRecord && fToDelete.size() != 0 |==> fToDelete.size() != 0
6819:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):228:rec.removeVariableField(field) |==> <NO-OP>
6820:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):231:0 |==> 1
6821:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):231:0 |==> -1
6822:ROR:!=(int,int):<(int,int):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):231:fToInsert.size() != 0 |==> fToInsert.size() < 0
6823:ROR:!=(int,int):>(int,int):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):231:fToInsert.size() != 0 |==> fToInsert.size() > 0
6824:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):231:fToInsert.size() != 0 |==> true
6825:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):231:keepRecord && fToInsert.size() != 0 |==> keepRecord == (fToInsert.size() != 0)
6826:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):231:keepRecord && fToInsert.size() != 0 |==> false
6827:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):231:keepRecord && fToInsert.size() != 0 |==> keepRecord
6828:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):231:keepRecord && fToInsert.size() != 0 |==> fToInsert.size() != 0
6829:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):234:0 |==> 1
6830:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):234:0 |==> -1
6831:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):236:0 |==> 1
6832:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):236:0 |==> -1
6833:ROR:>=(int,int):==(int,int):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):236:df.getTag().compareTo(field.getTag()) >= 0 |==> df.getTag().compareTo(field.getTag()) == 0
6834:ROR:>=(int,int):>(int,int):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):236:df.getTag().compareTo(field.getTag()) >= 0 |==> df.getTag().compareTo(field.getTag()) > 0
6835:ROR:>=(int,int):TRUE(int,int):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):236:df.getTag().compareTo(field.getTag()) >= 0 |==> true
6836:STD:<BREAK>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):237:break; |==> <NO-OP>
6837:STD:<INC>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):239:index++ |==> <NO-OP>
6838:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):241:rec.getDataFields().add(index, (DataField)field) |==> <NO-OP>
6839:COR:field.getTag().equals("001"):TRUE:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):242:field.getTag().equals("001") |==> false
6840:COR:field.getTag().equals("001"):FALSE:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):242:field.getTag().equals("001") |==> true
6841:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):243:rec.addVariableField(field) |==> <NO-OP>
6842:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):245:0 |==> 1
6843:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):245:0 |==> -1
6844:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):247:0 |==> 1
6845:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):247:0 |==> -1
6846:ROR:>=(int,int):==(int,int):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):247:df.getTag().compareTo(field.getTag()) >= 0 |==> df.getTag().compareTo(field.getTag()) == 0
6847:ROR:>=(int,int):>(int,int):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):247:df.getTag().compareTo(field.getTag()) >= 0 |==> df.getTag().compareTo(field.getTag()) > 0
6848:ROR:>=(int,int):TRUE(int,int):org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):247:df.getTag().compareTo(field.getTag()) >= 0 |==> true
6849:STD:<BREAK>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):248:break; |==> <NO-OP>
6850:STD:<INC>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):250:index++ |==> <NO-OP>
6851:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):252:rec.getControlFields().add(index, (ControlField)field) |==> <NO-OP>
6852:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@remapRecord(org.marc4j.marc.Record):256:keepRecord |==> false
6853:COR:conditional.startsWith("true()"):TRUE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):261:conditional.startsWith("true()") |==> false
6854:COR:conditional.startsWith("true()"):FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):261:conditional.startsWith("true()") |==> true
6855:LVR:TRUE:FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):262:true |==> false
6856:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):262:return Config.__M_NO == 0 && Config.COVERED(6855, 6855) ? true : Config.__M_NO == 6855 ? false : true; |==> <NO-OP>
6857:COR:conditional.startsWith("not("):TRUE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):263:conditional.startsWith("not(") |==> false
6858:COR:conditional.startsWith("not("):FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):263:conditional.startsWith("not(") |==> true
6859:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):264:getOneConditional(conditional) |==> null
6860:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):265:arg != null |==> true
6861:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):266:return !eval(arg, field, record); |==> <NO-OP>
6862:COR:conditional.startsWith("indicatormatches("):TRUE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):268:conditional.startsWith("indicatormatches(") |==> false
6863:COR:conditional.startsWith("indicatormatches("):FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):268:conditional.startsWith("indicatormatches(") |==> true
6864:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):269:getTwoArgs(conditional) |==> null
6865:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:field != null |==> true
6866:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:field != null && field instanceof DataField |==> field != null == field instanceof DataField
6867:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:field != null && field instanceof DataField |==> false
6868:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:field != null && field instanceof DataField |==> field != null
6869:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:field != null && field instanceof DataField |==> field instanceof DataField
6870:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:2 |==> 0
6871:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:2 |==> -2
6872:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:args.length == 2 |==> args.length <= 2
6873:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:args.length == 2 |==> args.length >= 2
6874:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:args.length == 2 |==> false
6875:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:field != null && field instanceof DataField && args.length == 2 |==> (field != null && field instanceof DataField) == (args.length == 2)
6876:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:field != null && field instanceof DataField && args.length == 2 |==> false
6877:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:field != null && field instanceof DataField && args.length == 2 |==> field != null && field instanceof DataField
6878:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:field != null && field instanceof DataField && args.length == 2 |==> args.length == 2
6879:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:0 |==> 1
6880:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:0 |==> -1
6881:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:1 |==> 0
6882:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:1 |==> -1
6883:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:args[0].length() == 1 |==> args[0].length() <= 1
6884:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:args[0].length() == 1 |==> args[0].length() >= 1
6885:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:args[0].length() == 1 |==> false
6886:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> (field != null && field instanceof DataField && args.length == 2) == (args[0].length() == 1)
6887:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> false
6888:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> field != null && field instanceof DataField && args.length == 2
6889:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> args[0].length() == 1
6890:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:1 |==> 0
6891:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:1 |==> -1
6892:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):271:1 |==> 0
6893:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):271:1 |==> -1
6894:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:args[1].length() == 1 |==> args[1].length() <= 1
6895:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:args[1].length() == 1 |==> args[1].length() >= 1
6896:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):271:args[1].length() == 1 |==> false
6897:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 && args[1].length() == 1 |==> (field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1) == (args[1].length() == 1)
6898:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 && args[1].length() == 1 |==> false
6899:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 && args[1].length() == 1 |==> field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1
6900:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):270:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 && args[1].length() == 1 |==> args[1].length() == 1
6901:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):272:((DataField)field).getIndicator1() |==> 0
6902:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):273:((DataField)field).getIndicator2() |==> 0
6903:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:0 |==> 1
6904:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:0 |==> -1
6905:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:0 |==> 1
6906:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:0 |==> -1
6907:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:args[0].charAt(0) == '*' |==> args[0].charAt(0) <= '*'
6908:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:args[0].charAt(0) == '*' |==> args[0].charAt(0) >= '*'
6909:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:args[0].charAt(0) == '*' |==> false
6910:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:0 |==> 1
6911:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:0 |==> -1
6912:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:0 |==> 1
6913:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:0 |==> -1
6914:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:args[0].charAt(0) == indicator1 |==> args[0].charAt(0) <= indicator1
6915:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:args[0].charAt(0) == indicator1 |==> args[0].charAt(0) >= indicator1
6916:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:args[0].charAt(0) == indicator1 |==> false
6917:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:args[0].charAt(0) == '*' || args[0].charAt(0) == indicator1 |==> args[0].charAt(0) == '*' != (args[0].charAt(0) == indicator1)
6918:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:args[0].charAt(0) == '*' || args[0].charAt(0) == indicator1 |==> args[0].charAt(0) == '*'
6919:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:args[0].charAt(0) == '*' || args[0].charAt(0) == indicator1 |==> args[0].charAt(0) == indicator1
6920:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:args[0].charAt(0) == '*' || args[0].charAt(0) == indicator1 |==> true
6921:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:1 |==> 0
6922:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:1 |==> -1
6923:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):275:0 |==> 1
6924:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):275:0 |==> -1
6925:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:args[1].charAt(0) == '*' |==> args[1].charAt(0) <= '*'
6926:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:args[1].charAt(0) == '*' |==> args[1].charAt(0) >= '*'
6927:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):275:args[1].charAt(0) == '*' |==> false
6928:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):275:1 |==> 0
6929:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):275:1 |==> -1
6930:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):275:0 |==> 1
6931:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):275:0 |==> -1
6932:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):275:args[1].charAt(0) == indicator2 |==> args[1].charAt(0) <= indicator2
6933:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):275:args[1].charAt(0) == indicator2 |==> args[1].charAt(0) >= indicator2
6934:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):275:args[1].charAt(0) == indicator2 |==> false
6935:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:args[1].charAt(0) == '*' || args[1].charAt(0) == indicator2 |==> args[1].charAt(0) == '*' != (args[1].charAt(0) == indicator2)
6936:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:args[1].charAt(0) == '*' || args[1].charAt(0) == indicator2 |==> args[1].charAt(0) == '*'
6937:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):275:args[1].charAt(0) == '*' || args[1].charAt(0) == indicator2 |==> args[1].charAt(0) == indicator2
6938:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):275:args[1].charAt(0) == '*' || args[1].charAt(0) == indicator2 |==> true
6939:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:(args[0].charAt(0) == '*' || args[0].charAt(0) == indicator1) && (args[1].charAt(0) == '*' || args[1].charAt(0) == indicator2) |==> (args[0].charAt(0) == '*' || args[0].charAt(0) == indicator1) == (args[1].charAt(0) == '*' || args[1].charAt(0) == indicator2)
6940:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:(args[0].charAt(0) == '*' || args[0].charAt(0) == indicator1) && (args[1].charAt(0) == '*' || args[1].charAt(0) == indicator2) |==> false
6941:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:(args[0].charAt(0) == '*' || args[0].charAt(0) == indicator1) && (args[1].charAt(0) == '*' || args[1].charAt(0) == indicator2) |==> (args[0].charAt(0) == '*' || args[0].charAt(0) == indicator1)
6942:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):274:(args[0].charAt(0) == '*' || args[0].charAt(0) == indicator1) && (args[1].charAt(0) == '*' || args[1].charAt(0) == indicator2) |==> (args[1].charAt(0) == '*' || args[1].charAt(0) == indicator2)
6943:LVR:TRUE:FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):276:true |==> false
6944:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):276:return Config.__M_NO == 0 && Config.COVERED(6943, 6943) ? true : Config.__M_NO == 6943 ? false : true; |==> <NO-OP>
6945:LVR:FALSE:TRUE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):278:false |==> true
6946:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):278:return Config.__M_NO == 0 && Config.COVERED(6945, 6945) ? false : Config.__M_NO == 6945 ? true : false; |==> <NO-OP>
6947:COR:conditional.startsWith("subfieldmatches("):TRUE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):280:conditional.startsWith("subfieldmatches(") |==> false
6948:COR:conditional.startsWith("subfieldmatches("):FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):280:conditional.startsWith("subfieldmatches(") |==> true
6949:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):281:getTwoArgs(conditional) |==> null
6950:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:field != null |==> true
6951:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:field != null && field instanceof DataField |==> field != null == field instanceof DataField
6952:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:field != null && field instanceof DataField |==> false
6953:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:field != null && field instanceof DataField |==> field != null
6954:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:field != null && field instanceof DataField |==> field instanceof DataField
6955:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:2 |==> 0
6956:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:2 |==> -2
6957:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:args.length == 2 |==> args.length <= 2
6958:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:args.length == 2 |==> args.length >= 2
6959:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:args.length == 2 |==> false
6960:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:field != null && field instanceof DataField && args.length == 2 |==> (field != null && field instanceof DataField) == (args.length == 2)
6961:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:field != null && field instanceof DataField && args.length == 2 |==> false
6962:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:field != null && field instanceof DataField && args.length == 2 |==> field != null && field instanceof DataField
6963:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:field != null && field instanceof DataField && args.length == 2 |==> args.length == 2
6964:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:0 |==> 1
6965:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:0 |==> -1
6966:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:1 |==> 0
6967:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:1 |==> -1
6968:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:args[0].length() == 1 |==> args[0].length() <= 1
6969:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:args[0].length() == 1 |==> args[0].length() >= 1
6970:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:args[0].length() == 1 |==> false
6971:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> (field != null && field instanceof DataField && args.length == 2) == (args[0].length() == 1)
6972:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> false
6973:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> field != null && field instanceof DataField && args.length == 2
6974:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):282:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> args[0].length() == 1
6975:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):283:0 |==> 1
6976:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):283:0 |==> -1
6977:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):283:0 |==> 1
6978:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):283:0 |==> -1
6979:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):285:1 |==> 0
6980:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):285:1 |==> -1
6981:COR:sf.getData().matches(args[1]):TRUE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):285:sf.getData().matches(args[1]) |==> false
6982:COR:sf.getData().matches(args[1]):FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):285:sf.getData().matches(args[1]) |==> true
6983:LVR:TRUE:FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):286:true |==> false
6984:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):286:return Config.__M_NO == 0 && Config.COVERED(6983, 6983) ? true : Config.__M_NO == 6983 ? false : true; |==> <NO-OP>
6985:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):289:field != null |==> true
6986:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):289:field != null && field instanceof ControlField |==> field != null == field instanceof ControlField
6987:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):289:field != null && field instanceof ControlField |==> false
6988:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):289:field != null && field instanceof ControlField |==> field != null
6989:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):289:field != null && field instanceof ControlField |==> field instanceof ControlField
6990:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):289:2 |==> 0
6991:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):289:2 |==> -2
6992:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):289:args.length == 2 |==> args.length <= 2
6993:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):289:args.length == 2 |==> args.length >= 2
6994:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):289:args.length == 2 |==> false
6995:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):289:field != null && field instanceof ControlField && args.length == 2 |==> (field != null && field instanceof ControlField) == (args.length == 2)
6996:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):289:field != null && field instanceof ControlField && args.length == 2 |==> false
6997:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):289:field != null && field instanceof ControlField && args.length == 2 |==> field != null && field instanceof ControlField
6998:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):289:field != null && field instanceof ControlField && args.length == 2 |==> args.length == 2
6999:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):290:1 |==> 0
7000:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):290:1 |==> -1
7001:COR:((ControlField)field).getData().matches(args[1]):TRUE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):290:((ControlField)field).getData().matches(args[1]) |==> false
7002:COR:((ControlField)field).getData().matches(args[1]):FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):290:((ControlField)field).getData().matches(args[1]) |==> true
7003:LVR:TRUE:FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):291:true |==> false
7004:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):291:return Config.__M_NO == 0 && Config.COVERED(7003, 7003) ? true : Config.__M_NO == 7003 ? false : true; |==> <NO-OP>
7005:COR:conditional.startsWith("subfieldcontains("):TRUE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):294:conditional.startsWith("subfieldcontains(") |==> false
7006:COR:conditional.startsWith("subfieldcontains("):FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):294:conditional.startsWith("subfieldcontains(") |==> true
7007:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):295:getTwoArgs(conditional) |==> null
7008:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:field != null |==> true
7009:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:field != null && field instanceof DataField |==> field != null == field instanceof DataField
7010:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:field != null && field instanceof DataField |==> false
7011:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:field != null && field instanceof DataField |==> field != null
7012:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:field != null && field instanceof DataField |==> field instanceof DataField
7013:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:2 |==> 0
7014:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:2 |==> -2
7015:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:args.length == 2 |==> args.length <= 2
7016:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:args.length == 2 |==> args.length >= 2
7017:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:args.length == 2 |==> false
7018:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:field != null && field instanceof DataField && args.length == 2 |==> (field != null && field instanceof DataField) == (args.length == 2)
7019:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:field != null && field instanceof DataField && args.length == 2 |==> false
7020:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:field != null && field instanceof DataField && args.length == 2 |==> field != null && field instanceof DataField
7021:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:field != null && field instanceof DataField && args.length == 2 |==> args.length == 2
7022:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:0 |==> 1
7023:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:0 |==> -1
7024:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:1 |==> 0
7025:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:1 |==> -1
7026:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:args[0].length() == 1 |==> args[0].length() <= 1
7027:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:args[0].length() == 1 |==> args[0].length() >= 1
7028:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:args[0].length() == 1 |==> false
7029:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> (field != null && field instanceof DataField && args.length == 2) == (args[0].length() == 1)
7030:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> false
7031:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> field != null && field instanceof DataField && args.length == 2
7032:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):296:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> args[0].length() == 1
7033:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):297:0 |==> 1
7034:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):297:0 |==> -1
7035:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):297:0 |==> 1
7036:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):297:0 |==> -1
7037:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):299:1 |==> 0
7038:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):299:1 |==> -1
7039:COR:sf.getData().contains(args[1]):TRUE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):299:sf.getData().contains(args[1]) |==> false
7040:COR:sf.getData().contains(args[1]):FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):299:sf.getData().contains(args[1]) |==> true
7041:LVR:TRUE:FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):300:true |==> false
7042:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):300:return Config.__M_NO == 0 && Config.COVERED(7041, 7041) ? true : Config.__M_NO == 7041 ? false : true; |==> <NO-OP>
7043:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):303:field != null |==> true
7044:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):303:field != null && field instanceof ControlField |==> field != null == field instanceof ControlField
7045:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):303:field != null && field instanceof ControlField |==> false
7046:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):303:field != null && field instanceof ControlField |==> field != null
7047:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):303:field != null && field instanceof ControlField |==> field instanceof ControlField
7048:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):303:2 |==> 0
7049:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):303:2 |==> -2
7050:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):303:args.length == 2 |==> args.length <= 2
7051:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):303:args.length == 2 |==> args.length >= 2
7052:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):303:args.length == 2 |==> false
7053:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):303:field != null && field instanceof ControlField && args.length == 2 |==> (field != null && field instanceof ControlField) == (args.length == 2)
7054:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):303:field != null && field instanceof ControlField && args.length == 2 |==> false
7055:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):303:field != null && field instanceof ControlField && args.length == 2 |==> field != null && field instanceof ControlField
7056:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):303:field != null && field instanceof ControlField && args.length == 2 |==> args.length == 2
7057:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):304:1 |==> 0
7058:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):304:1 |==> -1
7059:COR:((ControlField)field).getData().contains(args[1]):TRUE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):304:((ControlField)field).getData().contains(args[1]) |==> false
7060:COR:((ControlField)field).getData().contains(args[1]):FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):304:((ControlField)field).getData().contains(args[1]) |==> true
7061:LVR:TRUE:FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):305:true |==> false
7062:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):305:return Config.__M_NO == 0 && Config.COVERED(7061, 7061) ? true : Config.__M_NO == 7061 ? false : true; |==> <NO-OP>
7063:COR:conditional.startsWith("subfieldexists("):TRUE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):308:conditional.startsWith("subfieldexists(") |==> false
7064:COR:conditional.startsWith("subfieldexists("):FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):308:conditional.startsWith("subfieldexists(") |==> true
7065:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):309:getOneArg(conditional) |==> null
7066:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):310:field != null |==> true
7067:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):310:field != null && field instanceof DataField |==> field != null == field instanceof DataField
7068:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):310:field != null && field instanceof DataField |==> false
7069:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):310:field != null && field instanceof DataField |==> field != null
7070:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):310:field != null && field instanceof DataField |==> field instanceof DataField
7071:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):310:1 |==> 0
7072:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):310:1 |==> -1
7073:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):310:arg.length() == 1 |==> arg.length() <= 1
7074:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):310:arg.length() == 1 |==> arg.length() >= 1
7075:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):310:arg.length() == 1 |==> false
7076:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):310:field != null && field instanceof DataField && arg.length() == 1 |==> (field != null && field instanceof DataField) == (arg.length() == 1)
7077:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):310:field != null && field instanceof DataField && arg.length() == 1 |==> false
7078:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):310:field != null && field instanceof DataField && arg.length() == 1 |==> field != null && field instanceof DataField
7079:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):310:field != null && field instanceof DataField && arg.length() == 1 |==> arg.length() == 1
7080:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):311:0 |==> 1
7081:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):311:0 |==> -1
7082:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):312:0 |==> 1
7083:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):312:0 |==> -1
7084:ROR:>(int,int):!=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):312:subfields.size() > 0 |==> subfields.size() != 0
7085:ROR:>(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):312:subfields.size() > 0 |==> subfields.size() >= 0
7086:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):312:subfields.size() > 0 |==> false
7087:LVR:TRUE:FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):313:true |==> false
7088:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):313:return Config.__M_NO == 0 && Config.COVERED(7087, 7087) ? true : Config.__M_NO == 7087 ? false : true; |==> <NO-OP>
7089:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):315:field != null |==> true
7090:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):315:field != null && field instanceof ControlField |==> field != null == field instanceof ControlField
7091:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):315:field != null && field instanceof ControlField |==> false
7092:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):315:field != null && field instanceof ControlField |==> field != null
7093:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):315:field != null && field instanceof ControlField |==> field instanceof ControlField
7094:LVR:TRUE:FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):316:true |==> false
7095:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):316:return Config.__M_NO == 0 && Config.COVERED(7094, 7094) ? true : Config.__M_NO == 7094 ? false : true; |==> <NO-OP>
7096:COR:conditional.startsWith("and("):TRUE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):318:conditional.startsWith("and(") |==> false
7097:COR:conditional.startsWith("and("):FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):318:conditional.startsWith("and(") |==> true
7098:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):319:getTwoConditionals(conditional) |==> null
7099:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):320:2 |==> 0
7100:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):320:2 |==> -2
7101:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):320:args.length == 2 |==> args.length <= 2
7102:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):320:args.length == 2 |==> args.length >= 2
7103:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):320:args.length == 2 |==> false
7104:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):321:0 |==> 1
7105:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):321:0 |==> -1
7106:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):321:1 |==> 0
7107:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):321:1 |==> -1
7108:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):321:eval(args[0], field, record) && eval(args[1], field, record) |==> eval(args[0], field, record) == eval(args[1], field, record)
7109:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):321:eval(args[0], field, record) && eval(args[1], field, record) |==> false
7110:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):321:eval(args[0], field, record) && eval(args[1], field, record) |==> eval(args[0], field, record)
7111:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):321:eval(args[0], field, record) && eval(args[1], field, record) |==> eval(args[1], field, record)
7112:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):321:return Config.__M_NO == 7111 ? eval(args[1], field, record) : Config.__M_NO == 7110 ? eval(args[0], field, record) : Config.__M_NO == 7109 ? false : Config.__M_NO == 7108 ? eval(args[0], field, record) == eval(args[1], field, record) : Config.__M_NO == 0 && Config.COVERED(7108, 7111) ? eval(args[0], field, record) && eval(args[1], field, record) : eval(args[Config.__M_NO == 0 && Config.COVERED(7104, 7105) ? 0 : Config.__M_NO == 7105 ? -1 : Config.__M_NO == 7104 ? 1 : 0], field, record) && eval(args[Config.__M_NO == 0 && Config.COVERED(7106, 7107) ? 1 : Config.__M_NO == 7107 ? -1 : Config.__M_NO == 7106 ? 0 : 1], field, record); |==> <NO-OP>
7113:COR:conditional.startsWith("or("):TRUE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):323:conditional.startsWith("or(") |==> false
7114:COR:conditional.startsWith("or("):FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):323:conditional.startsWith("or(") |==> true
7115:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):324:getTwoConditionals(conditional) |==> null
7116:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):325:2 |==> 0
7117:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):325:2 |==> -2
7118:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):325:args.length == 2 |==> args.length <= 2
7119:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):325:args.length == 2 |==> args.length >= 2
7120:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):325:args.length == 2 |==> false
7121:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):326:0 |==> 1
7122:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):326:0 |==> -1
7123:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):326:1 |==> 0
7124:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):326:1 |==> -1
7125:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):326:eval(args[0], field, record) || eval(args[1], field, record) |==> eval(args[0], field, record) != eval(args[1], field, record)
7126:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):326:eval(args[0], field, record) || eval(args[1], field, record) |==> eval(args[0], field, record)
7127:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):326:eval(args[0], field, record) || eval(args[1], field, record) |==> eval(args[1], field, record)
7128:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):326:eval(args[0], field, record) || eval(args[1], field, record) |==> true
7129:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):326:return Config.__M_NO == 7128 ? true : Config.__M_NO == 7127 ? eval(args[1], field, record) : Config.__M_NO == 7126 ? eval(args[0], field, record) : Config.__M_NO == 7125 ? eval(args[0], field, record) != eval(args[1], field, record) : Config.__M_NO == 0 && Config.COVERED(7125, 7128) ? eval(args[0], field, record) || eval(args[1], field, record) : eval(args[Config.__M_NO == 0 && Config.COVERED(7121, 7122) ? 0 : Config.__M_NO == 7122 ? -1 : Config.__M_NO == 7121 ? 1 : 0], field, record) || eval(args[Config.__M_NO == 0 && Config.COVERED(7123, 7124) ? 1 : Config.__M_NO == 7124 ? -1 : Config.__M_NO == 7123 ? 0 : 1], field, record); |==> <NO-OP>
7130:COR:conditional.startsWith("fieldexists("):TRUE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):328:conditional.startsWith("fieldexists(") |==> false
7131:COR:conditional.startsWith("fieldexists("):FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):328:conditional.startsWith("fieldexists(") |==> true
7132:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):329:getThreeArgs(conditional) |==> null
7133:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:3 |==> 0
7134:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:3 |==> -3
7135:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:args.length == 3 |==> args.length <= 3
7136:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:args.length == 3 |==> args.length >= 3
7137:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:args.length == 3 |==> false
7138:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:0 |==> 1
7139:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:0 |==> -1
7140:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:args.length == 3 && args[0].matches("[0-9][0-9][0-9]") |==> args.length == 3 == args[0].matches("[0-9][0-9][0-9]")
7141:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:args.length == 3 && args[0].matches("[0-9][0-9][0-9]") |==> false
7142:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:args.length == 3 && args[0].matches("[0-9][0-9][0-9]") |==> args.length == 3
7143:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:args.length == 3 && args[0].matches("[0-9][0-9][0-9]") |==> args[0].matches("[0-9][0-9][0-9]")
7144:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:1 |==> 0
7145:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:1 |==> -1
7146:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:1 |==> 0
7147:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:1 |==> -1
7148:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:args[1].length() == 1 |==> args[1].length() <= 1
7149:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:args[1].length() == 1 |==> args[1].length() >= 1
7150:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:args[1].length() == 1 |==> false
7151:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:args.length == 3 && args[0].matches("[0-9][0-9][0-9]") && args[1].length() == 1 |==> (args.length == 3 && args[0].matches("[0-9][0-9][0-9]")) == (args[1].length() == 1)
7152:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:args.length == 3 && args[0].matches("[0-9][0-9][0-9]") && args[1].length() == 1 |==> false
7153:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:args.length == 3 && args[0].matches("[0-9][0-9][0-9]") && args[1].length() == 1 |==> args.length == 3 && args[0].matches("[0-9][0-9][0-9]")
7154:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):330:args.length == 3 && args[0].matches("[0-9][0-9][0-9]") && args[1].length() == 1 |==> args[1].length() == 1
7155:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):331:0 |==> 1
7156:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):331:0 |==> -1
7157:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):333:1 |==> 0
7158:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):333:1 |==> -1
7159:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):333:0 |==> 1
7160:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):333:0 |==> -1
7161:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):334:2 |==> 0
7162:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):334:2 |==> -2
7163:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):334:2 |==> 0
7164:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):334:2 |==> -2
7165:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):334:sf.getData().equals(args[2]) || sf.getData().matches(args[2]) |==> sf.getData().equals(args[2]) != sf.getData().matches(args[2])
7166:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):334:sf.getData().equals(args[2]) || sf.getData().matches(args[2]) |==> sf.getData().equals(args[2])
7167:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):334:sf.getData().equals(args[2]) || sf.getData().matches(args[2]) |==> sf.getData().matches(args[2])
7168:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):334:sf.getData().equals(args[2]) || sf.getData().matches(args[2]) |==> true
7169:LVR:TRUE:FALSE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):335:true |==> false
7170:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):335:return Config.__M_NO == 0 && Config.COVERED(7169, 7169) ? true : Config.__M_NO == 7169 ? false : true; |==> <NO-OP>
7171:LVR:FALSE:TRUE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):341:false |==> true
7172:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):341:return Config.__M_NO == 0 && Config.COVERED(7171, 7171) ? false : Config.__M_NO == 7171 ? true : false; |==> <NO-OP>
7173:LVR:FALSE:TRUE:org.marc4j.MarcScriptedRecordEditReader@eval(java.lang.String,org.marc4j.marc.VariableField,org.marc4j.marc.Record):343:false |==> true
7174:COR:command.startsWith("replace("):TRUE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):350:command.startsWith("replace(") |==> false
7175:COR:command.startsWith("replace("):FALSE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):350:command.startsWith("replace(") |==> true
7176:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):351:getThreeArgs(command) |==> null
7177:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:field != null |==> true
7178:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:field != null && field instanceof DataField |==> field != null == field instanceof DataField
7179:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:field != null && field instanceof DataField |==> false
7180:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:field != null && field instanceof DataField |==> field != null
7181:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:field != null && field instanceof DataField |==> field instanceof DataField
7182:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:3 |==> 0
7183:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:3 |==> -3
7184:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:args.length == 3 |==> args.length <= 3
7185:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:args.length == 3 |==> args.length >= 3
7186:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:args.length == 3 |==> false
7187:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:field != null && field instanceof DataField && args.length == 3 |==> (field != null && field instanceof DataField) == (args.length == 3)
7188:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:field != null && field instanceof DataField && args.length == 3 |==> false
7189:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:field != null && field instanceof DataField && args.length == 3 |==> field != null && field instanceof DataField
7190:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:field != null && field instanceof DataField && args.length == 3 |==> args.length == 3
7191:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:0 |==> 1
7192:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:0 |==> -1
7193:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:1 |==> 0
7194:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:1 |==> -1
7195:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:args[0].length() == 1 |==> args[0].length() <= 1
7196:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:args[0].length() == 1 |==> args[0].length() >= 1
7197:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:args[0].length() == 1 |==> false
7198:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:field != null && field instanceof DataField && args.length == 3 && args[0].length() == 1 |==> (field != null && field instanceof DataField && args.length == 3) == (args[0].length() == 1)
7199:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:field != null && field instanceof DataField && args.length == 3 && args[0].length() == 1 |==> false
7200:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:field != null && field instanceof DataField && args.length == 3 && args[0].length() == 1 |==> field != null && field instanceof DataField && args.length == 3
7201:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):352:field != null && field instanceof DataField && args.length == 3 && args[0].length() == 1 |==> args[0].length() == 1
7202:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):353:0 |==> 1
7203:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):353:0 |==> -1
7204:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):353:0 |==> 1
7205:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):353:0 |==> -1
7206:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):355:1 |==> 0
7207:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):355:1 |==> -1
7208:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):355:2 |==> 0
7209:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):355:2 |==> -2
7210:COR:newData.equals(sf.getData()):TRUE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):356:newData.equals(sf.getData()) |==> false
7211:COR:newData.equals(sf.getData()):FALSE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):356:newData.equals(sf.getData()) |==> true
7212:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):357:sf.setData(newData) |==> <NO-OP>
7213:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):360:field != null |==> true
7214:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):360:field != null && field instanceof ControlField |==> field != null == field instanceof ControlField
7215:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):360:field != null && field instanceof ControlField |==> false
7216:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):360:field != null && field instanceof ControlField |==> field != null
7217:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):360:field != null && field instanceof ControlField |==> field instanceof ControlField
7218:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):360:3 |==> 0
7219:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):360:3 |==> -3
7220:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):360:args.length == 3 |==> args.length <= 3
7221:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):360:args.length == 3 |==> args.length >= 3
7222:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):360:args.length == 3 |==> false
7223:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):360:field != null && field instanceof ControlField && args.length == 3 |==> (field != null && field instanceof ControlField) == (args.length == 3)
7224:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):360:field != null && field instanceof ControlField && args.length == 3 |==> false
7225:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):360:field != null && field instanceof ControlField && args.length == 3 |==> field != null && field instanceof ControlField
7226:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):360:field != null && field instanceof ControlField && args.length == 3 |==> args.length == 3
7227:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):362:1 |==> 0
7228:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):362:1 |==> -1
7229:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):362:2 |==> 0
7230:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):362:2 |==> -2
7231:COR:newData.equals(((ControlField)field).getData()):TRUE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):363:newData.equals(((ControlField)field).getData()) |==> false
7232:COR:newData.equals(((ControlField)field).getData()):FALSE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):363:newData.equals(((ControlField)field).getData()) |==> true
7233:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):364:((ControlField)field).setData(newData) |==> <NO-OP>
7234:COR:command.startsWith("append("):TRUE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):367:command.startsWith("append(") |==> false
7235:COR:command.startsWith("append("):FALSE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):367:command.startsWith("append(") |==> true
7236:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):368:getTwoArgs(command) |==> null
7237:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:field != null |==> true
7238:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:field != null && field instanceof DataField |==> field != null == field instanceof DataField
7239:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:field != null && field instanceof DataField |==> false
7240:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:field != null && field instanceof DataField |==> field != null
7241:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:field != null && field instanceof DataField |==> field instanceof DataField
7242:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:2 |==> 0
7243:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:2 |==> -2
7244:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:args.length == 2 |==> args.length <= 2
7245:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:args.length == 2 |==> args.length >= 2
7246:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:args.length == 2 |==> false
7247:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:field != null && field instanceof DataField && args.length == 2 |==> (field != null && field instanceof DataField) == (args.length == 2)
7248:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:field != null && field instanceof DataField && args.length == 2 |==> false
7249:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:field != null && field instanceof DataField && args.length == 2 |==> field != null && field instanceof DataField
7250:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:field != null && field instanceof DataField && args.length == 2 |==> args.length == 2
7251:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:0 |==> 1
7252:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:0 |==> -1
7253:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:1 |==> 0
7254:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:1 |==> -1
7255:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:args[0].length() == 1 |==> args[0].length() <= 1
7256:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:args[0].length() == 1 |==> args[0].length() >= 1
7257:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:args[0].length() == 1 |==> false
7258:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> (field != null && field instanceof DataField && args.length == 2) == (args[0].length() == 1)
7259:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> false
7260:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> field != null && field instanceof DataField && args.length == 2
7261:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):369:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> args[0].length() == 1
7262:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):370:0 |==> 1
7263:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):370:0 |==> -1
7264:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):370:0 |==> 1
7265:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):370:0 |==> -1
7266:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):372:1 |==> 0
7267:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):372:1 |==> -1
7268:COR:newData.equals(sf.getData()):TRUE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):373:newData.equals(sf.getData()) |==> false
7269:COR:newData.equals(sf.getData()):FALSE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):373:newData.equals(sf.getData()) |==> true
7270:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):374:sf.setData(newData) |==> <NO-OP>
7271:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):377:field != null |==> true
7272:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):377:field != null && field instanceof ControlField |==> field != null == field instanceof ControlField
7273:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):377:field != null && field instanceof ControlField |==> false
7274:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):377:field != null && field instanceof ControlField |==> field != null
7275:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):377:field != null && field instanceof ControlField |==> field instanceof ControlField
7276:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):377:2 |==> 0
7277:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):377:2 |==> -2
7278:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):377:args.length == 2 |==> args.length <= 2
7279:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):377:args.length == 2 |==> args.length >= 2
7280:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):377:args.length == 2 |==> false
7281:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):377:field != null && field instanceof ControlField && args.length == 2 |==> (field != null && field instanceof ControlField) == (args.length == 2)
7282:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):377:field != null && field instanceof ControlField && args.length == 2 |==> false
7283:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):377:field != null && field instanceof ControlField && args.length == 2 |==> field != null && field instanceof ControlField
7284:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):377:field != null && field instanceof ControlField && args.length == 2 |==> args.length == 2
7285:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):378:1 |==> 0
7286:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):378:1 |==> -1
7287:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):379:((ControlField)field).setData(newData) |==> <NO-OP>
7288:COR:command.startsWith("prepend("):TRUE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):381:command.startsWith("prepend(") |==> false
7289:COR:command.startsWith("prepend("):FALSE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):381:command.startsWith("prepend(") |==> true
7290:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):382:getTwoArgs(command) |==> null
7291:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:field != null |==> true
7292:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:field != null && field instanceof DataField |==> field != null == field instanceof DataField
7293:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:field != null && field instanceof DataField |==> false
7294:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:field != null && field instanceof DataField |==> field != null
7295:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:field != null && field instanceof DataField |==> field instanceof DataField
7296:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:2 |==> 0
7297:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:2 |==> -2
7298:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:args.length == 2 |==> args.length <= 2
7299:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:args.length == 2 |==> args.length >= 2
7300:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:args.length == 2 |==> false
7301:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:field != null && field instanceof DataField && args.length == 2 |==> (field != null && field instanceof DataField) == (args.length == 2)
7302:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:field != null && field instanceof DataField && args.length == 2 |==> false
7303:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:field != null && field instanceof DataField && args.length == 2 |==> field != null && field instanceof DataField
7304:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:field != null && field instanceof DataField && args.length == 2 |==> args.length == 2
7305:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:0 |==> 1
7306:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:0 |==> -1
7307:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:1 |==> 0
7308:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:1 |==> -1
7309:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:args[0].length() == 1 |==> args[0].length() <= 1
7310:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:args[0].length() == 1 |==> args[0].length() >= 1
7311:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:args[0].length() == 1 |==> false
7312:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> (field != null && field instanceof DataField && args.length == 2) == (args[0].length() == 1)
7313:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> false
7314:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> field != null && field instanceof DataField && args.length == 2
7315:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):383:field != null && field instanceof DataField && args.length == 2 && args[0].length() == 1 |==> args[0].length() == 1
7316:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):384:0 |==> 1
7317:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):384:0 |==> -1
7318:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):384:0 |==> 1
7319:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):384:0 |==> -1
7320:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):386:1 |==> 0
7321:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):386:1 |==> -1
7322:COR:newData.equals(sf.getData()):TRUE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):387:newData.equals(sf.getData()) |==> false
7323:COR:newData.equals(sf.getData()):FALSE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):387:newData.equals(sf.getData()) |==> true
7324:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):388:sf.setData(newData) |==> <NO-OP>
7325:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):391:field != null |==> true
7326:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):391:field != null && field instanceof ControlField |==> field != null == field instanceof ControlField
7327:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):391:field != null && field instanceof ControlField |==> false
7328:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):391:field != null && field instanceof ControlField |==> field != null
7329:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):391:field != null && field instanceof ControlField |==> field instanceof ControlField
7330:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):391:2 |==> 0
7331:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):391:2 |==> -2
7332:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):391:args.length == 2 |==> args.length <= 2
7333:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):391:args.length == 2 |==> args.length >= 2
7334:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):391:args.length == 2 |==> false
7335:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):391:field != null && field instanceof ControlField && args.length == 2 |==> (field != null && field instanceof ControlField) == (args.length == 2)
7336:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):391:field != null && field instanceof ControlField && args.length == 2 |==> false
7337:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):391:field != null && field instanceof ControlField && args.length == 2 |==> field != null && field instanceof ControlField
7338:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):391:field != null && field instanceof ControlField && args.length == 2 |==> args.length == 2
7339:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):392:1 |==> 0
7340:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):392:1 |==> -1
7341:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):393:((ControlField)field).setData(newData) |==> <NO-OP>
7342:COR:command.startsWith("deletesubfield("):TRUE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):395:command.startsWith("deletesubfield(") |==> false
7343:COR:command.startsWith("deletesubfield("):FALSE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):395:command.startsWith("deletesubfield(") |==> true
7344:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):396:getOneArg(command) |==> null
7345:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):397:field != null |==> true
7346:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):397:field != null && field instanceof DataField |==> field != null == field instanceof DataField
7347:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):397:field != null && field instanceof DataField |==> false
7348:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):397:field != null && field instanceof DataField |==> field != null
7349:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):397:field != null && field instanceof DataField |==> field instanceof DataField
7350:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):397:1 |==> 0
7351:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):397:1 |==> -1
7352:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):397:arg.length() == 1 |==> arg.length() <= 1
7353:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):397:arg.length() == 1 |==> arg.length() >= 1
7354:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):397:arg.length() == 1 |==> false
7355:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):397:field != null && field instanceof DataField && arg.length() == 1 |==> (field != null && field instanceof DataField) == (arg.length() == 1)
7356:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):397:field != null && field instanceof DataField && arg.length() == 1 |==> false
7357:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):397:field != null && field instanceof DataField && arg.length() == 1 |==> field != null && field instanceof DataField
7358:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):397:field != null && field instanceof DataField && arg.length() == 1 |==> arg.length() == 1
7359:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):398:0 |==> 1
7360:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):398:0 |==> -1
7361:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):400:sfToDelete.add(sf) |==> <NO-OP>
7362:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):402:field != null |==> true
7363:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):402:field != null && field instanceof ControlField |==> field != null == field instanceof ControlField
7364:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):402:field != null && field instanceof ControlField |==> false
7365:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):402:field != null && field instanceof ControlField |==> field != null
7366:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):402:field != null && field instanceof ControlField |==> field instanceof ControlField
7367:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):403:fToDelete.add(field) |==> <NO-OP>
7368:COR:command.startsWith("both("):TRUE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):405:command.startsWith("both(") |==> false
7369:COR:command.startsWith("both("):FALSE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):405:command.startsWith("both(") |==> true
7370:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):406:getTwoConditionals(command) |==> null
7371:LVR:TRUE:FALSE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):408:true |==> false
7372:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):409:2 |==> 0
7373:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):409:2 |==> -2
7374:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):409:args.length == 2 |==> args.length <= 2
7375:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):409:args.length == 2 |==> args.length >= 2
7376:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):409:args.length == 2 |==> false
7377:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):410:0 |==> 1
7378:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):410:0 |==> -1
7379:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):410:returncode = process(args[0], field, sfToDelete, fToDelete, fToInsert, record) |==> <NO-OP>
7380:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):411:1 |==> 0
7381:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):411:1 |==> -1
7382:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):411:returncode &= process(args[1], field, sfToDelete, fToDelete, fToInsert, record) |==> <NO-OP>
7383:COR:command.startsWith("deletefield("):TRUE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):413:command.startsWith("deletefield(") |==> false
7384:COR:command.startsWith("deletefield("):FALSE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):413:command.startsWith("deletefield(") |==> true
7385:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):414:fToDelete.add(field) |==> <NO-OP>
7386:COR:command.startsWith("deleteotherfield("):TRUE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):415:command.startsWith("deleteotherfield(") |==> false
7387:COR:command.startsWith("deleteotherfield("):FALSE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):415:command.startsWith("deleteotherfield(") |==> true
7388:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):416:getThreeArgs(command) |==> null
7389:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:3 |==> 0
7390:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:3 |==> -3
7391:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:args.length == 3 |==> args.length <= 3
7392:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:args.length == 3 |==> args.length >= 3
7393:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:args.length == 3 |==> false
7394:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:0 |==> 1
7395:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:0 |==> -1
7396:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:args.length == 3 && args[0].matches("[0-9][0-9][0-9]") |==> args.length == 3 == args[0].matches("[0-9][0-9][0-9]")
7397:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:args.length == 3 && args[0].matches("[0-9][0-9][0-9]") |==> false
7398:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:args.length == 3 && args[0].matches("[0-9][0-9][0-9]") |==> args.length == 3
7399:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:args.length == 3 && args[0].matches("[0-9][0-9][0-9]") |==> args[0].matches("[0-9][0-9][0-9]")
7400:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:1 |==> 0
7401:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:1 |==> -1
7402:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:1 |==> 0
7403:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:1 |==> -1
7404:ROR:==(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:args[1].length() == 1 |==> args[1].length() <= 1
7405:ROR:==(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:args[1].length() == 1 |==> args[1].length() >= 1
7406:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:args[1].length() == 1 |==> false
7407:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:args.length == 3 && args[0].matches("[0-9][0-9][0-9]") && args[1].length() == 1 |==> (args.length == 3 && args[0].matches("[0-9][0-9][0-9]")) == (args[1].length() == 1)
7408:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:args.length == 3 && args[0].matches("[0-9][0-9][0-9]") && args[1].length() == 1 |==> false
7409:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:args.length == 3 && args[0].matches("[0-9][0-9][0-9]") && args[1].length() == 1 |==> args.length == 3 && args[0].matches("[0-9][0-9][0-9]")
7410:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):417:args.length == 3 && args[0].matches("[0-9][0-9][0-9]") && args[1].length() == 1 |==> args[1].length() == 1
7411:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):418:0 |==> 1
7412:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):418:0 |==> -1
7413:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):419:1 |==> 0
7414:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):419:1 |==> -1
7415:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):419:0 |==> 1
7416:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):419:0 |==> -1
7417:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):421:2 |==> 0
7418:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):421:2 |==> -2
7419:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):421:2 |==> 0
7420:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):421:2 |==> -2
7421:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):421:sf.getData().equals(args[2]) || sf.getData().matches(args[2]) |==> sf.getData().equals(args[2]) != sf.getData().matches(args[2])
7422:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):421:sf.getData().equals(args[2]) || sf.getData().matches(args[2]) |==> sf.getData().equals(args[2])
7423:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):421:sf.getData().equals(args[2]) || sf.getData().matches(args[2]) |==> sf.getData().matches(args[2])
7424:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):421:sf.getData().equals(args[2]) || sf.getData().matches(args[2]) |==> true
7425:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):422:fToDelete.add(vf) |==> <NO-OP>
7426:COR:command.startsWith("insertfield("):TRUE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):427:command.startsWith("insertfield(") |==> false
7427:COR:command.startsWith("insertfield("):FALSE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):427:command.startsWith("insertfield(") |==> true
7428:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):428:getOneArg(command) |==> null
7429:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):429:createFieldFromString(arg, null) |==> null
7430:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):430:vf != null |==> true
7431:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):431:fToInsert.add(vf) |==> <NO-OP>
7432:COR:command.startsWith("insertparameterizedfield("):TRUE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):433:command.startsWith("insertparameterizedfield(") |==> false
7433:COR:command.startsWith("insertparameterizedfield("):FALSE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):433:command.startsWith("insertparameterizedfield(") |==> true
7434:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):434:getThreeArgs(command) |==> null
7435:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):435:2 |==> 0
7436:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):435:2 |==> -2
7437:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):437:field != null |==> true
7438:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):437:field != null && field instanceof DataField |==> field != null == field instanceof DataField
7439:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):437:field != null && field instanceof DataField |==> false
7440:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):437:field != null && field instanceof DataField |==> field != null
7441:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):437:field != null && field instanceof DataField |==> field instanceof DataField
7442:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):438:1 |==> 0
7443:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):438:1 |==> -1
7444:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):438:0 |==> 1
7445:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):438:0 |==> -1
7446:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):440:p.matcher(((ControlField)field).getData()) |==> null
7447:COR:m.matches():TRUE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):443:m.matches() |==> false
7448:COR:m.matches():FALSE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):443:m.matches() |==> true
7449:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):444:0 |==> 1
7450:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):444:0 |==> -1
7451:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):446:0 |==> 1
7452:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):446:0 |==> -1
7453:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):448:vf != null |==> true
7454:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):449:fToInsert.add(vf) |==> <NO-OP>
7455:COR:command.startsWith("reject()"):TRUE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):451:command.startsWith("reject()") |==> false
7456:COR:command.startsWith("reject()"):FALSE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):451:command.startsWith("reject()") |==> true
7457:LVR:FALSE:TRUE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):452:false |==> true
7458:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):452:return Config.__M_NO == 0 && Config.COVERED(7457, 7457) ? false : Config.__M_NO == 7457 ? true : false; |==> <NO-OP>
7459:LVR:TRUE:FALSE:org.marc4j.MarcScriptedRecordEditReader@process(java.lang.String,org.marc4j.marc.VariableField,java.util.List<org.marc4j.marc.Subfield>,java.util.List<org.marc4j.marc.VariableField>,java.util.List<org.marc4j.marc.VariableField>,org.marc4j.marc.Record):455:true |==> false
7460:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):459:1 |==> 0
7461:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):459:1 |==> -1
7462:AOR:+(int,int):%(int,int):org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):459:m.groupCount() + 1 |==> m.groupCount() % 1
7463:AOR:+(int,int):*(int,int):org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):459:m.groupCount() + 1 |==> m.groupCount() * 1
7464:AOR:+(int,int):-(int,int):org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):459:m.groupCount() + 1 |==> m.groupCount() - 1
7465:AOR:+(int,int):/(int,int):org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):459:m.groupCount() + 1 |==> m.groupCount() / 1
7466:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):460:0 |==> 1
7467:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):460:0 |==> -1
7468:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):460:0 |==> 1
7469:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):460:0 |==> -1
7470:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):460:result[0] = m.group(0) |==> <NO-OP>
7471:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):461:0 |==> 1
7472:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):461:0 |==> -1
7473:ROR:<(int,int):!=(int,int):org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):461:i < m.groupCount() |==> i != m.groupCount()
7474:ROR:<(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):461:i < m.groupCount() |==> i <= m.groupCount()
7475:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):461:i < m.groupCount() |==> false
7476:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):462:1 |==> 0
7477:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):462:1 |==> -1
7478:AOR:+(int,int):%(int,int):org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):462:i + 1 |==> i % 1
7479:AOR:+(int,int):*(int,int):org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):462:i + 1 |==> i * 1
7480:AOR:+(int,int):-(int,int):org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):462:i + 1 |==> i - 1
7481:AOR:+(int,int):/(int,int):org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):462:i + 1 |==> i / 1
7482:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):462:1 |==> 0
7483:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):462:1 |==> -1
7484:AOR:+(int,int):%(int,int):org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):462:i + 1 |==> i % 1
7485:AOR:+(int,int):*(int,int):org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):462:i + 1 |==> i * 1
7486:AOR:+(int,int):-(int,int):org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):462:i + 1 |==> i - 1
7487:AOR:+(int,int):/(int,int):org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):462:i + 1 |==> i / 1
7488:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):462:result[i + 1] = m.group(i + 1) |==> <NO-OP>
7489:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@stringsFromMatcher(java.util.regex.Matcher):464:result |==> null
7490:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader:467:Pattern.compile("=?([0][0][0-9]) [ ]?(.*)") |==> null
7491:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader:470:Pattern.compile("=?([0-9][0-9][0-9]) [ ]?([0-9 \\|])([0-9 \\|])([$].*)") |==> null
7492:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader:473:Pattern.compile("[$]([a-z0-9])(([^$]|\\[$]|[$][{][0-9]*[}])*)(.*)") |==> null
7493:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):478:newDataFieldDef.matcher(arg) |==> null
7494:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):479:newControlFieldDef.matcher(arg) |==> null
7495:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):480:factory == null |==> false
7496:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):481:factory = MarcFactory.newInstance() |==> <NO-OP>
7497:COR:cdf.matches():TRUE:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):483:cdf.matches() |==> false
7498:COR:cdf.matches():FALSE:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):483:cdf.matches() |==> true
7499:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):485:1 |==> 0
7500:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):485:1 |==> -1
7501:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):486:2 |==> 0
7502:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):486:2 |==> -2
7503:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):487:argmatches != null |==> true
7504:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):488:data = fillParameters(data, argmatches) |==> <NO-OP>
7505:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):490:cf.setData(data) |==> <NO-OP>
7506:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):491:return cf; |==> <NO-OP>
7507:COR:mdf.matches():TRUE:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):492:mdf.matches() |==> false
7508:COR:mdf.matches():FALSE:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):492:mdf.matches() |==> true
7509:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):493:2 |==> 0
7510:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):493:2 |==> -2
7511:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):493:0 |==> 1
7512:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):493:0 |==> -1
7513:ROR:<(int,int):!=(int,int):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):494:ind1 < '0' |==> ind1 != '0'
7514:ROR:<(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):494:ind1 < '0' |==> ind1 <= '0'
7515:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):494:ind1 < '0' |==> false
7516:ROR:>(int,int):!=(int,int):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):494:ind1 > '9' |==> ind1 != '9'
7517:ROR:>(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):494:ind1 > '9' |==> ind1 >= '9'
7518:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):494:ind1 > '9' |==> false
7519:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):494:ind1 < '0' || ind1 > '9' |==> ind1 < '0' != ind1 > '9'
7520:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):494:ind1 < '0' || ind1 > '9' |==> ind1 < '0'
7521:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):494:ind1 < '0' || ind1 > '9' |==> ind1 > '9'
7522:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):494:ind1 < '0' || ind1 > '9' |==> true
7523:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):495:ind1 = ' ' |==> <NO-OP>
7524:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):497:3 |==> 0
7525:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):497:3 |==> -3
7526:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):497:0 |==> 1
7527:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):497:0 |==> -1
7528:ROR:<(int,int):!=(int,int):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):498:ind2 < '0' |==> ind2 != '0'
7529:ROR:<(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):498:ind2 < '0' |==> ind2 <= '0'
7530:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):498:ind2 < '0' |==> false
7531:ROR:>(int,int):!=(int,int):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):498:ind2 > '9' |==> ind2 != '9'
7532:ROR:>(int,int):>=(int,int):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):498:ind2 > '9' |==> ind2 >= '9'
7533:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):498:ind2 > '9' |==> false
7534:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):498:ind2 < '0' || ind2 > '9' |==> ind2 < '0' != ind2 > '9'
7535:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):498:ind2 < '0' || ind2 > '9' |==> ind2 < '0'
7536:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):498:ind2 < '0' || ind2 > '9' |==> ind2 > '9'
7537:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):498:ind2 < '0' || ind2 > '9' |==> true
7538:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):499:ind2 = ' ' |==> <NO-OP>
7539:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):501:1 |==> 0
7540:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):501:1 |==> -1
7541:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):502:4 |==> 0
7542:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):502:4 |==> -4
7543:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):504:newSubfieldDef.matcher(sfData) |==> null
7544:COR:sm.matches():TRUE:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):505:sm.matches() |==> false
7545:COR:sm.matches():FALSE:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):505:sm.matches() |==> true
7546:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):506:1 |==> 0
7547:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):506:1 |==> -1
7548:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):506:0 |==> 1
7549:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):506:0 |==> -1
7550:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):507:2 |==> 0
7551:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):507:2 |==> -2
7552:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):508:argmatches != null |==> true
7553:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):509:data = fillParameters(data, argmatches) |==> <NO-OP>
7554:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):511:4 |==> 0
7555:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):511:4 |==> -4
7556:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):511:sfData = sm.group(4) |==> <NO-OP>
7557:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):512:factory.newSubfield(code, data) |==> null
7558:STD:<CALL>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):513:df.addSubfield(sf) |==> <NO-OP>
7559:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@createFieldFromString(java.lang.String,java.lang.String[]):516:return df; |==> <NO-OP>
7560:LVR:0:POS:org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):522:0 |==> 1
7561:LVR:0:NEG:org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):522:0 |==> -1
7562:ROR:<(int,int):!=(int,int):org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):522:i < argmatches.length |==> i != argmatches.length
7563:ROR:<(int,int):<=(int,int):org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):522:i < argmatches.length |==> i <= argmatches.length
7564:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):522:i < argmatches.length |==> false
7565:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):523:1 |==> 0
7566:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):523:1 |==> -1
7567:AOR:+(int,int):%(int,int):org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):523:i + 1 |==> i % 1
7568:AOR:+(int,int):*(int,int):org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):523:i + 1 |==> i * 1
7569:AOR:+(int,int):-(int,int):org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):523:i + 1 |==> i - 1
7570:AOR:+(int,int):/(int,int):org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):523:i + 1 |==> i / 1
7571:COR:data.contains("${" + (i + 1) + "}"):TRUE:org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):523:data.contains("${" + (i + 1) + "}") |==> false
7572:COR:data.contains("${" + (i + 1) + "}"):FALSE:org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):523:data.contains("${" + (i + 1) + "}") |==> true
7573:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):524:1 |==> 0
7574:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):524:1 |==> -1
7575:AOR:+(int,int):%(int,int):org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):524:i + 1 |==> i % 1
7576:AOR:+(int,int):*(int,int):org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):524:i + 1 |==> i * 1
7577:AOR:+(int,int):-(int,int):org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):524:i + 1 |==> i - 1
7578:AOR:+(int,int):/(int,int):org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):524:i + 1 |==> i / 1
7579:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):524:1 |==> 0
7580:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):524:1 |==> -1
7581:AOR:+(int,int):%(int,int):org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):524:i + 1 |==> i % 1
7582:AOR:+(int,int):*(int,int):org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):524:i + 1 |==> i * 1
7583:AOR:+(int,int):-(int,int):org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):524:i + 1 |==> i - 1
7584:AOR:+(int,int):/(int,int):org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):524:i + 1 |==> i / 1
7585:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):524:data = data.replaceAll("[$][{]" + (i + 1) + "[}]", argmatches[i + 1]) |==> <NO-OP>
7586:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@fillParameters(java.lang.String,java.lang.String[]):527:data |==> null
7587:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader:530:Pattern.compile("[a-z]*[(]\"((\\\"|[^\"])*)\"[ ]*[)]") |==> null
7588:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@getOneArg(java.lang.String):533:oneArg.matcher(conditional.trim()) |==> null
7589:COR:m.matches():TRUE:org.marc4j.MarcScriptedRecordEditReader@getOneArg(java.lang.String):534:m.matches() |==> false
7590:COR:m.matches():FALSE:org.marc4j.MarcScriptedRecordEditReader@getOneArg(java.lang.String):534:m.matches() |==> true
7591:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@getOneArg(java.lang.String):535:1 |==> 0
7592:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@getOneArg(java.lang.String):535:1 |==> -1
7593:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@getOneArg(java.lang.String):535:return m.group(Config.__M_NO == 0 && Config.COVERED(7591, 7592) ? 1 : Config.__M_NO == 7592 ? -1 : Config.__M_NO == 7591 ? 0 : 1).replaceAll("\\\"", "\""); |==> <NO-OP>
7594:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader:541:Pattern.compile("[a-z]*[(]\"((\\\"|[^\"])*)\",[ ]*\"((\\\"|[^\"])*)\"[)]") |==> null
7595:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@getTwoArgs(java.lang.String):544:twoArgs.matcher(conditional.trim()) |==> null
7596:COR:m.matches():TRUE:org.marc4j.MarcScriptedRecordEditReader@getTwoArgs(java.lang.String):545:m.matches() |==> false
7597:COR:m.matches():FALSE:org.marc4j.MarcScriptedRecordEditReader@getTwoArgs(java.lang.String):545:m.matches() |==> true
7598:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@getTwoArgs(java.lang.String):546:1 |==> 0
7599:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@getTwoArgs(java.lang.String):546:1 |==> -1
7600:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@getTwoArgs(java.lang.String):547:3 |==> 0
7601:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@getTwoArgs(java.lang.String):547:3 |==> -3
7602:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@getTwoArgs(java.lang.String):548:return result; |==> <NO-OP>
7603:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader:554:Pattern.compile("[a-z]*[(][ ]*\"((\\\"|[^\"])*)\",[ ]*\"((\\\"|[^\"])*)\",[ ]*\"((\\\"|[^\"])*)\"[)]") |==> null
7604:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@getThreeArgs(java.lang.String):557:threeArgs.matcher(conditional.trim()) |==> null
7605:COR:m.matches():TRUE:org.marc4j.MarcScriptedRecordEditReader@getThreeArgs(java.lang.String):558:m.matches() |==> false
7606:COR:m.matches():FALSE:org.marc4j.MarcScriptedRecordEditReader@getThreeArgs(java.lang.String):558:m.matches() |==> true
7607:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@getThreeArgs(java.lang.String):559:1 |==> 0
7608:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@getThreeArgs(java.lang.String):559:1 |==> -1
7609:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@getThreeArgs(java.lang.String):560:3 |==> 0
7610:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@getThreeArgs(java.lang.String):560:3 |==> -3
7611:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@getThreeArgs(java.lang.String):560:5 |==> 0
7612:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@getThreeArgs(java.lang.String):560:5 |==> -5
7613:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@getThreeArgs(java.lang.String):561:return result; |==> <NO-OP>
7614:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader:567:Pattern.compile("[a-z]*[(]([a-z]*[(].*[)]),[ ]*([a-z]*[(].*[)])[)]") |==> null
7615:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@getTwoConditionals(java.lang.String):570:twoConditionals.matcher(conditional.trim()) |==> null
7616:COR:m.matches():TRUE:org.marc4j.MarcScriptedRecordEditReader@getTwoConditionals(java.lang.String):571:m.matches() |==> false
7617:COR:m.matches():FALSE:org.marc4j.MarcScriptedRecordEditReader@getTwoConditionals(java.lang.String):571:m.matches() |==> true
7618:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@getTwoConditionals(java.lang.String):572:1 |==> 0
7619:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@getTwoConditionals(java.lang.String):572:1 |==> -1
7620:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@getTwoConditionals(java.lang.String):572:2 |==> 0
7621:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@getTwoConditionals(java.lang.String):572:2 |==> -2
7622:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@getTwoConditionals(java.lang.String):573:return result; |==> <NO-OP>
7623:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader:578:Pattern.compile("[a-z]*[(]([a-z]*[(].*[)])[)]") |==> null
7624:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@getOneConditional(java.lang.String):581:oneConditional.matcher(conditional.trim()) |==> null
7625:COR:m.matches():TRUE:org.marc4j.MarcScriptedRecordEditReader@getOneConditional(java.lang.String):582:m.matches() |==> false
7626:COR:m.matches():FALSE:org.marc4j.MarcScriptedRecordEditReader@getOneConditional(java.lang.String):582:m.matches() |==> true
7627:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@getOneConditional(java.lang.String):583:1 |==> 0
7628:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@getOneConditional(java.lang.String):583:1 |==> -1
7629:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@getOneConditional(java.lang.String):584:return result; |==> <NO-OP>
7630:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader:589:Pattern.compile("[a-z]*[(][ ]*\"((\\\"|[^\"])*)\",[ ]*([a-z]*[(].*[)])[)]") |==> null
7631:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcScriptedRecordEditReader@getArgAndConditional(java.lang.String):593:argAndConditional.matcher(conditional.trim()) |==> null
7632:COR:m.matches():TRUE:org.marc4j.MarcScriptedRecordEditReader@getArgAndConditional(java.lang.String):594:m.matches() |==> false
7633:COR:m.matches():FALSE:org.marc4j.MarcScriptedRecordEditReader@getArgAndConditional(java.lang.String):594:m.matches() |==> true
7634:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@getArgAndConditional(java.lang.String):595:1 |==> 0
7635:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@getArgAndConditional(java.lang.String):595:1 |==> -1
7636:LVR:POS:0:org.marc4j.MarcScriptedRecordEditReader@getArgAndConditional(java.lang.String):595:2 |==> 0
7637:LVR:POS:NEG:org.marc4j.MarcScriptedRecordEditReader@getArgAndConditional(java.lang.String):595:2 |==> -2
7638:STD:<RETURN>:<NO-OP>:org.marc4j.MarcScriptedRecordEditReader@getArgAndConditional(java.lang.String):596:return result; |==> <NO-OP>
7639:LVR:FALSE:TRUE:org.marc4j.MarcSplitStreamWriter@<init>(java.io.OutputStream,int,java.lang.String):29:false |==> true
7640:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcSplitStreamWriter@<init>(java.io.OutputStream,int,java.lang.String):30:threshold |==> 0
7641:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcSplitStreamWriter@<init>(java.io.OutputStream,int,java.lang.String):31:fieldsToSplit |==> null
7642:LVR:FALSE:TRUE:org.marc4j.MarcSplitStreamWriter@<init>(java.io.OutputStream,java.lang.String,int,java.lang.String):45:false |==> true
7643:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcSplitStreamWriter@<init>(java.io.OutputStream,java.lang.String,int,java.lang.String):46:threshold |==> 0
7644:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcSplitStreamWriter@<init>(java.io.OutputStream,java.lang.String,int,java.lang.String):47:fieldsToSplit |==> null
7645:LVR:FALSE:TRUE:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):57:false |==> true
7646:COR:df.getTag().matches(fieldsToSplit):TRUE:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):59:df.getTag().matches(fieldsToSplit) |==> false
7647:COR:df.getTag().matches(fieldsToSplit):FALSE:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):59:df.getTag().matches(fieldsToSplit) |==> true
7648:STD:<CONT>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):60:continue; |==> <NO-OP>
7649:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):62:df.setId(null) |==> <NO-OP>
7650:LVR:0:POS:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):67:0 |==> 1
7651:LVR:0:NEG:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):67:0 |==> -1
7652:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):68:new ByteArrayOutputStream() |==> null
7653:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):69:new ByteArrayOutputStream() |==> null
7654:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):73:data.write(getDataElement(cf.getData())) |==> <NO-OP>
7655:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):74:data.write(Constants.FT) |==> <NO-OP>
7656:AOR:-(int,int):%(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):75:data.size() - previous |==> data.size() % previous
7657:AOR:-(int,int):*(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):75:data.size() - previous |==> data.size() * previous
7658:AOR:-(int,int):+(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):75:data.size() - previous |==> data.size() + previous
7659:AOR:-(int,int):/(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):75:data.size() - previous |==> data.size() / previous
7660:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):75:dir.write(getEntry(cf.getTag(), data.size() - previous, previous)) |==> <NO-OP>
7661:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):76:previous = data.size() |==> <NO-OP>
7662:COR:df.getTag().matches(fieldsToSplit):TRUE:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):81:df.getTag().matches(fieldsToSplit) |==> false
7663:COR:df.getTag().matches(fieldsToSplit):FALSE:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):81:df.getTag().matches(fieldsToSplit) |==> true
7664:STD:<CONT>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):82:continue; |==> <NO-OP>
7665:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):84:data.write(df.getIndicator1()) |==> <NO-OP>
7666:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):85:data.write(df.getIndicator2()) |==> <NO-OP>
7667:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):87:data.write(Constants.US) |==> <NO-OP>
7668:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):88:data.write(sf.getCode()) |==> <NO-OP>
7669:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):89:data.write(getDataElement(sf.getData())) |==> <NO-OP>
7670:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):91:data.write(Constants.FT) |==> <NO-OP>
7671:AOR:-(int,int):%(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):92:data.size() - previous |==> data.size() % previous
7672:AOR:-(int,int):*(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):92:data.size() - previous |==> data.size() * previous
7673:AOR:-(int,int):+(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):92:data.size() - previous |==> data.size() + previous
7674:AOR:-(int,int):/(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):92:data.size() - previous |==> data.size() / previous
7675:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):92:dir.write(getEntry(df.getTag(), data.size() - previous, previous)) |==> <NO-OP>
7676:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):93:previous = data.size() |==> <NO-OP>
7677:LVR:TRUE:FALSE:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):96:true |==> false
7678:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):96:doneWithRec = true |==> <NO-OP>
7679:ROR:>=(int,int):==(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):98:previous >= recordThreshold |==> previous == recordThreshold
7680:ROR:>=(int,int):>(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):98:previous >= recordThreshold |==> previous > recordThreshold
7681:ROR:>=(int,int):TRUE(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):98:previous >= recordThreshold |==> true
7682:LVR:FALSE:TRUE:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):99:false |==> true
7683:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):99:doneWithRec = false |==> <NO-OP>
7684:STD:<BREAK>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):100:break; |==> <NO-OP>
7685:COR:df.getTag().matches(fieldsToSplit):TRUE:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):102:df.getTag().matches(fieldsToSplit) |==> false
7686:COR:df.getTag().matches(fieldsToSplit):FALSE:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):102:df.getTag().matches(fieldsToSplit) |==> true
7687:STD:<CONT>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):103:continue; |==> <NO-OP>
7688:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):105:df.getId() == null |==> false
7689:LVR:0:POS:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):105:0 |==> 1
7690:LVR:0:NEG:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):105:0 |==> -1
7691:ROR:!=(int,int):<(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):105:df.getId().intValue() != 0 |==> df.getId().intValue() < 0
7692:ROR:!=(int,int):>(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):105:df.getId().intValue() != 0 |==> df.getId().intValue() > 0
7693:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):105:df.getId().intValue() != 0 |==> true
7694:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):105:df.getId() == null || df.getId().intValue() != 0 |==> df.getId() == null != (df.getId().intValue() != 0)
7695:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):105:df.getId() == null || df.getId().intValue() != 0 |==> df.getId() == null
7696:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):105:df.getId() == null || df.getId().intValue() != 0 |==> df.getId().intValue() != 0
7697:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):105:df.getId() == null || df.getId().intValue() != 0 |==> true
7698:STD:<CONT>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):106:continue; |==> <NO-OP>
7699:LVR:0:POS:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):108:0 |==> 1
7700:LVR:0:NEG:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):108:0 |==> -1
7701:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):108:df.setId(new Long(0)) |==> <NO-OP>
7702:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):109:data.write(df.getIndicator1()) |==> <NO-OP>
7703:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):110:data.write(df.getIndicator2()) |==> <NO-OP>
7704:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):112:data.write(Constants.US) |==> <NO-OP>
7705:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):113:data.write(sf.getCode()) |==> <NO-OP>
7706:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):114:data.write(getDataElement(sf.getData())) |==> <NO-OP>
7707:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):116:data.write(Constants.FT) |==> <NO-OP>
7708:AOR:-(int,int):%(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):117:data.size() - previous |==> data.size() % previous
7709:AOR:-(int,int):*(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):117:data.size() - previous |==> data.size() * previous
7710:AOR:-(int,int):+(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):117:data.size() - previous |==> data.size() + previous
7711:AOR:-(int,int):/(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):117:data.size() - previous |==> data.size() / previous
7712:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):117:dir.write(getEntry(df.getTag(), data.size() - previous, previous)) |==> <NO-OP>
7713:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):118:previous = data.size() |==> <NO-OP>
7714:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):120:dir.write(Constants.FT) |==> <NO-OP>
7715:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):123:record.getLeader() |==> null
7716:LVR:POS:0:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):125:24 |==> 0
7717:LVR:POS:NEG:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):125:24 |==> -24
7718:AOR:+(int,int):%(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):125:24 + dir.size() |==> 24 % dir.size()
7719:AOR:+(int,int):*(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):125:24 + dir.size() |==> 24 * dir.size()
7720:AOR:+(int,int):-(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):125:24 + dir.size() |==> 24 - dir.size()
7721:AOR:+(int,int):/(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):125:24 + dir.size() |==> 24 / dir.size()
7722:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):126:ldr.setBaseAddressOfData(baseAddress) |==> <NO-OP>
7723:AOR:+(int,int):%(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):127:ldr.getBaseAddressOfData() + data.size() |==> ldr.getBaseAddressOfData() % data.size()
7724:AOR:+(int,int):*(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):127:ldr.getBaseAddressOfData() + data.size() |==> ldr.getBaseAddressOfData() * data.size()
7725:AOR:+(int,int):-(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):127:ldr.getBaseAddressOfData() + data.size() |==> ldr.getBaseAddressOfData() - data.size()
7726:AOR:+(int,int):/(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):127:ldr.getBaseAddressOfData() + data.size() |==> ldr.getBaseAddressOfData() / data.size()
7727:LVR:POS:0:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):127:1 |==> 0
7728:LVR:POS:NEG:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):127:1 |==> -1
7729:AOR:+(int,int):%(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):127:ldr.getBaseAddressOfData() + data.size() + 1 |==> (ldr.getBaseAddressOfData() + data.size()) % 1
7730:AOR:+(int,int):*(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):127:ldr.getBaseAddressOfData() + data.size() + 1 |==> (ldr.getBaseAddressOfData() + data.size()) * 1
7731:AOR:+(int,int):-(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):127:ldr.getBaseAddressOfData() + data.size() + 1 |==> ldr.getBaseAddressOfData() + data.size() - 1
7732:AOR:+(int,int):/(int,int):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):127:ldr.getBaseAddressOfData() + data.size() + 1 |==> (ldr.getBaseAddressOfData() + data.size()) / 1
7733:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):128:ldr.setRecordLength(recordLength) |==> <NO-OP>
7734:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):131:dir.close() |==> <NO-OP>
7735:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):132:data.close() |==> <NO-OP>
7736:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):134:!allowOversizeEntry && hasOversizeLength |==> !allowOversizeEntry == hasOversizeLength
7737:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):134:!allowOversizeEntry && hasOversizeLength |==> false
7738:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):134:!allowOversizeEntry && hasOversizeLength |==> !allowOversizeEntry
7739:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):134:!allowOversizeEntry && hasOversizeLength |==> hasOversizeLength
7740:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):138:writeLeader(ldr) |==> <NO-OP>
7741:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):139:out.write(dir.toByteArray()) |==> <NO-OP>
7742:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):140:out.write(data.toByteArray()) |==> <NO-OP>
7743:STD:<CALL>:<NO-OP>:org.marc4j.MarcSplitStreamWriter@write(org.marc4j.marc.Record):141:out.write(Constants.RT) |==> <NO-OP>
7744:LVR:FALSE:TRUE:org.marc4j.MarcStreamWriter:79:false |==> true
7745:LVR:FALSE:TRUE:org.marc4j.MarcStreamWriter:81:false |==> true
7746:LVR:FALSE:TRUE:org.marc4j.MarcStreamWriter:83:false |==> true
7747:LVR:POS:0:org.marc4j.MarcStreamWriter:85:4 |==> 0
7748:LVR:POS:NEG:org.marc4j.MarcStreamWriter:85:4 |==> -4
7749:LVR:POS:0:org.marc4j.MarcStreamWriter:87:5 |==> 0
7750:LVR:POS:NEG:org.marc4j.MarcStreamWriter:87:5 |==> -5
7751:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamWriter@<init>(java.io.OutputStream):95:this.out = out |==> <NO-OP>
7752:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamWriter@<init>(java.io.OutputStream,java.lang.String):106:this.encoding = encoding |==> <NO-OP>
7753:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamWriter@<init>(java.io.OutputStream,java.lang.String):107:this.out = out |==> <NO-OP>
7754:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamWriter@<init>(java.io.OutputStream,boolean):117:this.out = out |==> <NO-OP>
7755:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamWriter@<init>(java.io.OutputStream,boolean):118:this.allowOversizeEntry = allowOversizeRecord |==> <NO-OP>
7756:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamWriter@<init>(java.io.OutputStream,java.lang.String,boolean):130:this.encoding = encoding |==> <NO-OP>
7757:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamWriter@<init>(java.io.OutputStream,java.lang.String,boolean):131:this.out = out |==> <NO-OP>
7758:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamWriter@<init>(java.io.OutputStream,java.lang.String,boolean):132:this.allowOversizeEntry = allowOversizeRecord |==> <NO-OP>
7759:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcStreamWriter@getConverter():142:converter |==> null
7760:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamWriter@setConverter(org.marc4j.converter.CharConverter):152:this.converter = converter |==> <NO-OP>
7761:LVR:0:POS:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):162:0 |==> 1
7762:LVR:0:NEG:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):162:0 |==> -1
7763:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):165:new ByteArrayOutputStream() |==> null
7764:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):166:new ByteArrayOutputStream() |==> null
7765:LVR:FALSE:TRUE:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):167:false |==> true
7766:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):167:hasOversizeOffset = false |==> <NO-OP>
7767:LVR:FALSE:TRUE:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):168:false |==> true
7768:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):168:hasOversizeLength = false |==> <NO-OP>
7769:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):172:data.write(getDataElement(cf.getData())) |==> <NO-OP>
7770:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):173:data.write(Constants.FT) |==> <NO-OP>
7771:AOR:-(int,int):%(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):174:data.size() - previous |==> data.size() % previous
7772:AOR:-(int,int):*(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):174:data.size() - previous |==> data.size() * previous
7773:AOR:-(int,int):+(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):174:data.size() - previous |==> data.size() + previous
7774:AOR:-(int,int):/(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):174:data.size() - previous |==> data.size() / previous
7775:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):174:dir.write(getEntry(cf.getTag(), data.size() - previous, previous)) |==> <NO-OP>
7776:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):175:previous = data.size() |==> <NO-OP>
7777:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):180:data.write(df.getIndicator1()) |==> <NO-OP>
7778:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):181:data.write(df.getIndicator2()) |==> <NO-OP>
7779:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):183:data.write(Constants.US) |==> <NO-OP>
7780:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):184:data.write(sf.getCode()) |==> <NO-OP>
7781:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):185:data.write(getDataElement(sf.getData())) |==> <NO-OP>
7782:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):187:data.write(Constants.FT) |==> <NO-OP>
7783:AOR:-(int,int):%(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):188:data.size() - previous |==> data.size() % previous
7784:AOR:-(int,int):*(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):188:data.size() - previous |==> data.size() * previous
7785:AOR:-(int,int):+(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):188:data.size() - previous |==> data.size() + previous
7786:AOR:-(int,int):/(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):188:data.size() - previous |==> data.size() / previous
7787:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):188:dir.write(getEntry(df.getTag(), data.size() - previous, previous)) |==> <NO-OP>
7788:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):189:previous = data.size() |==> <NO-OP>
7789:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):191:dir.write(Constants.FT) |==> <NO-OP>
7790:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):194:record.getLeader() |==> null
7791:LVR:POS:0:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):196:24 |==> 0
7792:LVR:POS:NEG:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):196:24 |==> -24
7793:AOR:+(int,int):%(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):196:24 + dir.size() |==> 24 % dir.size()
7794:AOR:+(int,int):*(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):196:24 + dir.size() |==> 24 * dir.size()
7795:AOR:+(int,int):-(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):196:24 + dir.size() |==> 24 - dir.size()
7796:AOR:+(int,int):/(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):196:24 + dir.size() |==> 24 / dir.size()
7797:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):197:ldr.setBaseAddressOfData(baseAddress) |==> <NO-OP>
7798:AOR:+(int,int):%(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):198:ldr.getBaseAddressOfData() + data.size() |==> ldr.getBaseAddressOfData() % data.size()
7799:AOR:+(int,int):*(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):198:ldr.getBaseAddressOfData() + data.size() |==> ldr.getBaseAddressOfData() * data.size()
7800:AOR:+(int,int):-(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):198:ldr.getBaseAddressOfData() + data.size() |==> ldr.getBaseAddressOfData() - data.size()
7801:AOR:+(int,int):/(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):198:ldr.getBaseAddressOfData() + data.size() |==> ldr.getBaseAddressOfData() / data.size()
7802:LVR:POS:0:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):198:1 |==> 0
7803:LVR:POS:NEG:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):198:1 |==> -1
7804:AOR:+(int,int):%(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):198:ldr.getBaseAddressOfData() + data.size() + 1 |==> (ldr.getBaseAddressOfData() + data.size()) % 1
7805:AOR:+(int,int):*(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):198:ldr.getBaseAddressOfData() + data.size() + 1 |==> (ldr.getBaseAddressOfData() + data.size()) * 1
7806:AOR:+(int,int):-(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):198:ldr.getBaseAddressOfData() + data.size() + 1 |==> ldr.getBaseAddressOfData() + data.size() - 1
7807:AOR:+(int,int):/(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):198:ldr.getBaseAddressOfData() + data.size() + 1 |==> (ldr.getBaseAddressOfData() + data.size()) / 1
7808:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):199:ldr.setRecordLength(recordLength) |==> <NO-OP>
7809:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):202:dir.close() |==> <NO-OP>
7810:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):203:data.close() |==> <NO-OP>
7811:LVR:POS:0:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:99999 |==> 0
7812:LVR:POS:NEG:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:99999 |==> -99999
7813:ROR:>(int,int):!=(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:baseAddress > 99999 |==> baseAddress != 99999
7814:ROR:>(int,int):>=(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:baseAddress > 99999 |==> baseAddress >= 99999
7815:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:baseAddress > 99999 |==> false
7816:LVR:POS:0:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:99999 |==> 0
7817:LVR:POS:NEG:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:99999 |==> -99999
7818:ROR:>(int,int):!=(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:recordLength > 99999 |==> recordLength != 99999
7819:ROR:>(int,int):>=(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:recordLength > 99999 |==> recordLength >= 99999
7820:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:recordLength > 99999 |==> false
7821:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:baseAddress > 99999 || recordLength > 99999 |==> baseAddress > 99999 != recordLength > 99999
7822:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:baseAddress > 99999 || recordLength > 99999 |==> baseAddress > 99999
7823:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:baseAddress > 99999 || recordLength > 99999 |==> recordLength > 99999
7824:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:baseAddress > 99999 || recordLength > 99999 |==> true
7825:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:baseAddress > 99999 || recordLength > 99999 || hasOversizeOffset |==> (baseAddress > 99999 || recordLength > 99999) != hasOversizeOffset
7826:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:baseAddress > 99999 || recordLength > 99999 || hasOversizeOffset |==> baseAddress > 99999 || recordLength > 99999
7827:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:baseAddress > 99999 || recordLength > 99999 || hasOversizeOffset |==> hasOversizeOffset
7828:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:baseAddress > 99999 || recordLength > 99999 || hasOversizeOffset |==> true
7829:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:!allowOversizeEntry && (baseAddress > 99999 || recordLength > 99999 || hasOversizeOffset) |==> !allowOversizeEntry == (baseAddress > 99999 || recordLength > 99999 || hasOversizeOffset)
7830:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:!allowOversizeEntry && (baseAddress > 99999 || recordLength > 99999 || hasOversizeOffset) |==> false
7831:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:!allowOversizeEntry && (baseAddress > 99999 || recordLength > 99999 || hasOversizeOffset) |==> !allowOversizeEntry
7832:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):205:!allowOversizeEntry && (baseAddress > 99999 || recordLength > 99999 || hasOversizeOffset) |==> (baseAddress > 99999 || recordLength > 99999 || hasOversizeOffset)
7833:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):209:!allowOversizeEntry && (hasOversizeLength) |==> !allowOversizeEntry == (hasOversizeLength)
7834:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):209:!allowOversizeEntry && (hasOversizeLength) |==> false
7835:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):209:!allowOversizeEntry && (hasOversizeLength) |==> !allowOversizeEntry
7836:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):209:!allowOversizeEntry && (hasOversizeLength) |==> (hasOversizeLength)
7837:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):213:converter != null |==> true
7838:COR:converter.outputsUnicode():TRUE:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):214:converter.outputsUnicode() |==> false
7839:COR:converter.outputsUnicode():FALSE:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):214:converter.outputsUnicode() |==> true
7840:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):214:ldr.setCharCodingScheme(converter.outputsUnicode() ? 'a' : ' ') |==> <NO-OP>
7841:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):216:writeLeader(ldr) |==> <NO-OP>
7842:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):217:out.write(dir.toByteArray()) |==> <NO-OP>
7843:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):218:out.write(data.toByteArray()) |==> <NO-OP>
7844:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@write(org.marc4j.marc.Record):219:out.write(Constants.RT) |==> <NO-OP>
7845:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@writeLeader(org.marc4j.marc.Leader):229:out.write(format5Use.format(ldr.getRecordLength()).getBytes(encoding)) |==> <NO-OP>
7846:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@writeLeader(org.marc4j.marc.Leader):230:out.write(ldr.getRecordStatus()) |==> <NO-OP>
7847:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@writeLeader(org.marc4j.marc.Leader):231:out.write(ldr.getTypeOfRecord()) |==> <NO-OP>
7848:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@writeLeader(org.marc4j.marc.Leader):232:out.write(new String(ldr.getImplDefined1()).getBytes(encoding)) |==> <NO-OP>
7849:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@writeLeader(org.marc4j.marc.Leader):233:out.write(ldr.getCharCodingScheme()) |==> <NO-OP>
7850:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@writeLeader(org.marc4j.marc.Leader):234:out.write(Integer.toString(ldr.getIndicatorCount()).getBytes(encoding)) |==> <NO-OP>
7851:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@writeLeader(org.marc4j.marc.Leader):235:out.write(Integer.toString(ldr.getSubfieldCodeLength()).getBytes(encoding)) |==> <NO-OP>
7852:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@writeLeader(org.marc4j.marc.Leader):236:out.write(format5Use.format(ldr.getBaseAddressOfData()).getBytes(encoding)) |==> <NO-OP>
7853:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@writeLeader(org.marc4j.marc.Leader):237:out.write(new String(ldr.getImplDefined2()).getBytes(encoding)) |==> <NO-OP>
7854:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@writeLeader(org.marc4j.marc.Leader):238:out.write(new String(ldr.getEntryMap()).getBytes(encoding)) |==> <NO-OP>
7855:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamWriter@close():247:out.close() |==> <NO-OP>
7856:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcStreamWriter@getDataElement(java.lang.String):254:converter != null |==> true
7857:STD:<RETURN>:<NO-OP>:org.marc4j.MarcStreamWriter@getDataElement(java.lang.String):255:return converter.convert(data).getBytes(encoding); |==> <NO-OP>
7858:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcStreamWriter@getDataElement(java.lang.String):257:data.getBytes(encoding) |==> null
7859:EVR:<PLUS>:<DEFAULT>:org.marc4j.MarcStreamWriter@getEntry(java.lang.String,int,int):261:tag + format4Use.format(length) + format5Use.format(start) |==> null
7860:LVR:POS:0:org.marc4j.MarcStreamWriter@getEntry(java.lang.String,int,int):262:99999 |==> 0
7861:LVR:POS:NEG:org.marc4j.MarcStreamWriter@getEntry(java.lang.String,int,int):262:99999 |==> -99999
7862:ROR:>(int,int):!=(int,int):org.marc4j.MarcStreamWriter@getEntry(java.lang.String,int,int):262:length > 99999 |==> length != 99999
7863:ROR:>(int,int):>=(int,int):org.marc4j.MarcStreamWriter@getEntry(java.lang.String,int,int):262:length > 99999 |==> length >= 99999
7864:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcStreamWriter@getEntry(java.lang.String,int,int):262:length > 99999 |==> false
7865:LVR:TRUE:FALSE:org.marc4j.MarcStreamWriter@getEntry(java.lang.String,int,int):263:true |==> false
7866:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamWriter@getEntry(java.lang.String,int,int):263:hasOversizeLength = true |==> <NO-OP>
7867:LVR:POS:0:org.marc4j.MarcStreamWriter@getEntry(java.lang.String,int,int):265:99999 |==> 0
7868:LVR:POS:NEG:org.marc4j.MarcStreamWriter@getEntry(java.lang.String,int,int):265:99999 |==> -99999
7869:ROR:>(int,int):!=(int,int):org.marc4j.MarcStreamWriter@getEntry(java.lang.String,int,int):265:start > 99999 |==> start != 99999
7870:ROR:>(int,int):>=(int,int):org.marc4j.MarcStreamWriter@getEntry(java.lang.String,int,int):265:start > 99999 |==> start >= 99999
7871:ROR:>(int,int):FALSE(int,int):org.marc4j.MarcStreamWriter@getEntry(java.lang.String,int,int):265:start > 99999 |==> false
7872:LVR:TRUE:FALSE:org.marc4j.MarcStreamWriter@getEntry(java.lang.String,int,int):266:true |==> false
7873:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamWriter@getEntry(java.lang.String,int,int):266:hasOversizeOffset = true |==> <NO-OP>
7874:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.MarcStreamWriter@getEntry(java.lang.String,int,int):268:(entryUse.getBytes(encoding)) |==> null
7875:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcStreamWriter@allowsOversizeEntry():277:allowOversizeEntry |==> false
7876:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamWriter@setAllowOversizeEntry(boolean):286:this.allowOversizeEntry = allowOversizeEntry |==> <NO-OP>
7877:LVR:FALSE:TRUE:org.marc4j.MarcStreamReader:83:false |==> true
7878:COR:input.markSupported():TRUE:org.marc4j.MarcStreamReader@<init>(java.io.InputStream,java.lang.String):103:input.markSupported() |==> false
7879:COR:input.markSupported():FALSE:org.marc4j.MarcStreamReader@<init>(java.io.InputStream,java.lang.String):103:input.markSupported() |==> true
7880:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@<init>(java.io.InputStream,java.lang.String):103:this.input = new DataInputStream(input.markSupported() ? input : new BufferedInputStream(input)) |==> <NO-OP>
7881:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcStreamReader@<init>(java.io.InputStream,java.lang.String):104:MarcFactory.newInstance() |==> null
7882:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcStreamReader@<init>(java.io.InputStream,java.lang.String):105:encoding != null |==> true
7883:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@<init>(java.io.InputStream,java.lang.String):106:this.encoding = encoding |==> <NO-OP>
7884:LVR:TRUE:FALSE:org.marc4j.MarcStreamReader@<init>(java.io.InputStream,java.lang.String):107:true |==> false
7885:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@<init>(java.io.InputStream,java.lang.String):107:override = true |==> <NO-OP>
7886:LVR:POS:0:org.marc4j.MarcStreamReader@hasNext():117:10 |==> 0
7887:LVR:POS:NEG:org.marc4j.MarcStreamReader@hasNext():117:10 |==> -10
7888:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@hasNext():117:input.mark(10) |==> <NO-OP>
7889:LVR:NEG:0:org.marc4j.MarcStreamReader@hasNext():118:-1 |==> 0
7890:LVR:NEG:POS:org.marc4j.MarcStreamReader@hasNext():118:-1 |==> 1
7891:ROR:==(int,int):<=(int,int):org.marc4j.MarcStreamReader@hasNext():118:input.read() == -1 |==> input.read() <= -1
7892:ROR:==(int,int):>=(int,int):org.marc4j.MarcStreamReader@hasNext():118:input.read() == -1 |==> input.read() >= -1
7893:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcStreamReader@hasNext():118:input.read() == -1 |==> false
7894:LVR:FALSE:TRUE:org.marc4j.MarcStreamReader@hasNext():119:false |==> true
7895:STD:<RETURN>:<NO-OP>:org.marc4j.MarcStreamReader@hasNext():119:return Config.__M_NO == 0 && Config.COVERED(7894, 7894) ? false : Config.__M_NO == 7894 ? true : false; |==> <NO-OP>
7896:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@hasNext():121:input.reset() |==> <NO-OP>
7897:LVR:TRUE:FALSE:org.marc4j.MarcStreamReader@hasNext():125:true |==> false
7898:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@next():135:record = factory.newRecord() |==> <NO-OP>
7899:LVR:POS:0:org.marc4j.MarcStreamReader@next():139:24 |==> 0
7900:LVR:POS:NEG:org.marc4j.MarcStreamReader@next():139:24 |==> -24
7901:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@next():140:input.readFully(byteArray) |==> <NO-OP>
7902:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcStreamReader@next():142:parseRecordLength(byteArray) |==> 0
7903:LVR:POS:0:org.marc4j.MarcStreamReader@next():143:24 |==> 0
7904:LVR:POS:NEG:org.marc4j.MarcStreamReader@next():143:24 |==> -24
7905:AOR:-(int,int):%(int,int):org.marc4j.MarcStreamReader@next():143:recordLength - 24 |==> recordLength % 24
7906:AOR:-(int,int):*(int,int):org.marc4j.MarcStreamReader@next():143:recordLength - 24 |==> recordLength * 24
7907:AOR:-(int,int):+(int,int):org.marc4j.MarcStreamReader@next():143:recordLength - 24 |==> recordLength + 24
7908:AOR:-(int,int):/(int,int):org.marc4j.MarcStreamReader@next():143:recordLength - 24 |==> recordLength / 24
7909:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@next():144:input.readFully(recordBuf) |==> <NO-OP>
7910:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@next():145:parseRecord(record, byteArray, recordBuf, recordLength) |==> <NO-OP>
7911:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcStreamReader@next():146:record |==> null
7912:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):158:aByteArray |==> null
7913:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):160:factory.newLeader() |==> null
7914:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):161:ldr.setRecordLength(recordLength) |==> <NO-OP>
7915:LVR:0:POS:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):162:0 |==> 1
7916:LVR:0:NEG:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):162:0 |==> -1
7917:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):165:parseLeader(ldr, byteArray) |==> <NO-OP>
7918:LVR:POS:0:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):166:24 |==> 0
7919:LVR:POS:NEG:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):166:24 |==> -24
7920:LVR:POS:0:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):166:1 |==> 0
7921:LVR:POS:NEG:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):166:1 |==> -1
7922:AOR:+(int,int):%(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):166:24 + 1 |==> 24 % 1
7923:AOR:+(int,int):*(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):166:24 + 1 |==> 24 * 1
7924:AOR:+(int,int):-(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):166:24 + 1 |==> 24 - 1
7925:AOR:+(int,int):/(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):166:24 + 1 |==> 24 / 1
7926:AOR:-(int,int):%(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):166:ldr.getBaseAddressOfData() - (24 + 1) |==> ldr.getBaseAddressOfData() % (24 + 1)
7927:AOR:-(int,int):*(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):166:ldr.getBaseAddressOfData() - (24 + 1) |==> ldr.getBaseAddressOfData() * (24 + 1)
7928:AOR:-(int,int):+(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):166:ldr.getBaseAddressOfData() - (24 + 1) |==> ldr.getBaseAddressOfData() + (24 + 1)
7929:AOR:-(int,int):/(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):166:ldr.getBaseAddressOfData() - (24 + 1) |==> ldr.getBaseAddressOfData() / (24 + 1)
7930:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):166:directoryLength = ldr.getBaseAddressOfData() - (24 + 1) |==> <NO-OP>
7931:COR:override:TRUE:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):176:override |==> false
7932:COR:override:FALSE:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):176:override |==> true
7933:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):177:encoding = "ISO-8859-1" |==> <NO-OP>
7934:STD:<BREAK>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):179:break; |==> <NO-OP>
7935:COR:override:TRUE:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):181:override |==> false
7936:COR:override:FALSE:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):181:override |==> true
7937:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):182:encoding = "UTF8" |==> <NO-OP>
7938:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):186:record.setLeader(ldr) |==> <NO-OP>
7939:LVR:POS:0:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):188:12 |==> 0
7940:LVR:POS:NEG:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):188:12 |==> -12
7941:AOR:%(int,int):*(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):188:directoryLength % 12 |==> directoryLength * 12
7942:AOR:%(int,int):+(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):188:directoryLength % 12 |==> directoryLength + 12
7943:AOR:%(int,int):-(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):188:directoryLength % 12 |==> directoryLength - 12
7944:AOR:%(int,int):/(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):188:directoryLength % 12 |==> directoryLength / 12
7945:LVR:0:POS:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):188:0 |==> 1
7946:LVR:0:NEG:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):188:0 |==> -1
7947:ROR:!=(int,int):<(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):188:directoryLength % 12 != 0 |==> directoryLength % 12 < 0
7948:ROR:!=(int,int):>(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):188:directoryLength % 12 != 0 |==> directoryLength % 12 > 0
7949:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):188:directoryLength % 12 != 0 |==> true
7950:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):192:new DataInputStream(new ByteArrayInputStream(recordBuf)) |==> null
7951:LVR:POS:0:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):193:12 |==> 0
7952:LVR:POS:NEG:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):193:12 |==> -12
7953:AOR:/(int,int):%(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):193:directoryLength / 12 |==> directoryLength % 12
7954:AOR:/(int,int):*(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):193:directoryLength / 12 |==> directoryLength * 12
7955:AOR:/(int,int):+(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):193:directoryLength / 12 |==> directoryLength + 12
7956:AOR:/(int,int):-(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):193:directoryLength / 12 |==> directoryLength - 12
7957:EVR:<NEW_ARRAY>:<DEFAULT>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):195:new String[size] |==> null
7958:EVR:<NEW_ARRAY>:<DEFAULT>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):196:new int[size] |==> null
7959:EVR:<NEW_ARRAY>:<DEFAULT>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):197:new int[size] |==> null
7960:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):198:new HashMap<Integer, Integer>() |==> null
7961:LVR:POS:0:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):200:3 |==> 0
7962:LVR:POS:NEG:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):200:3 |==> -3
7963:LVR:POS:0:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):201:4 |==> 0
7964:LVR:POS:NEG:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):201:4 |==> -4
7965:LVR:POS:0:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):202:5 |==> 0
7966:LVR:POS:NEG:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):202:5 |==> -5
7967:LVR:0:POS:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):207:0 |==> 1
7968:LVR:0:NEG:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):207:0 |==> -1
7969:ROR:<(int,int):!=(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):207:i < size |==> i != size
7970:ROR:<(int,int):<=(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):207:i < size |==> i <= size
7971:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):207:i < size |==> false
7972:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):208:inputrec.readFully(tag) |==> <NO-OP>
7973:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):209:new String(tag) |==> null
7974:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):210:tags[i] = tmp |==> <NO-OP>
7975:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):212:inputrec.readFully(length) |==> <NO-OP>
7976:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):213:tmp = new String(length) |==> <NO-OP>
7977:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):214:lengths[i] = Integer.parseInt(tmp) |==> <NO-OP>
7978:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):216:inputrec.readFully(start) |==> <NO-OP>
7979:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):218:tmp = new String(start) |==> <NO-OP>
7980:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):219:starts[i] = Integer.parseInt(tmp) |==> <NO-OP>
7981:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):220:unsortedStartIndex.put(starts[i], i) |==> <NO-OP>
7982:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):224:Arrays.sort(starts) |==> <NO-OP>
7983:ROR:!=(int,int):<(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):226:inputrec.read() != Constants.FT |==> inputrec.read() < Constants.FT
7984:ROR:!=(int,int):>(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):226:inputrec.read() != Constants.FT |==> inputrec.read() > Constants.FT
7985:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):226:inputrec.read() != Constants.FT |==> true
7986:LVR:0:POS:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):230:0 |==> 1
7987:LVR:0:NEG:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):230:0 |==> -1
7988:LVR:0:POS:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):231:0 |==> 1
7989:LVR:0:NEG:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):231:0 |==> -1
7990:ROR:<(int,int):!=(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):231:s < size |==> s != size
7991:ROR:<(int,int):<=(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):231:s < size |==> s <= size
7992:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):231:s < size |==> false
7993:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):232:i = unsortedStartIndex.get(starts[s]).intValue() |==> <NO-OP>
7994:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):234:getFieldLength(inputrec) |==> <NO-OP>
7995:COR:Verifier.isControlField(tags[i]):TRUE:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):236:Verifier.isControlField(tags[i]) |==> false
7996:COR:Verifier.isControlField(tags[i]):FALSE:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):236:Verifier.isControlField(tags[i]) |==> true
7997:LVR:POS:0:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):237:1 |==> 0
7998:LVR:POS:NEG:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):237:1 |==> -1
7999:AOR:-(int,int):%(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):237:lengths[i] - 1 |==> lengths[i] % 1
8000:AOR:-(int,int):*(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):237:lengths[i] - 1 |==> lengths[i] * 1
8001:AOR:-(int,int):+(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):237:lengths[i] - 1 |==> lengths[i] + 1
8002:AOR:-(int,int):/(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):237:lengths[i] - 1 |==> lengths[i] / 1
8003:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):237:byteArray = new byte[lengths[i] - 1] |==> <NO-OP>
8004:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):238:inputrec.readFully(byteArray) |==> <NO-OP>
8005:ROR:!=(int,int):<(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):240:inputrec.read() != Constants.FT |==> inputrec.read() < Constants.FT
8006:ROR:!=(int,int):>(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):240:inputrec.read() != Constants.FT |==> inputrec.read() > Constants.FT
8007:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):240:inputrec.read() != Constants.FT |==> true
8008:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):244:factory.newControlField() |==> null
8009:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):245:field.setTag(tags[i]) |==> <NO-OP>
8010:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):246:field.setData(getDataAsString(byteArray)) |==> <NO-OP>
8011:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):247:record.addVariableField(field) |==> <NO-OP>
8012:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):249:byteArray = new byte[lengths[i]] |==> <NO-OP>
8013:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):250:inputrec.readFully(byteArray) |==> <NO-OP>
8014:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):253:record.addVariableField(parseDataField(tags[i], byteArray)) |==> <NO-OP>
8015:ROR:!=(int,int):<(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):261:inputrec.read() != Constants.RT |==> inputrec.read() < Constants.RT
8016:ROR:!=(int,int):>(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):261:inputrec.read() != Constants.RT |==> inputrec.read() > Constants.RT
8017:ROR:!=(int,int):TRUE(int,int):org.marc4j.MarcStreamReader@parseRecord(org.marc4j.marc.Record,byte[],byte[],int):261:inputrec.read() != Constants.RT |==> true
8018:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):270:new ByteArrayInputStream(field) |==> null
8019:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):271:(char)bais.read() |==> 0
8020:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):272:(char)bais.read() |==> 0
8021:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):274:factory.newDataField() |==> null
8022:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):275:dataField.setTag(tag) |==> <NO-OP>
8023:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):276:dataField.setIndicator1(ind1) |==> <NO-OP>
8024:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):277:dataField.setIndicator2(ind2) |==> <NO-OP>
8025:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):285:bais.read() |==> 0
8026:LVR:0:POS:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):286:0 |==> 1
8027:LVR:0:NEG:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):286:0 |==> -1
8028:ROR:<(int,int):!=(int,int):org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):286:readByte < 0 |==> readByte != 0
8029:ROR:<(int,int):<=(int,int):org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):286:readByte < 0 |==> readByte <= 0
8030:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):286:readByte < 0 |==> false
8031:STD:<BREAK>:<NO-OP>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):287:break; |==> <NO-OP>
8032:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):291:bais.read() |==> 0
8033:LVR:0:POS:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):292:0 |==> 1
8034:LVR:0:NEG:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):292:0 |==> -1
8035:ROR:<(int,int):!=(int,int):org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):292:code < 0 |==> code != 0
8036:ROR:<(int,int):<=(int,int):org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):292:code < 0 |==> code <= 0
8037:ROR:<(int,int):FALSE(int,int):org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):292:code < 0 |==> false
8038:ROR:==(int,int):<=(int,int):org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):295:code == Constants.FT |==> code <= Constants.FT
8039:ROR:==(int,int):>=(int,int):org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):295:code == Constants.FT |==> code >= Constants.FT
8040:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):295:code == Constants.FT |==> false
8041:STD:<BREAK>:<NO-OP>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):296:break; |==> <NO-OP>
8042:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):298:getSubfieldLength(bais) |==> 0
8043:EVR:<NEW_ARRAY>:<DEFAULT>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):299:new byte[size] |==> null
8044:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):300:bais.read(data) |==> <NO-OP>
8045:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):301:factory.newSubfield() |==> null
8046:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):302:subfield.setCode((char)code) |==> <NO-OP>
8047:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):303:subfield.setData(getDataAsString(data)) |==> <NO-OP>
8048:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):304:dataField.addSubfield(subfield) |==> <NO-OP>
8049:STD:<BREAK>:<NO-OP>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):307:break; |==> <NO-OP>
8050:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcStreamReader@parseDataField(java.lang.String,byte[]):310:dataField |==> null
8051:LVR:POS:0:org.marc4j.MarcStreamReader@getFieldLength(java.io.DataInputStream):314:9999 |==> 0
8052:LVR:POS:NEG:org.marc4j.MarcStreamReader@getFieldLength(java.io.DataInputStream):314:9999 |==> -9999
8053:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@getFieldLength(java.io.DataInputStream):314:bais.mark(9999) |==> <NO-OP>
8054:LVR:0:POS:org.marc4j.MarcStreamReader@getFieldLength(java.io.DataInputStream):315:0 |==> 1
8055:LVR:0:NEG:org.marc4j.MarcStreamReader@getFieldLength(java.io.DataInputStream):315:0 |==> -1
8056:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@getFieldLength(java.io.DataInputStream):319:bais.reset() |==> <NO-OP>
8057:STD:<RETURN>:<NO-OP>:org.marc4j.MarcStreamReader@getFieldLength(java.io.DataInputStream):320:return bytesRead; |==> <NO-OP>
8058:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@getFieldLength(java.io.DataInputStream):322:bais.reset() |==> <NO-OP>
8059:STD:<INC>:<NO-OP>:org.marc4j.MarcStreamReader@getFieldLength(java.io.DataInputStream):326:bytesRead++ |==> <NO-OP>
8060:LVR:POS:0:org.marc4j.MarcStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):332:9999 |==> 0
8061:LVR:POS:NEG:org.marc4j.MarcStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):332:9999 |==> -9999
8062:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):332:bais.mark(9999) |==> <NO-OP>
8063:LVR:0:POS:org.marc4j.MarcStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):333:0 |==> 1
8064:LVR:0:NEG:org.marc4j.MarcStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):333:0 |==> -1
8065:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):338:bais.reset() |==> <NO-OP>
8066:STD:<RETURN>:<NO-OP>:org.marc4j.MarcStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):339:return bytesRead; |==> <NO-OP>
8067:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):341:bais.reset() |==> <NO-OP>
8068:STD:<INC>:<NO-OP>:org.marc4j.MarcStreamReader@getSubfieldLength(java.io.ByteArrayInputStream):344:bytesRead++ |==> <NO-OP>
8069:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcStreamReader@parseRecordLength(byte[]):350:new InputStreamReader(new ByteArrayInputStream(leaderData), "ISO-8859-1") |==> null
8070:LVR:NEG:0:org.marc4j.MarcStreamReader@parseRecordLength(byte[]):351:-1 |==> 0
8071:LVR:NEG:POS:org.marc4j.MarcStreamReader@parseRecordLength(byte[]):351:-1 |==> 1
8072:LVR:POS:0:org.marc4j.MarcStreamReader@parseRecordLength(byte[]):352:5 |==> 0
8073:LVR:POS:NEG:org.marc4j.MarcStreamReader@parseRecordLength(byte[]):352:5 |==> -5
8074:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecordLength(byte[]):353:isr.read(tmp) |==> <NO-OP>
8075:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@parseRecordLength(byte[]):355:length = Integer.parseInt(new String(tmp)) |==> <NO-OP>
8076:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcStreamReader@parseRecordLength(byte[]):359:length |==> 0
8077:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):363:new InputStreamReader(new ByteArrayInputStream(leaderData), "ISO-8859-1") |==> null
8078:LVR:POS:0:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):364:5 |==> 0
8079:LVR:POS:NEG:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):364:5 |==> -5
8080:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):365:isr.read(tmp) |==> <NO-OP>
8081:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):368:ldr.setRecordStatus((char)isr.read()) |==> <NO-OP>
8082:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):369:ldr.setTypeOfRecord((char)isr.read()) |==> <NO-OP>
8083:LVR:POS:0:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):370:2 |==> 0
8084:LVR:POS:NEG:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):370:2 |==> -2
8085:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):370:tmp = new char[2] |==> <NO-OP>
8086:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):371:isr.read(tmp) |==> <NO-OP>
8087:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):372:ldr.setImplDefined1(tmp) |==> <NO-OP>
8088:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):373:ldr.setCharCodingScheme((char)isr.read()) |==> <NO-OP>
8089:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):374:(char)isr.read() |==> 0
8090:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):375:(char)isr.read() |==> 0
8091:LVR:POS:0:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):376:5 |==> 0
8092:LVR:POS:NEG:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):376:5 |==> -5
8093:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):377:isr.read(baseAddr) |==> <NO-OP>
8094:LVR:POS:0:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):378:3 |==> 0
8095:LVR:POS:NEG:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):378:3 |==> -3
8096:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):378:tmp = new char[3] |==> <NO-OP>
8097:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):379:isr.read(tmp) |==> <NO-OP>
8098:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):380:ldr.setImplDefined2(tmp) |==> <NO-OP>
8099:LVR:POS:0:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):381:4 |==> 0
8100:LVR:POS:NEG:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):381:4 |==> -4
8101:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):381:tmp = new char[4] |==> <NO-OP>
8102:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):382:isr.read(tmp) |==> <NO-OP>
8103:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):383:ldr.setEntryMap(tmp) |==> <NO-OP>
8104:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):384:isr.close() |==> <NO-OP>
8105:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):386:ldr.setIndicatorCount(Integer.parseInt(String.valueOf(indicatorCount))) |==> <NO-OP>
8106:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):391:ldr.setSubfieldCodeLength(Integer.parseInt(String.valueOf(subfieldCodeLength))) |==> <NO-OP>
8107:STD:<CALL>:<NO-OP>:org.marc4j.MarcStreamReader@parseLeader(org.marc4j.marc.Leader,byte[]):396:ldr.setBaseAddressOfData(Integer.parseInt(new String(baseAddr))) |==> <NO-OP>
8108:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcStreamReader@getDataAsString(byte[]):405:encoding.equals("UTF-8") || encoding.equals("UTF8") |==> encoding.equals("UTF-8") != encoding.equals("UTF8")
8109:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcStreamReader@getDataAsString(byte[]):405:encoding.equals("UTF-8") || encoding.equals("UTF8") |==> encoding.equals("UTF-8")
8110:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcStreamReader@getDataAsString(byte[]):405:encoding.equals("UTF-8") || encoding.equals("UTF8") |==> encoding.equals("UTF8")
8111:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcStreamReader@getDataAsString(byte[]):405:encoding.equals("UTF-8") || encoding.equals("UTF8") |==> true
8112:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcStreamReader@getDataAsString(byte[]):407:new String(bytes, "UTF8") |==> null
8113:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcStreamReader@getDataAsString(byte[]):411:encoding.equals("MARC-8") || encoding.equals("MARC8") |==> encoding.equals("MARC-8") != encoding.equals("MARC8")
8114:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcStreamReader@getDataAsString(byte[]):411:encoding.equals("MARC-8") || encoding.equals("MARC8") |==> encoding.equals("MARC-8")
8115:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcStreamReader@getDataAsString(byte[]):411:encoding.equals("MARC-8") || encoding.equals("MARC8") |==> encoding.equals("MARC8")
8116:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcStreamReader@getDataAsString(byte[]):411:encoding.equals("MARC-8") || encoding.equals("MARC8") |==> true
8117:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcStreamReader@getDataAsString(byte[]):412:converterAnsel == null |==> false
8118:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@getDataAsString(byte[]):413:converterAnsel = new AnselToUnicode() |==> <NO-OP>
8119:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcStreamReader@getDataAsString(byte[]):415:dataElement = converterAnsel.convert(bytes) |==> <NO-OP>
8120:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcStreamReader@getDataAsString(byte[]):416:encoding.equals("ISO-8859-1") || encoding.equals("ISO8859_1") |==> encoding.equals("ISO-8859-1") != encoding.equals("ISO8859_1")
8121:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcStreamReader@getDataAsString(byte[]):416:encoding.equals("ISO-8859-1") || encoding.equals("ISO8859_1") |==> encoding.equals("ISO-8859-1")
8122:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcStreamReader@getDataAsString(byte[]):416:encoding.equals("ISO-8859-1") || encoding.equals("ISO8859_1") |==> encoding.equals("ISO8859_1")
8123:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcStreamReader@getDataAsString(byte[]):416:encoding.equals("ISO-8859-1") || encoding.equals("ISO8859_1") |==> true
8124:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcStreamReader@getDataAsString(byte[]):416:encoding.equals("ISO-8859-1") || encoding.equals("ISO8859_1") || encoding.equals("ISO_8859_1") |==> (encoding.equals("ISO-8859-1") || encoding.equals("ISO8859_1")) != encoding.equals("ISO_8859_1")
8125:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcStreamReader@getDataAsString(byte[]):416:encoding.equals("ISO-8859-1") || encoding.equals("ISO8859_1") || encoding.equals("ISO_8859_1") |==> encoding.equals("ISO-8859-1") || encoding.equals("ISO8859_1")
8126:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcStreamReader@getDataAsString(byte[]):416:encoding.equals("ISO-8859-1") || encoding.equals("ISO8859_1") || encoding.equals("ISO_8859_1") |==> encoding.equals("ISO_8859_1")
8127:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcStreamReader@getDataAsString(byte[]):416:encoding.equals("ISO-8859-1") || encoding.equals("ISO8859_1") || encoding.equals("ISO_8859_1") |==> true
8128:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcStreamReader@getDataAsString(byte[]):418:new String(bytes, "ISO-8859-1") |==> null
8129:COR:override:TRUE:org.marc4j.MarcStreamReader@getDataAsString(byte[]):422:override |==> false
8130:COR:override:FALSE:org.marc4j.MarcStreamReader@getDataAsString(byte[]):422:override |==> true
8131:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcStreamReader@getDataAsString(byte[]):424:new String(bytes, encoding) |==> null
8132:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcStreamReader@getDataAsString(byte[]):429:dataElement |==> null
8133:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,boolean):51:reader = r |==> <NO-OP>
8134:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,boolean):52:convert = new AnselToUnicode() |==> <NO-OP>
8135:COR:unicodeNormalizeBool:TRUE:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,boolean):54:unicodeNormalizeBool |==> false
8136:COR:unicodeNormalizeBool:FALSE:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,boolean):54:unicodeNormalizeBool |==> true
8137:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,boolean):55:this.unicodeNormalize = Normalizer.Form.NFC |==> <NO-OP>
8138:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,java.lang.String):68:reader = r |==> <NO-OP>
8139:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,java.lang.String):69:convert = new AnselToUnicode() |==> <NO-OP>
8140:COR:unicodeNormalizeStr.equals("KC"):TRUE:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,java.lang.String):71:unicodeNormalizeStr.equals("KC") |==> false
8141:COR:unicodeNormalizeStr.equals("KC"):FALSE:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,java.lang.String):71:unicodeNormalizeStr.equals("KC") |==> true
8142:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,java.lang.String):72:unicodeNormalize = Normalizer.Form.NFKC |==> <NO-OP>
8143:COR:unicodeNormalizeStr.equals("KD"):TRUE:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,java.lang.String):73:unicodeNormalizeStr.equals("KD") |==> false
8144:COR:unicodeNormalizeStr.equals("KD"):FALSE:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,java.lang.String):73:unicodeNormalizeStr.equals("KD") |==> true
8145:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,java.lang.String):74:unicodeNormalize = Normalizer.Form.NFKD |==> <NO-OP>
8146:COR:unicodeNormalizeStr.equals("C"):TRUE:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,java.lang.String):75:unicodeNormalizeStr.equals("C") |==> false
8147:COR:unicodeNormalizeStr.equals("C"):FALSE:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,java.lang.String):75:unicodeNormalizeStr.equals("C") |==> true
8148:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,java.lang.String):76:unicodeNormalize = Normalizer.Form.NFC |==> <NO-OP>
8149:COR:unicodeNormalizeStr.equals("D"):TRUE:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,java.lang.String):77:unicodeNormalizeStr.equals("D") |==> false
8150:COR:unicodeNormalizeStr.equals("D"):FALSE:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,java.lang.String):77:unicodeNormalizeStr.equals("D") |==> true
8151:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,java.lang.String):78:unicodeNormalize = Normalizer.Form.NFD |==> <NO-OP>
8152:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcTranslatedReader@<init>(org.marc4j.MarcReader,java.lang.String):80:unicodeNormalize = null |==> <NO-OP>
8153:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcTranslatedReader@hasNext():89:reader.hasNext() |==> false
8154:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcTranslatedReader@next():97:reader.next() |==> null
8155:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcTranslatedReader@next():98:rec.getLeader() |==> null
8156:LVR:FALSE:TRUE:org.marc4j.MarcTranslatedReader@next():99:false |==> true
8157:ROR:==(int,int):<=(int,int):org.marc4j.MarcTranslatedReader@next():101:l.getCharCodingScheme() == 'a' |==> l.getCharCodingScheme() <= 'a'
8158:ROR:==(int,int):>=(int,int):org.marc4j.MarcTranslatedReader@next():101:l.getCharCodingScheme() == 'a' |==> l.getCharCodingScheme() >= 'a'
8159:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcTranslatedReader@next():101:l.getCharCodingScheme() == 'a' |==> false
8160:LVR:TRUE:FALSE:org.marc4j.MarcTranslatedReader@next():102:true |==> false
8161:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcTranslatedReader@next():102:is_utf_8 = true |==> <NO-OP>
8162:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcTranslatedReader@next():105:unicodeNormalize == null |==> false
8163:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcTranslatedReader@next():105:is_utf_8 && unicodeNormalize == null |==> is_utf_8 == (unicodeNormalize == null)
8164:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcTranslatedReader@next():105:is_utf_8 && unicodeNormalize == null |==> false
8165:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcTranslatedReader@next():105:is_utf_8 && unicodeNormalize == null |==> is_utf_8
8166:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcTranslatedReader@next():105:is_utf_8 && unicodeNormalize == null |==> unicodeNormalize == null
8167:STD:<RETURN>:<NO-OP>:org.marc4j.MarcTranslatedReader@next():106:return (rec); |==> <NO-OP>
8168:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcTranslatedReader@next():109:rec.getVariableFields() |==> null
8169:STD:<CONT>:<NO-OP>:org.marc4j.MarcTranslatedReader@next():113:continue; |==> <NO-OP>
8170:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcTranslatedReader@next():116:(DataField)f |==> null
8171:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcTranslatedReader@next():117:field.getSubfields() |==> null
8172:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcTranslatedReader@next():120:sf.getData() |==> null
8173:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcTranslatedReader@next():121:oldData |==> null
8174:COR:is_utf_8:TRUE:org.marc4j.MarcTranslatedReader@next():123:is_utf_8 |==> false
8175:COR:is_utf_8:FALSE:org.marc4j.MarcTranslatedReader@next():123:is_utf_8 |==> true
8176:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcTranslatedReader@next():124:newData = convert.convert(newData) |==> <NO-OP>
8177:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcTranslatedReader@next():127:unicodeNormalize != null |==> true
8178:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcTranslatedReader@next():128:newData = Normalizer.normalize(newData, unicodeNormalize) |==> <NO-OP>
8179:COR:oldData.equals(newData):TRUE:org.marc4j.MarcTranslatedReader@next():131:oldData.equals(newData) |==> false
8180:COR:oldData.equals(newData):FALSE:org.marc4j.MarcTranslatedReader@next():131:oldData.equals(newData) |==> true
8181:STD:<CALL>:<NO-OP>:org.marc4j.MarcTranslatedReader@next():132:sf.setData(newData) |==> <NO-OP>
8182:STD:<CALL>:<NO-OP>:org.marc4j.MarcTranslatedReader@next():137:l.setCharCodingScheme('a') |==> <NO-OP>
8183:STD:<CALL>:<NO-OP>:org.marc4j.MarcTranslatedReader@next():138:rec.setLeader(l) |==> <NO-OP>
8184:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcTranslatedReader@next():140:rec |==> null
8185:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcUnprettyXmlReader@<init>(java.io.InputStream):17:reader = new MarcXmlReader(input) |==> <NO-OP>
8186:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcUnprettyXmlReader@hasNext():27:reader.hasNext() |==> false
8187:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcUnprettyXmlReader@next():38:reader.next() |==> null
8188:STD:<CALL>:<NO-OP>:org.marc4j.MarcUnprettyXmlReader@next():39:rec.getLeader().setCharCodingScheme('a') |==> <NO-OP>
8189:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcUnprettyXmlReader@next():40:rec.getVariableFields() |==> null
8190:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcUnprettyXmlReader@next():44:(ControlField)f |==> null
8191:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcUnprettyXmlReader@next():45:cf.getData() |==> null
8192:COR:data.contains("\n"):TRUE:org.marc4j.MarcUnprettyXmlReader@next():46:data.contains("\n") |==> false
8193:COR:data.contains("\n"):FALSE:org.marc4j.MarcUnprettyXmlReader@next():46:data.contains("\n") |==> true
8194:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcUnprettyXmlReader@next():47:data = data.replaceAll("\\r?\\n[ \t]*", " ") |==> <NO-OP>
8195:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcUnprettyXmlReader@next():48:data = data.trim() |==> <NO-OP>
8196:STD:<CALL>:<NO-OP>:org.marc4j.MarcUnprettyXmlReader@next():49:cf.setData(data) |==> <NO-OP>
8197:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcUnprettyXmlReader@next():52:(DataField)f |==> null
8198:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcUnprettyXmlReader@next():53:df.getSubfields() |==> null
8199:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcUnprettyXmlReader@next():55:(Subfield)s |==> null
8200:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcUnprettyXmlReader@next():56:sf.getData() |==> null
8201:COR:data.contains("\n"):TRUE:org.marc4j.MarcUnprettyXmlReader@next():57:data.contains("\n") |==> false
8202:COR:data.contains("\n"):FALSE:org.marc4j.MarcUnprettyXmlReader@next():57:data.contains("\n") |==> true
8203:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcUnprettyXmlReader@next():58:data = data.replaceAll("\\r?\\n[ \t]*", " ") |==> <NO-OP>
8204:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcUnprettyXmlReader@next():59:data = data.trim() |==> <NO-OP>
8205:STD:<CALL>:<NO-OP>:org.marc4j.MarcUnprettyXmlReader@next():60:sf.setData(data) |==> <NO-OP>
8206:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcUnprettyXmlReader@next():65:rec |==> null
8207:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlReader@<init>(org.xml.sax.InputSource):94:new RecordStack() |==> null
8208:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlReader@<init>(org.xml.sax.InputSource):95:new MarcXmlParserThread(queue, input) |==> null
8209:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlReader@<init>(org.xml.sax.InputSource):96:producer.start() |==> <NO-OP>
8210:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlReader@<init>(org.xml.sax.InputSource,javax.xml.transform.Source):141:new RecordStack() |==> null
8211:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlReader@<init>(org.xml.sax.InputSource,javax.xml.transform.Source):142:new MarcXmlParserThread(queue, input) |==> null
8212:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlReader@<init>(org.xml.sax.InputSource,javax.xml.transform.Source):143:TransformerFactory.newInstance() |==> null
8213:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcXmlReader@<init>(org.xml.sax.InputSource,javax.xml.transform.Source):144:(SAXTransformerFactory)factory |==> null
8214:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlReader@<init>(org.xml.sax.InputSource,javax.xml.transform.Source):147:stf.newTransformerHandler(stylesheet) |==> null
8215:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlReader@<init>(org.xml.sax.InputSource,javax.xml.transform.Source):151:producer.setTransformerHandler(th) |==> <NO-OP>
8216:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlReader@<init>(org.xml.sax.InputSource,javax.xml.transform.Source):152:producer.start() |==> <NO-OP>
8217:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlReader@<init>(org.xml.sax.InputSource,javax.xml.transform.sax.TransformerHandler):190:new RecordStack() |==> null
8218:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlReader@<init>(org.xml.sax.InputSource,javax.xml.transform.sax.TransformerHandler):191:new MarcXmlParserThread(queue, input) |==> null
8219:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlReader@<init>(org.xml.sax.InputSource,javax.xml.transform.sax.TransformerHandler):192:producer.setTransformerHandler(th) |==> <NO-OP>
8220:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlReader@<init>(org.xml.sax.InputSource,javax.xml.transform.sax.TransformerHandler):193:producer.start() |==> <NO-OP>
8221:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlReader@hasNext():203:queue.hasNext() |==> false
8222:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlReader@next():213:queue.pop() |==> null
8223:LVR:FALSE:TRUE:org.marc4j.RecordStack:41:false |==> true
8224:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.RecordStack@<init>():47:new ArrayList<Record>() |==> null
8225:LVR:0:POS:org.marc4j.RecordStack@push(org.marc4j.marc.Record):56:0 |==> 1
8226:LVR:0:NEG:org.marc4j.RecordStack@push(org.marc4j.marc.Record):56:0 |==> -1
8227:ROR:>(int,int):!=(int,int):org.marc4j.RecordStack@push(org.marc4j.marc.Record):56:list.size() > 0 |==> list.size() != 0
8228:ROR:>(int,int):>=(int,int):org.marc4j.RecordStack@push(org.marc4j.marc.Record):56:list.size() > 0 |==> list.size() >= 0
8229:ROR:>(int,int):FALSE(int,int):org.marc4j.RecordStack@push(org.marc4j.marc.Record):56:list.size() > 0 |==> false
8230:STD:<CALL>:<NO-OP>:org.marc4j.RecordStack@push(org.marc4j.marc.Record):58:wait() |==> <NO-OP>
8231:STD:<CALL>:<NO-OP>:org.marc4j.RecordStack@push(org.marc4j.marc.Record):62:list.add(record) |==> <NO-OP>
8232:STD:<CALL>:<NO-OP>:org.marc4j.RecordStack@push(org.marc4j.marc.Record):63:notifyAll() |==> <NO-OP>
8233:LVR:0:POS:org.marc4j.RecordStack@pop():73:0 |==> 1
8234:LVR:0:NEG:org.marc4j.RecordStack@pop():73:0 |==> -1
8235:ROR:<=(int,int):<(int,int):org.marc4j.RecordStack@pop():73:list.size() <= 0 |==> list.size() < 0
8236:ROR:<=(int,int):==(int,int):org.marc4j.RecordStack@pop():73:list.size() <= 0 |==> list.size() == 0
8237:ROR:<=(int,int):TRUE(int,int):org.marc4j.RecordStack@pop():73:list.size() <= 0 |==> true
8238:LVR:TRUE:FALSE:org.marc4j.RecordStack@pop():73:true |==> false
8239:ROR:!=(boolean,boolean):LHS(boolean,boolean):org.marc4j.RecordStack@pop():73:eof != true |==> eof
8240:ROR:!=(boolean,boolean):RHS(boolean,boolean):org.marc4j.RecordStack@pop():73:eof != true |==> true
8241:ROR:!=(boolean,boolean):TRUE(boolean,boolean):org.marc4j.RecordStack@pop():73:eof != true |==> true
8242:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.RecordStack@pop():73:list.size() <= 0 && eof != true |==> list.size() <= 0 == (eof != true)
8243:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.RecordStack@pop():73:list.size() <= 0 && eof != true |==> false
8244:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.RecordStack@pop():73:list.size() <= 0 && eof != true |==> list.size() <= 0
8245:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.RecordStack@pop():73:list.size() <= 0 && eof != true |==> eof != true
8246:STD:<CALL>:<NO-OP>:org.marc4j.RecordStack@pop():75:wait() |==> <NO-OP>
8247:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.RecordStack@pop():79:re != null |==> true
8248:LVR:0:POS:org.marc4j.RecordStack@pop():83:0 |==> 1
8249:LVR:0:NEG:org.marc4j.RecordStack@pop():83:0 |==> -1
8250:ROR:>(int,int):!=(int,int):org.marc4j.RecordStack@pop():83:list.size() > 0 |==> list.size() != 0
8251:ROR:>(int,int):>=(int,int):org.marc4j.RecordStack@pop():83:list.size() > 0 |==> list.size() >= 0
8252:ROR:>(int,int):FALSE(int,int):org.marc4j.RecordStack@pop():83:list.size() > 0 |==> false
8253:LVR:0:POS:org.marc4j.RecordStack@pop():84:0 |==> 1
8254:LVR:0:NEG:org.marc4j.RecordStack@pop():84:0 |==> -1
8255:STD:<ASSIGN>:<NO-OP>:org.marc4j.RecordStack@pop():84:record = list.remove(0) |==> <NO-OP>
8256:STD:<CALL>:<NO-OP>:org.marc4j.RecordStack@pop():86:notifyAll() |==> <NO-OP>
8257:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.RecordStack@pop():87:record |==> null
8258:LVR:0:POS:org.marc4j.RecordStack@hasNext():98:0 |==> 1
8259:LVR:0:NEG:org.marc4j.RecordStack@hasNext():98:0 |==> -1
8260:ROR:<=(int,int):<(int,int):org.marc4j.RecordStack@hasNext():98:list.size() <= 0 |==> list.size() < 0
8261:ROR:<=(int,int):==(int,int):org.marc4j.RecordStack@hasNext():98:list.size() <= 0 |==> list.size() == 0
8262:ROR:<=(int,int):TRUE(int,int):org.marc4j.RecordStack@hasNext():98:list.size() <= 0 |==> true
8263:LVR:TRUE:FALSE:org.marc4j.RecordStack@hasNext():98:true |==> false
8264:ROR:!=(boolean,boolean):LHS(boolean,boolean):org.marc4j.RecordStack@hasNext():98:eof != true |==> eof
8265:ROR:!=(boolean,boolean):RHS(boolean,boolean):org.marc4j.RecordStack@hasNext():98:eof != true |==> true
8266:ROR:!=(boolean,boolean):TRUE(boolean,boolean):org.marc4j.RecordStack@hasNext():98:eof != true |==> true
8267:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.RecordStack@hasNext():98:list.size() <= 0 && eof != true |==> list.size() <= 0 == (eof != true)
8268:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.RecordStack@hasNext():98:list.size() <= 0 && eof != true |==> false
8269:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.RecordStack@hasNext():98:list.size() <= 0 && eof != true |==> list.size() <= 0
8270:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.RecordStack@hasNext():98:list.size() <= 0 && eof != true |==> eof != true
8271:STD:<CALL>:<NO-OP>:org.marc4j.RecordStack@hasNext():100:wait() |==> <NO-OP>
8272:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.RecordStack@hasNext():104:re != null |==> true
8273:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.RecordStack@hasNext():107:!isEmpty() || !eof |==> !isEmpty() != !eof
8274:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.RecordStack@hasNext():107:!isEmpty() || !eof |==> !isEmpty()
8275:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.RecordStack@hasNext():107:!isEmpty() || !eof |==> !eof
8276:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.RecordStack@hasNext():107:!isEmpty() || !eof |==> true
8277:LVR:TRUE:FALSE:org.marc4j.RecordStack@hasNext():108:true |==> false
8278:STD:<RETURN>:<NO-OP>:org.marc4j.RecordStack@hasNext():108:return Config.__M_NO == 0 && Config.COVERED(8277, 8277) ? true : Config.__M_NO == 8277 ? false : true; |==> <NO-OP>
8279:LVR:FALSE:TRUE:org.marc4j.RecordStack@hasNext():110:false |==> true
8280:STD:<ASSIGN>:<NO-OP>:org.marc4j.RecordStack@passException(java.lang.RuntimeException):121:re = e |==> <NO-OP>
8281:LVR:TRUE:FALSE:org.marc4j.RecordStack@passException(java.lang.RuntimeException):122:true |==> false
8282:STD:<ASSIGN>:<NO-OP>:org.marc4j.RecordStack@passException(java.lang.RuntimeException):122:eof = true |==> <NO-OP>
8283:STD:<CALL>:<NO-OP>:org.marc4j.RecordStack@passException(java.lang.RuntimeException):123:notifyAll() |==> <NO-OP>
8284:LVR:TRUE:FALSE:org.marc4j.RecordStack@end():130:true |==> false
8285:STD:<ASSIGN>:<NO-OP>:org.marc4j.RecordStack@end():130:eof = true |==> <NO-OP>
8286:STD:<CALL>:<NO-OP>:org.marc4j.RecordStack@end():131:notifyAll() |==> <NO-OP>
8287:LVR:0:POS:org.marc4j.RecordStack@isEmpty():140:0 |==> 1
8288:LVR:0:NEG:org.marc4j.RecordStack@isEmpty():140:0 |==> -1
8289:ROR:==(int,int):<=(int,int):org.marc4j.RecordStack@isEmpty():140:list.size() == 0 |==> list.size() <= 0
8290:ROR:==(int,int):>=(int,int):org.marc4j.RecordStack@isEmpty():140:list.size() == 0 |==> list.size() >= 0
8291:ROR:==(int,int):FALSE(int,int):org.marc4j.RecordStack@isEmpty():140:list.size() == 0 |==> false
8292:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlHandler:100:new HashMap<String, Integer>() |==> null
8293:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler:101:ELEMENTS.put("collection", new Integer(COLLECTION_ID)) |==> <NO-OP>
8294:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler:102:ELEMENTS.put("leader", new Integer(LEADER_ID)) |==> <NO-OP>
8295:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler:103:ELEMENTS.put("record", new Integer(RECORD_ID)) |==> <NO-OP>
8296:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler:104:ELEMENTS.put("controlfield", new Integer(CONTROLFIELD_ID)) |==> <NO-OP>
8297:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler:105:ELEMENTS.put("datafield", new Integer(DATAFIELD_ID)) |==> <NO-OP>
8298:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler:106:ELEMENTS.put("subfield", new Integer(SUBFIELD_ID)) |==> <NO-OP>
8299:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlHandler:108:new HashSet<String>() |==> null
8300:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler:109:RECORD_TYPES.add("Bibliographic") |==> <NO-OP>
8301:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler:110:RECORD_TYPES.add("Authority") |==> <NO-OP>
8302:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler:111:RECORD_TYPES.add("Holdings") |==> <NO-OP>
8303:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler:112:RECORD_TYPES.add("Classification") |==> <NO-OP>
8304:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler:113:RECORD_TYPES.add("Community") |==> <NO-OP>
8305:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcXmlHandler@<init>(org.marc4j.RecordStack):122:queue |==> null
8306:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@<init>(org.marc4j.RecordStack):123:factory = MarcFactory.newInstance() |==> <NO-OP>
8307:LVR:0:POS:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):139:0 |==> 1
8308:LVR:0:NEG:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):139:0 |==> -1
8309:ROR:==(int,int):<=(int,int):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):139:name.length() == 0 |==> name.length() <= 0
8310:ROR:==(int,int):>=(int,int):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):139:name.length() == 0 |==> name.length() >= 0
8311:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):139:name.length() == 0 |==> false
8312:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):140:ELEMENTS.get(stripNsPrefix(realname)) |==> null
8313:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):142:elementType == null |==> false
8314:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):143:record != null |==> true
8315:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):144:record.addError("n/a", "n/a", MarcError.MINOR_ERROR, "Unexpected XML element: " + realname) |==> <NO-OP>
8316:STD:<RETURN>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):145:return; |==> <NO-OP>
8317:STD:<BREAK>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):153:break; |==> <NO-OP>
8318:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):155:atts.getValue(TYPE_ATTR) |==> null
8319:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):157:record = factory.newRecord() |==> <NO-OP>
8320:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):159:typeAttr != null |==> true
8321:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):159:typeAttr != null && RECORD_TYPES.contains(typeAttr) |==> typeAttr != null == RECORD_TYPES.contains(typeAttr)
8322:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):159:typeAttr != null && RECORD_TYPES.contains(typeAttr) |==> false
8323:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):159:typeAttr != null && RECORD_TYPES.contains(typeAttr) |==> typeAttr != null
8324:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):159:typeAttr != null && RECORD_TYPES.contains(typeAttr) |==> RECORD_TYPES.contains(typeAttr)
8325:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):160:record.setType(typeAttr) |==> <NO-OP>
8326:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):162:prev_tag = "n/a" |==> <NO-OP>
8327:STD:<BREAK>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):164:break; |==> <NO-OP>
8328:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):166:sb = new StringBuffer() |==> <NO-OP>
8329:STD:<BREAK>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):167:break; |==> <NO-OP>
8330:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):169:tag = atts.getValue(TAG_ATTR) |==> <NO-OP>
8331:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):171:tag == null |==> false
8332:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):172:record != null |==> true
8333:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):173:record.addError("n/a", "n/a", MarcError.MINOR_ERROR, "Missing tag element in ControlField after tag: " + prev_tag) |==> <NO-OP>
8334:STD:<BREAK>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):177:break; |==> <NO-OP>
8335:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):180:controlField = factory.newControlField(tag) |==> <NO-OP>
8336:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):181:sb = new StringBuffer() |==> <NO-OP>
8337:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):184:tag = atts.getValue(TAG_ATTR) |==> <NO-OP>
8338:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):186:tag == null |==> false
8339:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):187:record != null |==> true
8340:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):188:record.addError("n/a", "n/a", MarcError.MINOR_ERROR, "Missing tag element in datafield after tag: " + prev_tag) |==> <NO-OP>
8341:STD:<BREAK>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):192:break; |==> <NO-OP>
8342:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):195:atts.getValue(IND_1_ATTR) |==> null
8343:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):196:atts.getValue(IND_2_ATTR) |==> null
8344:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):198:ind1 == null |==> false
8345:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):199:record != null |==> true
8346:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):200:record.addError(tag, "n/a", MarcError.MINOR_ERROR, "DataField (" + tag + ") missing first indicator") |==> <NO-OP>
8347:STD:<BREAK>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):204:break; |==> <NO-OP>
8348:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):207:ind2 == null |==> false
8349:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):208:record != null |==> true
8350:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):209:record.addError(tag, "n/a", MarcError.MINOR_ERROR, "DataField (" + tag + ") missing second indicator") |==> <NO-OP>
8351:STD:<BREAK>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):213:break; |==> <NO-OP>
8352:LVR:0:POS:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):216:0 |==> 1
8353:LVR:0:NEG:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):216:0 |==> -1
8354:ROR:==(int,int):<=(int,int):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):216:ind1.length() == 0 |==> ind1.length() <= 0
8355:ROR:==(int,int):>=(int,int):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):216:ind1.length() == 0 |==> ind1.length() >= 0
8356:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):216:ind1.length() == 0 |==> false
8357:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):217:ind1 = " " |==> <NO-OP>
8358:LVR:0:POS:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):220:0 |==> 1
8359:LVR:0:NEG:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):220:0 |==> -1
8360:ROR:==(int,int):<=(int,int):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):220:ind2.length() == 0 |==> ind2.length() <= 0
8361:ROR:==(int,int):>=(int,int):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):220:ind2.length() == 0 |==> ind2.length() >= 0
8362:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):220:ind2.length() == 0 |==> false
8363:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):221:ind2 = " " |==> <NO-OP>
8364:LVR:0:POS:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):224:0 |==> 1
8365:LVR:0:NEG:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):224:0 |==> -1
8366:LVR:0:POS:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):224:0 |==> 1
8367:LVR:0:NEG:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):224:0 |==> -1
8368:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):224:dataField = factory.newDataField(tag, ind1.charAt(0), ind2.charAt(0)) |==> <NO-OP>
8369:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):227:atts.getValue(CODE_ATTR) |==> null
8370:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):229:code == null |==> false
8371:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):230:record != null |==> true
8372:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):231:record.addError(tag, "n/a", MarcError.MINOR_ERROR, "Subfield (" + tag + ") missing code attribute") |==> <NO-OP>
8373:STD:<BREAK>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):235:break; |==> <NO-OP>
8374:LVR:0:POS:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):238:0 |==> 1
8375:LVR:0:NEG:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):238:0 |==> -1
8376:ROR:==(int,int):<=(int,int):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):238:code.length() == 0 |==> code.length() <= 0
8377:ROR:==(int,int):>=(int,int):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):238:code.length() == 0 |==> code.length() >= 0
8378:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):238:code.length() == 0 |==> false
8379:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):239:code = " " |==> <NO-OP>
8380:LVR:0:POS:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):242:0 |==> 1
8381:LVR:0:NEG:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):242:0 |==> -1
8382:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):242:subfield = factory.newSubfield(code.charAt(0)) |==> <NO-OP>
8383:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):243:sb = new StringBuffer() |==> <NO-OP>
8384:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):245:prev_tag = tag |==> <NO-OP>
8385:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@characters(char[],int,int):257:sb != null |==> true
8386:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler@characters(char[],int,int):258:sb.append(ch, start, length) |==> <NO-OP>
8387:LVR:0:POS:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):271:0 |==> 1
8388:LVR:0:NEG:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):271:0 |==> -1
8389:ROR:==(int,int):<=(int,int):org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):271:name.length() == 0 |==> name.length() <= 0
8390:ROR:==(int,int):>=(int,int):org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):271:name.length() == 0 |==> name.length() >= 0
8391:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):271:name.length() == 0 |==> false
8392:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):272:ELEMENTS.get(stripNsPrefix(realname)) |==> null
8393:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):274:elementType == null |==> false
8394:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):275:record != null |==> true
8395:STD:<RETURN>:<NO-OP>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):277:return; |==> <NO-OP>
8396:STD:<BREAK>:<NO-OP>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):285:break; |==> <NO-OP>
8397:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):287:queue.push(record) |==> <NO-OP>
8398:STD:<BREAK>:<NO-OP>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):288:break; |==> <NO-OP>
8399:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):290:factory.newLeader(sb.toString()) |==> null
8400:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):291:record.setLeader(leader) |==> <NO-OP>
8401:STD:<BREAK>:<NO-OP>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):292:break; |==> <NO-OP>
8402:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):294:controlField != null |==> true
8403:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):295:controlField.setData(sb.toString()) |==> <NO-OP>
8404:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):296:record.addVariableField(controlField) |==> <NO-OP>
8405:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):297:controlField = null |==> <NO-OP>
8406:STD:<BREAK>:<NO-OP>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):299:break; |==> <NO-OP>
8407:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):301:dataField != null |==> true
8408:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):302:record.addVariableField(dataField) |==> <NO-OP>
8409:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):303:dataField = null |==> <NO-OP>
8410:STD:<BREAK>:<NO-OP>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):305:break; |==> <NO-OP>
8411:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):307:dataField != null |==> true
8412:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):307:subfield != null |==> true
8413:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):307:dataField != null && subfield != null |==> dataField != null == (subfield != null)
8414:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):307:dataField != null && subfield != null |==> false
8415:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):307:dataField != null && subfield != null |==> dataField != null
8416:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):307:dataField != null && subfield != null |==> subfield != null
8417:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):308:subfield.setData(sb.toString()) |==> <NO-OP>
8418:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):309:dataField.addSubfield(subfield) |==> <NO-OP>
8419:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):310:subfield = null |==> <NO-OP>
8420:STD:<BREAK>:<NO-OP>:org.marc4j.MarcXmlHandler@endElement(java.lang.String,java.lang.String,java.lang.String):312:break; |==> <NO-OP>
8421:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlHandler@endDocument():322:queue.end() |==> <NO-OP>
8422:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):395:aName.indexOf(":") |==> 0
8423:LVR:NEG:0:org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:-1 |==> 0
8424:LVR:NEG:POS:org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:-1 |==> 1
8425:ROR:==(int,int):<=(int,int):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:index == -1 |==> index <= -1
8426:ROR:==(int,int):>=(int,int):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:index == -1 |==> index >= -1
8427:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:index == -1 |==> false
8428:LVR:POS:0:org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:1 |==> 0
8429:LVR:POS:NEG:org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:1 |==> -1
8430:AOR:+(int,int):%(int,int):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:index + 1 |==> index % 1
8431:AOR:+(int,int):*(int,int):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:index + 1 |==> index * 1
8432:AOR:+(int,int):-(int,int):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:index + 1 |==> index - 1
8433:AOR:+(int,int):/(int,int):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:index + 1 |==> index / 1
8434:ROR:==(int,int):<=(int,int):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:index + 1 == aName.length() |==> index + 1 <= aName.length()
8435:ROR:==(int,int):>=(int,int):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:index + 1 == aName.length() |==> index + 1 >= aName.length()
8436:ROR:==(int,int):FALSE(int,int):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:index + 1 == aName.length() |==> false
8437:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:index == -1 || index + 1 == aName.length() |==> index == -1 != (index + 1 == aName.length())
8438:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:index == -1 || index + 1 == aName.length() |==> index == -1
8439:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:index == -1 || index + 1 == aName.length() |==> index + 1 == aName.length()
8440:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):397:index == -1 || index + 1 == aName.length() |==> true
8441:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):398:aName |==> null
8442:LVR:POS:0:org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):400:1 |==> 0
8443:LVR:POS:NEG:org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):400:1 |==> -1
8444:AOR:+(int,int):%(int,int):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):400:index + 1 |==> index % 1
8445:AOR:+(int,int):*(int,int):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):400:index + 1 |==> index * 1
8446:AOR:+(int,int):-(int,int):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):400:index + 1 |==> index - 1
8447:AOR:+(int,int):/(int,int):org.marc4j.MarcXmlHandler@stripNsPrefix(java.lang.String):400:index + 1 |==> index / 1
8448:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlParser@<init>(org.marc4j.MarcXmlHandler):52:this.handler = handler |==> <NO-OP>
8449:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlParser@parse(org.xml.sax.InputSource):61:parse(handler, input) |==> <NO-OP>
8450:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlParser@parse(org.xml.sax.InputSource,javax.xml.transform.sax.TransformerHandler):72:new SAXResult() |==> null
8451:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlParser@parse(org.xml.sax.InputSource,javax.xml.transform.sax.TransformerHandler):73:result.setHandler(handler) |==> <NO-OP>
8452:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlParser@parse(org.xml.sax.InputSource,javax.xml.transform.sax.TransformerHandler):74:th.setResult(result) |==> <NO-OP>
8453:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlParser@parse(org.xml.sax.InputSource,javax.xml.transform.sax.TransformerHandler):75:parse(th, input) |==> <NO-OP>
8454:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlParser@parse(org.xml.sax.ContentHandler,org.xml.sax.InputSource):80:SAXParserFactory.newInstance() |==> null
8455:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlParser@parse(org.xml.sax.ContentHandler,org.xml.sax.InputSource):83:reader = spf.newSAXParser().getXMLReader() |==> <NO-OP>
8456:LVR:TRUE:FALSE:org.marc4j.MarcXmlParser@parse(org.xml.sax.ContentHandler,org.xml.sax.InputSource):84:true |==> false
8457:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlParser@parse(org.xml.sax.ContentHandler,org.xml.sax.InputSource):84:reader.setFeature("http://xml.org/sax/features/namespaces", true) |==> <NO-OP>
8458:LVR:TRUE:FALSE:org.marc4j.MarcXmlParser@parse(org.xml.sax.ContentHandler,org.xml.sax.InputSource):85:true |==> false
8459:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlParser@parse(org.xml.sax.ContentHandler,org.xml.sax.InputSource):85:reader.setFeature("http://xml.org/sax/features/namespace-prefixes", true) |==> <NO-OP>
8460:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlParser@parse(org.xml.sax.ContentHandler,org.xml.sax.InputSource):86:reader.setContentHandler(handler) |==> <NO-OP>
8461:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlParser@parse(org.xml.sax.ContentHandler,org.xml.sax.InputSource):87:reader.parse(input) |==> <NO-OP>
8462:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcXmlParserThread@<init>(org.marc4j.RecordStack):48:queue |==> null
8463:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcXmlParserThread@<init>(org.marc4j.RecordStack,org.xml.sax.InputSource):59:queue |==> null
8464:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlParserThread@<init>(org.marc4j.RecordStack,org.xml.sax.InputSource):60:this.input = input |==> <NO-OP>
8465:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcXmlParserThread@getTransformerHandler():69:th |==> null
8466:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlParserThread@setTransformerHandler(javax.xml.transform.sax.TransformerHandler):78:this.th = th |==> <NO-OP>
8467:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcXmlParserThread@getInputSource():87:input |==> null
8468:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlParserThread@setInputSource(org.xml.sax.InputSource):96:this.input = input |==> <NO-OP>
8469:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlParserThread@run():107:new MarcXmlHandler(queue) |==> null
8470:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlParserThread@run():108:new MarcXmlParser(handler) |==> null
8471:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlParserThread@run():110:th == null |==> false
8472:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlParserThread@run():111:parser.parse(input) |==> <NO-OP>
8473:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlParserThread@run():113:parser.parse(input, th) |==> <NO-OP>
8474:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlParserThread@run():116:queue.passException(me) |==> <NO-OP>
8475:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlParserThread@run():118:queue.end() |==> <NO-OP>
8476:LVR:FALSE:TRUE:org.marc4j.MarcXmlWriter:182:false |==> true
8477:LVR:FALSE:TRUE:org.marc4j.MarcXmlWriter:195:false |==> true
8478:LVR:FALSE:TRUE:org.marc4j.MarcXmlWriter:197:false |==> true
8479:LVR:FALSE:TRUE:org.marc4j.MarcXmlWriter@<init>(java.io.OutputStream):209:false |==> true
8480:LVR:FALSE:TRUE:org.marc4j.MarcXmlWriter@<init>(java.io.OutputStream,java.lang.String):231:false |==> true
8481:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlWriter@<init>(java.io.OutputStream,java.lang.String,boolean):243:this.encoding = encoding |==> <NO-OP>
8482:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlWriter@<init>(java.io.OutputStream,java.lang.String,boolean):245:out == null |==> false
8483:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlWriter@<init>(java.io.OutputStream,java.lang.String,boolean):249:this.encoding == null |==> false
8484:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@<init>(java.io.OutputStream,java.lang.String,boolean):254:setIndent(indent) |==> <NO-OP>
8485:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlWriter@<init>(java.io.OutputStream,java.lang.String,boolean):256:new OutputStreamWriter(out, encoding) |==> null
8486:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlWriter@<init>(java.io.OutputStream,java.lang.String,boolean):257:writer = new BufferedWriter(writer) |==> <NO-OP>
8487:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@<init>(java.io.OutputStream,java.lang.String,boolean):259:setHandler(new StreamResult(writer), null) |==> <NO-OP>
8488:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@<init>(java.io.OutputStream,java.lang.String,boolean):264:writeStartDocument() |==> <NO-OP>
8489:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlWriter@<init>(javax.xml.transform.Result):273:result == null |==> false
8490:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@<init>(javax.xml.transform.Result):277:setHandler(result, null) |==> <NO-OP>
8491:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@<init>(javax.xml.transform.Result):278:writeStartDocument() |==> <NO-OP>
8492:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlWriter@<init>(javax.xml.transform.Result,javax.xml.transform.Source):298:stylesheet == null |==> false
8493:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlWriter@<init>(javax.xml.transform.Result,javax.xml.transform.Source):302:result == null |==> false
8494:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@<init>(javax.xml.transform.Result,javax.xml.transform.Source):306:setHandler(result, stylesheet) |==> <NO-OP>
8495:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@<init>(javax.xml.transform.Result,javax.xml.transform.Source):307:writeStartDocument() |==> <NO-OP>
8496:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@close():315:writeEndDocument() |==> <NO-OP>
8497:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlWriter@close():318:writer != null |==> true
8498:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@close():319:writer.write("\n") |==> <NO-OP>
8499:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@close():320:writer.close() |==> <NO-OP>
8500:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcXmlWriter@getConverter():334:converter |==> null
8501:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlWriter@setConverter(org.marc4j.converter.CharConverter):344:this.converter = converter |==> <NO-OP>
8502:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlWriter@setUnicodeNormalization(boolean):355:this.normalize = normalize |==> <NO-OP>
8503:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcXmlWriter@getUnicodeNormalization():364:normalize |==> false
8504:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlWriter@setCheckNonXMLChars(boolean):375:this.checkNonXMLChars = checkNonXMLChars |==> <NO-OP>
8505:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcXmlWriter@getCheckNonXMLChars():385:checkNonXMLChars |==> false
8506:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlWriter@setHandler(javax.xml.transform.Result,javax.xml.transform.Source):390:TransformerFactory.newInstance() |==> null
8507:COR:factory.getFeature(SAXTransformerFactory.FEATURE):TRUE:org.marc4j.MarcXmlWriter@setHandler(javax.xml.transform.Result,javax.xml.transform.Source):392:factory.getFeature(SAXTransformerFactory.FEATURE) |==> false
8508:COR:factory.getFeature(SAXTransformerFactory.FEATURE):FALSE:org.marc4j.MarcXmlWriter@setHandler(javax.xml.transform.Result,javax.xml.transform.Source):392:factory.getFeature(SAXTransformerFactory.FEATURE) |==> true
8509:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.MarcXmlWriter@setHandler(javax.xml.transform.Result,javax.xml.transform.Source):396:(SAXTransformerFactory)factory |==> null
8510:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlWriter@setHandler(javax.xml.transform.Result,javax.xml.transform.Source):398:stylesheet == null |==> false
8511:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlWriter@setHandler(javax.xml.transform.Result,javax.xml.transform.Source):399:handler = saxFactory.newTransformerHandler() |==> <NO-OP>
8512:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlWriter@setHandler(javax.xml.transform.Result,javax.xml.transform.Source):401:handler = saxFactory.newTransformerHandler(stylesheet) |==> <NO-OP>
8513:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@setHandler(javax.xml.transform.Result,javax.xml.transform.Source):404:handler.getTransformer().setOutputProperty(OutputKeys.METHOD, "xml") |==> <NO-OP>
8514:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@setHandler(javax.xml.transform.Result,javax.xml.transform.Source):405:handler.setResult(result) |==> <NO-OP>
8515:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlWriter@writeStartDocument():419:new AttributesImpl() |==> null
8516:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeStartDocument():420:handler.startDocument() |==> <NO-OP>
8517:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeStartDocument():421:handler.startPrefixMapping(Constants.MARCXML_NS_PREFIX, Constants.MARCXML_NS_URI) |==> <NO-OP>
8518:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeStartDocument():422:handler.startElement(Constants.MARCXML_NS_URI, COLLECTION, Constants.MARCXML_NS_PREFIX + ":" + COLLECTION, atts) |==> <NO-OP>
8519:COR:indent:TRUE:org.marc4j.MarcXmlWriter@writeEndDocument():436:indent |==> false
8520:COR:indent:FALSE:org.marc4j.MarcXmlWriter@writeEndDocument():436:indent |==> true
8521:LVR:0:POS:org.marc4j.MarcXmlWriter@writeEndDocument():437:0 |==> 1
8522:LVR:0:NEG:org.marc4j.MarcXmlWriter@writeEndDocument():437:0 |==> -1
8523:LVR:POS:0:org.marc4j.MarcXmlWriter@writeEndDocument():437:1 |==> 0
8524:LVR:POS:NEG:org.marc4j.MarcXmlWriter@writeEndDocument():437:1 |==> -1
8525:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeEndDocument():437:handler.ignorableWhitespace("\n".toCharArray(), 0, 1) |==> <NO-OP>
8526:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeEndDocument():440:handler.endElement(Constants.MARCXML_NS_URI, COLLECTION, Constants.MARCXML_NS_PREFIX + ":" + COLLECTION) |==> <NO-OP>
8527:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeEndDocument():441:handler.endPrefixMapping(Constants.MARCXML_NS_URI) |==> <NO-OP>
8528:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeEndDocument():442:handler.endDocument() |==> <NO-OP>
8529:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@write(org.marc4j.marc.Record):457:toXml(record) |==> <NO-OP>
8530:LVR:TRUE:FALSE:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream):472:true |==> false
8531:LVR:FALSE:TRUE:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream):472:false |==> true
8532:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream):472:writeSingleRecord(record, stream, true, false) |==> <NO-OP>
8533:LVR:TRUE:FALSE:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean):486:true |==> false
8534:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean):486:writeSingleRecord(record, stream, true, indent) |==> <NO-OP>
8535:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):501:new BufferedWriter(new OutputStreamWriter(stream, "UTF-8")) |==> null
8536:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):502:new MarcXmlWriter() |==> null
8537:COR:encode:TRUE:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):504:encode |==> false
8538:COR:encode:FALSE:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):504:encode |==> true
8539:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):505:writer.setConverter(new AnselToUnicode()) |==> <NO-OP>
8540:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):508:writer.setIndent(indent) |==> <NO-OP>
8541:LVR:TRUE:FALSE:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):509:true |==> false
8542:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):509:writer.setUnicodeNormalization(true) |==> <NO-OP>
8543:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):510:writer.setHandler(new StreamResult(out), null) |==> <NO-OP>
8544:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):511:writer.handler.startDocument() |==> <NO-OP>
8545:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):512:writer.handler.startPrefixMapping(Constants.MARCXML_NS_PREFIX, Constants.MARCXML_NS_URI) |==> <NO-OP>
8546:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):513:writer.toXml(record) |==> <NO-OP>
8547:COR:indent:TRUE:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):515:indent |==> false
8548:COR:indent:FALSE:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):515:indent |==> true
8549:LVR:0:POS:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):516:0 |==> 1
8550:LVR:0:NEG:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):516:0 |==> -1
8551:LVR:POS:0:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):516:1 |==> 0
8552:LVR:POS:NEG:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):516:1 |==> -1
8553:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):516:writer.handler.ignorableWhitespace("\n".toCharArray(), 0, 1) |==> <NO-OP>
8554:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):519:writer.handler.endPrefixMapping(Constants.MARCXML_NS_URI) |==> <NO-OP>
8555:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):520:writer.handler.endDocument() |==> <NO-OP>
8556:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):522:out.write("\n") |==> <NO-OP>
8557:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@writeSingleRecord(org.marc4j.marc.Record,java.io.OutputStream,boolean,boolean):523:out.close() |==> <NO-OP>
8558:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcXmlWriter@hasIndent():537:indent |==> false
8559:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlWriter@setIndent(boolean):546:this.indent = indent |==> <NO-OP>
8560:COR:MarcFactory.newInstance().validateRecord(record):TRUE:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):550:MarcFactory.newInstance().validateRecord(record) |==> false
8561:COR:MarcFactory.newInstance().validateRecord(record):FALSE:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):550:MarcFactory.newInstance().validateRecord(record) |==> true
8562:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):555:new AttributesImpl() |==> null
8563:COR:indent:TRUE:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):557:indent |==> false
8564:COR:indent:FALSE:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):557:indent |==> true
8565:LVR:0:POS:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):558:0 |==> 1
8566:LVR:0:NEG:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):558:0 |==> -1
8567:LVR:POS:0:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):558:3 |==> 0
8568:LVR:POS:NEG:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):558:3 |==> -3
8569:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):558:handler.ignorableWhitespace("\n  ".toCharArray(), 0, 3) |==> <NO-OP>
8570:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):561:record.getType() != null |==> true
8571:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):562:new AttributesImpl() |==> null
8572:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):564:rAtts.addAttribute("", "type", "type", "", record.getType()) |==> <NO-OP>
8573:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):565:handler.startElement(Constants.MARCXML_NS_URI, RECORD, Constants.MARCXML_NS_PREFIX + ":" + RECORD, rAtts) |==> <NO-OP>
8574:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):567:handler.startElement(Constants.MARCXML_NS_URI, RECORD, Constants.MARCXML_NS_PREFIX + ":" + RECORD, atts) |==> <NO-OP>
8575:COR:indent:TRUE:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):570:indent |==> false
8576:COR:indent:FALSE:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):570:indent |==> true
8577:LVR:0:POS:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):571:0 |==> 1
8578:LVR:0:NEG:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):571:0 |==> -1
8579:LVR:POS:0:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):571:5 |==> 0
8580:LVR:POS:NEG:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):571:5 |==> -5
8581:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):571:handler.ignorableWhitespace("\n    ".toCharArray(), 0, 5) |==> <NO-OP>
8582:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):574:handler.startElement(Constants.MARCXML_NS_URI, LEADER, Constants.MARCXML_NS_PREFIX + ":" + LEADER, atts) |==> <NO-OP>
8583:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):575:record.getLeader() |==> null
8584:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):576:getDataElement(leader.toString()) |==> null
8585:LVR:0:POS:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):577:0 |==> 1
8586:LVR:0:NEG:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):577:0 |==> -1
8587:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):577:handler.characters(temp, 0, temp.length) |==> <NO-OP>
8588:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):578:handler.endElement(Constants.MARCXML_NS_URI, LEADER, Constants.MARCXML_NS_PREFIX + ":" + LEADER) |==> <NO-OP>
8589:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):581:atts = new AttributesImpl() |==> <NO-OP>
8590:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):582:atts.addAttribute("", "tag", "tag", "CDATA", getDataElementString(field.getTag())) |==> <NO-OP>
8591:COR:indent:TRUE:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):584:indent |==> false
8592:COR:indent:FALSE:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):584:indent |==> true
8593:LVR:0:POS:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):585:0 |==> 1
8594:LVR:0:NEG:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):585:0 |==> -1
8595:LVR:POS:0:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):585:5 |==> 0
8596:LVR:POS:NEG:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):585:5 |==> -5
8597:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):585:handler.ignorableWhitespace("\n    ".toCharArray(), 0, 5) |==> <NO-OP>
8598:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):588:handler.startElement(Constants.MARCXML_NS_URI, CONTROL_FIELD, Constants.MARCXML_NS_PREFIX + ":" + CONTROL_FIELD, atts) |==> <NO-OP>
8599:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):590:temp = getDataElement(field.getData()) |==> <NO-OP>
8600:LVR:0:POS:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):591:0 |==> 1
8601:LVR:0:NEG:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):591:0 |==> -1
8602:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):591:handler.characters(temp, 0, temp.length) |==> <NO-OP>
8603:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):592:handler.endElement(Constants.MARCXML_NS_URI, CONTROL_FIELD, Constants.MARCXML_NS_PREFIX + ":" + CONTROL_FIELD) |==> <NO-OP>
8604:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):597:atts = new AttributesImpl() |==> <NO-OP>
8605:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):598:atts.addAttribute("", "tag", "tag", "CDATA", getDataElementString(field.getTag())) |==> <NO-OP>
8606:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):599:atts.addAttribute("", "ind1", "ind1", "CDATA", getDataElementString(String.valueOf(field.getIndicator1()))) |==> <NO-OP>
8607:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):601:atts.addAttribute("", "ind2", "ind2", "CDATA", getDataElementString(String.valueOf(field.getIndicator2()))) |==> <NO-OP>
8608:COR:indent:TRUE:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):604:indent |==> false
8609:COR:indent:FALSE:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):604:indent |==> true
8610:LVR:0:POS:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):605:0 |==> 1
8611:LVR:0:NEG:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):605:0 |==> -1
8612:LVR:POS:0:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):605:5 |==> 0
8613:LVR:POS:NEG:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):605:5 |==> -5
8614:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):605:handler.ignorableWhitespace("\n    ".toCharArray(), 0, 5) |==> <NO-OP>
8615:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):608:handler.startElement(Constants.MARCXML_NS_URI, DATA_FIELD, Constants.MARCXML_NS_PREFIX + ":" + DATA_FIELD, atts) |==> <NO-OP>
8616:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):612:atts = new AttributesImpl() |==> <NO-OP>
8617:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):613:atts.addAttribute("", "code", "code", "CDATA", getDataElementString(String.valueOf(subfield.getCode()))) |==> <NO-OP>
8618:COR:indent:TRUE:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):616:indent |==> false
8619:COR:indent:FALSE:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):616:indent |==> true
8620:LVR:0:POS:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):617:0 |==> 1
8621:LVR:0:NEG:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):617:0 |==> -1
8622:LVR:POS:0:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):617:7 |==> 0
8623:LVR:POS:NEG:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):617:7 |==> -7
8624:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):617:handler.ignorableWhitespace("\n      ".toCharArray(), 0, 7) |==> <NO-OP>
8625:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):620:handler.startElement(Constants.MARCXML_NS_URI, SUBFIELD, Constants.MARCXML_NS_PREFIX + ":" + SUBFIELD, atts) |==> <NO-OP>
8626:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):622:temp = getDataElement(subfield.getData()) |==> <NO-OP>
8627:LVR:0:POS:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):623:0 |==> 1
8628:LVR:0:NEG:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):623:0 |==> -1
8629:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):623:handler.characters(temp, 0, temp.length) |==> <NO-OP>
8630:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):624:handler.endElement(Constants.MARCXML_NS_URI, SUBFIELD, Constants.MARCXML_NS_PREFIX + ":" + SUBFIELD) |==> <NO-OP>
8631:COR:indent:TRUE:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):627:indent |==> false
8632:COR:indent:FALSE:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):627:indent |==> true
8633:LVR:0:POS:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):628:0 |==> 1
8634:LVR:0:NEG:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):628:0 |==> -1
8635:LVR:POS:0:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):628:5 |==> 0
8636:LVR:POS:NEG:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):628:5 |==> -5
8637:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):628:handler.ignorableWhitespace("\n    ".toCharArray(), 0, 5) |==> <NO-OP>
8638:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):631:handler.endElement(Constants.MARCXML_NS_URI, DATA_FIELD, Constants.MARCXML_NS_PREFIX + ":" + DATA_FIELD) |==> <NO-OP>
8639:COR:indent:TRUE:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):634:indent |==> false
8640:COR:indent:FALSE:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):634:indent |==> true
8641:LVR:0:POS:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):635:0 |==> 1
8642:LVR:0:NEG:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):635:0 |==> -1
8643:LVR:POS:0:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):635:3 |==> 0
8644:LVR:POS:NEG:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):635:3 |==> -3
8645:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):635:handler.ignorableWhitespace("\n  ".toCharArray(), 0, 3) |==> <NO-OP>
8646:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@toXml(org.marc4j.marc.Record):638:handler.endElement(Constants.MARCXML_NS_URI, RECORD, Constants.MARCXML_NS_PREFIX + ":" + RECORD) |==> <NO-OP>
8647:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.MarcXmlWriter@getDataElementString(java.lang.String):644:converter == null |==> false
8648:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlWriter@getDataElementString(java.lang.String):645:dataElement = data |==> <NO-OP>
8649:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlWriter@getDataElementString(java.lang.String):647:dataElement = converter.convert(data) |==> <NO-OP>
8650:COR:normalize:TRUE:org.marc4j.MarcXmlWriter@getDataElementString(java.lang.String):650:normalize |==> false
8651:COR:normalize:FALSE:org.marc4j.MarcXmlWriter@getDataElementString(java.lang.String):650:normalize |==> true
8652:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlWriter@getDataElementString(java.lang.String):651:dataElement = Normalizer.normalize(dataElement, Normalizer.Form.NFC) |==> <NO-OP>
8653:COR:checkNonXMLChars:TRUE:org.marc4j.MarcXmlWriter@getDataElementString(java.lang.String):654:checkNonXMLChars |==> false
8654:COR:checkNonXMLChars:FALSE:org.marc4j.MarcXmlWriter@getDataElementString(java.lang.String):654:checkNonXMLChars |==> true
8655:STD:<ASSIGN>:<NO-OP>:org.marc4j.MarcXmlWriter@getDataElementString(java.lang.String):655:dataElement = CheckNonXMLChars(dataElement) |==> <NO-OP>
8656:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.MarcXmlWriter@getDataElementString(java.lang.String):657:dataElement |==> null
8657:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlWriter@getDataElement(java.lang.String):661:getDataElementString(data).toCharArray() |==> null
8658:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.MarcXmlWriter@CheckNonXMLChars(java.lang.String):672:new StringBuffer(dataElement.length()) |==> null
8659:COR:isInvalidXmlChar(ch):TRUE:org.marc4j.MarcXmlWriter@CheckNonXMLChars(java.lang.String):674:isInvalidXmlChar(ch) |==> false
8660:COR:isInvalidXmlChar(ch):FALSE:org.marc4j.MarcXmlWriter@CheckNonXMLChars(java.lang.String):674:isInvalidXmlChar(ch) |==> true
8661:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@CheckNonXMLChars(java.lang.String):675:out.append("<U+") |==> <NO-OP>
8662:EVR:<PLUS>:<DEFAULT>:org.marc4j.MarcXmlWriter@CheckNonXMLChars(java.lang.String):676:"0000" + Integer.toString(ch) |==> null
8663:LVR:POS:0:org.marc4j.MarcXmlWriter@CheckNonXMLChars(java.lang.String):677:4 |==> 0
8664:LVR:POS:NEG:org.marc4j.MarcXmlWriter@CheckNonXMLChars(java.lang.String):677:4 |==> -4
8665:AOR:-(int,int):%(int,int):org.marc4j.MarcXmlWriter@CheckNonXMLChars(java.lang.String):677:hex.length() - 4 |==> hex.length() % 4
8666:AOR:-(int,int):*(int,int):org.marc4j.MarcXmlWriter@CheckNonXMLChars(java.lang.String):677:hex.length() - 4 |==> hex.length() * 4
8667:AOR:-(int,int):+(int,int):org.marc4j.MarcXmlWriter@CheckNonXMLChars(java.lang.String):677:hex.length() - 4 |==> hex.length() + 4
8668:AOR:-(int,int):/(int,int):org.marc4j.MarcXmlWriter@CheckNonXMLChars(java.lang.String):677:hex.length() - 4 |==> hex.length() / 4
8669:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@CheckNonXMLChars(java.lang.String):677:out.append(hex.substring(hex.length() - 4)) |==> <NO-OP>
8670:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@CheckNonXMLChars(java.lang.String):678:out.append('>') |==> <NO-OP>
8671:STD:<CALL>:<NO-OP>:org.marc4j.MarcXmlWriter@CheckNonXMLChars(java.lang.String):680:out.append(ch) |==> <NO-OP>
8672:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlWriter@CheckNonXMLChars(java.lang.String):683:out.toString() |==> null
8673:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlWriter:686:Pattern.compile("[\\u0001-\\uD7FF\\uE000-\ufffd\\x{10000}-\\x{10FFFF}]") |==> null
8674:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlWriter:689:Pattern.compile("[\\u0001-\\u0008\\u000B-\\u000C\\u000E-\\u001F\\u007F-\\u0084\\u0086-\\u009F]") |==> null
8675:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlWriter:692:Pattern.compile("[\\uFDD0-\\uFDEF\\x{1FFFE}-\\x{1FFFF}\\x{2FFFE}-\\x{2FFFF}\\x{3FFFE}-\\x{3FFFF}\\x{4FFFE}-\\x{4FFFF}\\x{5FFFE}-\\x{5FFFF}\\x{6FFFE}-\\x{6FFFF}\\x{7FFFE}-\\x{7FFFF}\\x{8FFFE}-\\x{8FFFF}\\x{9FFFE}-\\x{9FFFF}\\x{AFFFE}-\\x{AFFFF}\\x{BFFFE}-\\x{BFFFF}\\x{CFFFE}-\\x{CFFFF}\\x{DFFFE}-\\x{DFFFF}\\x{EFFFE}-\\x{EFFFF}\\x{FFFFE}-\\x{FFFFF}\\x{10FFFE}-\\x{10FFFF}]") |==> null
8676:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.MarcXmlWriter@isInvalidXmlChar(char):700:Character.toString(ch) |==> null
8677:COR:valid.matcher(s).matches():TRUE:org.marc4j.MarcXmlWriter@isInvalidXmlChar(char):702:valid.matcher(s).matches() |==> false
8678:COR:valid.matcher(s).matches():FALSE:org.marc4j.MarcXmlWriter@isInvalidXmlChar(char):702:valid.matcher(s).matches() |==> true
8679:LVR:TRUE:FALSE:org.marc4j.MarcXmlWriter@isInvalidXmlChar(char):703:true |==> false
8680:STD:<RETURN>:<NO-OP>:org.marc4j.MarcXmlWriter@isInvalidXmlChar(char):703:return Config.__M_NO == 0 && Config.COVERED(8679, 8679) ? true : Config.__M_NO == 8679 ? false : true; |==> <NO-OP>
8681:COR:ctrlChar.matcher(s).matches():TRUE:org.marc4j.MarcXmlWriter@isInvalidXmlChar(char):706:ctrlChar.matcher(s).matches() |==> false
8682:COR:ctrlChar.matcher(s).matches():FALSE:org.marc4j.MarcXmlWriter@isInvalidXmlChar(char):706:ctrlChar.matcher(s).matches() |==> true
8683:LVR:TRUE:FALSE:org.marc4j.MarcXmlWriter@isInvalidXmlChar(char):707:true |==> false
8684:STD:<RETURN>:<NO-OP>:org.marc4j.MarcXmlWriter@isInvalidXmlChar(char):707:return Config.__M_NO == 0 && Config.COVERED(8683, 8683) ? true : Config.__M_NO == 8683 ? false : true; |==> <NO-OP>
8685:COR:discouraged.matcher(s).matches():TRUE:org.marc4j.MarcXmlWriter@isInvalidXmlChar(char):710:discouraged.matcher(s).matches() |==> false
8686:COR:discouraged.matcher(s).matches():FALSE:org.marc4j.MarcXmlWriter@isInvalidXmlChar(char):710:discouraged.matcher(s).matches() |==> true
8687:LVR:TRUE:FALSE:org.marc4j.MarcXmlWriter@isInvalidXmlChar(char):711:true |==> false
8688:STD:<RETURN>:<NO-OP>:org.marc4j.MarcXmlWriter@isInvalidXmlChar(char):711:return Config.__M_NO == 0 && Config.COVERED(8687, 8687) ? true : Config.__M_NO == 8687 ? false : true; |==> <NO-OP>
8689:LVR:FALSE:TRUE:org.marc4j.MarcXmlWriter@isInvalidXmlChar(char):714:false |==> true
8690:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8StreamReader:71:Pattern.compile("[^\\u0020-\\u007F]") |==> null
8691:LVR:FALSE:TRUE:org.marc4j.Mrk8StreamReader@<init>(java.io.InputStream):81:false |==> true
8692:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.Mrk8StreamReader@<init>(java.io.InputStream,boolean):91:new Scanner(new BufferedInputStream(input), StandardCharsets.UTF_8.name()) |==> null
8693:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8StreamReader@<init>(java.io.InputStream,boolean):92:MarcFactory.newInstance() |==> null
8694:STD:<ASSIGN>:<NO-OP>:org.marc4j.Mrk8StreamReader@<init>(java.io.InputStream,boolean):93:this.toUTF8 = toUtf8 |==> <NO-OP>
8695:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8StreamReader@hasNext():103:this.input.hasNextLine() |==> false
8696:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.Mrk8StreamReader@next():113:new ArrayList<String>() |==> null
8697:COR:this.hasNext():TRUE:org.marc4j.Mrk8StreamReader@next():114:this.hasNext() |==> false
8698:COR:this.hasNext():FALSE:org.marc4j.Mrk8StreamReader@next():114:this.hasNext() |==> true
8699:STD:<RETURN>:<NO-OP>:org.marc4j.Mrk8StreamReader@next():115:return null; |==> <NO-OP>
8700:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.Mrk8StreamReader@next():117:this.lastLineRead != null |==> true
8701:LVR:POS:0:org.marc4j.Mrk8StreamReader@next():117:1 |==> 0
8702:LVR:POS:NEG:org.marc4j.Mrk8StreamReader@next():117:1 |==> -1
8703:LVR:POS:0:org.marc4j.Mrk8StreamReader@next():117:4 |==> 0
8704:LVR:POS:NEG:org.marc4j.Mrk8StreamReader@next():117:4 |==> -4
8705:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.Mrk8StreamReader@next():117:this.lastLineRead != null && this.lastLineRead.substring(1, 4).equalsIgnoreCase("LDR") |==> this.lastLineRead != null == this.lastLineRead.substring(1, 4).equalsIgnoreCase("LDR")
8706:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.Mrk8StreamReader@next():117:this.lastLineRead != null && this.lastLineRead.substring(1, 4).equalsIgnoreCase("LDR") |==> false
8707:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.Mrk8StreamReader@next():117:this.lastLineRead != null && this.lastLineRead.substring(1, 4).equalsIgnoreCase("LDR") |==> this.lastLineRead != null
8708:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.Mrk8StreamReader@next():117:this.lastLineRead != null && this.lastLineRead.substring(1, 4).equalsIgnoreCase("LDR") |==> this.lastLineRead.substring(1, 4).equalsIgnoreCase("LDR")
8709:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamReader@next():118:lines.add(lastLineRead) |==> <NO-OP>
8710:STD:<ASSIGN>:<NO-OP>:org.marc4j.Mrk8StreamReader@next():119:this.lastLineRead = null |==> <NO-OP>
8711:LVR:FALSE:TRUE:org.marc4j.Mrk8StreamReader@next():121:false |==> true
8712:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8StreamReader@next():123:this.input.nextLine() |==> null
8713:LVR:0:POS:org.marc4j.Mrk8StreamReader@next():125:0 |==> 1
8714:LVR:0:NEG:org.marc4j.Mrk8StreamReader@next():125:0 |==> -1
8715:ROR:==(int,int):<=(int,int):org.marc4j.Mrk8StreamReader@next():125:line.trim().length() == 0 |==> line.trim().length() <= 0
8716:ROR:==(int,int):>=(int,int):org.marc4j.Mrk8StreamReader@next():125:line.trim().length() == 0 |==> line.trim().length() >= 0
8717:ROR:==(int,int):FALSE(int,int):org.marc4j.Mrk8StreamReader@next():125:line.trim().length() == 0 |==> false
8718:STD:<CONT>:<NO-OP>:org.marc4j.Mrk8StreamReader@next():127:continue; |==> <NO-OP>
8719:LVR:POS:0:org.marc4j.Mrk8StreamReader@next():129:1 |==> 0
8720:LVR:POS:NEG:org.marc4j.Mrk8StreamReader@next():129:1 |==> -1
8721:LVR:POS:0:org.marc4j.Mrk8StreamReader@next():129:4 |==> 0
8722:LVR:POS:NEG:org.marc4j.Mrk8StreamReader@next():129:4 |==> -4
8723:LVR:0:POS:org.marc4j.Mrk8StreamReader@next():129:0 |==> 1
8724:LVR:0:NEG:org.marc4j.Mrk8StreamReader@next():129:0 |==> -1
8725:ROR:>(int,int):!=(int,int):org.marc4j.Mrk8StreamReader@next():129:lines.size() > 0 |==> lines.size() != 0
8726:ROR:>(int,int):>=(int,int):org.marc4j.Mrk8StreamReader@next():129:lines.size() > 0 |==> lines.size() >= 0
8727:ROR:>(int,int):FALSE(int,int):org.marc4j.Mrk8StreamReader@next():129:lines.size() > 0 |==> false
8728:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.Mrk8StreamReader@next():129:line.substring(1, 4).equalsIgnoreCase("LDR") && lines.size() > 0 |==> line.substring(1, 4).equalsIgnoreCase("LDR") == lines.size() > 0
8729:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.Mrk8StreamReader@next():129:line.substring(1, 4).equalsIgnoreCase("LDR") && lines.size() > 0 |==> false
8730:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.Mrk8StreamReader@next():129:line.substring(1, 4).equalsIgnoreCase("LDR") && lines.size() > 0 |==> line.substring(1, 4).equalsIgnoreCase("LDR")
8731:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.Mrk8StreamReader@next():129:line.substring(1, 4).equalsIgnoreCase("LDR") && lines.size() > 0 |==> lines.size() > 0
8732:STD:<ASSIGN>:<NO-OP>:org.marc4j.Mrk8StreamReader@next():131:this.lastLineRead = line |==> <NO-OP>
8733:STD:<BREAK>:<NO-OP>:org.marc4j.Mrk8StreamReader@next():132:break; |==> <NO-OP>
8734:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamReader@next():135:lines.add(line) |==> <NO-OP>
8735:LVR:FALSE:TRUE:org.marc4j.Mrk8StreamReader@next():136:false |==> true
8736:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.marc4j.Mrk8StreamReader@next():136:hasHiBitCharacters == false |==> false
8737:ROR:==(boolean,boolean):LHS(boolean,boolean):org.marc4j.Mrk8StreamReader@next():136:hasHiBitCharacters == false |==> hasHiBitCharacters
8738:ROR:==(boolean,boolean):RHS(boolean,boolean):org.marc4j.Mrk8StreamReader@next():136:hasHiBitCharacters == false |==> false
8739:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.Mrk8StreamReader@next():136:hasHiBitCharacters == false && nonAsciiChar.matcher(line).find() |==> hasHiBitCharacters == false == nonAsciiChar.matcher(line).find()
8740:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.Mrk8StreamReader@next():136:hasHiBitCharacters == false && nonAsciiChar.matcher(line).find() |==> false
8741:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.Mrk8StreamReader@next():136:hasHiBitCharacters == false && nonAsciiChar.matcher(line).find() |==> hasHiBitCharacters == false
8742:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.Mrk8StreamReader@next():136:hasHiBitCharacters == false && nonAsciiChar.matcher(line).find() |==> nonAsciiChar.matcher(line).find()
8743:LVR:TRUE:FALSE:org.marc4j.Mrk8StreamReader@next():137:true |==> false
8744:STD:<ASSIGN>:<NO-OP>:org.marc4j.Mrk8StreamReader@next():137:hasHiBitCharacters = true |==> <NO-OP>
8745:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8StreamReader@next():140:this.parse(lines, hasHiBitCharacters) |==> null
8746:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):144:lines == null |==> false
8747:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):144:lines == null || lines.isEmpty() |==> lines == null != lines.isEmpty()
8748:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):144:lines == null || lines.isEmpty() |==> lines == null
8749:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):144:lines == null || lines.isEmpty() |==> lines.isEmpty()
8750:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):144:lines == null || lines.isEmpty() |==> true
8751:STD:<RETURN>:<NO-OP>:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):145:return null; |==> <NO-OP>
8752:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):148:this.factory.newRecord() |==> null
8753:LVR:0:POS:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):151:0 |==> 1
8754:LVR:0:NEG:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):151:0 |==> -1
8755:ROR:==(int,int):<=(int,int):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):151:line.trim().length() == 0 |==> line.trim().length() <= 0
8756:ROR:==(int,int):>=(int,int):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):151:line.trim().length() == 0 |==> line.trim().length() >= 0
8757:ROR:==(int,int):FALSE(int,int):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):151:line.trim().length() == 0 |==> false
8758:STD:<CONT>:<NO-OP>:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):152:continue; |==> <NO-OP>
8759:LVR:POS:0:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):155:1 |==> 0
8760:LVR:POS:NEG:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):155:1 |==> -1
8761:LVR:POS:0:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):155:4 |==> 0
8762:LVR:POS:NEG:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):155:4 |==> -4
8763:COR:tag.equalsIgnoreCase("LDR"):TRUE:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):157:tag.equalsIgnoreCase("LDR") |==> false
8764:COR:tag.equalsIgnoreCase("LDR"):FALSE:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):157:tag.equalsIgnoreCase("LDR") |==> true
8765:LVR:POS:0:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):158:6 |==> 0
8766:LVR:POS:NEG:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):158:6 |==> -6
8767:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):158:record.setLeader(getLeader(line.substring(6))) |==> <NO-OP>
8768:COR:this.isControlField(tag):TRUE:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):161:this.isControlField(tag) |==> false
8769:COR:this.isControlField(tag):FALSE:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):161:this.isControlField(tag) |==> true
8770:LVR:POS:0:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):162:6 |==> 0
8771:LVR:POS:NEG:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):162:6 |==> -6
8772:LVR:POS:0:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):165:6 |==> 0
8773:LVR:POS:NEG:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):165:6 |==> -6
8774:LVR:0:POS:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):167:0 |==> 1
8775:LVR:0:NEG:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):167:0 |==> -1
8776:ROR:==(int,int):<=(int,int):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):167:data.charAt(0) == '\\' |==> data.charAt(0) <= '\\'
8777:ROR:==(int,int):>=(int,int):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):167:data.charAt(0) == '\\' |==> data.charAt(0) >= '\\'
8778:ROR:==(int,int):FALSE(int,int):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):167:data.charAt(0) == '\\' |==> false
8779:LVR:0:POS:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):167:0 |==> 1
8780:LVR:0:NEG:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):167:0 |==> -1
8781:LVR:POS:0:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):168:1 |==> 0
8782:LVR:POS:NEG:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):168:1 |==> -1
8783:ROR:==(int,int):<=(int,int):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):168:data.charAt(1) == '\\' |==> data.charAt(1) <= '\\'
8784:ROR:==(int,int):>=(int,int):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):168:data.charAt(1) == '\\' |==> data.charAt(1) >= '\\'
8785:ROR:==(int,int):FALSE(int,int):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):168:data.charAt(1) == '\\' |==> false
8786:LVR:POS:0:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):168:1 |==> 0
8787:LVR:POS:NEG:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):168:1 |==> -1
8788:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):170:!this.isValidIndicator(indicator1) || !this.isValidIndicator(indicator2) |==> !this.isValidIndicator(indicator1) != !this.isValidIndicator(indicator2)
8789:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):170:!this.isValidIndicator(indicator1) || !this.isValidIndicator(indicator2) |==> !this.isValidIndicator(indicator1)
8790:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):170:!this.isValidIndicator(indicator1) || !this.isValidIndicator(indicator2) |==> !this.isValidIndicator(indicator2)
8791:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):170:!this.isValidIndicator(indicator1) || !this.isValidIndicator(indicator2) |==> true
8792:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):174:this.factory.newDataField(tag, indicator1, indicator2) |==> null
8793:LVR:POS:0:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):176:3 |==> 0
8794:LVR:POS:NEG:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):176:3 |==> -3
8795:LVR:POS:0:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):180:1 |==> 0
8796:LVR:POS:NEG:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):180:1 |==> -1
8797:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):181:!isUTF8 && toUTF8 |==> !isUTF8 == toUTF8
8798:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):181:!isUTF8 && toUTF8 |==> false
8799:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):181:!isUTF8 && toUTF8 |==> !isUTF8
8800:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):181:!isUTF8 && toUTF8 |==> toUTF8
8801:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):182:Marc8ToUTF8 == null |==> false
8802:STD:<ASSIGN>:<NO-OP>:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):183:Marc8ToUTF8 = new AnselToUnicode() |==> <NO-OP>
8803:STD:<ASSIGN>:<NO-OP>:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):185:subData = Marc8ToUTF8.convert(subData) |==> <NO-OP>
8804:LVR:0:POS:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):187:0 |==> 1
8805:LVR:0:NEG:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):187:0 |==> -1
8806:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):188:((DataField)field).addSubfield(subfield) |==> <NO-OP>
8807:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):191:record.addVariableField(field) |==> <NO-OP>
8808:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.Mrk8StreamReader@parse(java.util.List<java.lang.String>,boolean):194:record |==> null
8809:ROR:==(int,int):<=(int,int):org.marc4j.Mrk8StreamReader@isValidIndicator(char):198:indicator == ' ' |==> indicator <= ' '
8810:ROR:==(int,int):>=(int,int):org.marc4j.Mrk8StreamReader@isValidIndicator(char):198:indicator == ' ' |==> indicator >= ' '
8811:ROR:==(int,int):FALSE(int,int):org.marc4j.Mrk8StreamReader@isValidIndicator(char):198:indicator == ' ' |==> false
8812:ROR:>=(int,int):==(int,int):org.marc4j.Mrk8StreamReader@isValidIndicator(char):198:indicator >= '0' |==> indicator == '0'
8813:ROR:>=(int,int):>(int,int):org.marc4j.Mrk8StreamReader@isValidIndicator(char):198:indicator >= '0' |==> indicator > '0'
8814:ROR:>=(int,int):TRUE(int,int):org.marc4j.Mrk8StreamReader@isValidIndicator(char):198:indicator >= '0' |==> true
8815:ROR:<=(int,int):<(int,int):org.marc4j.Mrk8StreamReader@isValidIndicator(char):198:indicator <= '9' |==> indicator < '9'
8816:ROR:<=(int,int):==(int,int):org.marc4j.Mrk8StreamReader@isValidIndicator(char):198:indicator <= '9' |==> indicator == '9'
8817:ROR:<=(int,int):TRUE(int,int):org.marc4j.Mrk8StreamReader@isValidIndicator(char):198:indicator <= '9' |==> true
8818:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.Mrk8StreamReader@isValidIndicator(char):198:indicator >= '0' && indicator <= '9' |==> indicator >= '0' == indicator <= '9'
8819:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.Mrk8StreamReader@isValidIndicator(char):198:indicator >= '0' && indicator <= '9' |==> false
8820:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.Mrk8StreamReader@isValidIndicator(char):198:indicator >= '0' && indicator <= '9' |==> indicator >= '0'
8821:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.Mrk8StreamReader@isValidIndicator(char):198:indicator >= '0' && indicator <= '9' |==> indicator <= '9'
8822:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.Mrk8StreamReader@isValidIndicator(char):198:indicator == ' ' || (indicator >= '0' && indicator <= '9') |==> indicator == ' ' != (indicator >= '0' && indicator <= '9')
8823:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.Mrk8StreamReader@isValidIndicator(char):198:indicator == ' ' || (indicator >= '0' && indicator <= '9') |==> indicator == ' '
8824:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.Mrk8StreamReader@isValidIndicator(char):198:indicator == ' ' || (indicator >= '0' && indicator <= '9') |==> (indicator >= '0' && indicator <= '9')
8825:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.Mrk8StreamReader@isValidIndicator(char):198:indicator == ' ' || (indicator >= '0' && indicator <= '9') |==> true
8826:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8StreamReader@getLeader(java.lang.String):202:this.factory.newLeader() |==> null
8827:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamReader@getLeader(java.lang.String):203:leader.unmarshal(substring) |==> <NO-OP>
8828:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.Mrk8StreamReader@getLeader(java.lang.String):204:leader |==> null
8829:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.Mrk8StreamReader@unescapeFieldValue(java.lang.String):209:new StringBuilder() |==> null
8830:ROR:==(int,int):<=(int,int):org.marc4j.Mrk8StreamReader@unescapeFieldValue(java.lang.String):211:c == '\\' |==> c <= '\\'
8831:ROR:==(int,int):>=(int,int):org.marc4j.Mrk8StreamReader@unescapeFieldValue(java.lang.String):211:c == '\\' |==> c >= '\\'
8832:ROR:==(int,int):FALSE(int,int):org.marc4j.Mrk8StreamReader@unescapeFieldValue(java.lang.String):211:c == '\\' |==> false
8833:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamReader@unescapeFieldValue(java.lang.String):211:sb.append(' ') |==> <NO-OP>
8834:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamReader@unescapeFieldValue(java.lang.String):212:sb.append(c) |==> <NO-OP>
8835:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.Mrk8StreamReader@unescapeFieldValue(java.lang.String):214:(sb.toString()) |==> null
8836:LVR:POS:0:org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):219:3 |==> 0
8837:LVR:POS:NEG:org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):219:3 |==> -3
8838:ROR:==(int,int):<=(int,int):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):219:tag.length() == 3 |==> tag.length() <= 3
8839:ROR:==(int,int):>=(int,int):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):219:tag.length() == 3 |==> tag.length() >= 3
8840:ROR:==(int,int):FALSE(int,int):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):219:tag.length() == 3 |==> false
8841:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):219:(tag.length() == 3) && tag.startsWith("00") |==> (tag.length() == 3) == tag.startsWith("00")
8842:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):219:(tag.length() == 3) && tag.startsWith("00") |==> false
8843:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):219:(tag.length() == 3) && tag.startsWith("00") |==> (tag.length() == 3)
8844:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):219:(tag.length() == 3) && tag.startsWith("00") |==> tag.startsWith("00")
8845:LVR:POS:0:org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):220:2 |==> 0
8846:LVR:POS:NEG:org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):220:2 |==> -2
8847:ROR:>=(int,int):==(int,int):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):220:tag.charAt(2) >= '0' |==> tag.charAt(2) == '0'
8848:ROR:>=(int,int):>(int,int):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):220:tag.charAt(2) >= '0' |==> tag.charAt(2) > '0'
8849:ROR:>=(int,int):TRUE(int,int):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):220:tag.charAt(2) >= '0' |==> true
8850:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):219:(tag.length() == 3) && tag.startsWith("00") && (tag.charAt(2) >= '0') |==> ((tag.length() == 3) && tag.startsWith("00")) == (tag.charAt(2) >= '0')
8851:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):219:(tag.length() == 3) && tag.startsWith("00") && (tag.charAt(2) >= '0') |==> false
8852:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):219:(tag.length() == 3) && tag.startsWith("00") && (tag.charAt(2) >= '0') |==> (tag.length() == 3) && tag.startsWith("00")
8853:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):220:(tag.length() == 3) && tag.startsWith("00") && (tag.charAt(2) >= '0') |==> (tag.charAt(2) >= '0')
8854:LVR:POS:0:org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):220:2 |==> 0
8855:LVR:POS:NEG:org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):220:2 |==> -2
8856:ROR:<=(int,int):<(int,int):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):220:tag.charAt(2) <= '9' |==> tag.charAt(2) < '9'
8857:ROR:<=(int,int):==(int,int):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):220:tag.charAt(2) <= '9' |==> tag.charAt(2) == '9'
8858:ROR:<=(int,int):TRUE(int,int):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):220:tag.charAt(2) <= '9' |==> true
8859:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):219:(tag.length() == 3) && tag.startsWith("00") && (tag.charAt(2) >= '0') && (tag.charAt(2) <= '9') |==> ((tag.length() == 3) && tag.startsWith("00") && (tag.charAt(2) >= '0')) == (tag.charAt(2) <= '9')
8860:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):220:(tag.length() == 3) && tag.startsWith("00") && (tag.charAt(2) >= '0') && (tag.charAt(2) <= '9') |==> false
8861:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):219:(tag.length() == 3) && tag.startsWith("00") && (tag.charAt(2) >= '0') && (tag.charAt(2) <= '9') |==> (tag.length() == 3) && tag.startsWith("00") && (tag.charAt(2) >= '0')
8862:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.Mrk8StreamReader@isControlField(java.lang.String):220:(tag.length() == 3) && tag.startsWith("00") && (tag.charAt(2) >= '0') && (tag.charAt(2) <= '9') |==> (tag.charAt(2) <= '9')
8863:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8StreamWriter@<init>(java.io.OutputStream):70:StandardCharsets.UTF_8.newEncoder() |==> null
8864:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.Mrk8StreamWriter@<init>(java.io.OutputStream):71:new PrintWriter(output) |==> null
8865:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):81:new StringBuilder() |==> null
8866:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):83:record.getLeader() |==> null
8867:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):84:recordStringBuilder.append("=").append("LDR").append("  ").append(ldr.marshal()) |==> <NO-OP>
8868:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):87:recordStringBuilder.append("=").append(field.getTag()).append("  ") |==> <NO-OP>
8869:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):90:(ControlField)field |==> null
8870:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):93:this.encoder.encode(CharBuffer.wrap(controlField.getData())).asCharBuffer().toString() |==> null
8871:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):95:controlField.getData() |==> null
8872:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):97:recordStringBuilder.append(data) |==> <NO-OP>
8873:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):99:(DataField)field |==> null
8874:ROR:==(int,int):<=(int,int):org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):100:dataField.getIndicator1() == ' ' |==> dataField.getIndicator1() <= ' '
8875:ROR:==(int,int):>=(int,int):org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):100:dataField.getIndicator1() == ' ' |==> dataField.getIndicator1() >= ' '
8876:ROR:==(int,int):FALSE(int,int):org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):100:dataField.getIndicator1() == ' ' |==> false
8877:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):100:recordStringBuilder.append((dataField.getIndicator1() == ' ') ? "\\" : dataField.getIndicator1()) |==> <NO-OP>
8878:ROR:==(int,int):<=(int,int):org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):101:dataField.getIndicator2() == ' ' |==> dataField.getIndicator2() <= ' '
8879:ROR:==(int,int):>=(int,int):org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):101:dataField.getIndicator2() == ' ' |==> dataField.getIndicator2() >= ' '
8880:ROR:==(int,int):FALSE(int,int):org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):101:dataField.getIndicator2() == ' ' |==> false
8881:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):101:recordStringBuilder.append((dataField.getIndicator2() == ' ') ? "\\" : dataField.getIndicator2()) |==> <NO-OP>
8882:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):106:this.encoder.encode(CharBuffer.wrap(subField.getData())).asCharBuffer().toString() |==> null
8883:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):108:subField.getData() |==> null
8884:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):110:recordStringBuilder.append("$").append(subField.getCode()).append(data) |==> <NO-OP>
8885:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):113:recordStringBuilder.append(System.lineSeparator()) |==> <NO-OP>
8886:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):115:recordStringBuilder.append(System.lineSeparator()) |==> <NO-OP>
8887:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):117:this.mrk8Writer.append(recordStringBuilder) |==> <NO-OP>
8888:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamWriter@write(org.marc4j.marc.Record):118:this.mrk8Writer.flush() |==> <NO-OP>
8889:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamWriter@close():150:this.mrk8Writer.flush() |==> <NO-OP>
8890:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8StreamWriter@close():151:this.mrk8Writer.close() |==> <NO-OP>
8891:LVR:NEG:0:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):52:-1 |==> 0
8892:LVR:NEG:POS:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):52:-1 |==> 1
8893:ROR:==(int,int):<=(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):52:datafield.indexOf('{') == -1 |==> datafield.indexOf('{') <= -1
8894:ROR:==(int,int):>=(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):52:datafield.indexOf('{') == -1 |==> datafield.indexOf('{') >= -1
8895:ROR:==(int,int):FALSE(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):52:datafield.indexOf('{') == -1 |==> false
8896:STD:<RETURN>:<NO-OP>:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):53:return (datafield); |==> <NO-OP>
8897:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):55:new StringBuilder() |==> null
8898:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):56:datafield.length() |==> 0
8899:LVR:0:POS:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):57:0 |==> 1
8900:LVR:0:NEG:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):57:0 |==> -1
8901:ROR:<(int,int):!=(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):58:i < len |==> i != len
8902:ROR:<(int,int):<=(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):58:i < len |==> i <= len
8903:ROR:<(int,int):FALSE(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):58:i < len |==> false
8904:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):59:datafield.indexOf('{', i) |==> 0
8905:LVR:NEG:0:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):60:-1 |==> 0
8906:LVR:NEG:POS:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):60:-1 |==> 1
8907:ROR:==(int,int):<=(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):60:j == -1 |==> j <= -1
8908:ROR:==(int,int):>=(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):60:j == -1 |==> j >= -1
8909:ROR:==(int,int):FALSE(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):60:j == -1 |==> false
8910:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):61:sb.append(datafield.substring(i)) |==> <NO-OP>
8911:STD:<ASSIGN>:<NO-OP>:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):62:i = len |==> <NO-OP>
8912:STD:<CONT>:<NO-OP>:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):63:continue; |==> <NO-OP>
8913:ROR:<(int,int):!=(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):65:i < j |==> i != j
8914:ROR:<(int,int):<=(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):65:i < j |==> i <= j
8915:ROR:<(int,int):FALSE(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):65:i < j |==> false
8916:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):66:sb.append(datafield.substring(i, j)) |==> <NO-OP>
8917:LVR:POS:0:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):67:1 |==> 0
8918:LVR:POS:NEG:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):67:1 |==> -1
8919:AOR:-(int,int):%(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):67:j - 1 |==> j % 1
8920:AOR:-(int,int):*(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):67:j - 1 |==> j * 1
8921:AOR:-(int,int):+(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):67:j - 1 |==> j + 1
8922:AOR:-(int,int):/(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):67:j - 1 |==> j / 1
8923:STD:<ASSIGN>:<NO-OP>:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):67:i = j - 1 |==> <NO-OP>
8924:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):69:datafield.indexOf('}', j) |==> 0
8925:LVR:POS:0:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):70:1 |==> 0
8926:LVR:POS:NEG:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):70:1 |==> -1
8927:AOR:+(int,int):%(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):70:k + 1 |==> k % 1
8928:AOR:+(int,int):*(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):70:k + 1 |==> k * 1
8929:AOR:+(int,int):-(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):70:k + 1 |==> k - 1
8930:AOR:+(int,int):/(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):70:k + 1 |==> k / 1
8931:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):71:sb.append(lookup(lookupVal)) |==> <NO-OP>
8932:LVR:POS:0:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):72:1 |==> 0
8933:LVR:POS:NEG:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):72:1 |==> -1
8934:AOR:+(int,int):%(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):72:k + 1 |==> k % 1
8935:AOR:+(int,int):*(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):72:k + 1 |==> k * 1
8936:AOR:+(int,int):-(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):72:k + 1 |==> k - 1
8937:AOR:+(int,int):/(int,int):org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):72:k + 1 |==> k / 1
8938:STD:<ASSIGN>:<NO-OP>:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):72:i = k + 1 |==> <NO-OP>
8939:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.Mrk8TranslationTable@fromMrk8(java.lang.String):74:(sb.toString()) |==> null
8940:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.Mrk8TranslationTable@lookup(java.lang.String):78:mrk8Map == null |==> false
8941:STD:<ASSIGN>:<NO-OP>:org.marc4j.Mrk8TranslationTable@lookup(java.lang.String):79:mrk8Map = new LinkedHashMap<String, String>() |==> <NO-OP>
8942:LVR:0:POS:org.marc4j.Mrk8TranslationTable@lookup(java.lang.String):80:0 |==> 1
8943:LVR:0:NEG:org.marc4j.Mrk8TranslationTable@lookup(java.lang.String):80:0 |==> -1
8944:ROR:<(int,int):!=(int,int):org.marc4j.Mrk8TranslationTable@lookup(java.lang.String):80:i < mrk8Table.length |==> i != mrk8Table.length
8945:ROR:<(int,int):<=(int,int):org.marc4j.Mrk8TranslationTable@lookup(java.lang.String):80:i < mrk8Table.length |==> i <= mrk8Table.length
8946:ROR:<(int,int):FALSE(int,int):org.marc4j.Mrk8TranslationTable@lookup(java.lang.String):80:i < mrk8Table.length |==> false
8947:LVR:POS:0:org.marc4j.Mrk8TranslationTable@lookup(java.lang.String):81:1 |==> 0
8948:LVR:POS:NEG:org.marc4j.Mrk8TranslationTable@lookup(java.lang.String):81:1 |==> -1
8949:LVR:0:POS:org.marc4j.Mrk8TranslationTable@lookup(java.lang.String):82:0 |==> 1
8950:LVR:0:NEG:org.marc4j.Mrk8TranslationTable@lookup(java.lang.String):82:0 |==> -1
8951:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8TranslationTable@lookup(java.lang.String):82:mrk8Map.put(mrk8Table[i][0], translateVal) |==> <NO-OP>
8952:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8TranslationTable@lookup(java.lang.String):86:mrk8Map.get(toLookup) |==> null
8953:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.Mrk8TranslationTable@lookup(java.lang.String):87:lookupVal == null |==> false
8954:STD:<ASSIGN>:<NO-OP>:org.marc4j.Mrk8TranslationTable@lookup(java.lang.String):92:lookupVal = toLookup |==> <NO-OP>
8955:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.Mrk8TranslationTable@lookup(java.lang.String):95:(lookupVal) |==> null
8956:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.Mrk8TranslationTable@translate(java.lang.String):99:new StringBuilder() |==> null
8957:LVR:0:POS:org.marc4j.Mrk8TranslationTable@translate(java.lang.String):100:0 |==> 1
8958:LVR:0:NEG:org.marc4j.Mrk8TranslationTable@translate(java.lang.String):100:0 |==> -1
8959:ROR:<(int,int):!=(int,int):org.marc4j.Mrk8TranslationTable@translate(java.lang.String):100:i < s.length() |==> i != s.length()
8960:ROR:<(int,int):<=(int,int):org.marc4j.Mrk8TranslationTable@translate(java.lang.String):100:i < s.length() |==> i <= s.length()
8961:ROR:<(int,int):FALSE(int,int):org.marc4j.Mrk8TranslationTable@translate(java.lang.String):100:i < s.length() |==> false
8962:LVR:POS:0:org.marc4j.Mrk8TranslationTable@translate(java.lang.String):100:4 |==> 0
8963:LVR:POS:NEG:org.marc4j.Mrk8TranslationTable@translate(java.lang.String):100:4 |==> -4
8964:LVR:POS:0:org.marc4j.Mrk8TranslationTable@translate(java.lang.String):101:16 |==> 0
8965:LVR:POS:NEG:org.marc4j.Mrk8TranslationTable@translate(java.lang.String):101:16 |==> -16
8966:AOR:*(int,int):%(int,int):org.marc4j.Mrk8TranslationTable@translate(java.lang.String):101:charToNibble(s.charAt(i)) * 16 |==> charToNibble(s.charAt(i)) % 16
8967:AOR:*(int,int):+(int,int):org.marc4j.Mrk8TranslationTable@translate(java.lang.String):101:charToNibble(s.charAt(i)) * 16 |==> charToNibble(s.charAt(i)) + 16
8968:AOR:*(int,int):-(int,int):org.marc4j.Mrk8TranslationTable@translate(java.lang.String):101:charToNibble(s.charAt(i)) * 16 |==> charToNibble(s.charAt(i)) - 16
8969:AOR:*(int,int):/(int,int):org.marc4j.Mrk8TranslationTable@translate(java.lang.String):101:charToNibble(s.charAt(i)) * 16 |==> charToNibble(s.charAt(i)) / 16
8970:LVR:POS:0:org.marc4j.Mrk8TranslationTable@translate(java.lang.String):101:1 |==> 0
8971:LVR:POS:NEG:org.marc4j.Mrk8TranslationTable@translate(java.lang.String):101:1 |==> -1
8972:AOR:+(int,int):%(int,int):org.marc4j.Mrk8TranslationTable@translate(java.lang.String):101:i + 1 |==> i % 1
8973:AOR:+(int,int):*(int,int):org.marc4j.Mrk8TranslationTable@translate(java.lang.String):101:i + 1 |==> i * 1
8974:AOR:+(int,int):-(int,int):org.marc4j.Mrk8TranslationTable@translate(java.lang.String):101:i + 1 |==> i - 1
8975:AOR:+(int,int):/(int,int):org.marc4j.Mrk8TranslationTable@translate(java.lang.String):101:i + 1 |==> i / 1
8976:AOR:+(int,int):%(int,int):org.marc4j.Mrk8TranslationTable@translate(java.lang.String):101:charToNibble(s.charAt(i)) * 16 + charToNibble(s.charAt(i + 1)) |==> charToNibble(s.charAt(i)) * 16 % charToNibble(s.charAt(i + 1))
8977:AOR:+(int,int):*(int,int):org.marc4j.Mrk8TranslationTable@translate(java.lang.String):101:charToNibble(s.charAt(i)) * 16 + charToNibble(s.charAt(i + 1)) |==> charToNibble(s.charAt(i)) * 16 * charToNibble(s.charAt(i + 1))
8978:AOR:+(int,int):-(int,int):org.marc4j.Mrk8TranslationTable@translate(java.lang.String):101:charToNibble(s.charAt(i)) * 16 + charToNibble(s.charAt(i + 1)) |==> charToNibble(s.charAt(i)) * 16 - charToNibble(s.charAt(i + 1))
8979:AOR:+(int,int):/(int,int):org.marc4j.Mrk8TranslationTable@translate(java.lang.String):101:charToNibble(s.charAt(i)) * 16 + charToNibble(s.charAt(i + 1)) |==> charToNibble(s.charAt(i)) * 16 / charToNibble(s.charAt(i + 1))
8980:STD:<CALL>:<NO-OP>:org.marc4j.Mrk8TranslationTable@translate(java.lang.String):101:sb.append((char)(charToNibble(s.charAt(i)) * 16 + charToNibble(s.charAt(i + 1)))) |==> <NO-OP>
8981:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.Mrk8TranslationTable@translate(java.lang.String):103:sb.toString() |==> null
8982:ROR:>=(int,int):==(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):107:c >= '0' |==> c == '0'
8983:ROR:>=(int,int):>(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):107:c >= '0' |==> c > '0'
8984:ROR:>=(int,int):TRUE(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):107:c >= '0' |==> true
8985:ROR:<=(int,int):<(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):107:c <= '9' |==> c < '9'
8986:ROR:<=(int,int):==(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):107:c <= '9' |==> c == '9'
8987:ROR:<=(int,int):TRUE(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):107:c <= '9' |==> true
8988:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.Mrk8TranslationTable@charToNibble(char):107:c >= '0' && c <= '9' |==> c >= '0' == c <= '9'
8989:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.Mrk8TranslationTable@charToNibble(char):107:c >= '0' && c <= '9' |==> false
8990:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.Mrk8TranslationTable@charToNibble(char):107:c >= '0' && c <= '9' |==> c >= '0'
8991:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.Mrk8TranslationTable@charToNibble(char):107:c >= '0' && c <= '9' |==> c <= '9'
8992:AOR:-(int,int):%(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):107:c - '0' |==> c % '0'
8993:AOR:-(int,int):*(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):107:c - '0' |==> c * '0'
8994:AOR:-(int,int):+(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):107:c - '0' |==> c + '0'
8995:AOR:-(int,int):/(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):107:c - '0' |==> c / '0'
8996:STD:<RETURN>:<NO-OP>:org.marc4j.Mrk8TranslationTable@charToNibble(char):107:return ((int)(Config.__M_NO == 8995 ? c / '0' : Config.__M_NO == 8994 ? c + '0' : Config.__M_NO == 8993 ? c * '0' : Config.__M_NO == 8992 ? c % '0' : Config.__M_NO == 0 && Config.COVERED(8992, 8995) ? c - '0' : c - '0')); |==> <NO-OP>
8997:ROR:>=(int,int):==(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c >= 'A' |==> c == 'A'
8998:ROR:>=(int,int):>(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c >= 'A' |==> c > 'A'
8999:ROR:>=(int,int):TRUE(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c >= 'A' |==> true
9000:ROR:<=(int,int):<(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c <= 'F' |==> c < 'F'
9001:ROR:<=(int,int):==(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c <= 'F' |==> c == 'F'
9002:ROR:<=(int,int):TRUE(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c <= 'F' |==> true
9003:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c >= 'A' && c <= 'F' |==> c >= 'A' == c <= 'F'
9004:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c >= 'A' && c <= 'F' |==> false
9005:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c >= 'A' && c <= 'F' |==> c >= 'A'
9006:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c >= 'A' && c <= 'F' |==> c <= 'F'
9007:AOR:-(int,int):%(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c - 'A' |==> c % 'A'
9008:AOR:-(int,int):*(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c - 'A' |==> c * 'A'
9009:AOR:-(int,int):+(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c - 'A' |==> c + 'A'
9010:AOR:-(int,int):/(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c - 'A' |==> c / 'A'
9011:LVR:POS:0:org.marc4j.Mrk8TranslationTable@charToNibble(char):108:10 |==> 0
9012:LVR:POS:NEG:org.marc4j.Mrk8TranslationTable@charToNibble(char):108:10 |==> -10
9013:AOR:+(int,int):%(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c - 'A' + 10 |==> (c - 'A') % 10
9014:AOR:+(int,int):*(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c - 'A' + 10 |==> (c - 'A') * 10
9015:AOR:+(int,int):-(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c - 'A' + 10 |==> c - 'A' - 10
9016:AOR:+(int,int):/(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):108:c - 'A' + 10 |==> (c - 'A') / 10
9017:STD:<RETURN>:<NO-OP>:org.marc4j.Mrk8TranslationTable@charToNibble(char):108:return ((int)(Config.__M_NO == 9016 ? (c - 'A') / 10 : Config.__M_NO == 9015 ? c - 'A' - 10 : Config.__M_NO == 9014 ? (c - 'A') * 10 : Config.__M_NO == 9013 ? (c - 'A') % 10 : Config.__M_NO == 0 && Config.COVERED(9013, 9016) ? c - 'A' + 10 : (Config.__M_NO == 9010 ? c / 'A' : Config.__M_NO == 9009 ? c + 'A' : Config.__M_NO == 9008 ? c * 'A' : Config.__M_NO == 9007 ? c % 'A' : Config.__M_NO == 0 && Config.COVERED(9007, 9010) ? c - 'A' : c - 'A') + (Config.__M_NO == 0 && Config.COVERED(9011, 9012) ? 10 : Config.__M_NO == 9012 ? -10 : Config.__M_NO == 9011 ? 0 : 10))); |==> <NO-OP>
9018:ROR:>=(int,int):==(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c >= 'a' |==> c == 'a'
9019:ROR:>=(int,int):>(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c >= 'a' |==> c > 'a'
9020:ROR:>=(int,int):TRUE(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c >= 'a' |==> true
9021:ROR:<=(int,int):<(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c <= 'f' |==> c < 'f'
9022:ROR:<=(int,int):==(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c <= 'f' |==> c == 'f'
9023:ROR:<=(int,int):TRUE(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c <= 'f' |==> true
9024:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c >= 'a' && c <= 'f' |==> c >= 'a' == c <= 'f'
9025:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c >= 'a' && c <= 'f' |==> false
9026:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c >= 'a' && c <= 'f' |==> c >= 'a'
9027:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c >= 'a' && c <= 'f' |==> c <= 'f'
9028:AOR:-(int,int):%(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c - 'a' |==> c % 'a'
9029:AOR:-(int,int):*(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c - 'a' |==> c * 'a'
9030:AOR:-(int,int):+(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c - 'a' |==> c + 'a'
9031:AOR:-(int,int):/(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c - 'a' |==> c / 'a'
9032:LVR:POS:0:org.marc4j.Mrk8TranslationTable@charToNibble(char):109:10 |==> 0
9033:LVR:POS:NEG:org.marc4j.Mrk8TranslationTable@charToNibble(char):109:10 |==> -10
9034:AOR:+(int,int):%(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c - 'a' + 10 |==> (c - 'a') % 10
9035:AOR:+(int,int):*(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c - 'a' + 10 |==> (c - 'a') * 10
9036:AOR:+(int,int):-(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c - 'a' + 10 |==> c - 'a' - 10
9037:AOR:+(int,int):/(int,int):org.marc4j.Mrk8TranslationTable@charToNibble(char):109:c - 'a' + 10 |==> (c - 'a') / 10
9038:STD:<RETURN>:<NO-OP>:org.marc4j.Mrk8TranslationTable@charToNibble(char):109:return ((int)(Config.__M_NO == 9037 ? (c - 'a') / 10 : Config.__M_NO == 9036 ? c - 'a' - 10 : Config.__M_NO == 9035 ? (c - 'a') * 10 : Config.__M_NO == 9034 ? (c - 'a') % 10 : Config.__M_NO == 0 && Config.COVERED(9034, 9037) ? c - 'a' + 10 : (Config.__M_NO == 9031 ? c / 'a' : Config.__M_NO == 9030 ? c + 'a' : Config.__M_NO == 9029 ? c * 'a' : Config.__M_NO == 9028 ? c % 'a' : Config.__M_NO == 0 && Config.COVERED(9028, 9031) ? c - 'a' : c - 'a') + (Config.__M_NO == 0 && Config.COVERED(9032, 9033) ? 10 : Config.__M_NO == 9033 ? -10 : Config.__M_NO == 9032 ? 0 : 10))); |==> <NO-OP>
9039:LVR:0:POS:org.marc4j.Mrk8TranslationTable@charToNibble(char):110:0 |==> 1
9040:LVR:0:NEG:org.marc4j.Mrk8TranslationTable@charToNibble(char):110:0 |==> -1
9041:EVR:<NEW_ARRAY>:<DEFAULT>:org.marc4j.Mrk8TranslationTable:115:{{"{0}", "30x"}, {"{00}", "00x"}, {"{01}", "01x"}, {"{02}", "02x"}, {"{03}", "03x"}, {"{04}", "04x"}, {"{05}", "05x"}, {"{06}", "06x"}, {"{07}", "07x"}, {"{08}", "08x"}, {"{09}", "09x"}, {"{0A}", "0Ax"}, {"{0B}", "0Bx"}, {"{0C}", "0Cx"}, {"{0D}", "0Dx"}, {"{0E}", "0Ex"}, {"{0F}", "0Fx"}, {"{1}", "31x"}, {"{10}", "10x"}, {"{11}", "11x"}, {"{12}", "12x"}, {"{13}", "13x"}, {"{14}", "14x"}, {"{15}", "15x"}, {"{16}", "16x"}, {"{17}", "17x"}, {"{18}", "18x"}, {"{19}", "19x"}, {"{1A}", "1Ax"}, {"{1B}", "1Bx"}, {"{1C}", "1Cx"}, {"{1D}", "1Dx"}, {"{1E}", "1Ex"}, {"{1F}", "1Fx"}, {"{2}", "32x"}, {"{20}", "20x"}, {"{21}", "21x"}, {"{22}", "22x"}, {"{23}", "23x"}, {"{24}", "24x"}, {"{25}", "25x"}, {"{26}", "26x"}, {"{27}", "27x"}, {"{28}", "28x"}, {"{29}", "29x"}, {"{2A}", "2Ax"}, {"{2B}", "2Bx"}, {"{2C}", "2Cx"}, {"{2D}", "2Dx"}, {"{2E}", "2Ex"}, {"{2F}", "2Fx"}, {"{3}", "33x"}, {"{30}", "30x"}, {"{31}", "31x"}, {"{32}", "32x"}, {"{33}", "33x"}, {"{34}", "34x"}, {"{35}", "35x"}, {"{36}", "36x"}, {"{37}", "37x"}, {"{38}", "38x"}, {"{39}", "39x"}, {"{3A}", "3Ax"}, {"{3B}", "3Bx"}, {"{3C}", "3Cx"}, {"{3D}", "3Dx"}, {"{3E}", "3Ex"}, {"{3F}", "3Fx"}, {"{4}", "34x"}, {"{40}", "40x"}, {"{41}", "41x"}, {"{42}", "42x"}, {"{43}", "43x"}, {"{44}", "44x"}, {"{45}", "45x"}, {"{46}", "46x"}, {"{47}", "47x"}, {"{48}", "48x"}, {"{49}", "49x"}, {"{4A}", "4Ax"}, {"{4B}", "4Bx"}, {"{4C}", "4Cx"}, {"{4D}", "4Dx"}, {"{4E}", "4Ex"}, {"{4F}", "4Fx"}, {"{5}", "35x"}, {"{50}", "50x"}, {"{51}", "51x"}, {"{52}", "52x"}, {"{53}", "53x"}, {"{54}", "54x"}, {"{55}", "55x"}, {"{56}", "56x"}, {"{57}", "57x"}, {"{58}", "58x"}, {"{59}", "59x"}, {"{5A}", "5Ax"}, {"{5B}", "5Bx"}, {"{5C}", "5Cx"}, {"{5D}", "5Dx"}, {"{5E}", "5Ex"}, {"{5F}", "5Fx"}, {"{6}", "36x"}, {"{60}", "60x"}, {"{61}", "61x"}, {"{62}", "62x"}, {"{63}", "63x"}, {"{64}", "64x"}, {"{65}", "65x"}, {"{66}", "66x"}, {"{67}", "67x"}, {"{68}", "68x"}, {"{69}", "69x"}, {"{6A}", "6Ax"}, {"{6B}", "6Bx"}, {"{6C}", "6Cx"}, {"{6D}", "6Dx"}, {"{6E}", "6Ex"}, {"{6F}", "6Fx"}, {"{7}", "37x"}, {"{70}", "70x"}, {"{71}", "71x"}, {"{72}", "72x"}, {"{73}", "73x"}, {"{74}", "74x"}, {"{75}", "75x"}, {"{76}", "76x"}, {"{77}", "77x"}, {"{78}", "78x"}, {"{79}", "79x"}, {"{7A}", "7Ax"}, {"{7B}", "7Bx"}, {"{7C}", "7Cx"}, {"{7D}", "7Dx"}, {"{7E}", "7Ex"}, {"{7F}", "7Fx"}, {"{8}", "38x"}, {"{80}", "80x"}, {"{81}", "81x"}, {"{82}", "82x"}, {"{83}", "83x"}, {"{84}", "84x"}, {"{85}", "85x"}, {"{86}", "86x"}, {"{87}", "87x"}, {"{88}", "88x"}, {"{89}", "89x"}, {"{8A}", "8Ax"}, {"{8B}", "8Bx"}, {"{8C}", "8Cx"}, {"{8D}", "8Dx"}, {"{8E}", "8Ex"}, {"{8F}", "8Fx"}, {"{9}", "39x"}, {"{90}", "90x"}, {"{91}", "91x"}, {"{92}", "92x"}, {"{93}", "93x"}, {"{94}", "94x"}, {"{95}", "95x"}, {"{96}", "96x"}, {"{97}", "97x"}, {"{98}", "98x"}, {"{99}", "99x"}, {"{9A}", "9Ax"}, {"{9B}", "9Bx"}, {"{9C}", "9Cx"}, {"{9D}", "9Dx"}, {"{9E}", "9Ex"}, {"{9F}", "9Fx"}, {"{A}", "41x"}, {"{a}", "61x"}, {"{A0}", "A0x"}, {"{A1}", "A1x"}, {"{A2}", "A2x"}, {"{A3}", "A3x"}, {"{A4}", "A4x"}, {"{A5}", "A5x"}, {"{A6}", "A6x"}, {"{A7}", "A7x"}, {"{A8}", "A8x"}, {"{A9}", "A9x"}, {"{AA}", "AAx"}, {"{Aacute}", "E2x 41x"}, {"{aacute}", "E2x 61x"}, {"{AB}", "ABx"}, {"{Abreve}", "E6x 41x"}, {"{abreve}", "E6x 61x"}, {"{AC}", "ACx"}, {"{Acirc}", "E3x 41x"}, {"{acirc}", "E3x 61x"}, {"{acute}", "E2x"}, {"{Acy}", "41x"}, {"{acy}", "61x"}, {"{AD}", "ADx"}, {"{AE}", "AEx"}, {"{AElig}", "A5x"}, {"{aelig}", "B5x"}, {"{AF}", "AFx"}, {"{agr}", "61x"}, {"{Agrave}", "E1x 41x"}, {"{agrave}", "E1x 61x"}, {"{alif}", "AEx"}, {"{amp}", "26x"}, {"{Aogon}", "F1x 41x"}, {"{aogon}", "F1x 61x"}, {"{apos}", "27x"}, {"{arab}", "28x 33x"}, {"{Aring}", "EAx 41x"}, {"{aring}", "EAx 61x"}, {"{ast}", "2Ax"}, {"{asuper}", "61x"}, {"{Atilde}", "E4x 41x"}, {"{atilde}", "E4x 61x"}, {"{Auml}", "E8x 41x"}, {"{auml}", "E8x 61x"}, {"{ayn}", "B0x"}, {"{B}", "42x"}, {"{b}", "62x"}, {"{B0}", "B0x"}, {"{B1}", "B1x"}, {"{B2}", "B2x"}, {"{B3}", "B3x"}, {"{B4}", "B4x"}, {"{B5}", "B5x"}, {"{B6}", "B6x"}, {"{B7}", "B7x"}, {"{B8}", "B8x"}, {"{B9}", "B9x"}, {"{BA}", "BAx"}, {"{BB}", "BBx"}, {"{BC}", "BCx"}, {"{bcy}", "62x"}, {"{Bcy}", "42x"}, {"{BD}", "BDx"}, {"{BE}", "BEx"}, {"{BF}", "BFx"}, {"{bgr}", "62x"}, {"{breve}", "E6x"}, {"{breveb}", "F9x"}, {"{brvbar}", "7Cx"}, {"{bsol}", "5Cx"}, {"{bull}", "2Ax"}, {"{C}", "43x"}, {"{c}", "63x"}, {"{C0}", "C0x"}, {"{C1}", "C1x"}, {"{C2}", "C2x"}, {"{C3}", "C3x"}, {"{C4}", "C4x"}, {"{C5}", "C5x"}, {"{C6}", "C6x"}, {"{C7}", "C7x"}, {"{C8}", "C8x"}, {"{C9}", "C9x"}, {"{CA}", "CAx"}, {"{Cacute}", "E2x 43x"}, {"{cacute}", "E2x 63x"}, {"{candra}", "EFx"}, {"{caron}", "E9x"}, {"{CB}", "CBx"}, {"{CC}", "CCx"}, {"{Ccaron}", "E9x 43x"}, {"{ccaron}", "E9x 63x"}, {"{Ccedil}", "F0x 43x"}, {"{ccedil}", "F0x 63x"}, {"{CD}", "CDx"}, {"{CE}", "CEx"}, {"{cedil}", "F0x"}, {"{cent}", "63x"}, {"{CF}", "CFx"}, {"{CHcy}", "43x 68x"}, {"{chcy}", "63x 68x"}, {"{circ}", "E3x"}, {"{circb}", "F4x"}, {"{cjk}", "24x 31x"}, {"{colon}", "3Ax"}, {"{comma}", "2Cx"}, {"{commaa}", "FEx"}, {"{commab}", "F7x"}, {"{commat}", "40x"}, {"{copy}", "C3x"}, {"{curren}", "2Ax"}, {"{cyril}", "28x 4Ex"}, {"{D}", "44x"}, {"{d}", "64x"}, {"{D0}", "D0x"}, {"{D1}", "D1x"}, {"{D2}", "D2x"}, {"{D3}", "D3x"}, {"{D4}", "D4x"}, {"{D5}", "D5x"}, {"{D6}", "D6x"}, {"{D7}", "D7x"}, {"{D8}", "D8x"}, {"{D9}", "D9x"}, {"{DA}", "DAx"}, {"{Dagger}", "7Cx"}, {"{dagger}", "7Cx"}, {"{DB}", "DBx"}, {"{dblac}", "EEx"}, {"{dbldotb}", "F3x"}, {"{dblunder}", "F5x"}, {"{DC}", "DCx"}, {"{Dcaron}", "E9x 44x"}, {"{dcaron}", "E9x 64x"}, {"{Dcy}", "44x"}, {"{dcy}", "64x"}, {"{DD}", "DDx"}, {"{DE}", "DEx"}, {"{deg}", "C0x"}, {"{DF}", "DFx"}, {"{diaer}", "E8x"}, {"{divide}", "2Fx"}, {"{djecy}", "B3x"}, {"{DJEcy}", "A3x"}, {"{dollar}", "24x"}, {"{dot}", "E7x"}, {"{dotb}", "F2x"}, {"{Dstrok}", "A3x"}, {"{dstrok}", "B3x"}, {"{DZEcy}", "44x 7Ax"}, {"{dzecy}", "64x 7Ax"}, {"{DZHEcy}", "44x E9x 7Ax"}, {"{dzhecy}", "64x E9x 7Ax"}, {"{E}", "45x"}, {"{e}", "65x"}, {"{E0}", "E0x"}, {"{E1}", "E1x"}, {"{E2}", "E2x"}, {"{E3}", "E3x"}, {"{E4}", "E4x"}, {"{E5}", "E5x"}, {"{E6}", "E6x"}, {"{E7}", "E7x"}, {"{E8}", "E8x"}, {"{E9}", "E9x"}, {"{EA}", "EAx"}, {"{ea}", "eax"}, {"{Eacute}", "E2x 45x"}, {"{eacute}", "E2x 65x"}, {"{EB}", "EBx"}, {"{EC}", "ECx"}, {"{Ecaron}", "E9x 45x"}, {"{ecaron}", "E9x 65x"}, {"{Ecirc}", "E3x 45x"}, {"{ecirc}", "E3x 65x"}, {"{Ecy}", "E7x 44x"}, {"{ecy}", "E7x 65x"}, {"{ED}", "EDx"}, {"{EE}", "EEx"}, {"{EF}", "EFx"}, {"{Egrave}", "E1x 45x"}, {"{egrave}", "E1x 65x"}, {"{Ehookr}", "F1x 45x"}, {"{ehookr}", "F1x 65x"}, {"{Eogon}", "F1x 45x"}, {"{eogon}", "F1x 65x"}, {"{equals}", "3Dx"}, {"{esc}", "1Bx"}, {"{eth}", "BAx"}, {"{ETH}", "A3x"}, {"{Euml}", "E8x 45x"}, {"{euml}", "E8x 65x"}, {"{excl}", "21x"}, {"{F}", "46x"}, {"{f}", "66x"}, {"{F0}", "F0x"}, {"{F1}", "F1x"}, {"{F2}", "F2x"}, {"{F3}", "F3x"}, {"{F4}", "F4x"}, {"{F5}", "F5x"}, {"{F6}", "F6x"}, {"{F7}", "F7x"}, {"{F8}", "F8x"}, {"{F9}", "F9x"}, {"{FA}", "FAx"}, {"{FB}", "FBx"}, {"{FC}", "FCx"}, {"{Fcy}", "46x"}, {"{fcy}", "66x"}, {"{FD}", "FDx"}, {"{FE}", "FEx"}, {"{FF}", "FFx"}, {"{flat}", "A9x"}, {"{fnof}", "66x"}, {"{frac12}", "31x 2Fx 32x"}, {"{frac14}", "31x 2Fx 34x"}, {"{frac34}", "33x 2Fx 34x"}, {"{G}", "47x"}, {"{g}", "67x"}, {"{Gcy}", "47x"}, {"{gcy}", "67x"}, {"{GEcy}", "47x"}, {"{gecy}", "67x"}, {"{ggr}", "67x"}, {"{GHcy}", "47x"}, {"{ghcy}", "67x"}, {"{GJEcy}", "E2x 47x"}, {"{gjecy}", "E2x 67x"}, {"{grave}", "E1x"}, {"{greek}", "67x"}, {"{gs}", "1Dx"}, {"{gt}", "3Ex"}, {"{H}", "48x"}, {"{h}", "68x"}, {"{HARDcy}", "B7x"}, {"{hardcy}", "B7x"}, {"{hardsign}", "B7x"}, {"{Hcy}", "48x"}, {"{hcy}", "68x"}, {"{hebrew}", "28x 32x"}, {"{hellip}", "2Ex 2Ex 2Ex"}, {"{hooka}", "E0x"}, {"{hookl}", "F7x"}, {"{hookr}", "F1x"}, {"{hyphen}", "2Dx"}, {"{I}", "49x"}, {"{i}", "69x"}, {"{Iacute}", "E2x 49x"}, {"{iacute}", "E2x 69x"}, {"{Icaron}", "E9x 49x"}, {"{icaron}", "E9x 69x"}, {"{Icirc}", "E3x 49x"}, {"{icirc}", "E3x 69x"}, {"{Icy}", "49x"}, {"{icy}", "69x"}, {"{Idot}", "E7x 49x"}, {"{IEcy}", "EBx 49x ECx 45x"}, {"{iecy}", "EBx 69x ECx 65x"}, {"{iexcl}", "C6x"}, {"{Igrave}", "E1x 49x"}, {"{igrave}", "E1x 69x"}, {"{IJlig}", "49x 4Ax"}, {"{ijlig}", "69x 6Ax"}, {"{inodot}", "B8x"}, {"{IOcy}", "EBx 49x ECx 4Fx"}, {"{iocy}", "EBx 69x ECx 6Fx"}, {"{iquest}", "C5x"}, {"{Iuml}", "E8x 49x"}, {"{iuml}", "E8x 69x"}, {"{Iumlcy}", "E8x 49x"}, {"{iumlcy}", "E8x 69x"}, {"{IYcy}", "59x"}, {"{iycy}", "79x"}, {"{J}", "4Ax"}, {"{j}", "6Ax"}, {"{Jcy}", "E6x 49x"}, {"{jcy}", "E6x 69x"}, {"{JEcy}", "4Ax"}, {"{jecy}", "6Ax"}, {"{JIcy}", "E8x 49x"}, {"{jicy}", "E8x 69x"}, {"{joiner}", "8Dx"}, {"{K}", "4Bx"}, {"{k}", "6Bx"}, {"{Kcy}", "4Bx"}, {"{kcy}", "6Bx"}, {"{KHcy}", "4Bx 68x"}, {"{khcy}", "6Bx 68x"}, {"{KJEcy}", "E2x 4Bx"}, {"{kjecy}", "E2x 6Bx"}, {"{L}", "4Cx"}, {"{l}", "6Cx"}, {"{Lacute}", "E2x 4Cx"}, {"{lacute}", "E2x 6Cx"}, {"{laquo}", "22x"}, {"{latin}", "28x 42x"}, {"{lcub}", "7Bx"}, {"{Lcy}", "4Cx"}, {"{lcy}", "6Cx"}, {"{ldbltil}", "FAx"}, {"{ldquo}", "22x"}, {"{LJEcy}", "4Cx 6Ax"}, {"{ljecy}", "6Cx 6Ax"}, {"{llig}", "EBx"}, {"{lpar}", "28x"}, {"{lsqb}", "5Bx"}, {"{lsquo}", "27x"}, {"{lsquor}", "27x"}, {"{Lstrok}", "A1x"}, {"{lstrok}", "B1x"}, {"{lt}", "3Cx"}, {"{M}", "4Dx"}, {"{m}", "6Dx"}, {"{macr}", "E5x"}, {"{Mcy}", "4Dx"}, {"{mcy}", "6Dx"}, {"{mdash}", "2Dx 2Dx"}, {"{middot}", "A8x"}, {"{mllhring}", "B0x"}, {"{mlprime}", "A7x"}, {"{mlPrime}", "B7x"}, {"{mlrhring}", "AEx"}, {"{N}", "4Ex"}, {"{n}", "6Ex"}, {"{Nacute}", "E2x 4Ex"}, {"{nacute}", "E2x 6Ex"}, {"{Ncaron}", "E9x 4Ex"}, {"{ncaron}", "E9x 6Ex"}, {"{Ncy}", "4Ex"}, {"{ncy}", "6Ex"}, {"{ndash}", "2Dx 2Dx"}, {"{NJEcy}", "4Ex 6Ax"}, {"{njecy}", "6Ex 6Ax"}, {"{No}", "4Ex 6Fx 2Ex"}, {"{nonjoin}", "8Ex"}, {"{Ntilde}", "E4x 4Ex"}, {"{ntilde}", "E4x 6Ex"}, {"{num}", "23x"}, {"{O}", "4Fx"}, {"{o}", "6Fx"}, {"{Oacute}", "E2x 4Fx"}, {"{oacute}", "E2x 6Fx"}, {"{Ocirc}", "E3x 4Fx"}, {"{ocirc}", "E3x 6Fx"}, {"{Ocy}", "4Fx"}, {"{ocy}", "6Fx"}, {"{Odblac}", "EEx 4Fx"}, {"{odblac}", "EEx 6Fx"}, {"{OElig}", "A6x"}, {"{oelig}", "B6x"}, {"{ogon}", "F1x"}, {"{Ograve}", "E1x 4Fx"}, {"{ograve}", "E1x 6Fx"}, {"{Ohorn}", "ACx"}, {"{ohorn}", "BCx"}, {"{ordf}", "61x"}, {"{ordm}", "6Fx"}, {"{Ostrok}", "A2x"}, {"{ostrok}", "B2x"}, {"{osuper}", "6Fx"}, {"{Otilde}", "E4x 4Fx"}, {"{otilde}", "E4x 6Fx"}, {"{Ouml}", "E8x 4Fx"}, {"{ouml}", "E8x 6Fx"}, {"{P}", "50x"}, {"{p}", "70x"}, {"{para}", "7Cx"}, {"{Pcy}", "50x"}, {"{pcy}", "70x"}, {"{percnt}", "25x"}, {"{period}", "2Ex"}, {"{phono}", "C2x"}, {"{pipe}", "7Cx"}, {"{plus}", "2Bx"}, {"{plusmn}", "ABx"}, {"{pound}", "B9x"}, {"{Q}", "51x"}, {"{q}", "71x"}, {"{quest}", "3Fx"}, {"{quot}", "22x"}, {"{R}", "52x"}, {"{r}", "72x"}, {"{Racute}", "E2x 52x"}, {"{racute}", "E2x 72x"}, {"{raquo}", "22x"}, {"{Rcaron}", "E9x 52x"}, {"{rcaron}", "E9x 72x"}, {"{rcedil}", "F8x"}, {"{rcommaa}", "EDx"}, {"{rcub}", "7Dx"}, {"{Rcy}", "52x"}, {"{rcy}", "72x"}, {"{rdbltil}", "FBx"}, {"{rdquofh}", "22x"}, {"{rdquor}", "22x"}, {"{reg}", "AAx"}, {"{ring}", "EAx"}, {"{ringb}", "F4x"}, {"{rlig}", "ECx"}, {"{rpar}", "29x"}, {"{rs}", "1Ex"}, {"{rsqb}", "5Dx"}, {"{rsquo}", "27x"}, {"{rsquor}", "27x"}, {"{S}", "53x"}, {"{s}", "73x"}, {"{Sacute}", "E2x 53x"}, {"{sacute}", "E2x 73x"}, {"{Scommab}", "F7x 53x"}, {"{scommab}", "F7x 73x"}, {"{scriptl}", "C1x"}, {"{Scy}", "53x"}, {"{scy}", "73x"}, {"{sect}", "7Cx"}, {"{semi}", "3Bx"}, {"{sharp}", "C4x"}, {"{SHCHcy}", "53x 68x 63x 68x"}, {"{shchcy}", "73x 68x 63x 68x"}, {"{SHcy}", "53x 68x"}, {"{shcy}", "73x 68x"}, {"{shy}", "2Dx"}, {"{SOFTcy}", "A7x"}, {"{softcy}", "A7x"}, {"{softsign}", "A7x"}, {"{sol}", "2Fx"}, {"{space}", "20x"}, {"{spcirc}", "5Ex"}, {"{spgrave}", "60x"}, {"{sptilde}", "7Ex"}, {"{spundscr}", "5Fx"}, {"{squf}", "7Cx"}, {"{sub}", "62x"}, {"{sup1}", "1Bx 70x 31x 1Bx 73x"}, {"{sup2}", "1Bx 70x 32x 1Bx 73x"}, {"{sup3}", "1Bx 70x 33x 1Bx 73x"}, {"{super}", "70x"}, {"{szlig}", "73x 73x"}, {"{T}", "54x"}, {"{t}", "74x"}, {"{Tcaron}", "E9x 54x"}, {"{tcaron}", "E9x 74x"}, {"{Tcommab}", "F7x 54x"}, {"{tcommab}", "F7x 74x"}, {"{Tcy}", "54x"}, {"{tcy}", "74x"}, {"{THORN}", "A4x"}, {"{thorn}", "B4x"}, {"{tilde}", "E4x"}, {"{times}", "78x"}, {"{trade}", "28x 54x 6Dx 29x"}, {"{TScy}", "EBx 54x ECx 53x"}, {"{tscy}", "EBx 74x ECx 73x"}, {"{TSHEcy}", "E2x 43x"}, {"{tshecy}", "E2x 63x"}, {"{U}", "55x"}, {"{u}", "75x"}, {"{Uacute}", "E2x 55x"}, {"{uacute}", "E2x 75x"}, {"{Ubrevecy}", "E6x 55x"}, {"{ubrevecy}", "E6x 75x"}, {"{Ucirc}", "E3x 55x"}, {"{ucirc}", "E3x 75x"}, {"{Ucy}", "55x"}, {"{ucy}", "75x"}, {"{Udblac}", "EEx 55x"}, {"{udblac}", "EEx 75x"}, {"{Ugrave}", "E1x 55x"}, {"{ugrave}", "E1x 75x"}, {"{Uhorn}", "ADx"}, {"{uhorn}", "BDx"}, {"{uml}", "E8x"}, {"{under}", "F6x"}, {"{Uring}", "EAx 55x"}, {"{uring}", "EAx 75x"}, {"{us}", "1Fx"}, {"{Uuml}", "E8x 55x"}, {"{uuml}", "E8x 75x"}, {"{V}", "56x"}, {"{v}", "76x"}, {"{Vcy}", "56x"}, {"{vcy}", "76x"}, {"{verbar}", "7Cx"}, {"{vlineb}", "F2x"}, {"{W}", "57x"}, {"{w}", "77x"}, {"{X}", "58x"}, {"{x}", "78x"}, {"{Y}", "59x"}, {"{y}", "79x"}, {"{Yacute}", "E2x 59x"}, {"{yacute}", "E2x 79x"}, {"{YAcy}", "EBx 49x ECx 41x"}, {"{yacy}", "EBx 69x ECx 61x"}, {"{Ycy}", "59x"}, {"{ycy}", "79x"}, {"{YEcy}", "45x"}, {"{yecy}", "65x"}, {"{yen}", "59x"}, {"{YIcy}", "49x"}, {"{yicy}", "69x"}, {"{YUcy}", "EBx 49x ECx 55x"}, {"{yucy}", "EBx 69x ECx 75x"}, {"{Z}", "5Ax"}, {"{z}", "7Ax"}, {"{Zacute}", "E2x 5Ax"}, {"{zacute}", "E2x 7Ax"}, {"{Zcy}", "5Ax"}, {"{zcy}", "7Ax"}, {"{Zdot}", "E7x 5Ax"}, {"{zdot}", "E7x 7Ax"}, {"{ZHcy}", "5Ax 68x"}, {"{zhcy}", "7Ax 68x"}, {"{ZHuacy}", "EBx 5Ax ECx 68x"}, {"{zhuacy}", "EBx 7Ax ECx 68x"}} |==> null
9042:LVR:POS:0:org.marc4j.converter.impl.CodeTable@isCombining(int,int,int):61:126 |==> 0
9043:LVR:POS:NEG:org.marc4j.converter.impl.CodeTable@isCombining(int,int,int):61:126 |==> -126
9044:ROR:<=(int,int):<(int,int):org.marc4j.converter.impl.CodeTable@isCombining(int,int,int):61:i <= 126 |==> i < 126
9045:ROR:<=(int,int):==(int,int):org.marc4j.converter.impl.CodeTable@isCombining(int,int,int):61:i <= 126 |==> i == 126
9046:ROR:<=(int,int):TRUE(int,int):org.marc4j.converter.impl.CodeTable@isCombining(int,int,int):61:i <= 126 |==> true
9047:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@isCombining(int,int,int):62:combining.get(new Integer(g0)) |==> null
9048:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.CodeTable@isCombining(int,int,int):63:v != null |==> true
9049:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.CodeTable@isCombining(int,int,int):63:v != null && v.contains(new Integer(i)) |==> v != null == v.contains(new Integer(i))
9050:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.CodeTable@isCombining(int,int,int):63:v != null && v.contains(new Integer(i)) |==> false
9051:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.CodeTable@isCombining(int,int,int):63:v != null && v.contains(new Integer(i)) |==> v != null
9052:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.CodeTable@isCombining(int,int,int):63:v != null && v.contains(new Integer(i)) |==> v.contains(new Integer(i))
9053:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@isCombining(int,int,int):65:combining.get(new Integer(g1)) |==> null
9054:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.CodeTable@isCombining(int,int,int):66:v != null |==> true
9055:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.CodeTable@isCombining(int,int,int):66:v != null && v.contains(new Integer(i)) |==> v != null == v.contains(new Integer(i))
9056:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.CodeTable@isCombining(int,int,int):66:v != null && v.contains(new Integer(i)) |==> false
9057:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.CodeTable@isCombining(int,int,int):66:v != null && v.contains(new Integer(i)) |==> v != null
9058:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.CodeTable@isCombining(int,int,int):66:v != null && v.contains(new Integer(i)) |==> v.contains(new Integer(i))
9059:LVR:POS:0:org.marc4j.converter.impl.CodeTable@getChar(int,int):79:32 |==> 0
9060:LVR:POS:NEG:org.marc4j.converter.impl.CodeTable@getChar(int,int):79:32 |==> -32
9061:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.CodeTable@getChar(int,int):79:c == 32 |==> c <= 32
9062:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.CodeTable@getChar(int,int):79:c == 32 |==> c >= 32
9063:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.CodeTable@getChar(int,int):79:c == 32 |==> false
9064:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@getChar(int,int):80:(char)c |==> 0
9065:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@getChar(int,int):82:charsets.get(new Integer(mode)) |==> null
9066:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.CodeTable@getChar(int,int):84:charset == null |==> false
9067:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@getChar(int,int):87:(char)c |==> 0
9068:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@getChar(int,int):89:charset.get(new Integer(c)) |==> null
9069:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.CodeTable@getChar(int,int):90:ch == null |==> false
9070:LVR:POS:0:org.marc4j.converter.impl.CodeTable@getChar(int,int):91:128 |==> 0
9071:LVR:POS:NEG:org.marc4j.converter.impl.CodeTable@getChar(int,int):91:128 |==> -128
9072:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.CodeTable@getChar(int,int):91:c < 128 |==> c != 128
9073:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.CodeTable@getChar(int,int):91:c < 128 |==> c <= 128
9074:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.CodeTable@getChar(int,int):91:c < 128 |==> false
9075:LVR:POS:0:org.marc4j.converter.impl.CodeTable@getChar(int,int):91:128 |==> 0
9076:LVR:POS:NEG:org.marc4j.converter.impl.CodeTable@getChar(int,int):91:128 |==> -128
9077:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.CodeTable@getChar(int,int):91:c + 128 |==> c % 128
9078:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.CodeTable@getChar(int,int):91:c + 128 |==> c * 128
9079:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.CodeTable@getChar(int,int):91:c + 128 |==> c - 128
9080:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.CodeTable@getChar(int,int):91:c + 128 |==> c / 128
9081:LVR:POS:0:org.marc4j.converter.impl.CodeTable@getChar(int,int):91:128 |==> 0
9082:LVR:POS:NEG:org.marc4j.converter.impl.CodeTable@getChar(int,int):91:128 |==> -128
9083:AOR:-(int,int):%(int,int):org.marc4j.converter.impl.CodeTable@getChar(int,int):91:c - 128 |==> c % 128
9084:AOR:-(int,int):*(int,int):org.marc4j.converter.impl.CodeTable@getChar(int,int):91:c - 128 |==> c * 128
9085:AOR:-(int,int):+(int,int):org.marc4j.converter.impl.CodeTable@getChar(int,int):91:c - 128 |==> c + 128
9086:AOR:-(int,int):/(int,int):org.marc4j.converter.impl.CodeTable@getChar(int,int):91:c - 128 |==> c / 128
9087:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTable@getChar(int,int):92:ch = charset.get(new Integer(newc)) |==> <NO-OP>
9088:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.CodeTable@getChar(int,int):93:ch == null |==> false
9089:LVR:0:POS:org.marc4j.converter.impl.CodeTable@getChar(int,int):97:0 |==> 1
9090:LVR:0:NEG:org.marc4j.converter.impl.CodeTable@getChar(int,int):97:0 |==> -1
9091:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@getChar(int,int):99:ch.charValue() |==> 0
9092:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@getChar(int,int):102:ch.charValue() |==> 0
9093:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@<init>(java.io.InputStream):115:SAXParserFactory.newInstance() |==> null
9094:LVR:TRUE:FALSE:org.marc4j.converter.impl.CodeTable@<init>(java.io.InputStream):116:true |==> false
9095:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.io.InputStream):116:factory.setNamespaceAware(true) |==> <NO-OP>
9096:LVR:FALSE:TRUE:org.marc4j.converter.impl.CodeTable@<init>(java.io.InputStream):117:false |==> true
9097:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.io.InputStream):117:factory.setValidating(false) |==> <NO-OP>
9098:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@<init>(java.io.InputStream):118:factory.newSAXParser() |==> null
9099:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@<init>(java.io.InputStream):119:saxParser.getXMLReader() |==> null
9100:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@<init>(java.io.InputStream):120:new InputSource(byteStream) |==> null
9101:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@<init>(java.io.InputStream):121:new CodeTableHandler() |==> null
9102:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.io.InputStream):123:rdr.setContentHandler(saxUms) |==> <NO-OP>
9103:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.io.InputStream):124:rdr.parse(src) |==> <NO-OP>
9104:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.io.InputStream):126:charsets = saxUms.getCharSets() |==> <NO-OP>
9105:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.io.InputStream):127:combining = saxUms.getCombiningChars() |==> <NO-OP>
9106:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@<init>(java.lang.String):140:SAXParserFactory.newInstance() |==> null
9107:LVR:TRUE:FALSE:org.marc4j.converter.impl.CodeTable@<init>(java.lang.String):141:true |==> false
9108:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.lang.String):141:factory.setNamespaceAware(true) |==> <NO-OP>
9109:LVR:FALSE:TRUE:org.marc4j.converter.impl.CodeTable@<init>(java.lang.String):142:false |==> true
9110:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.lang.String):142:factory.setValidating(false) |==> <NO-OP>
9111:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@<init>(java.lang.String):143:factory.newSAXParser() |==> null
9112:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@<init>(java.lang.String):144:saxParser.getXMLReader() |==> null
9113:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@<init>(java.lang.String):145:new File(filename) |==> null
9114:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@<init>(java.lang.String):146:new InputSource(new FileInputStream(file)) |==> null
9115:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@<init>(java.lang.String):147:new CodeTableHandler() |==> null
9116:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.lang.String):149:rdr.setContentHandler(saxUms) |==> <NO-OP>
9117:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.lang.String):150:rdr.parse(src) |==> <NO-OP>
9118:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.lang.String):152:charsets = saxUms.getCharSets() |==> <NO-OP>
9119:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.lang.String):153:combining = saxUms.getCombiningChars() |==> <NO-OP>
9120:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@<init>(java.net.URI):166:SAXParserFactory.newInstance() |==> null
9121:LVR:TRUE:FALSE:org.marc4j.converter.impl.CodeTable@<init>(java.net.URI):167:true |==> false
9122:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.net.URI):167:factory.setNamespaceAware(true) |==> <NO-OP>
9123:LVR:FALSE:TRUE:org.marc4j.converter.impl.CodeTable@<init>(java.net.URI):168:false |==> true
9124:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.net.URI):168:factory.setValidating(false) |==> <NO-OP>
9125:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@<init>(java.net.URI):169:factory.newSAXParser() |==> null
9126:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@<init>(java.net.URI):170:saxParser.getXMLReader() |==> null
9127:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@<init>(java.net.URI):171:new InputSource(uri.toURL().openStream()) |==> null
9128:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.CodeTable@<init>(java.net.URI):172:new CodeTableHandler() |==> null
9129:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.net.URI):174:rdr.setContentHandler(saxUms) |==> <NO-OP>
9130:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.net.URI):175:rdr.parse(src) |==> <NO-OP>
9131:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.net.URI):177:charsets = saxUms.getCharSets() |==> <NO-OP>
9132:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTable@<init>(java.net.URI):178:combining = saxUms.getCombiningChars() |==> <NO-OP>
9133:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTableGenerator@main(java.lang.String[]):58:CodeTable.class.getResourceAsStream("resources/codetables.xml") |==> null
9134:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.CodeTableGenerator@main(java.lang.String[]):59:new CodeTableGenerator(in) |==> null
9135:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@main(java.lang.String[]):61:ct.dumpTableAsSwitchStatement(System.out) |==> <NO-OP>
9136:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):65:out.println("package org.marc4j.converter.impl;") |==> <NO-OP>
9137:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):66:out.println("") |==> <NO-OP>
9138:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):67:out.println("/** ") |==> <NO-OP>
9139:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):68:out.println(" *  An implementation of CodeTableInterface that is used in converting MARC8") |==> <NO-OP>
9140:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):69:out.println(" *  data to UTF8 data, that doesn\'t rely on any data files or resources or data structures") |==> <NO-OP>
9141:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):70:out.println(" *  ") |==> <NO-OP>
9142:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):71:out.println(" *  Warning: This file is generated by running the main routine in the file CodeTableGenerator.java ") |==> <NO-OP>
9143:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):72:out.println(" *  Warning: Do not edit this file, or all edits will be lost at the next build. ") |==> <NO-OP>
9144:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):73:out.println(" */") |==> <NO-OP>
9145:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):74:out.println("public class CodeTableGenerated implements CodeTableInterface {") |==> <NO-OP>
9146:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):75:out.println("\tpublic boolean isCombining(int i, int g0, int g1) {") |==> <NO-OP>
9147:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):76:out.println("\t\tswitch (i <= 0x7E ? g0 : g1) {") |==> <NO-OP>
9148:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):77:combining.keySet().toArray() |==> null
9149:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):78:Arrays.sort(combiningKeys) |==> <NO-OP>
9150:LVR:0:POS:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):79:0 |==> 1
9151:LVR:0:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):79:0 |==> -1
9152:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):79:combiningSel < combiningKeys.length |==> combiningSel != combiningKeys.length
9153:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):79:combiningSel < combiningKeys.length |==> combiningSel <= combiningKeys.length
9154:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):79:combiningSel < combiningKeys.length |==> false
9155:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):80:(Integer)combiningKeys[combiningSel] |==> null
9156:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):81:out.println("\t\t\tcase 0x" + Integer.toHexString(nextKey) + ":") |==> <NO-OP>
9157:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):82:combining.get(nextKey) |==> null
9158:LVR:0:POS:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):83:0 |==> 1
9159:LVR:0:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):83:0 |==> -1
9160:ROR:>(int,int):!=(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):83:v.size() > 0 |==> v.size() != 0
9161:ROR:>(int,int):>=(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):83:v.size() > 0 |==> v.size() >= 0
9162:ROR:>(int,int):FALSE(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):83:v.size() > 0 |==> false
9163:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):84:out.println("\t\t\t\tswitch(i) {") |==> <NO-OP>
9164:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):86:out.println("\t\t\t\t\tcase 0x" + Integer.toHexString(vVal) + ":") |==> <NO-OP>
9165:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):88:out.println("\t\t\t\t\t\treturn(true);") |==> <NO-OP>
9166:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):89:out.println("\t\t\t\t\tdefault:") |==> <NO-OP>
9167:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):90:out.println("\t\t\t\t\t\treturn(false);") |==> <NO-OP>
9168:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):91:out.println("\t\t\t\t}") |==> <NO-OP>
9169:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):93:out.println("\t\t\t\treturn(false);") |==> <NO-OP>
9170:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):96:out.println("\t\t\tdefault:") |==> <NO-OP>
9171:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):97:out.println("\t\t\t\treturn(false);") |==> <NO-OP>
9172:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):98:out.println("\t\t\t}") |==> <NO-OP>
9173:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):99:out.println("\t}") |==> <NO-OP>
9174:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):100:out.println("") |==> <NO-OP>
9175:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):101:out.println("\tpublic char getChar(int c, int mode) {") |==> <NO-OP>
9176:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):102:out.println("\t\tint code = getCharCode(c, mode);") |==> <NO-OP>
9177:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):103:out.println("\t\tif (code == -1) return((char)0);") |==> <NO-OP>
9178:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):104:out.println("\t\tif (code != 0) return((char)code);") |==> <NO-OP>
9179:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):105:out.println("\t\tcode = getCharCode(c < 0x80 ? c + 0x80 : c - 0x80 , mode);") |==> <NO-OP>
9180:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):106:out.println("\t\treturn((char)code);") |==> <NO-OP>
9181:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):107:out.println("\t}") |==> <NO-OP>
9182:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):108:out.println("") |==> <NO-OP>
9183:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):109:out.println("\tprivate int getCharCode(int c, int mode) {") |==> <NO-OP>
9184:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):110:out.println("\t\tif (c == 0x20) return  c;") |==> <NO-OP>
9185:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):111:out.println("\t\tswitch (mode) {") |==> <NO-OP>
9186:LVR:0:POS:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):112:0 |==> 1
9187:LVR:0:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):112:0 |==> -1
9188:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):113:Arrays.sort(charsetsKeys) |==> <NO-OP>
9189:LVR:0:POS:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):114:0 |==> 1
9190:LVR:0:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):114:0 |==> -1
9191:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):114:charsetSel < charsetsKeys.length |==> charsetSel != charsetsKeys.length
9192:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):114:charsetSel < charsetsKeys.length |==> charsetSel <= charsetsKeys.length
9193:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):114:charsetSel < charsetsKeys.length |==> false
9194:EVR:<ARRAY_ACCESS>:<DEFAULT>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):115:charsetsKeys[charsetSel] |==> null
9195:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):116:out.println("\t\t\tcase 0x" + Integer.toHexString(nextKey) + ":") |==> <NO-OP>
9196:LVR:POS:0:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):117:49 |==> 0
9197:LVR:POS:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):117:49 |==> -49
9198:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):117:nextKey.intValue() == 49 |==> nextKey.intValue() <= 49
9199:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):117:nextKey.intValue() == 49 |==> nextKey.intValue() >= 49
9200:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):117:nextKey.intValue() == 49 |==> false
9201:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):118:out.println("\t\t\t\treturn(getMultiByteChar(c));") |==> <NO-OP>
9202:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):120:charsets.get(nextKey) |==> null
9203:LVR:0:POS:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):121:0 |==> 1
9204:LVR:0:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):121:0 |==> -1
9205:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):122:Arrays.sort(keyArray) |==> <NO-OP>
9206:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):123:out.println("\t\t\t\tswitch(c) {") |==> <NO-OP>
9207:LVR:0:POS:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):124:0 |==> 1
9208:LVR:0:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):124:0 |==> -1
9209:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):124:sel < keyArray.length |==> sel != keyArray.length
9210:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):124:sel < keyArray.length |==> sel <= keyArray.length
9211:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):124:sel < keyArray.length |==> false
9212:EVR:<ARRAY_ACCESS>:<DEFAULT>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):125:keyArray[sel] |==> null
9213:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):126:map.get(mKey) |==> null
9214:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):127:c != null |==> true
9215:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):128:out.println("\t\t\t\t\tcase 0x" + Integer.toHexString(mKey) + ":  return(0x" + Integer.toHexString(c.charValue()) + "); ") |==> <NO-OP>
9216:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):131:out.println("\t\t\t\t\tcase 0x" + Integer.toHexString(mKey) + ":  return(0); ") |==> <NO-OP>
9217:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):134:out.println("\t\t\t\t\tdefault:  return(0);") |==> <NO-OP>
9218:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):135:out.println("\t\t\t\t}") |==> <NO-OP>
9219:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):138:out.println("\t\t\tdefault: return(-1);  // unknown charset specified ") |==> <NO-OP>
9220:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):139:out.println("\t\t}") |==> <NO-OP>
9221:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):140:out.println("\t}") |==> <NO-OP>
9222:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):141:out.println("") |==> <NO-OP>
9223:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):142:new StringBuffer() |==> null
9224:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):143:getMultiByteFunc.append("\tprivate int getMultiByteChar(int c) {\n") |==> <NO-OP>
9225:LVR:POS:0:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):145:49 |==> 0
9226:LVR:POS:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):145:49 |==> -49
9227:LVR:0:POS:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):146:0 |==> 1
9228:LVR:0:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):146:0 |==> -1
9229:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):147:Arrays.sort(keyArray) |==> <NO-OP>
9230:LVR:POS:0:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):154:2162688 |==> 0
9231:LVR:POS:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):154:2162688 |==> -2162688
9232:LVR:POS:0:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):154:2183167 |==> 0
9233:LVR:POS:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):154:2183167 |==> -2183167
9234:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):154:dumpPartialMultiByteTable(out, getMultiByteFunc, keyArray, map, 2162688, 2183167) |==> <NO-OP>
9235:LVR:POS:0:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):155:2183168 |==> 0
9236:LVR:POS:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):155:2183168 |==> -2183168
9237:LVR:POS:0:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):155:2228223 |==> 0
9238:LVR:POS:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):155:2228223 |==> -2228223
9239:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):155:dumpPartialMultiByteTable(out, getMultiByteFunc, keyArray, map, 2183168, 2228223) |==> <NO-OP>
9240:LVR:POS:0:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):156:2228224 |==> 0
9241:LVR:POS:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):156:2228224 |==> -2228224
9242:LVR:POS:0:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):156:2293759 |==> 0
9243:LVR:POS:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):156:2293759 |==> -2293759
9244:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):156:dumpPartialMultiByteTable(out, getMultiByteFunc, keyArray, map, 2228224, 2293759) |==> <NO-OP>
9245:LVR:POS:0:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):157:2293760 |==> 0
9246:LVR:POS:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):157:2293760 |==> -2293760
9247:LVR:POS:0:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):157:2621439 |==> 0
9248:LVR:POS:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):157:2621439 |==> -2621439
9249:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):157:dumpPartialMultiByteTable(out, getMultiByteFunc, keyArray, map, 2293760, 2621439) |==> <NO-OP>
9250:LVR:POS:0:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):158:2621440 |==> 0
9251:LVR:POS:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):158:2621440 |==> -2621440
9252:LVR:POS:0:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):158:8355839 |==> 0
9253:LVR:POS:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):158:8355839 |==> -8355839
9254:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):158:dumpPartialMultiByteTable(out, getMultiByteFunc, keyArray, map, 2621440, 8355839) |==> <NO-OP>
9255:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):160:getMultiByteFunc.append("\t\treturn(0);\n") |==> <NO-OP>
9256:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):161:getMultiByteFunc.append("\t}") |==> <NO-OP>
9257:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):162:out.println(getMultiByteFunc.toString()) |==> <NO-OP>
9258:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpTableAsSwitchStatement(java.io.PrintStream):164:out.println("}") |==> <NO-OP>
9259:EVR:<PLUS>:<DEFAULT>:org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):169:"0x" + Integer.toHexString(startByte) |==> null
9260:EVR:<PLUS>:<DEFAULT>:org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):170:"0x" + Integer.toHexString(endByte) |==> null
9261:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):171:buffer.append("\t\tif (c >= " + startByteStr + " && c <= " + endByteStr + ")  return (getMultiByteChar_" + startByteStr + "_" + endByteStr + "(c));\n") |==> <NO-OP>
9262:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):173:out.println("\tprivate char getMultiByteChar_" + startByteStr + "_" + endByteStr + "(int c) {") |==> <NO-OP>
9263:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):174:out.println("\t\tswitch(c) {") |==> <NO-OP>
9264:LVR:0:POS:org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):175:0 |==> 1
9265:LVR:0:NEG:org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):175:0 |==> -1
9266:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):175:sel < keyArray.length |==> sel != keyArray.length
9267:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):175:sel < keyArray.length |==> sel <= keyArray.length
9268:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):175:sel < keyArray.length |==> false
9269:EVR:<ARRAY_ACCESS>:<DEFAULT>:org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):176:keyArray[sel] |==> null
9270:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):177:map.get(mKey) |==> null
9271:ROR:>=(int,int):==(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):178:mKey >= startByte |==> mKey == startByte
9272:ROR:>=(int,int):>(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):178:mKey >= startByte |==> mKey > startByte
9273:ROR:>=(int,int):TRUE(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):178:mKey >= startByte |==> true
9274:ROR:<=(int,int):<(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):178:mKey <= endByte |==> mKey < endByte
9275:ROR:<=(int,int):==(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):178:mKey <= endByte |==> mKey == endByte
9276:ROR:<=(int,int):TRUE(int,int):org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):178:mKey <= endByte |==> true
9277:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):178:mKey >= startByte && mKey <= endByte |==> mKey >= startByte == mKey <= endByte
9278:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):178:mKey >= startByte && mKey <= endByte |==> false
9279:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):178:mKey >= startByte && mKey <= endByte |==> mKey >= startByte
9280:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):178:mKey >= startByte && mKey <= endByte |==> mKey <= endByte
9281:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):179:c != null |==> true
9282:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):180:out.println("\t\t\tcase 0x" + Integer.toHexString(mKey) + ":  return((char)0x" + Integer.toHexString(c.charValue()) + "); ") |==> <NO-OP>
9283:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):183:out.println("\t\t\tcase 0x" + Integer.toHexString(mKey) + ":  return((char)0); ") |==> <NO-OP>
9284:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):187:out.println("\t\t\tdefault: return((char)0);") |==> <NO-OP>
9285:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):188:out.println("\t\t}") |==> <NO-OP>
9286:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):189:out.println("\t}") |==> <NO-OP>
9287:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableGenerator@dumpPartialMultiByteTable(java.io.PrintStream,java.lang.StringBuffer,java.lang.Integer[],java.util.HashMap<java.lang.Integer,java.lang.Character>,int,int):190:out.println("") |==> <NO-OP>
9288:LVR:FALSE:TRUE:org.marc4j.converter.impl.CodeTableHandler:60:false |==> true
9289:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.CodeTableHandler@getCharSets():81:sets |==> null
9290:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.CodeTableHandler@getCombiningChars():90:combiningchars |==> null
9291:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@setDocumentLocator(org.xml.sax.Locator):102:this.locator = locator |==> <NO-OP>
9292:COR:name.equals("characterSet"):TRUE:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):117:name.equals("characterSet") |==> false
9293:COR:name.equals("characterSet"):FALSE:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):117:name.equals("characterSet") |==> true
9294:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):118:charset = new HashMap<Integer, Character>() |==> <NO-OP>
9295:LVR:POS:0:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):119:16 |==> 0
9296:LVR:POS:NEG:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):119:16 |==> -16
9297:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):119:isocode = Integer.valueOf(atts.getValue("ISOcode"), 16) |==> <NO-OP>
9298:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):120:combining = new Vector<Integer>() |==> <NO-OP>
9299:COR:name.equals("marc"):TRUE:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):121:name.equals("marc") |==> false
9300:COR:name.equals("marc"):FALSE:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):121:name.equals("marc") |==> true
9301:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):122:data = new StringBuffer() |==> <NO-OP>
9302:COR:name.equals("codeTables"):TRUE:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):123:name.equals("codeTables") |==> false
9303:COR:name.equals("codeTables"):FALSE:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):123:name.equals("codeTables") |==> true
9304:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):124:sets = new HashMap<Integer, HashMap<Integer, Character>>() |==> <NO-OP>
9305:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):125:combiningchars = new HashMap<Integer, Vector<Integer>>() |==> <NO-OP>
9306:COR:name.equals("ucs"):TRUE:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):126:name.equals("ucs") |==> false
9307:COR:name.equals("ucs"):FALSE:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):126:name.equals("ucs") |==> true
9308:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):127:data = new StringBuffer() |==> <NO-OP>
9309:COR:name.equals("alt"):TRUE:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):128:name.equals("alt") |==> false
9310:COR:name.equals("alt"):FALSE:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):128:name.equals("alt") |==> true
9311:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):129:data = new StringBuffer() |==> <NO-OP>
9312:COR:name.equals("isCombining"):TRUE:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):130:name.equals("isCombining") |==> false
9313:COR:name.equals("isCombining"):FALSE:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):130:name.equals("isCombining") |==> true
9314:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):131:data = new StringBuffer() |==> <NO-OP>
9315:COR:name.equals("code"):TRUE:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):132:name.equals("code") |==> false
9316:COR:name.equals("code"):FALSE:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):132:name.equals("code") |==> true
9317:LVR:FALSE:TRUE:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):133:false |==> true
9318:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):133:iscombining = false |==> <NO-OP>
9319:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.CodeTableHandler@characters(char[],int,int):146:data != null |==> true
9320:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@characters(char[],int,int):147:data.append(ch, start, length) |==> <NO-OP>
9321:COR:name.equals("characterSet"):TRUE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):162:name.equals("characterSet") |==> false
9322:COR:name.equals("characterSet"):FALSE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):162:name.equals("characterSet") |==> true
9323:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):163:sets.put(isocode, charset) |==> <NO-OP>
9324:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):164:combiningchars.put(isocode, combining) |==> <NO-OP>
9325:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):165:combining = null |==> <NO-OP>
9326:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):166:charset = null |==> <NO-OP>
9327:COR:name.equals("marc"):TRUE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):167:name.equals("marc") |==> false
9328:COR:name.equals("marc"):FALSE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):167:name.equals("marc") |==> true
9329:LVR:POS:0:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):168:16 |==> 0
9330:LVR:POS:NEG:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):168:16 |==> -16
9331:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):168:marc = Integer.valueOf(data.toString(), 16) |==> <NO-OP>
9332:COR:name.equals("ucs"):TRUE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):169:name.equals("ucs") |==> false
9333:COR:name.equals("ucs"):FALSE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):169:name.equals("ucs") |==> true
9334:LVR:0:POS:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):170:0 |==> 1
9335:LVR:0:NEG:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):170:0 |==> -1
9336:ROR:>(int,int):!=(int,int):org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):170:data.length() > 0 |==> data.length() != 0
9337:ROR:>(int,int):>=(int,int):org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):170:data.length() > 0 |==> data.length() >= 0
9338:ROR:>(int,int):FALSE(int,int):org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):170:data.length() > 0 |==> false
9339:LVR:POS:0:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):171:16 |==> 0
9340:LVR:POS:NEG:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):171:16 |==> -16
9341:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):171:ucs = new Character((char)Integer.parseInt(data.toString(), 16)) |==> <NO-OP>
9342:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):173:ucs = null |==> <NO-OP>
9343:COR:name.equals("alt"):TRUE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):175:name.equals("alt") |==> false
9344:COR:name.equals("alt"):FALSE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):175:name.equals("alt") |==> true
9345:LVR:0:POS:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):176:0 |==> 1
9346:LVR:0:NEG:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):176:0 |==> -1
9347:ROR:>(int,int):!=(int,int):org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):176:data.length() > 0 |==> data.length() != 0
9348:ROR:>(int,int):>=(int,int):org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):176:data.length() > 0 |==> data.length() >= 0
9349:ROR:>(int,int):FALSE(int,int):org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):176:data.length() > 0 |==> false
9350:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):176:useAlt && data.length() > 0 |==> useAlt == data.length() > 0
9351:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):176:useAlt && data.length() > 0 |==> false
9352:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):176:useAlt && data.length() > 0 |==> useAlt
9353:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):176:useAlt && data.length() > 0 |==> data.length() > 0
9354:LVR:POS:0:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):177:16 |==> 0
9355:LVR:POS:NEG:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):177:16 |==> -16
9356:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):177:ucs = new Character((char)Integer.parseInt(data.toString(), 16)) |==> <NO-OP>
9357:LVR:FALSE:TRUE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):178:false |==> true
9358:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):178:useAlt = false |==> <NO-OP>
9359:COR:name.equals("code"):TRUE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):180:name.equals("code") |==> false
9360:COR:name.equals("code"):FALSE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):180:name.equals("code") |==> true
9361:COR:iscombining:TRUE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):181:iscombining |==> false
9362:COR:iscombining:FALSE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):181:iscombining |==> true
9363:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):182:combining.add(marc) |==> <NO-OP>
9364:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):184:charset.put(marc, ucs) |==> <NO-OP>
9365:COR:name.equals("isCombining"):TRUE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):185:name.equals("isCombining") |==> false
9366:COR:name.equals("isCombining"):FALSE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):185:name.equals("isCombining") |==> true
9367:COR:data.toString().equals("true"):TRUE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):186:data.toString().equals("true") |==> false
9368:COR:data.toString().equals("true"):FALSE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):186:data.toString().equals("true") |==> true
9369:LVR:TRUE:FALSE:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):187:true |==> false
9370:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):187:iscombining = true |==> <NO-OP>
9371:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):191:data = null |==> <NO-OP>
9372:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTableHandler@main(java.lang.String[]):205:SAXParserFactory.newInstance() |==> null
9373:LVR:TRUE:FALSE:org.marc4j.converter.impl.CodeTableHandler@main(java.lang.String[]):206:true |==> false
9374:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@main(java.lang.String[]):206:factory.setNamespaceAware(true) |==> <NO-OP>
9375:LVR:FALSE:TRUE:org.marc4j.converter.impl.CodeTableHandler@main(java.lang.String[]):207:false |==> true
9376:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@main(java.lang.String[]):207:factory.setValidating(false) |==> <NO-OP>
9377:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTableHandler@main(java.lang.String[]):208:factory.newSAXParser() |==> null
9378:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.CodeTableHandler@main(java.lang.String[]):209:saxParser.getXMLReader() |==> null
9379:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.CodeTableHandler@main(java.lang.String[]):211:new File("C:\\Documents and Settings\\ckeith\\Desktop\\Projects\\Code Tables\\codetables.xml") |==> null
9380:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.CodeTableHandler@main(java.lang.String[]):213:new InputSource(new FileInputStream(file)) |==> null
9381:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.CodeTableHandler@main(java.lang.String[]):215:new CodeTableHandler() |==> null
9382:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@main(java.lang.String[]):217:rdr.setContentHandler(saxUms) |==> <NO-OP>
9383:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@main(java.lang.String[]):218:rdr.parse(src) |==> <NO-OP>
9384:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@main(java.lang.String[]):220:charsets = saxUms.getCharSets() |==> <NO-OP>
9385:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@main(java.lang.String[]):223:System.out.println(saxUms.getCombiningChars()) |==> <NO-OP>
9386:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.CodeTableHandler@main(java.lang.String[]):226:exc.printStackTrace(System.out) |==> <NO-OP>
9387:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):46:new StringBuffer() |==> null
9388:LVR:0:POS:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):48:0 |==> 1
9389:LVR:0:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):48:0 |==> -1
9390:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):48:i < data.length |==> i != data.length
9391:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):48:i < data.length |==> i <= data.length
9392:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):48:i < data.length |==> false
9393:EVR:<ARRAY_ACCESS>:<DEFAULT>:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):49:data[i] |==> 0
9394:EVR:<MEMBER_SELECT>:<DEFAULT>:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):50:data.length |==> 0
9395:COR:isAscii(c):TRUE:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):51:isAscii(c) |==> false
9396:COR:isAscii(c):FALSE:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):51:isAscii(c) |==> true
9397:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):52:sb.append(c) |==> <NO-OP>
9398:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):53:isCombining(c) && hasNext(i, len) |==> isCombining(c) == hasNext(i, len)
9399:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):53:isCombining(c) && hasNext(i, len) |==> false
9400:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):53:isCombining(c) && hasNext(i, len) |==> isCombining(c)
9401:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):53:isCombining(c) && hasNext(i, len) |==> hasNext(i, len)
9402:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):54:256 |==> 0
9403:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):54:256 |==> -256
9404:AOR:*(int,int):%(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):54:c * 256 |==> c % 256
9405:AOR:*(int,int):+(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):54:c * 256 |==> c + 256
9406:AOR:*(int,int):-(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):54:c * 256 |==> c - 256
9407:AOR:*(int,int):/(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):54:c * 256 |==> c / 256
9408:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):54:1 |==> 0
9409:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):54:1 |==> -1
9410:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):54:i + 1 |==> i % 1
9411:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):54:i + 1 |==> i * 1
9412:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):54:i + 1 |==> i - 1
9413:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):54:i + 1 |==> i / 1
9414:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):54:c * 256 + data[i + 1] |==> c * 256 % data[i + 1]
9415:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):54:c * 256 + data[i + 1] |==> c * 256 * data[i + 1]
9416:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):54:c * 256 + data[i + 1] |==> c * 256 - data[i + 1]
9417:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):54:c * 256 + data[i + 1] |==> c * 256 / data[i + 1]
9418:LVR:0:POS:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):55:0 |==> 1
9419:LVR:0:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):55:0 |==> -1
9420:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):55:d != 0 |==> d < 0
9421:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):55:d != 0 |==> d > 0
9422:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):55:d != 0 |==> true
9423:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):56:sb.append(d) |==> <NO-OP>
9424:STD:<INC>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):57:i++ |==> <NO-OP>
9425:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):59:sb.append(getChar(c)) |==> <NO-OP>
9426:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):62:sb.append(getChar(c)) |==> <NO-OP>
9427:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.Iso5426ToUnicode@convert(char[]):65:sb.toString() |==> null
9428:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@hasNext(int,int):69:1 |==> 0
9429:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@hasNext(int,int):69:1 |==> -1
9430:AOR:-(int,int):%(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@hasNext(int,int):69:len - 1 |==> len % 1
9431:AOR:-(int,int):*(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@hasNext(int,int):69:len - 1 |==> len * 1
9432:AOR:-(int,int):+(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@hasNext(int,int):69:len - 1 |==> len + 1
9433:AOR:-(int,int):/(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@hasNext(int,int):69:len - 1 |==> len / 1
9434:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@hasNext(int,int):69:pos < (len - 1) |==> pos != (len - 1)
9435:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@hasNext(int,int):69:pos < (len - 1) |==> pos <= (len - 1)
9436:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@hasNext(int,int):69:pos < (len - 1) |==> false
9437:LVR:TRUE:FALSE:org.marc4j.converter.impl.Iso5426ToUnicode@hasNext(int,int):70:true |==> false
9438:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@hasNext(int,int):70:return Config.__M_NO == 0 && Config.COVERED(9437, 9437) ? true : Config.__M_NO == 9437 ? false : true; |==> <NO-OP>
9439:LVR:FALSE:TRUE:org.marc4j.converter.impl.Iso5426ToUnicode@hasNext(int,int):72:false |==> true
9440:LVR:0:POS:org.marc4j.converter.impl.Iso5426ToUnicode@isAscii(int):76:0 |==> 1
9441:LVR:0:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@isAscii(int):76:0 |==> -1
9442:ROR:>=(int,int):==(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@isAscii(int):76:i >= 0 |==> i == 0
9443:ROR:>=(int,int):>(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@isAscii(int):76:i >= 0 |==> i > 0
9444:ROR:>=(int,int):TRUE(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@isAscii(int):76:i >= 0 |==> true
9445:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@isAscii(int):76:127 |==> 0
9446:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@isAscii(int):76:127 |==> -127
9447:ROR:<=(int,int):<(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@isAscii(int):76:i <= 127 |==> i < 127
9448:ROR:<=(int,int):==(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@isAscii(int):76:i <= 127 |==> i == 127
9449:ROR:<=(int,int):TRUE(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@isAscii(int):76:i <= 127 |==> true
9450:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.Iso5426ToUnicode@isAscii(int):76:i >= 0 && i <= 127 |==> i >= 0 == i <= 127
9451:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.Iso5426ToUnicode@isAscii(int):76:i >= 0 && i <= 127 |==> false
9452:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.Iso5426ToUnicode@isAscii(int):76:i >= 0 && i <= 127 |==> i >= 0
9453:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.Iso5426ToUnicode@isAscii(int):76:i >= 0 && i <= 127 |==> i <= 127
9454:LVR:TRUE:FALSE:org.marc4j.converter.impl.Iso5426ToUnicode@isAscii(int):77:true |==> false
9455:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@isAscii(int):77:return Config.__M_NO == 0 && Config.COVERED(9454, 9454) ? true : Config.__M_NO == 9454 ? false : true; |==> <NO-OP>
9456:LVR:FALSE:TRUE:org.marc4j.converter.impl.Iso5426ToUnicode@isAscii(int):79:false |==> true
9457:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@isCombining(int):84:192 |==> 0
9458:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@isCombining(int):84:192 |==> -192
9459:ROR:>=(int,int):==(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@isCombining(int):84:i >= 192 |==> i == 192
9460:ROR:>=(int,int):>(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@isCombining(int):84:i >= 192 |==> i > 192
9461:ROR:>=(int,int):TRUE(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@isCombining(int):84:i >= 192 |==> true
9462:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@isCombining(int):84:223 |==> 0
9463:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@isCombining(int):84:223 |==> -223
9464:ROR:<=(int,int):<(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@isCombining(int):84:i <= 223 |==> i < 223
9465:ROR:<=(int,int):==(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@isCombining(int):84:i <= 223 |==> i == 223
9466:ROR:<=(int,int):TRUE(int,int):org.marc4j.converter.impl.Iso5426ToUnicode@isCombining(int):84:i <= 223 |==> true
9467:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.Iso5426ToUnicode@isCombining(int):84:i >= 192 && i <= 223 |==> i >= 192 == i <= 223
9468:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.Iso5426ToUnicode@isCombining(int):84:i >= 192 && i <= 223 |==> false
9469:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.Iso5426ToUnicode@isCombining(int):84:i >= 192 && i <= 223 |==> i >= 192
9470:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.Iso5426ToUnicode@isCombining(int):84:i >= 192 && i <= 223 |==> i <= 223
9471:LVR:TRUE:FALSE:org.marc4j.converter.impl.Iso5426ToUnicode@isCombining(int):85:true |==> false
9472:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@isCombining(int):85:return Config.__M_NO == 0 && Config.COVERED(9471, 9471) ? true : Config.__M_NO == 9471 ? false : true; |==> <NO-OP>
9473:LVR:FALSE:TRUE:org.marc4j.converter.impl.Iso5426ToUnicode@isCombining(int):87:false |==> true
9474:LVR:TRUE:FALSE:org.marc4j.converter.impl.Iso5426ToUnicode@outputsUnicode():99:true |==> false
9475:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):107:161 |==> 0
9476:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):107:161 |==> -161
9477:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):107:return Config.__M_NO == 0 && Config.COVERED(9475, 9476) ? 161 : Config.__M_NO == 9476 ? -161 : Config.__M_NO == 9475 ? 0 : 161; |==> <NO-OP>
9478:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):109:8222 |==> 0
9479:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):109:8222 |==> -8222
9480:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):109:return Config.__M_NO == 0 && Config.COVERED(9478, 9479) ? 8222 : Config.__M_NO == 9479 ? -8222 : Config.__M_NO == 9478 ? 0 : 8222; |==> <NO-OP>
9481:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):111:163 |==> 0
9482:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):111:163 |==> -163
9483:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):111:return Config.__M_NO == 0 && Config.COVERED(9481, 9482) ? 163 : Config.__M_NO == 9482 ? -163 : Config.__M_NO == 9481 ? 0 : 163; |==> <NO-OP>
9484:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):113:36 |==> 0
9485:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):113:36 |==> -36
9486:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):113:return Config.__M_NO == 0 && Config.COVERED(9484, 9485) ? 36 : Config.__M_NO == 9485 ? -36 : Config.__M_NO == 9484 ? 0 : 36; |==> <NO-OP>
9487:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):115:165 |==> 0
9488:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):115:165 |==> -165
9489:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):115:return Config.__M_NO == 0 && Config.COVERED(9487, 9488) ? 165 : Config.__M_NO == 9488 ? -165 : Config.__M_NO == 9487 ? 0 : 165; |==> <NO-OP>
9490:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):117:8224 |==> 0
9491:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):117:8224 |==> -8224
9492:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):117:return Config.__M_NO == 0 && Config.COVERED(9490, 9491) ? 8224 : Config.__M_NO == 9491 ? -8224 : Config.__M_NO == 9490 ? 0 : 8224; |==> <NO-OP>
9493:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):119:167 |==> 0
9494:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):119:167 |==> -167
9495:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):119:return Config.__M_NO == 0 && Config.COVERED(9493, 9494) ? 167 : Config.__M_NO == 9494 ? -167 : Config.__M_NO == 9493 ? 0 : 167; |==> <NO-OP>
9496:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):121:8242 |==> 0
9497:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):121:8242 |==> -8242
9498:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):121:return Config.__M_NO == 0 && Config.COVERED(9496, 9497) ? 8242 : Config.__M_NO == 9497 ? -8242 : Config.__M_NO == 9496 ? 0 : 8242; |==> <NO-OP>
9499:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):123:8216 |==> 0
9500:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):123:8216 |==> -8216
9501:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):123:return Config.__M_NO == 0 && Config.COVERED(9499, 9500) ? 8216 : Config.__M_NO == 9500 ? -8216 : Config.__M_NO == 9499 ? 0 : 8216; |==> <NO-OP>
9502:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):125:8220 |==> 0
9503:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):125:8220 |==> -8220
9504:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):125:return Config.__M_NO == 0 && Config.COVERED(9502, 9503) ? 8220 : Config.__M_NO == 9503 ? -8220 : Config.__M_NO == 9502 ? 0 : 8220; |==> <NO-OP>
9505:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):127:171 |==> 0
9506:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):127:171 |==> -171
9507:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):127:return Config.__M_NO == 0 && Config.COVERED(9505, 9506) ? 171 : Config.__M_NO == 9506 ? -171 : Config.__M_NO == 9505 ? 0 : 171; |==> <NO-OP>
9508:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):129:9837 |==> 0
9509:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):129:9837 |==> -9837
9510:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):129:return Config.__M_NO == 0 && Config.COVERED(9508, 9509) ? 9837 : Config.__M_NO == 9509 ? -9837 : Config.__M_NO == 9508 ? 0 : 9837; |==> <NO-OP>
9511:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):131:169 |==> 0
9512:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):131:169 |==> -169
9513:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):131:return Config.__M_NO == 0 && Config.COVERED(9511, 9512) ? 169 : Config.__M_NO == 9512 ? -169 : Config.__M_NO == 9511 ? 0 : 169; |==> <NO-OP>
9514:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):133:8471 |==> 0
9515:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):133:8471 |==> -8471
9516:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):133:return Config.__M_NO == 0 && Config.COVERED(9514, 9515) ? 8471 : Config.__M_NO == 9515 ? -8471 : Config.__M_NO == 9514 ? 0 : 8471; |==> <NO-OP>
9517:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):135:174 |==> 0
9518:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):135:174 |==> -174
9519:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):135:return Config.__M_NO == 0 && Config.COVERED(9517, 9518) ? 174 : Config.__M_NO == 9518 ? -174 : Config.__M_NO == 9517 ? 0 : 174; |==> <NO-OP>
9520:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):138:699 |==> 0
9521:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):138:699 |==> -699
9522:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):138:return Config.__M_NO == 0 && Config.COVERED(9520, 9521) ? 699 : Config.__M_NO == 9521 ? -699 : Config.__M_NO == 9520 ? 0 : 699; |==> <NO-OP>
9523:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):140:700 |==> 0
9524:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):140:700 |==> -700
9525:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):140:return Config.__M_NO == 0 && Config.COVERED(9523, 9524) ? 700 : Config.__M_NO == 9524 ? -700 : Config.__M_NO == 9523 ? 0 : 700; |==> <NO-OP>
9526:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):142:8218 |==> 0
9527:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):142:8218 |==> -8218
9528:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):142:return Config.__M_NO == 0 && Config.COVERED(9526, 9527) ? 8218 : Config.__M_NO == 9527 ? -8218 : Config.__M_NO == 9526 ? 0 : 8218; |==> <NO-OP>
9529:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):147:8225 |==> 0
9530:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):147:8225 |==> -8225
9531:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):147:return Config.__M_NO == 0 && Config.COVERED(9529, 9530) ? 8225 : Config.__M_NO == 9530 ? -8225 : Config.__M_NO == 9529 ? 0 : 8225; |==> <NO-OP>
9532:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):149:183 |==> 0
9533:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):149:183 |==> -183
9534:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):149:return Config.__M_NO == 0 && Config.COVERED(9532, 9533) ? 183 : Config.__M_NO == 9533 ? -183 : Config.__M_NO == 9532 ? 0 : 183; |==> <NO-OP>
9535:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):151:8243 |==> 0
9536:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):151:8243 |==> -8243
9537:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):151:return Config.__M_NO == 0 && Config.COVERED(9535, 9536) ? 8243 : Config.__M_NO == 9536 ? -8243 : Config.__M_NO == 9535 ? 0 : 8243; |==> <NO-OP>
9538:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):153:8217 |==> 0
9539:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):153:8217 |==> -8217
9540:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):153:return Config.__M_NO == 0 && Config.COVERED(9538, 9539) ? 8217 : Config.__M_NO == 9539 ? -8217 : Config.__M_NO == 9538 ? 0 : 8217; |==> <NO-OP>
9541:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):155:8221 |==> 0
9542:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):155:8221 |==> -8221
9543:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):155:return Config.__M_NO == 0 && Config.COVERED(9541, 9542) ? 8221 : Config.__M_NO == 9542 ? -8221 : Config.__M_NO == 9541 ? 0 : 8221; |==> <NO-OP>
9544:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):157:187 |==> 0
9545:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):157:187 |==> -187
9546:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):157:return Config.__M_NO == 0 && Config.COVERED(9544, 9545) ? 187 : Config.__M_NO == 9545 ? -187 : Config.__M_NO == 9544 ? 0 : 187; |==> <NO-OP>
9547:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):159:9839 |==> 0
9548:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):159:9839 |==> -9839
9549:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):159:return Config.__M_NO == 0 && Config.COVERED(9547, 9548) ? 9839 : Config.__M_NO == 9548 ? -9839 : Config.__M_NO == 9547 ? 0 : 9839; |==> <NO-OP>
9550:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):161:697 |==> 0
9551:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):161:697 |==> -697
9552:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):161:return Config.__M_NO == 0 && Config.COVERED(9550, 9551) ? 697 : Config.__M_NO == 9551 ? -697 : Config.__M_NO == 9550 ? 0 : 697; |==> <NO-OP>
9553:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):163:698 |==> 0
9554:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):163:698 |==> -698
9555:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):163:return Config.__M_NO == 0 && Config.COVERED(9553, 9554) ? 698 : Config.__M_NO == 9554 ? -698 : Config.__M_NO == 9553 ? 0 : 698; |==> <NO-OP>
9556:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):165:191 |==> 0
9557:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):165:191 |==> -191
9558:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):165:return Config.__M_NO == 0 && Config.COVERED(9556, 9557) ? 191 : Config.__M_NO == 9557 ? -191 : Config.__M_NO == 9556 ? 0 : 191; |==> <NO-OP>
9559:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):171:198 |==> 0
9560:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):171:198 |==> -198
9561:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):171:return Config.__M_NO == 0 && Config.COVERED(9559, 9560) ? 198 : Config.__M_NO == 9560 ? -198 : Config.__M_NO == 9559 ? 0 : 198; |==> <NO-OP>
9562:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):173:272 |==> 0
9563:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):173:272 |==> -272
9564:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):173:return Config.__M_NO == 0 && Config.COVERED(9562, 9563) ? 272 : Config.__M_NO == 9563 ? -272 : Config.__M_NO == 9562 ? 0 : 272; |==> <NO-OP>
9565:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):178:306 |==> 0
9566:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):178:306 |==> -306
9567:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):178:return Config.__M_NO == 0 && Config.COVERED(9565, 9566) ? 306 : Config.__M_NO == 9566 ? -306 : Config.__M_NO == 9565 ? 0 : 306; |==> <NO-OP>
9568:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):181:321 |==> 0
9569:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):181:321 |==> -321
9570:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):181:return Config.__M_NO == 0 && Config.COVERED(9568, 9569) ? 321 : Config.__M_NO == 9569 ? -321 : Config.__M_NO == 9568 ? 0 : 321; |==> <NO-OP>
9571:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):183:216 |==> 0
9572:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):183:216 |==> -216
9573:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):183:return Config.__M_NO == 0 && Config.COVERED(9571, 9572) ? 216 : Config.__M_NO == 9572 ? -216 : Config.__M_NO == 9571 ? 0 : 216; |==> <NO-OP>
9574:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):186:338 |==> 0
9575:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):186:338 |==> -338
9576:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):186:return Config.__M_NO == 0 && Config.COVERED(9574, 9575) ? 338 : Config.__M_NO == 9575 ? -338 : Config.__M_NO == 9574 ? 0 : 338; |==> <NO-OP>
9577:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):189:222 |==> 0
9578:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):189:222 |==> -222
9579:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):189:return Config.__M_NO == 0 && Config.COVERED(9577, 9578) ? 222 : Config.__M_NO == 9578 ? -222 : Config.__M_NO == 9577 ? 0 : 222; |==> <NO-OP>
9580:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):196:230 |==> 0
9581:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):196:230 |==> -230
9582:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):196:return Config.__M_NO == 0 && Config.COVERED(9580, 9581) ? 230 : Config.__M_NO == 9581 ? -230 : Config.__M_NO == 9580 ? 0 : 230; |==> <NO-OP>
9583:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):198:273 |==> 0
9584:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):198:273 |==> -273
9585:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):198:return Config.__M_NO == 0 && Config.COVERED(9583, 9584) ? 273 : Config.__M_NO == 9584 ? -273 : Config.__M_NO == 9583 ? 0 : 273; |==> <NO-OP>
9586:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):200:240 |==> 0
9587:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):200:240 |==> -240
9588:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):200:return Config.__M_NO == 0 && Config.COVERED(9586, 9587) ? 240 : Config.__M_NO == 9587 ? -240 : Config.__M_NO == 9586 ? 0 : 240; |==> <NO-OP>
9589:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):203:305 |==> 0
9590:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):203:305 |==> -305
9591:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):203:return Config.__M_NO == 0 && Config.COVERED(9589, 9590) ? 305 : Config.__M_NO == 9590 ? -305 : Config.__M_NO == 9589 ? 0 : 305; |==> <NO-OP>
9592:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):205:307 |==> 0
9593:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):205:307 |==> -307
9594:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):205:return Config.__M_NO == 0 && Config.COVERED(9592, 9593) ? 307 : Config.__M_NO == 9593 ? -307 : Config.__M_NO == 9592 ? 0 : 307; |==> <NO-OP>
9595:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):208:322 |==> 0
9596:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):208:322 |==> -322
9597:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):208:return Config.__M_NO == 0 && Config.COVERED(9595, 9596) ? 322 : Config.__M_NO == 9596 ? -322 : Config.__M_NO == 9595 ? 0 : 322; |==> <NO-OP>
9598:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):210:248 |==> 0
9599:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):210:248 |==> -248
9600:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):210:return Config.__M_NO == 0 && Config.COVERED(9598, 9599) ? 248 : Config.__M_NO == 9599 ? -248 : Config.__M_NO == 9598 ? 0 : 248; |==> <NO-OP>
9601:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):213:339 |==> 0
9602:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):213:339 |==> -339
9603:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):213:return Config.__M_NO == 0 && Config.COVERED(9601, 9602) ? 339 : Config.__M_NO == 9602 ? -339 : Config.__M_NO == 9601 ? 0 : 339; |==> <NO-OP>
9604:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):215:223 |==> 0
9605:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):215:223 |==> -223
9606:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):215:return Config.__M_NO == 0 && Config.COVERED(9604, 9605) ? 223 : Config.__M_NO == 9605 ? -223 : Config.__M_NO == 9604 ? 0 : 223; |==> <NO-OP>
9607:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):217:254 |==> 0
9608:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):217:254 |==> -254
9609:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):217:return Config.__M_NO == 0 && Config.COVERED(9607, 9608) ? 254 : Config.__M_NO == 9608 ? -254 : Config.__M_NO == 9607 ? 0 : 254; |==> <NO-OP>
9610:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.converter.impl.Iso5426ToUnicode@getChar(int):221:(char)i |==> 0
9611:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):229:7842 |==> 0
9612:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):229:7842 |==> -7842
9613:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):229:return Config.__M_NO == 0 && Config.COVERED(9611, 9612) ? 7842 : Config.__M_NO == 9612 ? -7842 : Config.__M_NO == 9611 ? 0 : 7842; |==> <NO-OP>
9614:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):231:7866 |==> 0
9615:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):231:7866 |==> -7866
9616:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):231:return Config.__M_NO == 0 && Config.COVERED(9614, 9615) ? 7866 : Config.__M_NO == 9615 ? -7866 : Config.__M_NO == 9614 ? 0 : 7866; |==> <NO-OP>
9617:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):233:7880 |==> 0
9618:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):233:7880 |==> -7880
9619:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):233:return Config.__M_NO == 0 && Config.COVERED(9617, 9618) ? 7880 : Config.__M_NO == 9618 ? -7880 : Config.__M_NO == 9617 ? 0 : 7880; |==> <NO-OP>
9620:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):235:7886 |==> 0
9621:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):235:7886 |==> -7886
9622:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):235:return Config.__M_NO == 0 && Config.COVERED(9620, 9621) ? 7886 : Config.__M_NO == 9621 ? -7886 : Config.__M_NO == 9620 ? 0 : 7886; |==> <NO-OP>
9623:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):237:7910 |==> 0
9624:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):237:7910 |==> -7910
9625:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):237:return Config.__M_NO == 0 && Config.COVERED(9623, 9624) ? 7910 : Config.__M_NO == 9624 ? -7910 : Config.__M_NO == 9623 ? 0 : 7910; |==> <NO-OP>
9626:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):239:7926 |==> 0
9627:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):239:7926 |==> -7926
9628:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):239:return Config.__M_NO == 0 && Config.COVERED(9626, 9627) ? 7926 : Config.__M_NO == 9627 ? -7926 : Config.__M_NO == 9626 ? 0 : 7926; |==> <NO-OP>
9629:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):241:7843 |==> 0
9630:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):241:7843 |==> -7843
9631:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):241:return Config.__M_NO == 0 && Config.COVERED(9629, 9630) ? 7843 : Config.__M_NO == 9630 ? -7843 : Config.__M_NO == 9629 ? 0 : 7843; |==> <NO-OP>
9632:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):243:7867 |==> 0
9633:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):243:7867 |==> -7867
9634:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):243:return Config.__M_NO == 0 && Config.COVERED(9632, 9633) ? 7867 : Config.__M_NO == 9633 ? -7867 : Config.__M_NO == 9632 ? 0 : 7867; |==> <NO-OP>
9635:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):245:7881 |==> 0
9636:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):245:7881 |==> -7881
9637:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):245:return Config.__M_NO == 0 && Config.COVERED(9635, 9636) ? 7881 : Config.__M_NO == 9636 ? -7881 : Config.__M_NO == 9635 ? 0 : 7881; |==> <NO-OP>
9638:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):247:7887 |==> 0
9639:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):247:7887 |==> -7887
9640:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):247:return Config.__M_NO == 0 && Config.COVERED(9638, 9639) ? 7887 : Config.__M_NO == 9639 ? -7887 : Config.__M_NO == 9638 ? 0 : 7887; |==> <NO-OP>
9641:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):249:7911 |==> 0
9642:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):249:7911 |==> -7911
9643:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):249:return Config.__M_NO == 0 && Config.COVERED(9641, 9642) ? 7911 : Config.__M_NO == 9642 ? -7911 : Config.__M_NO == 9641 ? 0 : 7911; |==> <NO-OP>
9644:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):251:7927 |==> 0
9645:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):251:7927 |==> -7927
9646:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):251:return Config.__M_NO == 0 && Config.COVERED(9644, 9645) ? 7927 : Config.__M_NO == 9645 ? -7927 : Config.__M_NO == 9644 ? 0 : 7927; |==> <NO-OP>
9647:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):255:192 |==> 0
9648:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):255:192 |==> -192
9649:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):255:return Config.__M_NO == 0 && Config.COVERED(9647, 9648) ? 192 : Config.__M_NO == 9648 ? -192 : Config.__M_NO == 9647 ? 0 : 192; |==> <NO-OP>
9650:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):257:200 |==> 0
9651:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):257:200 |==> -200
9652:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):257:return Config.__M_NO == 0 && Config.COVERED(9650, 9651) ? 200 : Config.__M_NO == 9651 ? -200 : Config.__M_NO == 9650 ? 0 : 200; |==> <NO-OP>
9653:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):259:204 |==> 0
9654:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):259:204 |==> -204
9655:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):259:return Config.__M_NO == 0 && Config.COVERED(9653, 9654) ? 204 : Config.__M_NO == 9654 ? -204 : Config.__M_NO == 9653 ? 0 : 204; |==> <NO-OP>
9656:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):261:210 |==> 0
9657:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):261:210 |==> -210
9658:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):261:return Config.__M_NO == 0 && Config.COVERED(9656, 9657) ? 210 : Config.__M_NO == 9657 ? -210 : Config.__M_NO == 9656 ? 0 : 210; |==> <NO-OP>
9659:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):263:217 |==> 0
9660:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):263:217 |==> -217
9661:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):263:return Config.__M_NO == 0 && Config.COVERED(9659, 9660) ? 217 : Config.__M_NO == 9660 ? -217 : Config.__M_NO == 9659 ? 0 : 217; |==> <NO-OP>
9662:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):265:7808 |==> 0
9663:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):265:7808 |==> -7808
9664:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):265:return Config.__M_NO == 0 && Config.COVERED(9662, 9663) ? 7808 : Config.__M_NO == 9663 ? -7808 : Config.__M_NO == 9662 ? 0 : 7808; |==> <NO-OP>
9665:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):267:7922 |==> 0
9666:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):267:7922 |==> -7922
9667:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):267:return Config.__M_NO == 0 && Config.COVERED(9665, 9666) ? 7922 : Config.__M_NO == 9666 ? -7922 : Config.__M_NO == 9665 ? 0 : 7922; |==> <NO-OP>
9668:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):269:224 |==> 0
9669:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):269:224 |==> -224
9670:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):269:return Config.__M_NO == 0 && Config.COVERED(9668, 9669) ? 224 : Config.__M_NO == 9669 ? -224 : Config.__M_NO == 9668 ? 0 : 224; |==> <NO-OP>
9671:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):271:232 |==> 0
9672:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):271:232 |==> -232
9673:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):271:return Config.__M_NO == 0 && Config.COVERED(9671, 9672) ? 232 : Config.__M_NO == 9672 ? -232 : Config.__M_NO == 9671 ? 0 : 232; |==> <NO-OP>
9674:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):273:236 |==> 0
9675:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):273:236 |==> -236
9676:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):273:return Config.__M_NO == 0 && Config.COVERED(9674, 9675) ? 236 : Config.__M_NO == 9675 ? -236 : Config.__M_NO == 9674 ? 0 : 236; |==> <NO-OP>
9677:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):275:242 |==> 0
9678:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):275:242 |==> -242
9679:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):275:return Config.__M_NO == 0 && Config.COVERED(9677, 9678) ? 242 : Config.__M_NO == 9678 ? -242 : Config.__M_NO == 9677 ? 0 : 242; |==> <NO-OP>
9680:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):277:249 |==> 0
9681:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):277:249 |==> -249
9682:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):277:return Config.__M_NO == 0 && Config.COVERED(9680, 9681) ? 249 : Config.__M_NO == 9681 ? -249 : Config.__M_NO == 9680 ? 0 : 249; |==> <NO-OP>
9683:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):279:7809 |==> 0
9684:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):279:7809 |==> -7809
9685:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):279:return Config.__M_NO == 0 && Config.COVERED(9683, 9684) ? 7809 : Config.__M_NO == 9684 ? -7809 : Config.__M_NO == 9683 ? 0 : 7809; |==> <NO-OP>
9686:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):281:7923 |==> 0
9687:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):281:7923 |==> -7923
9688:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):281:return Config.__M_NO == 0 && Config.COVERED(9686, 9687) ? 7923 : Config.__M_NO == 9687 ? -7923 : Config.__M_NO == 9686 ? 0 : 7923; |==> <NO-OP>
9689:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):285:193 |==> 0
9690:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):285:193 |==> -193
9691:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):285:return Config.__M_NO == 0 && Config.COVERED(9689, 9690) ? 193 : Config.__M_NO == 9690 ? -193 : Config.__M_NO == 9689 ? 0 : 193; |==> <NO-OP>
9692:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):287:262 |==> 0
9693:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):287:262 |==> -262
9694:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):287:return Config.__M_NO == 0 && Config.COVERED(9692, 9693) ? 262 : Config.__M_NO == 9693 ? -262 : Config.__M_NO == 9692 ? 0 : 262; |==> <NO-OP>
9695:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):289:201 |==> 0
9696:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):289:201 |==> -201
9697:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):289:return Config.__M_NO == 0 && Config.COVERED(9695, 9696) ? 201 : Config.__M_NO == 9696 ? -201 : Config.__M_NO == 9695 ? 0 : 201; |==> <NO-OP>
9698:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):291:500 |==> 0
9699:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):291:500 |==> -500
9700:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):291:return Config.__M_NO == 0 && Config.COVERED(9698, 9699) ? 500 : Config.__M_NO == 9699 ? -500 : Config.__M_NO == 9698 ? 0 : 500; |==> <NO-OP>
9701:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):293:205 |==> 0
9702:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):293:205 |==> -205
9703:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):293:return Config.__M_NO == 0 && Config.COVERED(9701, 9702) ? 205 : Config.__M_NO == 9702 ? -205 : Config.__M_NO == 9701 ? 0 : 205; |==> <NO-OP>
9704:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):295:7728 |==> 0
9705:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):295:7728 |==> -7728
9706:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):295:return Config.__M_NO == 0 && Config.COVERED(9704, 9705) ? 7728 : Config.__M_NO == 9705 ? -7728 : Config.__M_NO == 9704 ? 0 : 7728; |==> <NO-OP>
9707:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):297:313 |==> 0
9708:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):297:313 |==> -313
9709:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):297:return Config.__M_NO == 0 && Config.COVERED(9707, 9708) ? 313 : Config.__M_NO == 9708 ? -313 : Config.__M_NO == 9707 ? 0 : 313; |==> <NO-OP>
9710:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):299:7742 |==> 0
9711:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):299:7742 |==> -7742
9712:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):299:return Config.__M_NO == 0 && Config.COVERED(9710, 9711) ? 7742 : Config.__M_NO == 9711 ? -7742 : Config.__M_NO == 9710 ? 0 : 7742; |==> <NO-OP>
9713:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):301:323 |==> 0
9714:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):301:323 |==> -323
9715:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):301:return Config.__M_NO == 0 && Config.COVERED(9713, 9714) ? 323 : Config.__M_NO == 9714 ? -323 : Config.__M_NO == 9713 ? 0 : 323; |==> <NO-OP>
9716:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):303:211 |==> 0
9717:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):303:211 |==> -211
9718:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):303:return Config.__M_NO == 0 && Config.COVERED(9716, 9717) ? 211 : Config.__M_NO == 9717 ? -211 : Config.__M_NO == 9716 ? 0 : 211; |==> <NO-OP>
9719:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):305:7764 |==> 0
9720:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):305:7764 |==> -7764
9721:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):305:return Config.__M_NO == 0 && Config.COVERED(9719, 9720) ? 7764 : Config.__M_NO == 9720 ? -7764 : Config.__M_NO == 9719 ? 0 : 7764; |==> <NO-OP>
9722:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):307:340 |==> 0
9723:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):307:340 |==> -340
9724:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):307:return Config.__M_NO == 0 && Config.COVERED(9722, 9723) ? 340 : Config.__M_NO == 9723 ? -340 : Config.__M_NO == 9722 ? 0 : 340; |==> <NO-OP>
9725:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):309:346 |==> 0
9726:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):309:346 |==> -346
9727:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):309:return Config.__M_NO == 0 && Config.COVERED(9725, 9726) ? 346 : Config.__M_NO == 9726 ? -346 : Config.__M_NO == 9725 ? 0 : 346; |==> <NO-OP>
9728:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):311:218 |==> 0
9729:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):311:218 |==> -218
9730:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):311:return Config.__M_NO == 0 && Config.COVERED(9728, 9729) ? 218 : Config.__M_NO == 9729 ? -218 : Config.__M_NO == 9728 ? 0 : 218; |==> <NO-OP>
9731:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):313:7810 |==> 0
9732:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):313:7810 |==> -7810
9733:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):313:return Config.__M_NO == 0 && Config.COVERED(9731, 9732) ? 7810 : Config.__M_NO == 9732 ? -7810 : Config.__M_NO == 9731 ? 0 : 7810; |==> <NO-OP>
9734:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):315:221 |==> 0
9735:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):315:221 |==> -221
9736:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):315:return Config.__M_NO == 0 && Config.COVERED(9734, 9735) ? 221 : Config.__M_NO == 9735 ? -221 : Config.__M_NO == 9734 ? 0 : 221; |==> <NO-OP>
9737:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):317:377 |==> 0
9738:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):317:377 |==> -377
9739:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):317:return Config.__M_NO == 0 && Config.COVERED(9737, 9738) ? 377 : Config.__M_NO == 9738 ? -377 : Config.__M_NO == 9737 ? 0 : 377; |==> <NO-OP>
9740:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):319:225 |==> 0
9741:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):319:225 |==> -225
9742:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):319:return Config.__M_NO == 0 && Config.COVERED(9740, 9741) ? 225 : Config.__M_NO == 9741 ? -225 : Config.__M_NO == 9740 ? 0 : 225; |==> <NO-OP>
9743:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):321:263 |==> 0
9744:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):321:263 |==> -263
9745:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):321:return Config.__M_NO == 0 && Config.COVERED(9743, 9744) ? 263 : Config.__M_NO == 9744 ? -263 : Config.__M_NO == 9743 ? 0 : 263; |==> <NO-OP>
9746:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):323:233 |==> 0
9747:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):323:233 |==> -233
9748:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):323:return Config.__M_NO == 0 && Config.COVERED(9746, 9747) ? 233 : Config.__M_NO == 9747 ? -233 : Config.__M_NO == 9746 ? 0 : 233; |==> <NO-OP>
9749:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):325:501 |==> 0
9750:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):325:501 |==> -501
9751:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):325:return Config.__M_NO == 0 && Config.COVERED(9749, 9750) ? 501 : Config.__M_NO == 9750 ? -501 : Config.__M_NO == 9749 ? 0 : 501; |==> <NO-OP>
9752:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):327:237 |==> 0
9753:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):327:237 |==> -237
9754:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):327:return Config.__M_NO == 0 && Config.COVERED(9752, 9753) ? 237 : Config.__M_NO == 9753 ? -237 : Config.__M_NO == 9752 ? 0 : 237; |==> <NO-OP>
9755:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):329:7729 |==> 0
9756:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):329:7729 |==> -7729
9757:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):329:return Config.__M_NO == 0 && Config.COVERED(9755, 9756) ? 7729 : Config.__M_NO == 9756 ? -7729 : Config.__M_NO == 9755 ? 0 : 7729; |==> <NO-OP>
9758:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):331:314 |==> 0
9759:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):331:314 |==> -314
9760:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):331:return Config.__M_NO == 0 && Config.COVERED(9758, 9759) ? 314 : Config.__M_NO == 9759 ? -314 : Config.__M_NO == 9758 ? 0 : 314; |==> <NO-OP>
9761:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):333:7743 |==> 0
9762:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):333:7743 |==> -7743
9763:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):333:return Config.__M_NO == 0 && Config.COVERED(9761, 9762) ? 7743 : Config.__M_NO == 9762 ? -7743 : Config.__M_NO == 9761 ? 0 : 7743; |==> <NO-OP>
9764:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):335:324 |==> 0
9765:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):335:324 |==> -324
9766:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):335:return Config.__M_NO == 0 && Config.COVERED(9764, 9765) ? 324 : Config.__M_NO == 9765 ? -324 : Config.__M_NO == 9764 ? 0 : 324; |==> <NO-OP>
9767:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):337:243 |==> 0
9768:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):337:243 |==> -243
9769:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):337:return Config.__M_NO == 0 && Config.COVERED(9767, 9768) ? 243 : Config.__M_NO == 9768 ? -243 : Config.__M_NO == 9767 ? 0 : 243; |==> <NO-OP>
9770:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):339:7765 |==> 0
9771:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):339:7765 |==> -7765
9772:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):339:return Config.__M_NO == 0 && Config.COVERED(9770, 9771) ? 7765 : Config.__M_NO == 9771 ? -7765 : Config.__M_NO == 9770 ? 0 : 7765; |==> <NO-OP>
9773:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):341:341 |==> 0
9774:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):341:341 |==> -341
9775:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):341:return Config.__M_NO == 0 && Config.COVERED(9773, 9774) ? 341 : Config.__M_NO == 9774 ? -341 : Config.__M_NO == 9773 ? 0 : 341; |==> <NO-OP>
9776:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):343:347 |==> 0
9777:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):343:347 |==> -347
9778:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):343:return Config.__M_NO == 0 && Config.COVERED(9776, 9777) ? 347 : Config.__M_NO == 9777 ? -347 : Config.__M_NO == 9776 ? 0 : 347; |==> <NO-OP>
9779:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):345:250 |==> 0
9780:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):345:250 |==> -250
9781:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):345:return Config.__M_NO == 0 && Config.COVERED(9779, 9780) ? 250 : Config.__M_NO == 9780 ? -250 : Config.__M_NO == 9779 ? 0 : 250; |==> <NO-OP>
9782:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):347:7811 |==> 0
9783:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):347:7811 |==> -7811
9784:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):347:return Config.__M_NO == 0 && Config.COVERED(9782, 9783) ? 7811 : Config.__M_NO == 9783 ? -7811 : Config.__M_NO == 9782 ? 0 : 7811; |==> <NO-OP>
9785:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):349:253 |==> 0
9786:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):349:253 |==> -253
9787:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):349:return Config.__M_NO == 0 && Config.COVERED(9785, 9786) ? 253 : Config.__M_NO == 9786 ? -253 : Config.__M_NO == 9785 ? 0 : 253; |==> <NO-OP>
9788:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):351:378 |==> 0
9789:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):351:378 |==> -378
9790:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):351:return Config.__M_NO == 0 && Config.COVERED(9788, 9789) ? 378 : Config.__M_NO == 9789 ? -378 : Config.__M_NO == 9788 ? 0 : 378; |==> <NO-OP>
9791:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):353:508 |==> 0
9792:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):353:508 |==> -508
9793:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):353:return Config.__M_NO == 0 && Config.COVERED(9791, 9792) ? 508 : Config.__M_NO == 9792 ? -508 : Config.__M_NO == 9791 ? 0 : 508; |==> <NO-OP>
9794:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):355:509 |==> 0
9795:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):355:509 |==> -509
9796:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):355:return Config.__M_NO == 0 && Config.COVERED(9794, 9795) ? 509 : Config.__M_NO == 9795 ? -509 : Config.__M_NO == 9794 ? 0 : 509; |==> <NO-OP>
9797:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):359:194 |==> 0
9798:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):359:194 |==> -194
9799:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):359:return Config.__M_NO == 0 && Config.COVERED(9797, 9798) ? 194 : Config.__M_NO == 9798 ? -194 : Config.__M_NO == 9797 ? 0 : 194; |==> <NO-OP>
9800:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):361:264 |==> 0
9801:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):361:264 |==> -264
9802:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):361:return Config.__M_NO == 0 && Config.COVERED(9800, 9801) ? 264 : Config.__M_NO == 9801 ? -264 : Config.__M_NO == 9800 ? 0 : 264; |==> <NO-OP>
9803:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):363:202 |==> 0
9804:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):363:202 |==> -202
9805:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):363:return Config.__M_NO == 0 && Config.COVERED(9803, 9804) ? 202 : Config.__M_NO == 9804 ? -202 : Config.__M_NO == 9803 ? 0 : 202; |==> <NO-OP>
9806:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):365:284 |==> 0
9807:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):365:284 |==> -284
9808:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):365:return Config.__M_NO == 0 && Config.COVERED(9806, 9807) ? 284 : Config.__M_NO == 9807 ? -284 : Config.__M_NO == 9806 ? 0 : 284; |==> <NO-OP>
9809:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):367:292 |==> 0
9810:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):367:292 |==> -292
9811:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):367:return Config.__M_NO == 0 && Config.COVERED(9809, 9810) ? 292 : Config.__M_NO == 9810 ? -292 : Config.__M_NO == 9809 ? 0 : 292; |==> <NO-OP>
9812:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):369:206 |==> 0
9813:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):369:206 |==> -206
9814:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):369:return Config.__M_NO == 0 && Config.COVERED(9812, 9813) ? 206 : Config.__M_NO == 9813 ? -206 : Config.__M_NO == 9812 ? 0 : 206; |==> <NO-OP>
9815:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):371:308 |==> 0
9816:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):371:308 |==> -308
9817:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):371:return Config.__M_NO == 0 && Config.COVERED(9815, 9816) ? 308 : Config.__M_NO == 9816 ? -308 : Config.__M_NO == 9815 ? 0 : 308; |==> <NO-OP>
9818:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):373:212 |==> 0
9819:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):373:212 |==> -212
9820:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):373:return Config.__M_NO == 0 && Config.COVERED(9818, 9819) ? 212 : Config.__M_NO == 9819 ? -212 : Config.__M_NO == 9818 ? 0 : 212; |==> <NO-OP>
9821:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):375:348 |==> 0
9822:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):375:348 |==> -348
9823:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):375:return Config.__M_NO == 0 && Config.COVERED(9821, 9822) ? 348 : Config.__M_NO == 9822 ? -348 : Config.__M_NO == 9821 ? 0 : 348; |==> <NO-OP>
9824:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):377:219 |==> 0
9825:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):377:219 |==> -219
9826:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):377:return Config.__M_NO == 0 && Config.COVERED(9824, 9825) ? 219 : Config.__M_NO == 9825 ? -219 : Config.__M_NO == 9824 ? 0 : 219; |==> <NO-OP>
9827:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):379:372 |==> 0
9828:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):379:372 |==> -372
9829:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):379:return Config.__M_NO == 0 && Config.COVERED(9827, 9828) ? 372 : Config.__M_NO == 9828 ? -372 : Config.__M_NO == 9827 ? 0 : 372; |==> <NO-OP>
9830:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):381:374 |==> 0
9831:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):381:374 |==> -374
9832:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):381:return Config.__M_NO == 0 && Config.COVERED(9830, 9831) ? 374 : Config.__M_NO == 9831 ? -374 : Config.__M_NO == 9830 ? 0 : 374; |==> <NO-OP>
9833:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):383:7824 |==> 0
9834:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):383:7824 |==> -7824
9835:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):383:return Config.__M_NO == 0 && Config.COVERED(9833, 9834) ? 7824 : Config.__M_NO == 9834 ? -7824 : Config.__M_NO == 9833 ? 0 : 7824; |==> <NO-OP>
9836:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):385:226 |==> 0
9837:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):385:226 |==> -226
9838:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):385:return Config.__M_NO == 0 && Config.COVERED(9836, 9837) ? 226 : Config.__M_NO == 9837 ? -226 : Config.__M_NO == 9836 ? 0 : 226; |==> <NO-OP>
9839:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):387:265 |==> 0
9840:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):387:265 |==> -265
9841:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):387:return Config.__M_NO == 0 && Config.COVERED(9839, 9840) ? 265 : Config.__M_NO == 9840 ? -265 : Config.__M_NO == 9839 ? 0 : 265; |==> <NO-OP>
9842:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):389:234 |==> 0
9843:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):389:234 |==> -234
9844:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):389:return Config.__M_NO == 0 && Config.COVERED(9842, 9843) ? 234 : Config.__M_NO == 9843 ? -234 : Config.__M_NO == 9842 ? 0 : 234; |==> <NO-OP>
9845:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):391:285 |==> 0
9846:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):391:285 |==> -285
9847:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):391:return Config.__M_NO == 0 && Config.COVERED(9845, 9846) ? 285 : Config.__M_NO == 9846 ? -285 : Config.__M_NO == 9845 ? 0 : 285; |==> <NO-OP>
9848:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):393:293 |==> 0
9849:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):393:293 |==> -293
9850:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):393:return Config.__M_NO == 0 && Config.COVERED(9848, 9849) ? 293 : Config.__M_NO == 9849 ? -293 : Config.__M_NO == 9848 ? 0 : 293; |==> <NO-OP>
9851:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):395:238 |==> 0
9852:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):395:238 |==> -238
9853:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):395:return Config.__M_NO == 0 && Config.COVERED(9851, 9852) ? 238 : Config.__M_NO == 9852 ? -238 : Config.__M_NO == 9851 ? 0 : 238; |==> <NO-OP>
9854:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):397:309 |==> 0
9855:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):397:309 |==> -309
9856:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):397:return Config.__M_NO == 0 && Config.COVERED(9854, 9855) ? 309 : Config.__M_NO == 9855 ? -309 : Config.__M_NO == 9854 ? 0 : 309; |==> <NO-OP>
9857:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):399:244 |==> 0
9858:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):399:244 |==> -244
9859:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):399:return Config.__M_NO == 0 && Config.COVERED(9857, 9858) ? 244 : Config.__M_NO == 9858 ? -244 : Config.__M_NO == 9857 ? 0 : 244; |==> <NO-OP>
9860:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):401:349 |==> 0
9861:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):401:349 |==> -349
9862:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):401:return Config.__M_NO == 0 && Config.COVERED(9860, 9861) ? 349 : Config.__M_NO == 9861 ? -349 : Config.__M_NO == 9860 ? 0 : 349; |==> <NO-OP>
9863:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):403:251 |==> 0
9864:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):403:251 |==> -251
9865:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):403:return Config.__M_NO == 0 && Config.COVERED(9863, 9864) ? 251 : Config.__M_NO == 9864 ? -251 : Config.__M_NO == 9863 ? 0 : 251; |==> <NO-OP>
9866:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):405:373 |==> 0
9867:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):405:373 |==> -373
9868:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):405:return Config.__M_NO == 0 && Config.COVERED(9866, 9867) ? 373 : Config.__M_NO == 9867 ? -373 : Config.__M_NO == 9866 ? 0 : 373; |==> <NO-OP>
9869:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):407:375 |==> 0
9870:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):407:375 |==> -375
9871:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):407:return Config.__M_NO == 0 && Config.COVERED(9869, 9870) ? 375 : Config.__M_NO == 9870 ? -375 : Config.__M_NO == 9869 ? 0 : 375; |==> <NO-OP>
9872:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):409:7825 |==> 0
9873:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):409:7825 |==> -7825
9874:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):409:return Config.__M_NO == 0 && Config.COVERED(9872, 9873) ? 7825 : Config.__M_NO == 9873 ? -7825 : Config.__M_NO == 9872 ? 0 : 7825; |==> <NO-OP>
9875:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):413:195 |==> 0
9876:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):413:195 |==> -195
9877:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):413:return Config.__M_NO == 0 && Config.COVERED(9875, 9876) ? 195 : Config.__M_NO == 9876 ? -195 : Config.__M_NO == 9875 ? 0 : 195; |==> <NO-OP>
9878:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):415:7868 |==> 0
9879:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):415:7868 |==> -7868
9880:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):415:return Config.__M_NO == 0 && Config.COVERED(9878, 9879) ? 7868 : Config.__M_NO == 9879 ? -7868 : Config.__M_NO == 9878 ? 0 : 7868; |==> <NO-OP>
9881:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):417:296 |==> 0
9882:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):417:296 |==> -296
9883:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):417:return Config.__M_NO == 0 && Config.COVERED(9881, 9882) ? 296 : Config.__M_NO == 9882 ? -296 : Config.__M_NO == 9881 ? 0 : 296; |==> <NO-OP>
9884:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):419:209 |==> 0
9885:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):419:209 |==> -209
9886:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):419:return Config.__M_NO == 0 && Config.COVERED(9884, 9885) ? 209 : Config.__M_NO == 9885 ? -209 : Config.__M_NO == 9884 ? 0 : 209; |==> <NO-OP>
9887:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):421:213 |==> 0
9888:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):421:213 |==> -213
9889:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):421:return Config.__M_NO == 0 && Config.COVERED(9887, 9888) ? 213 : Config.__M_NO == 9888 ? -213 : Config.__M_NO == 9887 ? 0 : 213; |==> <NO-OP>
9890:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):423:360 |==> 0
9891:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):423:360 |==> -360
9892:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):423:return Config.__M_NO == 0 && Config.COVERED(9890, 9891) ? 360 : Config.__M_NO == 9891 ? -360 : Config.__M_NO == 9890 ? 0 : 360; |==> <NO-OP>
9893:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):425:7804 |==> 0
9894:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):425:7804 |==> -7804
9895:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):425:return Config.__M_NO == 0 && Config.COVERED(9893, 9894) ? 7804 : Config.__M_NO == 9894 ? -7804 : Config.__M_NO == 9893 ? 0 : 7804; |==> <NO-OP>
9896:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):427:7928 |==> 0
9897:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):427:7928 |==> -7928
9898:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):427:return Config.__M_NO == 0 && Config.COVERED(9896, 9897) ? 7928 : Config.__M_NO == 9897 ? -7928 : Config.__M_NO == 9896 ? 0 : 7928; |==> <NO-OP>
9899:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):429:227 |==> 0
9900:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):429:227 |==> -227
9901:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):429:return Config.__M_NO == 0 && Config.COVERED(9899, 9900) ? 227 : Config.__M_NO == 9900 ? -227 : Config.__M_NO == 9899 ? 0 : 227; |==> <NO-OP>
9902:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):431:7869 |==> 0
9903:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):431:7869 |==> -7869
9904:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):431:return Config.__M_NO == 0 && Config.COVERED(9902, 9903) ? 7869 : Config.__M_NO == 9903 ? -7869 : Config.__M_NO == 9902 ? 0 : 7869; |==> <NO-OP>
9905:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):433:297 |==> 0
9906:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):433:297 |==> -297
9907:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):433:return Config.__M_NO == 0 && Config.COVERED(9905, 9906) ? 297 : Config.__M_NO == 9906 ? -297 : Config.__M_NO == 9905 ? 0 : 297; |==> <NO-OP>
9908:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):435:241 |==> 0
9909:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):435:241 |==> -241
9910:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):435:return Config.__M_NO == 0 && Config.COVERED(9908, 9909) ? 241 : Config.__M_NO == 9909 ? -241 : Config.__M_NO == 9908 ? 0 : 241; |==> <NO-OP>
9911:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):437:245 |==> 0
9912:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):437:245 |==> -245
9913:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):437:return Config.__M_NO == 0 && Config.COVERED(9911, 9912) ? 245 : Config.__M_NO == 9912 ? -245 : Config.__M_NO == 9911 ? 0 : 245; |==> <NO-OP>
9914:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):439:361 |==> 0
9915:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):439:361 |==> -361
9916:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):439:return Config.__M_NO == 0 && Config.COVERED(9914, 9915) ? 361 : Config.__M_NO == 9915 ? -361 : Config.__M_NO == 9914 ? 0 : 361; |==> <NO-OP>
9917:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):441:7805 |==> 0
9918:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):441:7805 |==> -7805
9919:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):441:return Config.__M_NO == 0 && Config.COVERED(9917, 9918) ? 7805 : Config.__M_NO == 9918 ? -7805 : Config.__M_NO == 9917 ? 0 : 7805; |==> <NO-OP>
9920:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):443:7929 |==> 0
9921:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):443:7929 |==> -7929
9922:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):443:return Config.__M_NO == 0 && Config.COVERED(9920, 9921) ? 7929 : Config.__M_NO == 9921 ? -7929 : Config.__M_NO == 9920 ? 0 : 7929; |==> <NO-OP>
9923:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):447:256 |==> 0
9924:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):447:256 |==> -256
9925:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):447:return Config.__M_NO == 0 && Config.COVERED(9923, 9924) ? 256 : Config.__M_NO == 9924 ? -256 : Config.__M_NO == 9923 ? 0 : 256; |==> <NO-OP>
9926:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):449:274 |==> 0
9927:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):449:274 |==> -274
9928:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):449:return Config.__M_NO == 0 && Config.COVERED(9926, 9927) ? 274 : Config.__M_NO == 9927 ? -274 : Config.__M_NO == 9926 ? 0 : 274; |==> <NO-OP>
9929:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):451:7712 |==> 0
9930:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):451:7712 |==> -7712
9931:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):451:return Config.__M_NO == 0 && Config.COVERED(9929, 9930) ? 7712 : Config.__M_NO == 9930 ? -7712 : Config.__M_NO == 9929 ? 0 : 7712; |==> <NO-OP>
9932:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):453:298 |==> 0
9933:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):453:298 |==> -298
9934:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):453:return Config.__M_NO == 0 && Config.COVERED(9932, 9933) ? 298 : Config.__M_NO == 9933 ? -298 : Config.__M_NO == 9932 ? 0 : 298; |==> <NO-OP>
9935:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):455:332 |==> 0
9936:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):455:332 |==> -332
9937:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):455:return Config.__M_NO == 0 && Config.COVERED(9935, 9936) ? 332 : Config.__M_NO == 9936 ? -332 : Config.__M_NO == 9935 ? 0 : 332; |==> <NO-OP>
9938:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):457:362 |==> 0
9939:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):457:362 |==> -362
9940:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):457:return Config.__M_NO == 0 && Config.COVERED(9938, 9939) ? 362 : Config.__M_NO == 9939 ? -362 : Config.__M_NO == 9938 ? 0 : 362; |==> <NO-OP>
9941:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):459:257 |==> 0
9942:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):459:257 |==> -257
9943:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):459:return Config.__M_NO == 0 && Config.COVERED(9941, 9942) ? 257 : Config.__M_NO == 9942 ? -257 : Config.__M_NO == 9941 ? 0 : 257; |==> <NO-OP>
9944:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):461:275 |==> 0
9945:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):461:275 |==> -275
9946:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):461:return Config.__M_NO == 0 && Config.COVERED(9944, 9945) ? 275 : Config.__M_NO == 9945 ? -275 : Config.__M_NO == 9944 ? 0 : 275; |==> <NO-OP>
9947:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):463:7713 |==> 0
9948:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):463:7713 |==> -7713
9949:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):463:return Config.__M_NO == 0 && Config.COVERED(9947, 9948) ? 7713 : Config.__M_NO == 9948 ? -7713 : Config.__M_NO == 9947 ? 0 : 7713; |==> <NO-OP>
9950:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):465:299 |==> 0
9951:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):465:299 |==> -299
9952:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):465:return Config.__M_NO == 0 && Config.COVERED(9950, 9951) ? 299 : Config.__M_NO == 9951 ? -299 : Config.__M_NO == 9950 ? 0 : 299; |==> <NO-OP>
9953:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):467:333 |==> 0
9954:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):467:333 |==> -333
9955:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):467:return Config.__M_NO == 0 && Config.COVERED(9953, 9954) ? 333 : Config.__M_NO == 9954 ? -333 : Config.__M_NO == 9953 ? 0 : 333; |==> <NO-OP>
9956:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):469:363 |==> 0
9957:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):469:363 |==> -363
9958:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):469:return Config.__M_NO == 0 && Config.COVERED(9956, 9957) ? 363 : Config.__M_NO == 9957 ? -363 : Config.__M_NO == 9956 ? 0 : 363; |==> <NO-OP>
9959:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):471:482 |==> 0
9960:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):471:482 |==> -482
9961:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):471:return Config.__M_NO == 0 && Config.COVERED(9959, 9960) ? 482 : Config.__M_NO == 9960 ? -482 : Config.__M_NO == 9959 ? 0 : 482; |==> <NO-OP>
9962:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):473:483 |==> 0
9963:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):473:483 |==> -483
9964:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):473:return Config.__M_NO == 0 && Config.COVERED(9962, 9963) ? 483 : Config.__M_NO == 9963 ? -483 : Config.__M_NO == 9962 ? 0 : 483; |==> <NO-OP>
9965:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):477:258 |==> 0
9966:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):477:258 |==> -258
9967:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):477:return Config.__M_NO == 0 && Config.COVERED(9965, 9966) ? 258 : Config.__M_NO == 9966 ? -258 : Config.__M_NO == 9965 ? 0 : 258; |==> <NO-OP>
9968:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):479:276 |==> 0
9969:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):479:276 |==> -276
9970:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):479:return Config.__M_NO == 0 && Config.COVERED(9968, 9969) ? 276 : Config.__M_NO == 9969 ? -276 : Config.__M_NO == 9968 ? 0 : 276; |==> <NO-OP>
9971:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):481:286 |==> 0
9972:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):481:286 |==> -286
9973:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):481:return Config.__M_NO == 0 && Config.COVERED(9971, 9972) ? 286 : Config.__M_NO == 9972 ? -286 : Config.__M_NO == 9971 ? 0 : 286; |==> <NO-OP>
9974:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):483:300 |==> 0
9975:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):483:300 |==> -300
9976:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):483:return Config.__M_NO == 0 && Config.COVERED(9974, 9975) ? 300 : Config.__M_NO == 9975 ? -300 : Config.__M_NO == 9974 ? 0 : 300; |==> <NO-OP>
9977:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):485:334 |==> 0
9978:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):485:334 |==> -334
9979:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):485:return Config.__M_NO == 0 && Config.COVERED(9977, 9978) ? 334 : Config.__M_NO == 9978 ? -334 : Config.__M_NO == 9977 ? 0 : 334; |==> <NO-OP>
9980:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):487:364 |==> 0
9981:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):487:364 |==> -364
9982:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):487:return Config.__M_NO == 0 && Config.COVERED(9980, 9981) ? 364 : Config.__M_NO == 9981 ? -364 : Config.__M_NO == 9980 ? 0 : 364; |==> <NO-OP>
9983:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):489:259 |==> 0
9984:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):489:259 |==> -259
9985:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):489:return Config.__M_NO == 0 && Config.COVERED(9983, 9984) ? 259 : Config.__M_NO == 9984 ? -259 : Config.__M_NO == 9983 ? 0 : 259; |==> <NO-OP>
9986:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):491:277 |==> 0
9987:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):491:277 |==> -277
9988:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):491:return Config.__M_NO == 0 && Config.COVERED(9986, 9987) ? 277 : Config.__M_NO == 9987 ? -277 : Config.__M_NO == 9986 ? 0 : 277; |==> <NO-OP>
9989:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):493:287 |==> 0
9990:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):493:287 |==> -287
9991:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):493:return Config.__M_NO == 0 && Config.COVERED(9989, 9990) ? 287 : Config.__M_NO == 9990 ? -287 : Config.__M_NO == 9989 ? 0 : 287; |==> <NO-OP>
9992:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):495:301 |==> 0
9993:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):495:301 |==> -301
9994:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):495:return Config.__M_NO == 0 && Config.COVERED(9992, 9993) ? 301 : Config.__M_NO == 9993 ? -301 : Config.__M_NO == 9992 ? 0 : 301; |==> <NO-OP>
9995:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):497:335 |==> 0
9996:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):497:335 |==> -335
9997:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):497:return Config.__M_NO == 0 && Config.COVERED(9995, 9996) ? 335 : Config.__M_NO == 9996 ? -335 : Config.__M_NO == 9995 ? 0 : 335; |==> <NO-OP>
9998:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):499:365 |==> 0
9999:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):499:365 |==> -365
10000:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):499:return Config.__M_NO == 0 && Config.COVERED(9998, 9999) ? 365 : Config.__M_NO == 9999 ? -365 : Config.__M_NO == 9998 ? 0 : 365; |==> <NO-OP>
10001:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):503:7682 |==> 0
10002:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):503:7682 |==> -7682
10003:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):503:return Config.__M_NO == 0 && Config.COVERED(10001, 10002) ? 7682 : Config.__M_NO == 10002 ? -7682 : Config.__M_NO == 10001 ? 0 : 7682; |==> <NO-OP>
10004:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):505:266 |==> 0
10005:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):505:266 |==> -266
10006:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):505:return Config.__M_NO == 0 && Config.COVERED(10004, 10005) ? 266 : Config.__M_NO == 10005 ? -266 : Config.__M_NO == 10004 ? 0 : 266; |==> <NO-OP>
10007:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):507:7690 |==> 0
10008:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):507:7690 |==> -7690
10009:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):507:return Config.__M_NO == 0 && Config.COVERED(10007, 10008) ? 7690 : Config.__M_NO == 10008 ? -7690 : Config.__M_NO == 10007 ? 0 : 7690; |==> <NO-OP>
10010:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):509:278 |==> 0
10011:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):509:278 |==> -278
10012:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):509:return Config.__M_NO == 0 && Config.COVERED(10010, 10011) ? 278 : Config.__M_NO == 10011 ? -278 : Config.__M_NO == 10010 ? 0 : 278; |==> <NO-OP>
10013:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):511:7710 |==> 0
10014:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):511:7710 |==> -7710
10015:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):511:return Config.__M_NO == 0 && Config.COVERED(10013, 10014) ? 7710 : Config.__M_NO == 10014 ? -7710 : Config.__M_NO == 10013 ? 0 : 7710; |==> <NO-OP>
10016:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):513:288 |==> 0
10017:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):513:288 |==> -288
10018:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):513:return Config.__M_NO == 0 && Config.COVERED(10016, 10017) ? 288 : Config.__M_NO == 10017 ? -288 : Config.__M_NO == 10016 ? 0 : 288; |==> <NO-OP>
10019:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):515:7714 |==> 0
10020:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):515:7714 |==> -7714
10021:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):515:return Config.__M_NO == 0 && Config.COVERED(10019, 10020) ? 7714 : Config.__M_NO == 10020 ? -7714 : Config.__M_NO == 10019 ? 0 : 7714; |==> <NO-OP>
10022:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):517:304 |==> 0
10023:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):517:304 |==> -304
10024:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):517:return Config.__M_NO == 0 && Config.COVERED(10022, 10023) ? 304 : Config.__M_NO == 10023 ? -304 : Config.__M_NO == 10022 ? 0 : 304; |==> <NO-OP>
10025:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):519:7744 |==> 0
10026:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):519:7744 |==> -7744
10027:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):519:return Config.__M_NO == 0 && Config.COVERED(10025, 10026) ? 7744 : Config.__M_NO == 10026 ? -7744 : Config.__M_NO == 10025 ? 0 : 7744; |==> <NO-OP>
10028:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):521:7748 |==> 0
10029:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):521:7748 |==> -7748
10030:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):521:return Config.__M_NO == 0 && Config.COVERED(10028, 10029) ? 7748 : Config.__M_NO == 10029 ? -7748 : Config.__M_NO == 10028 ? 0 : 7748; |==> <NO-OP>
10031:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):523:7766 |==> 0
10032:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):523:7766 |==> -7766
10033:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):523:return Config.__M_NO == 0 && Config.COVERED(10031, 10032) ? 7766 : Config.__M_NO == 10032 ? -7766 : Config.__M_NO == 10031 ? 0 : 7766; |==> <NO-OP>
10034:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):525:7768 |==> 0
10035:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):525:7768 |==> -7768
10036:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):525:return Config.__M_NO == 0 && Config.COVERED(10034, 10035) ? 7768 : Config.__M_NO == 10035 ? -7768 : Config.__M_NO == 10034 ? 0 : 7768; |==> <NO-OP>
10037:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):527:7776 |==> 0
10038:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):527:7776 |==> -7776
10039:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):527:return Config.__M_NO == 0 && Config.COVERED(10037, 10038) ? 7776 : Config.__M_NO == 10038 ? -7776 : Config.__M_NO == 10037 ? 0 : 7776; |==> <NO-OP>
10040:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):529:7786 |==> 0
10041:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):529:7786 |==> -7786
10042:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):529:return Config.__M_NO == 0 && Config.COVERED(10040, 10041) ? 7786 : Config.__M_NO == 10041 ? -7786 : Config.__M_NO == 10040 ? 0 : 7786; |==> <NO-OP>
10043:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):531:7814 |==> 0
10044:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):531:7814 |==> -7814
10045:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):531:return Config.__M_NO == 0 && Config.COVERED(10043, 10044) ? 7814 : Config.__M_NO == 10044 ? -7814 : Config.__M_NO == 10043 ? 0 : 7814; |==> <NO-OP>
10046:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):533:7818 |==> 0
10047:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):533:7818 |==> -7818
10048:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):533:return Config.__M_NO == 0 && Config.COVERED(10046, 10047) ? 7818 : Config.__M_NO == 10047 ? -7818 : Config.__M_NO == 10046 ? 0 : 7818; |==> <NO-OP>
10049:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):535:7822 |==> 0
10050:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):535:7822 |==> -7822
10051:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):535:return Config.__M_NO == 0 && Config.COVERED(10049, 10050) ? 7822 : Config.__M_NO == 10050 ? -7822 : Config.__M_NO == 10049 ? 0 : 7822; |==> <NO-OP>
10052:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):537:379 |==> 0
10053:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):537:379 |==> -379
10054:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):537:return Config.__M_NO == 0 && Config.COVERED(10052, 10053) ? 379 : Config.__M_NO == 10053 ? -379 : Config.__M_NO == 10052 ? 0 : 379; |==> <NO-OP>
10055:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):539:7683 |==> 0
10056:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):539:7683 |==> -7683
10057:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):539:return Config.__M_NO == 0 && Config.COVERED(10055, 10056) ? 7683 : Config.__M_NO == 10056 ? -7683 : Config.__M_NO == 10055 ? 0 : 7683; |==> <NO-OP>
10058:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):541:267 |==> 0
10059:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):541:267 |==> -267
10060:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):541:return Config.__M_NO == 0 && Config.COVERED(10058, 10059) ? 267 : Config.__M_NO == 10059 ? -267 : Config.__M_NO == 10058 ? 0 : 267; |==> <NO-OP>
10061:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):543:7691 |==> 0
10062:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):543:7691 |==> -7691
10063:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):543:return Config.__M_NO == 0 && Config.COVERED(10061, 10062) ? 7691 : Config.__M_NO == 10062 ? -7691 : Config.__M_NO == 10061 ? 0 : 7691; |==> <NO-OP>
10064:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):545:279 |==> 0
10065:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):545:279 |==> -279
10066:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):545:return Config.__M_NO == 0 && Config.COVERED(10064, 10065) ? 279 : Config.__M_NO == 10065 ? -279 : Config.__M_NO == 10064 ? 0 : 279; |==> <NO-OP>
10067:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):547:7711 |==> 0
10068:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):547:7711 |==> -7711
10069:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):547:return Config.__M_NO == 0 && Config.COVERED(10067, 10068) ? 7711 : Config.__M_NO == 10068 ? -7711 : Config.__M_NO == 10067 ? 0 : 7711; |==> <NO-OP>
10070:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):549:289 |==> 0
10071:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):549:289 |==> -289
10072:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):549:return Config.__M_NO == 0 && Config.COVERED(10070, 10071) ? 289 : Config.__M_NO == 10071 ? -289 : Config.__M_NO == 10070 ? 0 : 289; |==> <NO-OP>
10073:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):551:7715 |==> 0
10074:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):551:7715 |==> -7715
10075:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):551:return Config.__M_NO == 0 && Config.COVERED(10073, 10074) ? 7715 : Config.__M_NO == 10074 ? -7715 : Config.__M_NO == 10073 ? 0 : 7715; |==> <NO-OP>
10076:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):553:7745 |==> 0
10077:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):553:7745 |==> -7745
10078:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):553:return Config.__M_NO == 0 && Config.COVERED(10076, 10077) ? 7745 : Config.__M_NO == 10077 ? -7745 : Config.__M_NO == 10076 ? 0 : 7745; |==> <NO-OP>
10079:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):555:7749 |==> 0
10080:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):555:7749 |==> -7749
10081:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):555:return Config.__M_NO == 0 && Config.COVERED(10079, 10080) ? 7749 : Config.__M_NO == 10080 ? -7749 : Config.__M_NO == 10079 ? 0 : 7749; |==> <NO-OP>
10082:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):557:7767 |==> 0
10083:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):557:7767 |==> -7767
10084:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):557:return Config.__M_NO == 0 && Config.COVERED(10082, 10083) ? 7767 : Config.__M_NO == 10083 ? -7767 : Config.__M_NO == 10082 ? 0 : 7767; |==> <NO-OP>
10085:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):559:7769 |==> 0
10086:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):559:7769 |==> -7769
10087:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):559:return Config.__M_NO == 0 && Config.COVERED(10085, 10086) ? 7769 : Config.__M_NO == 10086 ? -7769 : Config.__M_NO == 10085 ? 0 : 7769; |==> <NO-OP>
10088:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):561:7777 |==> 0
10089:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):561:7777 |==> -7777
10090:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):561:return Config.__M_NO == 0 && Config.COVERED(10088, 10089) ? 7777 : Config.__M_NO == 10089 ? -7777 : Config.__M_NO == 10088 ? 0 : 7777; |==> <NO-OP>
10091:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):563:7787 |==> 0
10092:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):563:7787 |==> -7787
10093:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):563:return Config.__M_NO == 0 && Config.COVERED(10091, 10092) ? 7787 : Config.__M_NO == 10092 ? -7787 : Config.__M_NO == 10091 ? 0 : 7787; |==> <NO-OP>
10094:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):565:7815 |==> 0
10095:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):565:7815 |==> -7815
10096:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):565:return Config.__M_NO == 0 && Config.COVERED(10094, 10095) ? 7815 : Config.__M_NO == 10095 ? -7815 : Config.__M_NO == 10094 ? 0 : 7815; |==> <NO-OP>
10097:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):567:7819 |==> 0
10098:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):567:7819 |==> -7819
10099:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):567:return Config.__M_NO == 0 && Config.COVERED(10097, 10098) ? 7819 : Config.__M_NO == 10098 ? -7819 : Config.__M_NO == 10097 ? 0 : 7819; |==> <NO-OP>
10100:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):569:7823 |==> 0
10101:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):569:7823 |==> -7823
10102:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):569:return Config.__M_NO == 0 && Config.COVERED(10100, 10101) ? 7823 : Config.__M_NO == 10101 ? -7823 : Config.__M_NO == 10100 ? 0 : 7823; |==> <NO-OP>
10103:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):571:380 |==> 0
10104:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):571:380 |==> -380
10105:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):571:return Config.__M_NO == 0 && Config.COVERED(10103, 10104) ? 380 : Config.__M_NO == 10104 ? -380 : Config.__M_NO == 10103 ? 0 : 380; |==> <NO-OP>
10106:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):575:168 |==> 0
10107:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):575:168 |==> -168
10108:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):575:return Config.__M_NO == 0 && Config.COVERED(10106, 10107) ? 168 : Config.__M_NO == 10107 ? -168 : Config.__M_NO == 10106 ? 0 : 168; |==> <NO-OP>
10109:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):577:196 |==> 0
10110:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):577:196 |==> -196
10111:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):577:return Config.__M_NO == 0 && Config.COVERED(10109, 10110) ? 196 : Config.__M_NO == 10110 ? -196 : Config.__M_NO == 10109 ? 0 : 196; |==> <NO-OP>
10112:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):579:203 |==> 0
10113:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):579:203 |==> -203
10114:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):579:return Config.__M_NO == 0 && Config.COVERED(10112, 10113) ? 203 : Config.__M_NO == 10113 ? -203 : Config.__M_NO == 10112 ? 0 : 203; |==> <NO-OP>
10115:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):581:7718 |==> 0
10116:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):581:7718 |==> -7718
10117:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):581:return Config.__M_NO == 0 && Config.COVERED(10115, 10116) ? 7718 : Config.__M_NO == 10116 ? -7718 : Config.__M_NO == 10115 ? 0 : 7718; |==> <NO-OP>
10118:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):583:207 |==> 0
10119:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):583:207 |==> -207
10120:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):583:return Config.__M_NO == 0 && Config.COVERED(10118, 10119) ? 207 : Config.__M_NO == 10119 ? -207 : Config.__M_NO == 10118 ? 0 : 207; |==> <NO-OP>
10121:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):585:214 |==> 0
10122:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):585:214 |==> -214
10123:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):585:return Config.__M_NO == 0 && Config.COVERED(10121, 10122) ? 214 : Config.__M_NO == 10122 ? -214 : Config.__M_NO == 10121 ? 0 : 214; |==> <NO-OP>
10124:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):587:220 |==> 0
10125:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):587:220 |==> -220
10126:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):587:return Config.__M_NO == 0 && Config.COVERED(10124, 10125) ? 220 : Config.__M_NO == 10125 ? -220 : Config.__M_NO == 10124 ? 0 : 220; |==> <NO-OP>
10127:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):589:7812 |==> 0
10128:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):589:7812 |==> -7812
10129:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):589:return Config.__M_NO == 0 && Config.COVERED(10127, 10128) ? 7812 : Config.__M_NO == 10128 ? -7812 : Config.__M_NO == 10127 ? 0 : 7812; |==> <NO-OP>
10130:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):591:7820 |==> 0
10131:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):591:7820 |==> -7820
10132:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):591:return Config.__M_NO == 0 && Config.COVERED(10130, 10131) ? 7820 : Config.__M_NO == 10131 ? -7820 : Config.__M_NO == 10130 ? 0 : 7820; |==> <NO-OP>
10133:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):593:376 |==> 0
10134:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):593:376 |==> -376
10135:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):593:return Config.__M_NO == 0 && Config.COVERED(10133, 10134) ? 376 : Config.__M_NO == 10134 ? -376 : Config.__M_NO == 10133 ? 0 : 376; |==> <NO-OP>
10136:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):595:228 |==> 0
10137:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):595:228 |==> -228
10138:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):595:return Config.__M_NO == 0 && Config.COVERED(10136, 10137) ? 228 : Config.__M_NO == 10137 ? -228 : Config.__M_NO == 10136 ? 0 : 228; |==> <NO-OP>
10139:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):597:235 |==> 0
10140:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):597:235 |==> -235
10141:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):597:return Config.__M_NO == 0 && Config.COVERED(10139, 10140) ? 235 : Config.__M_NO == 10140 ? -235 : Config.__M_NO == 10139 ? 0 : 235; |==> <NO-OP>
10142:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):599:7719 |==> 0
10143:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):599:7719 |==> -7719
10144:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):599:return Config.__M_NO == 0 && Config.COVERED(10142, 10143) ? 7719 : Config.__M_NO == 10143 ? -7719 : Config.__M_NO == 10142 ? 0 : 7719; |==> <NO-OP>
10145:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):601:239 |==> 0
10146:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):601:239 |==> -239
10147:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):601:return Config.__M_NO == 0 && Config.COVERED(10145, 10146) ? 239 : Config.__M_NO == 10146 ? -239 : Config.__M_NO == 10145 ? 0 : 239; |==> <NO-OP>
10148:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):603:246 |==> 0
10149:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):603:246 |==> -246
10150:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):603:return Config.__M_NO == 0 && Config.COVERED(10148, 10149) ? 246 : Config.__M_NO == 10149 ? -246 : Config.__M_NO == 10148 ? 0 : 246; |==> <NO-OP>
10151:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):605:7831 |==> 0
10152:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):605:7831 |==> -7831
10153:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):605:return Config.__M_NO == 0 && Config.COVERED(10151, 10152) ? 7831 : Config.__M_NO == 10152 ? -7831 : Config.__M_NO == 10151 ? 0 : 7831; |==> <NO-OP>
10154:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):607:252 |==> 0
10155:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):607:252 |==> -252
10156:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):607:return Config.__M_NO == 0 && Config.COVERED(10154, 10155) ? 252 : Config.__M_NO == 10155 ? -252 : Config.__M_NO == 10154 ? 0 : 252; |==> <NO-OP>
10157:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):609:7813 |==> 0
10158:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):609:7813 |==> -7813
10159:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):609:return Config.__M_NO == 0 && Config.COVERED(10157, 10158) ? 7813 : Config.__M_NO == 10158 ? -7813 : Config.__M_NO == 10157 ? 0 : 7813; |==> <NO-OP>
10160:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):611:7821 |==> 0
10161:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):611:7821 |==> -7821
10162:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):611:return Config.__M_NO == 0 && Config.COVERED(10160, 10161) ? 7821 : Config.__M_NO == 10161 ? -7821 : Config.__M_NO == 10160 ? 0 : 7821; |==> <NO-OP>
10163:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):613:255 |==> 0
10164:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):613:255 |==> -255
10165:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):613:return Config.__M_NO == 0 && Config.COVERED(10163, 10164) ? 255 : Config.__M_NO == 10164 ? -255 : Config.__M_NO == 10163 ? 0 : 255; |==> <NO-OP>
10166:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):617:168 |==> 0
10167:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):617:168 |==> -168
10168:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):617:return Config.__M_NO == 0 && Config.COVERED(10166, 10167) ? 168 : Config.__M_NO == 10167 ? -168 : Config.__M_NO == 10166 ? 0 : 168; |==> <NO-OP>
10169:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):619:196 |==> 0
10170:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):619:196 |==> -196
10171:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):619:return Config.__M_NO == 0 && Config.COVERED(10169, 10170) ? 196 : Config.__M_NO == 10170 ? -196 : Config.__M_NO == 10169 ? 0 : 196; |==> <NO-OP>
10172:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):621:203 |==> 0
10173:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):621:203 |==> -203
10174:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):621:return Config.__M_NO == 0 && Config.COVERED(10172, 10173) ? 203 : Config.__M_NO == 10173 ? -203 : Config.__M_NO == 10172 ? 0 : 203; |==> <NO-OP>
10175:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):623:7718 |==> 0
10176:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):623:7718 |==> -7718
10177:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):623:return Config.__M_NO == 0 && Config.COVERED(10175, 10176) ? 7718 : Config.__M_NO == 10176 ? -7718 : Config.__M_NO == 10175 ? 0 : 7718; |==> <NO-OP>
10178:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):625:207 |==> 0
10179:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):625:207 |==> -207
10180:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):625:return Config.__M_NO == 0 && Config.COVERED(10178, 10179) ? 207 : Config.__M_NO == 10179 ? -207 : Config.__M_NO == 10178 ? 0 : 207; |==> <NO-OP>
10181:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):627:214 |==> 0
10182:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):627:214 |==> -214
10183:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):627:return Config.__M_NO == 0 && Config.COVERED(10181, 10182) ? 214 : Config.__M_NO == 10182 ? -214 : Config.__M_NO == 10181 ? 0 : 214; |==> <NO-OP>
10184:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):629:220 |==> 0
10185:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):629:220 |==> -220
10186:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):629:return Config.__M_NO == 0 && Config.COVERED(10184, 10185) ? 220 : Config.__M_NO == 10185 ? -220 : Config.__M_NO == 10184 ? 0 : 220; |==> <NO-OP>
10187:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):631:7812 |==> 0
10188:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):631:7812 |==> -7812
10189:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):631:return Config.__M_NO == 0 && Config.COVERED(10187, 10188) ? 7812 : Config.__M_NO == 10188 ? -7812 : Config.__M_NO == 10187 ? 0 : 7812; |==> <NO-OP>
10190:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):633:7820 |==> 0
10191:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):633:7820 |==> -7820
10192:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):633:return Config.__M_NO == 0 && Config.COVERED(10190, 10191) ? 7820 : Config.__M_NO == 10191 ? -7820 : Config.__M_NO == 10190 ? 0 : 7820; |==> <NO-OP>
10193:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):635:376 |==> 0
10194:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):635:376 |==> -376
10195:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):635:return Config.__M_NO == 0 && Config.COVERED(10193, 10194) ? 376 : Config.__M_NO == 10194 ? -376 : Config.__M_NO == 10193 ? 0 : 376; |==> <NO-OP>
10196:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):637:228 |==> 0
10197:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):637:228 |==> -228
10198:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):637:return Config.__M_NO == 0 && Config.COVERED(10196, 10197) ? 228 : Config.__M_NO == 10197 ? -228 : Config.__M_NO == 10196 ? 0 : 228; |==> <NO-OP>
10199:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):639:235 |==> 0
10200:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):639:235 |==> -235
10201:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):639:return Config.__M_NO == 0 && Config.COVERED(10199, 10200) ? 235 : Config.__M_NO == 10200 ? -235 : Config.__M_NO == 10199 ? 0 : 235; |==> <NO-OP>
10202:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):641:7719 |==> 0
10203:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):641:7719 |==> -7719
10204:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):641:return Config.__M_NO == 0 && Config.COVERED(10202, 10203) ? 7719 : Config.__M_NO == 10203 ? -7719 : Config.__M_NO == 10202 ? 0 : 7719; |==> <NO-OP>
10205:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):643:239 |==> 0
10206:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):643:239 |==> -239
10207:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):643:return Config.__M_NO == 0 && Config.COVERED(10205, 10206) ? 239 : Config.__M_NO == 10206 ? -239 : Config.__M_NO == 10205 ? 0 : 239; |==> <NO-OP>
10208:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):645:246 |==> 0
10209:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):645:246 |==> -246
10210:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):645:return Config.__M_NO == 0 && Config.COVERED(10208, 10209) ? 246 : Config.__M_NO == 10209 ? -246 : Config.__M_NO == 10208 ? 0 : 246; |==> <NO-OP>
10211:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):647:7831 |==> 0
10212:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):647:7831 |==> -7831
10213:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):647:return Config.__M_NO == 0 && Config.COVERED(10211, 10212) ? 7831 : Config.__M_NO == 10212 ? -7831 : Config.__M_NO == 10211 ? 0 : 7831; |==> <NO-OP>
10214:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):649:252 |==> 0
10215:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):649:252 |==> -252
10216:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):649:return Config.__M_NO == 0 && Config.COVERED(10214, 10215) ? 252 : Config.__M_NO == 10215 ? -252 : Config.__M_NO == 10214 ? 0 : 252; |==> <NO-OP>
10217:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):651:7813 |==> 0
10218:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):651:7813 |==> -7813
10219:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):651:return Config.__M_NO == 0 && Config.COVERED(10217, 10218) ? 7813 : Config.__M_NO == 10218 ? -7813 : Config.__M_NO == 10217 ? 0 : 7813; |==> <NO-OP>
10220:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):653:7821 |==> 0
10221:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):653:7821 |==> -7821
10222:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):653:return Config.__M_NO == 0 && Config.COVERED(10220, 10221) ? 7821 : Config.__M_NO == 10221 ? -7821 : Config.__M_NO == 10220 ? 0 : 7821; |==> <NO-OP>
10223:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):655:255 |==> 0
10224:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):655:255 |==> -255
10225:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):655:return Config.__M_NO == 0 && Config.COVERED(10223, 10224) ? 255 : Config.__M_NO == 10224 ? -255 : Config.__M_NO == 10223 ? 0 : 255; |==> <NO-OP>
10226:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):659:197 |==> 0
10227:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):659:197 |==> -197
10228:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):659:return Config.__M_NO == 0 && Config.COVERED(10226, 10227) ? 197 : Config.__M_NO == 10227 ? -197 : Config.__M_NO == 10226 ? 0 : 197; |==> <NO-OP>
10229:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):661:366 |==> 0
10230:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):661:366 |==> -366
10231:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):661:return Config.__M_NO == 0 && Config.COVERED(10229, 10230) ? 366 : Config.__M_NO == 10230 ? -366 : Config.__M_NO == 10229 ? 0 : 366; |==> <NO-OP>
10232:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):663:229 |==> 0
10233:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):663:229 |==> -229
10234:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):663:return Config.__M_NO == 0 && Config.COVERED(10232, 10233) ? 229 : Config.__M_NO == 10233 ? -229 : Config.__M_NO == 10232 ? 0 : 229; |==> <NO-OP>
10235:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):665:367 |==> 0
10236:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):665:367 |==> -367
10237:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):665:return Config.__M_NO == 0 && Config.COVERED(10235, 10236) ? 367 : Config.__M_NO == 10236 ? -367 : Config.__M_NO == 10235 ? 0 : 367; |==> <NO-OP>
10238:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):667:7832 |==> 0
10239:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):667:7832 |==> -7832
10240:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):667:return Config.__M_NO == 0 && Config.COVERED(10238, 10239) ? 7832 : Config.__M_NO == 10239 ? -7832 : Config.__M_NO == 10238 ? 0 : 7832; |==> <NO-OP>
10241:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):669:7833 |==> 0
10242:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):669:7833 |==> -7833
10243:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):669:return Config.__M_NO == 0 && Config.COVERED(10241, 10242) ? 7833 : Config.__M_NO == 10242 ? -7833 : Config.__M_NO == 10241 ? 0 : 7833; |==> <NO-OP>
10244:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):677:336 |==> 0
10245:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):677:336 |==> -336
10246:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):677:return Config.__M_NO == 0 && Config.COVERED(10244, 10245) ? 336 : Config.__M_NO == 10245 ? -336 : Config.__M_NO == 10244 ? 0 : 336; |==> <NO-OP>
10247:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):679:368 |==> 0
10248:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):679:368 |==> -368
10249:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):679:return Config.__M_NO == 0 && Config.COVERED(10247, 10248) ? 368 : Config.__M_NO == 10248 ? -368 : Config.__M_NO == 10247 ? 0 : 368; |==> <NO-OP>
10250:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):681:337 |==> 0
10251:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):681:337 |==> -337
10252:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):681:return Config.__M_NO == 0 && Config.COVERED(10250, 10251) ? 337 : Config.__M_NO == 10251 ? -337 : Config.__M_NO == 10250 ? 0 : 337; |==> <NO-OP>
10253:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):683:369 |==> 0
10254:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):683:369 |==> -369
10255:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):683:return Config.__M_NO == 0 && Config.COVERED(10253, 10254) ? 369 : Config.__M_NO == 10254 ? -369 : Config.__M_NO == 10253 ? 0 : 369; |==> <NO-OP>
10256:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):687:416 |==> 0
10257:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):687:416 |==> -416
10258:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):687:return Config.__M_NO == 0 && Config.COVERED(10256, 10257) ? 416 : Config.__M_NO == 10257 ? -416 : Config.__M_NO == 10256 ? 0 : 416; |==> <NO-OP>
10259:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):689:431 |==> 0
10260:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):689:431 |==> -431
10261:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):689:return Config.__M_NO == 0 && Config.COVERED(10259, 10260) ? 431 : Config.__M_NO == 10260 ? -431 : Config.__M_NO == 10259 ? 0 : 431; |==> <NO-OP>
10262:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):691:417 |==> 0
10263:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):691:417 |==> -417
10264:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):691:return Config.__M_NO == 0 && Config.COVERED(10262, 10263) ? 417 : Config.__M_NO == 10263 ? -417 : Config.__M_NO == 10262 ? 0 : 417; |==> <NO-OP>
10265:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):693:432 |==> 0
10266:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):693:432 |==> -432
10267:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):693:return Config.__M_NO == 0 && Config.COVERED(10265, 10266) ? 432 : Config.__M_NO == 10266 ? -432 : Config.__M_NO == 10265 ? 0 : 432; |==> <NO-OP>
10268:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):697:461 |==> 0
10269:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):697:461 |==> -461
10270:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):697:return Config.__M_NO == 0 && Config.COVERED(10268, 10269) ? 461 : Config.__M_NO == 10269 ? -461 : Config.__M_NO == 10268 ? 0 : 461; |==> <NO-OP>
10271:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):699:268 |==> 0
10272:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):699:268 |==> -268
10273:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):699:return Config.__M_NO == 0 && Config.COVERED(10271, 10272) ? 268 : Config.__M_NO == 10272 ? -268 : Config.__M_NO == 10271 ? 0 : 268; |==> <NO-OP>
10274:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):701:270 |==> 0
10275:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):701:270 |==> -270
10276:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):701:return Config.__M_NO == 0 && Config.COVERED(10274, 10275) ? 270 : Config.__M_NO == 10275 ? -270 : Config.__M_NO == 10274 ? 0 : 270; |==> <NO-OP>
10277:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):703:282 |==> 0
10278:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):703:282 |==> -282
10279:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):703:return Config.__M_NO == 0 && Config.COVERED(10277, 10278) ? 282 : Config.__M_NO == 10278 ? -282 : Config.__M_NO == 10277 ? 0 : 282; |==> <NO-OP>
10280:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):705:486 |==> 0
10281:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):705:486 |==> -486
10282:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):705:return Config.__M_NO == 0 && Config.COVERED(10280, 10281) ? 486 : Config.__M_NO == 10281 ? -486 : Config.__M_NO == 10280 ? 0 : 486; |==> <NO-OP>
10283:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):707:463 |==> 0
10284:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):707:463 |==> -463
10285:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):707:return Config.__M_NO == 0 && Config.COVERED(10283, 10284) ? 463 : Config.__M_NO == 10284 ? -463 : Config.__M_NO == 10283 ? 0 : 463; |==> <NO-OP>
10286:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):709:488 |==> 0
10287:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):709:488 |==> -488
10288:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):709:return Config.__M_NO == 0 && Config.COVERED(10286, 10287) ? 488 : Config.__M_NO == 10287 ? -488 : Config.__M_NO == 10286 ? 0 : 488; |==> <NO-OP>
10289:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):711:317 |==> 0
10290:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):711:317 |==> -317
10291:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):711:return Config.__M_NO == 0 && Config.COVERED(10289, 10290) ? 317 : Config.__M_NO == 10290 ? -317 : Config.__M_NO == 10289 ? 0 : 317; |==> <NO-OP>
10292:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):713:327 |==> 0
10293:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):713:327 |==> -327
10294:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):713:return Config.__M_NO == 0 && Config.COVERED(10292, 10293) ? 327 : Config.__M_NO == 10293 ? -327 : Config.__M_NO == 10292 ? 0 : 327; |==> <NO-OP>
10295:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):715:465 |==> 0
10296:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):715:465 |==> -465
10297:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):715:return Config.__M_NO == 0 && Config.COVERED(10295, 10296) ? 465 : Config.__M_NO == 10296 ? -465 : Config.__M_NO == 10295 ? 0 : 465; |==> <NO-OP>
10298:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):717:344 |==> 0
10299:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):717:344 |==> -344
10300:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):717:return Config.__M_NO == 0 && Config.COVERED(10298, 10299) ? 344 : Config.__M_NO == 10299 ? -344 : Config.__M_NO == 10298 ? 0 : 344; |==> <NO-OP>
10301:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):719:352 |==> 0
10302:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):719:352 |==> -352
10303:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):719:return Config.__M_NO == 0 && Config.COVERED(10301, 10302) ? 352 : Config.__M_NO == 10302 ? -352 : Config.__M_NO == 10301 ? 0 : 352; |==> <NO-OP>
10304:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):721:356 |==> 0
10305:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):721:356 |==> -356
10306:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):721:return Config.__M_NO == 0 && Config.COVERED(10304, 10305) ? 356 : Config.__M_NO == 10305 ? -356 : Config.__M_NO == 10304 ? 0 : 356; |==> <NO-OP>
10307:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):723:467 |==> 0
10308:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):723:467 |==> -467
10309:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):723:return Config.__M_NO == 0 && Config.COVERED(10307, 10308) ? 467 : Config.__M_NO == 10308 ? -467 : Config.__M_NO == 10307 ? 0 : 467; |==> <NO-OP>
10310:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):725:381 |==> 0
10311:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):725:381 |==> -381
10312:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):725:return Config.__M_NO == 0 && Config.COVERED(10310, 10311) ? 381 : Config.__M_NO == 10311 ? -381 : Config.__M_NO == 10310 ? 0 : 381; |==> <NO-OP>
10313:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):727:462 |==> 0
10314:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):727:462 |==> -462
10315:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):727:return Config.__M_NO == 0 && Config.COVERED(10313, 10314) ? 462 : Config.__M_NO == 10314 ? -462 : Config.__M_NO == 10313 ? 0 : 462; |==> <NO-OP>
10316:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):729:269 |==> 0
10317:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):729:269 |==> -269
10318:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):729:return Config.__M_NO == 0 && Config.COVERED(10316, 10317) ? 269 : Config.__M_NO == 10317 ? -269 : Config.__M_NO == 10316 ? 0 : 269; |==> <NO-OP>
10319:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):731:271 |==> 0
10320:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):731:271 |==> -271
10321:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):731:return Config.__M_NO == 0 && Config.COVERED(10319, 10320) ? 271 : Config.__M_NO == 10320 ? -271 : Config.__M_NO == 10319 ? 0 : 271; |==> <NO-OP>
10322:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):733:283 |==> 0
10323:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):733:283 |==> -283
10324:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):733:return Config.__M_NO == 0 && Config.COVERED(10322, 10323) ? 283 : Config.__M_NO == 10323 ? -283 : Config.__M_NO == 10322 ? 0 : 283; |==> <NO-OP>
10325:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):735:487 |==> 0
10326:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):735:487 |==> -487
10327:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):735:return Config.__M_NO == 0 && Config.COVERED(10325, 10326) ? 487 : Config.__M_NO == 10326 ? -487 : Config.__M_NO == 10325 ? 0 : 487; |==> <NO-OP>
10328:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):737:464 |==> 0
10329:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):737:464 |==> -464
10330:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):737:return Config.__M_NO == 0 && Config.COVERED(10328, 10329) ? 464 : Config.__M_NO == 10329 ? -464 : Config.__M_NO == 10328 ? 0 : 464; |==> <NO-OP>
10331:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):739:496 |==> 0
10332:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):739:496 |==> -496
10333:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):739:return Config.__M_NO == 0 && Config.COVERED(10331, 10332) ? 496 : Config.__M_NO == 10332 ? -496 : Config.__M_NO == 10331 ? 0 : 496; |==> <NO-OP>
10334:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):741:489 |==> 0
10335:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):741:489 |==> -489
10336:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):741:return Config.__M_NO == 0 && Config.COVERED(10334, 10335) ? 489 : Config.__M_NO == 10335 ? -489 : Config.__M_NO == 10334 ? 0 : 489; |==> <NO-OP>
10337:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):743:318 |==> 0
10338:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):743:318 |==> -318
10339:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):743:return Config.__M_NO == 0 && Config.COVERED(10337, 10338) ? 318 : Config.__M_NO == 10338 ? -318 : Config.__M_NO == 10337 ? 0 : 318; |==> <NO-OP>
10340:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):745:328 |==> 0
10341:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):745:328 |==> -328
10342:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):745:return Config.__M_NO == 0 && Config.COVERED(10340, 10341) ? 328 : Config.__M_NO == 10341 ? -328 : Config.__M_NO == 10340 ? 0 : 328; |==> <NO-OP>
10343:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):747:466 |==> 0
10344:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):747:466 |==> -466
10345:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):747:return Config.__M_NO == 0 && Config.COVERED(10343, 10344) ? 466 : Config.__M_NO == 10344 ? -466 : Config.__M_NO == 10343 ? 0 : 466; |==> <NO-OP>
10346:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):749:345 |==> 0
10347:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):749:345 |==> -345
10348:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):749:return Config.__M_NO == 0 && Config.COVERED(10346, 10347) ? 345 : Config.__M_NO == 10347 ? -345 : Config.__M_NO == 10346 ? 0 : 345; |==> <NO-OP>
10349:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):751:353 |==> 0
10350:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):751:353 |==> -353
10351:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):751:return Config.__M_NO == 0 && Config.COVERED(10349, 10350) ? 353 : Config.__M_NO == 10350 ? -353 : Config.__M_NO == 10349 ? 0 : 353; |==> <NO-OP>
10352:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):753:357 |==> 0
10353:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):753:357 |==> -357
10354:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):753:return Config.__M_NO == 0 && Config.COVERED(10352, 10353) ? 357 : Config.__M_NO == 10353 ? -357 : Config.__M_NO == 10352 ? 0 : 357; |==> <NO-OP>
10355:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):755:468 |==> 0
10356:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):755:468 |==> -468
10357:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):755:return Config.__M_NO == 0 && Config.COVERED(10355, 10356) ? 468 : Config.__M_NO == 10356 ? -468 : Config.__M_NO == 10355 ? 0 : 468; |==> <NO-OP>
10358:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):757:382 |==> 0
10359:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):757:382 |==> -382
10360:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):757:return Config.__M_NO == 0 && Config.COVERED(10358, 10359) ? 382 : Config.__M_NO == 10359 ? -382 : Config.__M_NO == 10358 ? 0 : 382; |==> <NO-OP>
10361:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):761:184 |==> 0
10362:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):761:184 |==> -184
10363:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):761:return Config.__M_NO == 0 && Config.COVERED(10361, 10362) ? 184 : Config.__M_NO == 10362 ? -184 : Config.__M_NO == 10361 ? 0 : 184; |==> <NO-OP>
10364:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):763:199 |==> 0
10365:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):763:199 |==> -199
10366:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):763:return Config.__M_NO == 0 && Config.COVERED(10364, 10365) ? 199 : Config.__M_NO == 10365 ? -199 : Config.__M_NO == 10364 ? 0 : 199; |==> <NO-OP>
10367:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):765:7696 |==> 0
10368:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):765:7696 |==> -7696
10369:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):765:return Config.__M_NO == 0 && Config.COVERED(10367, 10368) ? 7696 : Config.__M_NO == 10368 ? -7696 : Config.__M_NO == 10367 ? 0 : 7696; |==> <NO-OP>
10370:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):767:290 |==> 0
10371:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):767:290 |==> -290
10372:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):767:return Config.__M_NO == 0 && Config.COVERED(10370, 10371) ? 290 : Config.__M_NO == 10371 ? -290 : Config.__M_NO == 10370 ? 0 : 290; |==> <NO-OP>
10373:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):769:7720 |==> 0
10374:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):769:7720 |==> -7720
10375:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):769:return Config.__M_NO == 0 && Config.COVERED(10373, 10374) ? 7720 : Config.__M_NO == 10374 ? -7720 : Config.__M_NO == 10373 ? 0 : 7720; |==> <NO-OP>
10376:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):771:310 |==> 0
10377:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):771:310 |==> -310
10378:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):771:return Config.__M_NO == 0 && Config.COVERED(10376, 10377) ? 310 : Config.__M_NO == 10377 ? -310 : Config.__M_NO == 10376 ? 0 : 310; |==> <NO-OP>
10379:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):773:315 |==> 0
10380:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):773:315 |==> -315
10381:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):773:return Config.__M_NO == 0 && Config.COVERED(10379, 10380) ? 315 : Config.__M_NO == 10380 ? -315 : Config.__M_NO == 10379 ? 0 : 315; |==> <NO-OP>
10382:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):775:325 |==> 0
10383:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):775:325 |==> -325
10384:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):775:return Config.__M_NO == 0 && Config.COVERED(10382, 10383) ? 325 : Config.__M_NO == 10383 ? -325 : Config.__M_NO == 10382 ? 0 : 325; |==> <NO-OP>
10385:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):777:342 |==> 0
10386:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):777:342 |==> -342
10387:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):777:return Config.__M_NO == 0 && Config.COVERED(10385, 10386) ? 342 : Config.__M_NO == 10386 ? -342 : Config.__M_NO == 10385 ? 0 : 342; |==> <NO-OP>
10388:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):779:350 |==> 0
10389:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):779:350 |==> -350
10390:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):779:return Config.__M_NO == 0 && Config.COVERED(10388, 10389) ? 350 : Config.__M_NO == 10389 ? -350 : Config.__M_NO == 10388 ? 0 : 350; |==> <NO-OP>
10391:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):781:354 |==> 0
10392:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):781:354 |==> -354
10393:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):781:return Config.__M_NO == 0 && Config.COVERED(10391, 10392) ? 354 : Config.__M_NO == 10392 ? -354 : Config.__M_NO == 10391 ? 0 : 354; |==> <NO-OP>
10394:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):783:231 |==> 0
10395:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):783:231 |==> -231
10396:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):783:return Config.__M_NO == 0 && Config.COVERED(10394, 10395) ? 231 : Config.__M_NO == 10395 ? -231 : Config.__M_NO == 10394 ? 0 : 231; |==> <NO-OP>
10397:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):785:7697 |==> 0
10398:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):785:7697 |==> -7697
10399:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):785:return Config.__M_NO == 0 && Config.COVERED(10397, 10398) ? 7697 : Config.__M_NO == 10398 ? -7697 : Config.__M_NO == 10397 ? 0 : 7697; |==> <NO-OP>
10400:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):787:291 |==> 0
10401:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):787:291 |==> -291
10402:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):787:return Config.__M_NO == 0 && Config.COVERED(10400, 10401) ? 291 : Config.__M_NO == 10401 ? -291 : Config.__M_NO == 10400 ? 0 : 291; |==> <NO-OP>
10403:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):789:7721 |==> 0
10404:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):789:7721 |==> -7721
10405:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):789:return Config.__M_NO == 0 && Config.COVERED(10403, 10404) ? 7721 : Config.__M_NO == 10404 ? -7721 : Config.__M_NO == 10403 ? 0 : 7721; |==> <NO-OP>
10406:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):791:311 |==> 0
10407:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):791:311 |==> -311
10408:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):791:return Config.__M_NO == 0 && Config.COVERED(10406, 10407) ? 311 : Config.__M_NO == 10407 ? -311 : Config.__M_NO == 10406 ? 0 : 311; |==> <NO-OP>
10409:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):793:316 |==> 0
10410:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):793:316 |==> -316
10411:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):793:return Config.__M_NO == 0 && Config.COVERED(10409, 10410) ? 316 : Config.__M_NO == 10410 ? -316 : Config.__M_NO == 10409 ? 0 : 316; |==> <NO-OP>
10412:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):795:326 |==> 0
10413:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):795:326 |==> -326
10414:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):795:return Config.__M_NO == 0 && Config.COVERED(10412, 10413) ? 326 : Config.__M_NO == 10413 ? -326 : Config.__M_NO == 10412 ? 0 : 326; |==> <NO-OP>
10415:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):797:343 |==> 0
10416:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):797:343 |==> -343
10417:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):797:return Config.__M_NO == 0 && Config.COVERED(10415, 10416) ? 343 : Config.__M_NO == 10416 ? -343 : Config.__M_NO == 10415 ? 0 : 343; |==> <NO-OP>
10418:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):799:351 |==> 0
10419:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):799:351 |==> -351
10420:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):799:return Config.__M_NO == 0 && Config.COVERED(10418, 10419) ? 351 : Config.__M_NO == 10419 ? -351 : Config.__M_NO == 10418 ? 0 : 351; |==> <NO-OP>
10421:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):801:355 |==> 0
10422:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):801:355 |==> -355
10423:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):801:return Config.__M_NO == 0 && Config.COVERED(10421, 10422) ? 355 : Config.__M_NO == 10422 ? -355 : Config.__M_NO == 10421 ? 0 : 355; |==> <NO-OP>
10424:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):809:731 |==> 0
10425:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):809:731 |==> -731
10426:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):809:return Config.__M_NO == 0 && Config.COVERED(10424, 10425) ? 731 : Config.__M_NO == 10425 ? -731 : Config.__M_NO == 10424 ? 0 : 731; |==> <NO-OP>
10427:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):811:260 |==> 0
10428:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):811:260 |==> -260
10429:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):811:return Config.__M_NO == 0 && Config.COVERED(10427, 10428) ? 260 : Config.__M_NO == 10428 ? -260 : Config.__M_NO == 10427 ? 0 : 260; |==> <NO-OP>
10430:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):813:280 |==> 0
10431:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):813:280 |==> -280
10432:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):813:return Config.__M_NO == 0 && Config.COVERED(10430, 10431) ? 280 : Config.__M_NO == 10431 ? -280 : Config.__M_NO == 10430 ? 0 : 280; |==> <NO-OP>
10433:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):815:302 |==> 0
10434:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):815:302 |==> -302
10435:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):815:return Config.__M_NO == 0 && Config.COVERED(10433, 10434) ? 302 : Config.__M_NO == 10434 ? -302 : Config.__M_NO == 10433 ? 0 : 302; |==> <NO-OP>
10436:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):817:490 |==> 0
10437:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):817:490 |==> -490
10438:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):817:return Config.__M_NO == 0 && Config.COVERED(10436, 10437) ? 490 : Config.__M_NO == 10437 ? -490 : Config.__M_NO == 10436 ? 0 : 490; |==> <NO-OP>
10439:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):819:370 |==> 0
10440:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):819:370 |==> -370
10441:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):819:return Config.__M_NO == 0 && Config.COVERED(10439, 10440) ? 370 : Config.__M_NO == 10440 ? -370 : Config.__M_NO == 10439 ? 0 : 370; |==> <NO-OP>
10442:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):821:261 |==> 0
10443:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):821:261 |==> -261
10444:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):821:return Config.__M_NO == 0 && Config.COVERED(10442, 10443) ? 261 : Config.__M_NO == 10443 ? -261 : Config.__M_NO == 10442 ? 0 : 261; |==> <NO-OP>
10445:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):823:281 |==> 0
10446:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):823:281 |==> -281
10447:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):823:return Config.__M_NO == 0 && Config.COVERED(10445, 10446) ? 281 : Config.__M_NO == 10446 ? -281 : Config.__M_NO == 10445 ? 0 : 281; |==> <NO-OP>
10448:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):825:303 |==> 0
10449:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):825:303 |==> -303
10450:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):825:return Config.__M_NO == 0 && Config.COVERED(10448, 10449) ? 303 : Config.__M_NO == 10449 ? -303 : Config.__M_NO == 10448 ? 0 : 303; |==> <NO-OP>
10451:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):827:491 |==> 0
10452:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):827:491 |==> -491
10453:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):827:return Config.__M_NO == 0 && Config.COVERED(10451, 10452) ? 491 : Config.__M_NO == 10452 ? -491 : Config.__M_NO == 10451 ? 0 : 491; |==> <NO-OP>
10454:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):829:371 |==> 0
10455:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):829:371 |==> -371
10456:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):829:return Config.__M_NO == 0 && Config.COVERED(10454, 10455) ? 371 : Config.__M_NO == 10455 ? -371 : Config.__M_NO == 10454 ? 0 : 371; |==> <NO-OP>
10457:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):833:7680 |==> 0
10458:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):833:7680 |==> -7680
10459:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):833:return Config.__M_NO == 0 && Config.COVERED(10457, 10458) ? 7680 : Config.__M_NO == 10458 ? -7680 : Config.__M_NO == 10457 ? 0 : 7680; |==> <NO-OP>
10460:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):835:7681 |==> 0
10461:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):835:7681 |==> -7681
10462:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):835:return Config.__M_NO == 0 && Config.COVERED(10460, 10461) ? 7681 : Config.__M_NO == 10461 ? -7681 : Config.__M_NO == 10460 ? 0 : 7681; |==> <NO-OP>
10463:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):839:7722 |==> 0
10464:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):839:7722 |==> -7722
10465:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):839:return Config.__M_NO == 0 && Config.COVERED(10463, 10464) ? 7722 : Config.__M_NO == 10464 ? -7722 : Config.__M_NO == 10463 ? 0 : 7722; |==> <NO-OP>
10466:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):841:7723 |==> 0
10467:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):841:7723 |==> -7723
10468:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):841:return Config.__M_NO == 0 && Config.COVERED(10466, 10467) ? 7723 : Config.__M_NO == 10467 ? -7723 : Config.__M_NO == 10466 ? 0 : 7723; |==> <NO-OP>
10469:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):845:7840 |==> 0
10470:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):845:7840 |==> -7840
10471:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):845:return Config.__M_NO == 0 && Config.COVERED(10469, 10470) ? 7840 : Config.__M_NO == 10470 ? -7840 : Config.__M_NO == 10469 ? 0 : 7840; |==> <NO-OP>
10472:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):847:7684 |==> 0
10473:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):847:7684 |==> -7684
10474:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):847:return Config.__M_NO == 0 && Config.COVERED(10472, 10473) ? 7684 : Config.__M_NO == 10473 ? -7684 : Config.__M_NO == 10472 ? 0 : 7684; |==> <NO-OP>
10475:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):849:7692 |==> 0
10476:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):849:7692 |==> -7692
10477:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):849:return Config.__M_NO == 0 && Config.COVERED(10475, 10476) ? 7692 : Config.__M_NO == 10476 ? -7692 : Config.__M_NO == 10475 ? 0 : 7692; |==> <NO-OP>
10478:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):851:7864 |==> 0
10479:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):851:7864 |==> -7864
10480:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):851:return Config.__M_NO == 0 && Config.COVERED(10478, 10479) ? 7864 : Config.__M_NO == 10479 ? -7864 : Config.__M_NO == 10478 ? 0 : 7864; |==> <NO-OP>
10481:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):853:7716 |==> 0
10482:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):853:7716 |==> -7716
10483:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):853:return Config.__M_NO == 0 && Config.COVERED(10481, 10482) ? 7716 : Config.__M_NO == 10482 ? -7716 : Config.__M_NO == 10481 ? 0 : 7716; |==> <NO-OP>
10484:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):855:7882 |==> 0
10485:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):855:7882 |==> -7882
10486:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):855:return Config.__M_NO == 0 && Config.COVERED(10484, 10485) ? 7882 : Config.__M_NO == 10485 ? -7882 : Config.__M_NO == 10484 ? 0 : 7882; |==> <NO-OP>
10487:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):857:7730 |==> 0
10488:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):857:7730 |==> -7730
10489:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):857:return Config.__M_NO == 0 && Config.COVERED(10487, 10488) ? 7730 : Config.__M_NO == 10488 ? -7730 : Config.__M_NO == 10487 ? 0 : 7730; |==> <NO-OP>
10490:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):859:7734 |==> 0
10491:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):859:7734 |==> -7734
10492:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):859:return Config.__M_NO == 0 && Config.COVERED(10490, 10491) ? 7734 : Config.__M_NO == 10491 ? -7734 : Config.__M_NO == 10490 ? 0 : 7734; |==> <NO-OP>
10493:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):861:7746 |==> 0
10494:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):861:7746 |==> -7746
10495:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):861:return Config.__M_NO == 0 && Config.COVERED(10493, 10494) ? 7746 : Config.__M_NO == 10494 ? -7746 : Config.__M_NO == 10493 ? 0 : 7746; |==> <NO-OP>
10496:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):863:7750 |==> 0
10497:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):863:7750 |==> -7750
10498:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):863:return Config.__M_NO == 0 && Config.COVERED(10496, 10497) ? 7750 : Config.__M_NO == 10497 ? -7750 : Config.__M_NO == 10496 ? 0 : 7750; |==> <NO-OP>
10499:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):865:7884 |==> 0
10500:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):865:7884 |==> -7884
10501:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):865:return Config.__M_NO == 0 && Config.COVERED(10499, 10500) ? 7884 : Config.__M_NO == 10500 ? -7884 : Config.__M_NO == 10499 ? 0 : 7884; |==> <NO-OP>
10502:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):867:7770 |==> 0
10503:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):867:7770 |==> -7770
10504:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):867:return Config.__M_NO == 0 && Config.COVERED(10502, 10503) ? 7770 : Config.__M_NO == 10503 ? -7770 : Config.__M_NO == 10502 ? 0 : 7770; |==> <NO-OP>
10505:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):869:7778 |==> 0
10506:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):869:7778 |==> -7778
10507:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):869:return Config.__M_NO == 0 && Config.COVERED(10505, 10506) ? 7778 : Config.__M_NO == 10506 ? -7778 : Config.__M_NO == 10505 ? 0 : 7778; |==> <NO-OP>
10508:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):871:7788 |==> 0
10509:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):871:7788 |==> -7788
10510:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):871:return Config.__M_NO == 0 && Config.COVERED(10508, 10509) ? 7788 : Config.__M_NO == 10509 ? -7788 : Config.__M_NO == 10508 ? 0 : 7788; |==> <NO-OP>
10511:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):873:7908 |==> 0
10512:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):873:7908 |==> -7908
10513:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):873:return Config.__M_NO == 0 && Config.COVERED(10511, 10512) ? 7908 : Config.__M_NO == 10512 ? -7908 : Config.__M_NO == 10511 ? 0 : 7908; |==> <NO-OP>
10514:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):875:7806 |==> 0
10515:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):875:7806 |==> -7806
10516:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):875:return Config.__M_NO == 0 && Config.COVERED(10514, 10515) ? 7806 : Config.__M_NO == 10515 ? -7806 : Config.__M_NO == 10514 ? 0 : 7806; |==> <NO-OP>
10517:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):877:7816 |==> 0
10518:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):877:7816 |==> -7816
10519:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):877:return Config.__M_NO == 0 && Config.COVERED(10517, 10518) ? 7816 : Config.__M_NO == 10518 ? -7816 : Config.__M_NO == 10517 ? 0 : 7816; |==> <NO-OP>
10520:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):879:7924 |==> 0
10521:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):879:7924 |==> -7924
10522:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):879:return Config.__M_NO == 0 && Config.COVERED(10520, 10521) ? 7924 : Config.__M_NO == 10521 ? -7924 : Config.__M_NO == 10520 ? 0 : 7924; |==> <NO-OP>
10523:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):881:7826 |==> 0
10524:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):881:7826 |==> -7826
10525:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):881:return Config.__M_NO == 0 && Config.COVERED(10523, 10524) ? 7826 : Config.__M_NO == 10524 ? -7826 : Config.__M_NO == 10523 ? 0 : 7826; |==> <NO-OP>
10526:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):883:7841 |==> 0
10527:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):883:7841 |==> -7841
10528:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):883:return Config.__M_NO == 0 && Config.COVERED(10526, 10527) ? 7841 : Config.__M_NO == 10527 ? -7841 : Config.__M_NO == 10526 ? 0 : 7841; |==> <NO-OP>
10529:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):885:7685 |==> 0
10530:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):885:7685 |==> -7685
10531:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):885:return Config.__M_NO == 0 && Config.COVERED(10529, 10530) ? 7685 : Config.__M_NO == 10530 ? -7685 : Config.__M_NO == 10529 ? 0 : 7685; |==> <NO-OP>
10532:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):887:7693 |==> 0
10533:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):887:7693 |==> -7693
10534:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):887:return Config.__M_NO == 0 && Config.COVERED(10532, 10533) ? 7693 : Config.__M_NO == 10533 ? -7693 : Config.__M_NO == 10532 ? 0 : 7693; |==> <NO-OP>
10535:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):889:7865 |==> 0
10536:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):889:7865 |==> -7865
10537:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):889:return Config.__M_NO == 0 && Config.COVERED(10535, 10536) ? 7865 : Config.__M_NO == 10536 ? -7865 : Config.__M_NO == 10535 ? 0 : 7865; |==> <NO-OP>
10538:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):891:7717 |==> 0
10539:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):891:7717 |==> -7717
10540:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):891:return Config.__M_NO == 0 && Config.COVERED(10538, 10539) ? 7717 : Config.__M_NO == 10539 ? -7717 : Config.__M_NO == 10538 ? 0 : 7717; |==> <NO-OP>
10541:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):893:7883 |==> 0
10542:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):893:7883 |==> -7883
10543:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):893:return Config.__M_NO == 0 && Config.COVERED(10541, 10542) ? 7883 : Config.__M_NO == 10542 ? -7883 : Config.__M_NO == 10541 ? 0 : 7883; |==> <NO-OP>
10544:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):895:7731 |==> 0
10545:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):895:7731 |==> -7731
10546:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):895:return Config.__M_NO == 0 && Config.COVERED(10544, 10545) ? 7731 : Config.__M_NO == 10545 ? -7731 : Config.__M_NO == 10544 ? 0 : 7731; |==> <NO-OP>
10547:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):897:7735 |==> 0
10548:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):897:7735 |==> -7735
10549:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):897:return Config.__M_NO == 0 && Config.COVERED(10547, 10548) ? 7735 : Config.__M_NO == 10548 ? -7735 : Config.__M_NO == 10547 ? 0 : 7735; |==> <NO-OP>
10550:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):899:7747 |==> 0
10551:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):899:7747 |==> -7747
10552:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):899:return Config.__M_NO == 0 && Config.COVERED(10550, 10551) ? 7747 : Config.__M_NO == 10551 ? -7747 : Config.__M_NO == 10550 ? 0 : 7747; |==> <NO-OP>
10553:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):901:7751 |==> 0
10554:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):901:7751 |==> -7751
10555:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):901:return Config.__M_NO == 0 && Config.COVERED(10553, 10554) ? 7751 : Config.__M_NO == 10554 ? -7751 : Config.__M_NO == 10553 ? 0 : 7751; |==> <NO-OP>
10556:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):903:7885 |==> 0
10557:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):903:7885 |==> -7885
10558:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):903:return Config.__M_NO == 0 && Config.COVERED(10556, 10557) ? 7885 : Config.__M_NO == 10557 ? -7885 : Config.__M_NO == 10556 ? 0 : 7885; |==> <NO-OP>
10559:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):905:7771 |==> 0
10560:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):905:7771 |==> -7771
10561:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):905:return Config.__M_NO == 0 && Config.COVERED(10559, 10560) ? 7771 : Config.__M_NO == 10560 ? -7771 : Config.__M_NO == 10559 ? 0 : 7771; |==> <NO-OP>
10562:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):907:7779 |==> 0
10563:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):907:7779 |==> -7779
10564:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):907:return Config.__M_NO == 0 && Config.COVERED(10562, 10563) ? 7779 : Config.__M_NO == 10563 ? -7779 : Config.__M_NO == 10562 ? 0 : 7779; |==> <NO-OP>
10565:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):909:7789 |==> 0
10566:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):909:7789 |==> -7789
10567:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):909:return Config.__M_NO == 0 && Config.COVERED(10565, 10566) ? 7789 : Config.__M_NO == 10566 ? -7789 : Config.__M_NO == 10565 ? 0 : 7789; |==> <NO-OP>
10568:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):911:7909 |==> 0
10569:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):911:7909 |==> -7909
10570:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):911:return Config.__M_NO == 0 && Config.COVERED(10568, 10569) ? 7909 : Config.__M_NO == 10569 ? -7909 : Config.__M_NO == 10568 ? 0 : 7909; |==> <NO-OP>
10571:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):913:7807 |==> 0
10572:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):913:7807 |==> -7807
10573:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):913:return Config.__M_NO == 0 && Config.COVERED(10571, 10572) ? 7807 : Config.__M_NO == 10572 ? -7807 : Config.__M_NO == 10571 ? 0 : 7807; |==> <NO-OP>
10574:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):915:7817 |==> 0
10575:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):915:7817 |==> -7817
10576:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):915:return Config.__M_NO == 0 && Config.COVERED(10574, 10575) ? 7817 : Config.__M_NO == 10575 ? -7817 : Config.__M_NO == 10574 ? 0 : 7817; |==> <NO-OP>
10577:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):917:7925 |==> 0
10578:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):917:7925 |==> -7925
10579:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):917:return Config.__M_NO == 0 && Config.COVERED(10577, 10578) ? 7925 : Config.__M_NO == 10578 ? -7925 : Config.__M_NO == 10577 ? 0 : 7925; |==> <NO-OP>
10580:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):919:7827 |==> 0
10581:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):919:7827 |==> -7827
10582:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):919:return Config.__M_NO == 0 && Config.COVERED(10580, 10581) ? 7827 : Config.__M_NO == 10581 ? -7827 : Config.__M_NO == 10580 ? 0 : 7827; |==> <NO-OP>
10583:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):923:7794 |==> 0
10584:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):923:7794 |==> -7794
10585:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):923:return Config.__M_NO == 0 && Config.COVERED(10583, 10584) ? 7794 : Config.__M_NO == 10584 ? -7794 : Config.__M_NO == 10583 ? 0 : 7794; |==> <NO-OP>
10586:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):925:7795 |==> 0
10587:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):925:7795 |==> -7795
10588:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):925:return Config.__M_NO == 0 && Config.COVERED(10586, 10587) ? 7795 : Config.__M_NO == 10587 ? -7795 : Config.__M_NO == 10586 ? 0 : 7795; |==> <NO-OP>
10589:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):929:95 |==> 0
10590:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):929:95 |==> -95
10591:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):929:return Config.__M_NO == 0 && Config.COVERED(10589, 10590) ? 95 : Config.__M_NO == 10590 ? -95 : Config.__M_NO == 10589 ? 0 : 95; |==> <NO-OP>
10592:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):933:8215 |==> 0
10593:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):933:8215 |==> -8215
10594:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):933:return Config.__M_NO == 0 && Config.COVERED(10592, 10593) ? 8215 : Config.__M_NO == 10593 ? -8215 : Config.__M_NO == 10592 ? 0 : 8215; |==> <NO-OP>
10595:LVR:POS:0:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):937:716 |==> 0
10596:LVR:POS:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):937:716 |==> -716
10597:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):937:return Config.__M_NO == 0 && Config.COVERED(10595, 10596) ? 716 : Config.__M_NO == 10596 ? -716 : Config.__M_NO == 10595 ? 0 : 716; |==> <NO-OP>
10598:LVR:0:POS:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):950:0 |==> 1
10599:LVR:0:NEG:org.marc4j.converter.impl.Iso5426ToUnicode@getCombiningChar(int):950:0 |==> -1
10600:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):46:new StringBuffer() |==> null
10601:LVR:0:POS:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):48:0 |==> 1
10602:LVR:0:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):48:0 |==> -1
10603:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):48:i < data.length |==> i != data.length
10604:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):48:i < data.length |==> i <= data.length
10605:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):48:i < data.length |==> false
10606:EVR:<ARRAY_ACCESS>:<DEFAULT>:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):49:data[i] |==> 0
10607:EVR:<MEMBER_SELECT>:<DEFAULT>:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):50:data.length |==> 0
10608:COR:isAscii(c):TRUE:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):52:isAscii(c) |==> false
10609:COR:isAscii(c):FALSE:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):52:isAscii(c) |==> true
10610:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):53:sb.append(c) |==> <NO-OP>
10611:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):54:isCombining(c) && hasNext(i, len) |==> isCombining(c) == hasNext(i, len)
10612:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):54:isCombining(c) && hasNext(i, len) |==> false
10613:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):54:isCombining(c) && hasNext(i, len) |==> isCombining(c)
10614:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):54:isCombining(c) && hasNext(i, len) |==> hasNext(i, len)
10615:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):55:256 |==> 0
10616:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):55:256 |==> -256
10617:AOR:*(int,int):%(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):55:c * 256 |==> c % 256
10618:AOR:*(int,int):+(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):55:c * 256 |==> c + 256
10619:AOR:*(int,int):-(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):55:c * 256 |==> c - 256
10620:AOR:*(int,int):/(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):55:c * 256 |==> c / 256
10621:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):55:1 |==> 0
10622:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):55:1 |==> -1
10623:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):55:i + 1 |==> i % 1
10624:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):55:i + 1 |==> i * 1
10625:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):55:i + 1 |==> i - 1
10626:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):55:i + 1 |==> i / 1
10627:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):55:c * 256 + data[i + 1] |==> c * 256 % data[i + 1]
10628:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):55:c * 256 + data[i + 1] |==> c * 256 * data[i + 1]
10629:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):55:c * 256 + data[i + 1] |==> c * 256 - data[i + 1]
10630:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):55:c * 256 + data[i + 1] |==> c * 256 / data[i + 1]
10631:LVR:0:POS:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):57:0 |==> 1
10632:LVR:0:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):57:0 |==> -1
10633:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):57:d != 0 |==> d < 0
10634:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):57:d != 0 |==> d > 0
10635:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):57:d != 0 |==> true
10636:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):58:sb.append(d) |==> <NO-OP>
10637:STD:<INC>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):59:i++ |==> <NO-OP>
10638:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):61:sb.append(getChar(c)) |==> <NO-OP>
10639:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):64:sb.append(getChar(c)) |==> <NO-OP>
10640:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.Iso6937ToUnicode@convert(char[]):68:sb.toString() |==> null
10641:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@hasNext(int,int):72:1 |==> 0
10642:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@hasNext(int,int):72:1 |==> -1
10643:AOR:-(int,int):%(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@hasNext(int,int):72:len - 1 |==> len % 1
10644:AOR:-(int,int):*(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@hasNext(int,int):72:len - 1 |==> len * 1
10645:AOR:-(int,int):+(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@hasNext(int,int):72:len - 1 |==> len + 1
10646:AOR:-(int,int):/(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@hasNext(int,int):72:len - 1 |==> len / 1
10647:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@hasNext(int,int):72:pos < (len - 1) |==> pos != (len - 1)
10648:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@hasNext(int,int):72:pos < (len - 1) |==> pos <= (len - 1)
10649:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@hasNext(int,int):72:pos < (len - 1) |==> false
10650:LVR:TRUE:FALSE:org.marc4j.converter.impl.Iso6937ToUnicode@hasNext(int,int):73:true |==> false
10651:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@hasNext(int,int):73:return Config.__M_NO == 0 && Config.COVERED(10650, 10650) ? true : Config.__M_NO == 10650 ? false : true; |==> <NO-OP>
10652:LVR:FALSE:TRUE:org.marc4j.converter.impl.Iso6937ToUnicode@hasNext(int,int):76:false |==> true
10653:LVR:0:POS:org.marc4j.converter.impl.Iso6937ToUnicode@isAscii(int):80:0 |==> 1
10654:LVR:0:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@isAscii(int):80:0 |==> -1
10655:ROR:>=(int,int):==(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@isAscii(int):80:i >= 0 |==> i == 0
10656:ROR:>=(int,int):>(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@isAscii(int):80:i >= 0 |==> i > 0
10657:ROR:>=(int,int):TRUE(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@isAscii(int):80:i >= 0 |==> true
10658:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@isAscii(int):80:127 |==> 0
10659:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@isAscii(int):80:127 |==> -127
10660:ROR:<=(int,int):<(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@isAscii(int):80:i <= 127 |==> i < 127
10661:ROR:<=(int,int):==(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@isAscii(int):80:i <= 127 |==> i == 127
10662:ROR:<=(int,int):TRUE(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@isAscii(int):80:i <= 127 |==> true
10663:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.Iso6937ToUnicode@isAscii(int):80:i >= 0 && i <= 127 |==> i >= 0 == i <= 127
10664:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.Iso6937ToUnicode@isAscii(int):80:i >= 0 && i <= 127 |==> false
10665:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.Iso6937ToUnicode@isAscii(int):80:i >= 0 && i <= 127 |==> i >= 0
10666:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.Iso6937ToUnicode@isAscii(int):80:i >= 0 && i <= 127 |==> i <= 127
10667:LVR:TRUE:FALSE:org.marc4j.converter.impl.Iso6937ToUnicode@isAscii(int):81:true |==> false
10668:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@isAscii(int):81:return Config.__M_NO == 0 && Config.COVERED(10667, 10667) ? true : Config.__M_NO == 10667 ? false : true; |==> <NO-OP>
10669:LVR:FALSE:TRUE:org.marc4j.converter.impl.Iso6937ToUnicode@isAscii(int):84:false |==> true
10670:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@isCombining(int):88:192 |==> 0
10671:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@isCombining(int):88:192 |==> -192
10672:ROR:>=(int,int):==(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@isCombining(int):88:i >= 192 |==> i == 192
10673:ROR:>=(int,int):>(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@isCombining(int):88:i >= 192 |==> i > 192
10674:ROR:>=(int,int):TRUE(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@isCombining(int):88:i >= 192 |==> true
10675:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@isCombining(int):88:223 |==> 0
10676:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@isCombining(int):88:223 |==> -223
10677:ROR:<=(int,int):<(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@isCombining(int):88:i <= 223 |==> i < 223
10678:ROR:<=(int,int):==(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@isCombining(int):88:i <= 223 |==> i == 223
10679:ROR:<=(int,int):TRUE(int,int):org.marc4j.converter.impl.Iso6937ToUnicode@isCombining(int):88:i <= 223 |==> true
10680:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.Iso6937ToUnicode@isCombining(int):88:i >= 192 && i <= 223 |==> i >= 192 == i <= 223
10681:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.Iso6937ToUnicode@isCombining(int):88:i >= 192 && i <= 223 |==> false
10682:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.Iso6937ToUnicode@isCombining(int):88:i >= 192 && i <= 223 |==> i >= 192
10683:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.Iso6937ToUnicode@isCombining(int):88:i >= 192 && i <= 223 |==> i <= 223
10684:LVR:TRUE:FALSE:org.marc4j.converter.impl.Iso6937ToUnicode@isCombining(int):89:true |==> false
10685:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@isCombining(int):89:return Config.__M_NO == 0 && Config.COVERED(10684, 10684) ? true : Config.__M_NO == 10684 ? false : true; |==> <NO-OP>
10686:LVR:FALSE:TRUE:org.marc4j.converter.impl.Iso6937ToUnicode@isCombining(int):92:false |==> true
10687:LVR:TRUE:FALSE:org.marc4j.converter.impl.Iso6937ToUnicode@outputsUnicode():104:true |==> false
10688:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):111:160 |==> 0
10689:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):111:160 |==> -160
10690:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):111:return Config.__M_NO == 0 && Config.COVERED(10688, 10689) ? 160 : Config.__M_NO == 10689 ? -160 : Config.__M_NO == 10688 ? 0 : 160; |==> <NO-OP>
10691:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):113:161 |==> 0
10692:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):113:161 |==> -161
10693:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):113:return Config.__M_NO == 0 && Config.COVERED(10691, 10692) ? 161 : Config.__M_NO == 10692 ? -161 : Config.__M_NO == 10691 ? 0 : 161; |==> <NO-OP>
10694:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):115:162 |==> 0
10695:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):115:162 |==> -162
10696:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):115:return Config.__M_NO == 0 && Config.COVERED(10694, 10695) ? 162 : Config.__M_NO == 10695 ? -162 : Config.__M_NO == 10694 ? 0 : 162; |==> <NO-OP>
10697:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):117:163 |==> 0
10698:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):117:163 |==> -163
10699:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):117:return Config.__M_NO == 0 && Config.COVERED(10697, 10698) ? 163 : Config.__M_NO == 10698 ? -163 : Config.__M_NO == 10697 ? 0 : 163; |==> <NO-OP>
10700:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):120:165 |==> 0
10701:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):120:165 |==> -165
10702:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):120:return Config.__M_NO == 0 && Config.COVERED(10700, 10701) ? 165 : Config.__M_NO == 10701 ? -165 : Config.__M_NO == 10700 ? 0 : 165; |==> <NO-OP>
10703:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):123:167 |==> 0
10704:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):123:167 |==> -167
10705:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):123:return Config.__M_NO == 0 && Config.COVERED(10703, 10704) ? 167 : Config.__M_NO == 10704 ? -167 : Config.__M_NO == 10703 ? 0 : 167; |==> <NO-OP>
10706:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):125:164 |==> 0
10707:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):125:164 |==> -164
10708:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):125:return Config.__M_NO == 0 && Config.COVERED(10706, 10707) ? 164 : Config.__M_NO == 10707 ? -164 : Config.__M_NO == 10706 ? 0 : 164; |==> <NO-OP>
10709:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):127:8216 |==> 0
10710:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):127:8216 |==> -8216
10711:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):127:return Config.__M_NO == 0 && Config.COVERED(10709, 10710) ? 8216 : Config.__M_NO == 10710 ? -8216 : Config.__M_NO == 10709 ? 0 : 8216; |==> <NO-OP>
10712:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):129:8220 |==> 0
10713:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):129:8220 |==> -8220
10714:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):129:return Config.__M_NO == 0 && Config.COVERED(10712, 10713) ? 8220 : Config.__M_NO == 10713 ? -8220 : Config.__M_NO == 10712 ? 0 : 8220; |==> <NO-OP>
10715:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):131:171 |==> 0
10716:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):131:171 |==> -171
10717:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):131:return Config.__M_NO == 0 && Config.COVERED(10715, 10716) ? 171 : Config.__M_NO == 10716 ? -171 : Config.__M_NO == 10715 ? 0 : 171; |==> <NO-OP>
10718:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):134:8592 |==> 0
10719:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):134:8592 |==> -8592
10720:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):134:return Config.__M_NO == 0 && Config.COVERED(10718, 10719) ? 8592 : Config.__M_NO == 10719 ? -8592 : Config.__M_NO == 10718 ? 0 : 8592; |==> <NO-OP>
10721:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):136:8593 |==> 0
10722:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):136:8593 |==> -8593
10723:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):136:return Config.__M_NO == 0 && Config.COVERED(10721, 10722) ? 8593 : Config.__M_NO == 10722 ? -8593 : Config.__M_NO == 10721 ? 0 : 8593; |==> <NO-OP>
10724:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):138:8594 |==> 0
10725:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):138:8594 |==> -8594
10726:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):138:return Config.__M_NO == 0 && Config.COVERED(10724, 10725) ? 8594 : Config.__M_NO == 10725 ? -8594 : Config.__M_NO == 10724 ? 0 : 8594; |==> <NO-OP>
10727:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):140:8595 |==> 0
10728:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):140:8595 |==> -8595
10729:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):140:return Config.__M_NO == 0 && Config.COVERED(10727, 10728) ? 8595 : Config.__M_NO == 10728 ? -8595 : Config.__M_NO == 10727 ? 0 : 8595; |==> <NO-OP>
10730:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):143:176 |==> 0
10731:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):143:176 |==> -176
10732:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):143:return Config.__M_NO == 0 && Config.COVERED(10730, 10731) ? 176 : Config.__M_NO == 10731 ? -176 : Config.__M_NO == 10730 ? 0 : 176; |==> <NO-OP>
10733:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):145:177 |==> 0
10734:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):145:177 |==> -177
10735:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):145:return Config.__M_NO == 0 && Config.COVERED(10733, 10734) ? 177 : Config.__M_NO == 10734 ? -177 : Config.__M_NO == 10733 ? 0 : 177; |==> <NO-OP>
10736:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):147:178 |==> 0
10737:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):147:178 |==> -178
10738:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):147:return Config.__M_NO == 0 && Config.COVERED(10736, 10737) ? 178 : Config.__M_NO == 10737 ? -178 : Config.__M_NO == 10736 ? 0 : 178; |==> <NO-OP>
10739:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):149:179 |==> 0
10740:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):149:179 |==> -179
10741:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):149:return Config.__M_NO == 0 && Config.COVERED(10739, 10740) ? 179 : Config.__M_NO == 10740 ? -179 : Config.__M_NO == 10739 ? 0 : 179; |==> <NO-OP>
10742:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):151:215 |==> 0
10743:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):151:215 |==> -215
10744:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):151:return Config.__M_NO == 0 && Config.COVERED(10742, 10743) ? 215 : Config.__M_NO == 10743 ? -215 : Config.__M_NO == 10742 ? 0 : 215; |==> <NO-OP>
10745:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):153:181 |==> 0
10746:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):153:181 |==> -181
10747:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):153:return Config.__M_NO == 0 && Config.COVERED(10745, 10746) ? 181 : Config.__M_NO == 10746 ? -181 : Config.__M_NO == 10745 ? 0 : 181; |==> <NO-OP>
10748:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):155:182 |==> 0
10749:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):155:182 |==> -182
10750:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):155:return Config.__M_NO == 0 && Config.COVERED(10748, 10749) ? 182 : Config.__M_NO == 10749 ? -182 : Config.__M_NO == 10748 ? 0 : 182; |==> <NO-OP>
10751:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):157:183 |==> 0
10752:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):157:183 |==> -183
10753:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):157:return Config.__M_NO == 0 && Config.COVERED(10751, 10752) ? 183 : Config.__M_NO == 10752 ? -183 : Config.__M_NO == 10751 ? 0 : 183; |==> <NO-OP>
10754:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):159:247 |==> 0
10755:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):159:247 |==> -247
10756:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):159:return Config.__M_NO == 0 && Config.COVERED(10754, 10755) ? 247 : Config.__M_NO == 10755 ? -247 : Config.__M_NO == 10754 ? 0 : 247; |==> <NO-OP>
10757:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):161:8217 |==> 0
10758:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):161:8217 |==> -8217
10759:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):161:return Config.__M_NO == 0 && Config.COVERED(10757, 10758) ? 8217 : Config.__M_NO == 10758 ? -8217 : Config.__M_NO == 10757 ? 0 : 8217; |==> <NO-OP>
10760:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):163:8221 |==> 0
10761:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):163:8221 |==> -8221
10762:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):163:return Config.__M_NO == 0 && Config.COVERED(10760, 10761) ? 8221 : Config.__M_NO == 10761 ? -8221 : Config.__M_NO == 10760 ? 0 : 8221; |==> <NO-OP>
10763:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):165:187 |==> 0
10764:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):165:187 |==> -187
10765:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):165:return Config.__M_NO == 0 && Config.COVERED(10763, 10764) ? 187 : Config.__M_NO == 10764 ? -187 : Config.__M_NO == 10763 ? 0 : 187; |==> <NO-OP>
10766:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):168:188 |==> 0
10767:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):168:188 |==> -188
10768:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):168:return Config.__M_NO == 0 && Config.COVERED(10766, 10767) ? 188 : Config.__M_NO == 10767 ? -188 : Config.__M_NO == 10766 ? 0 : 188; |==> <NO-OP>
10769:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):170:189 |==> 0
10770:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):170:189 |==> -189
10771:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):170:return Config.__M_NO == 0 && Config.COVERED(10769, 10770) ? 189 : Config.__M_NO == 10770 ? -189 : Config.__M_NO == 10769 ? 0 : 189; |==> <NO-OP>
10772:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):172:190 |==> 0
10773:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):172:190 |==> -190
10774:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):172:return Config.__M_NO == 0 && Config.COVERED(10772, 10773) ? 190 : Config.__M_NO == 10773 ? -190 : Config.__M_NO == 10772 ? 0 : 190; |==> <NO-OP>
10775:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):174:191 |==> 0
10776:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):174:191 |==> -191
10777:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):174:return Config.__M_NO == 0 && Config.COVERED(10775, 10776) ? 191 : Config.__M_NO == 10776 ? -191 : Config.__M_NO == 10775 ? 0 : 191; |==> <NO-OP>
10778:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):179:8213 |==> 0
10779:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):179:8213 |==> -8213
10780:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):179:return Config.__M_NO == 0 && Config.COVERED(10778, 10779) ? 8213 : Config.__M_NO == 10779 ? -8213 : Config.__M_NO == 10778 ? 0 : 8213; |==> <NO-OP>
10781:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):181:185 |==> 0
10782:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):181:185 |==> -185
10783:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):181:return Config.__M_NO == 0 && Config.COVERED(10781, 10782) ? 185 : Config.__M_NO == 10782 ? -185 : Config.__M_NO == 10781 ? 0 : 185; |==> <NO-OP>
10784:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):183:8471 |==> 0
10785:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):183:8471 |==> -8471
10786:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):183:return Config.__M_NO == 0 && Config.COVERED(10784, 10785) ? 8471 : Config.__M_NO == 10785 ? -8471 : Config.__M_NO == 10784 ? 0 : 8471; |==> <NO-OP>
10787:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):185:169 |==> 0
10788:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):185:169 |==> -169
10789:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):185:return Config.__M_NO == 0 && Config.COVERED(10787, 10788) ? 169 : Config.__M_NO == 10788 ? -169 : Config.__M_NO == 10787 ? 0 : 169; |==> <NO-OP>
10790:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):187:174 |==> 0
10791:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):187:174 |==> -174
10792:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):187:return Config.__M_NO == 0 && Config.COVERED(10790, 10791) ? 174 : Config.__M_NO == 10791 ? -174 : Config.__M_NO == 10790 ? 0 : 174; |==> <NO-OP>
10793:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):189:9834 |==> 0
10794:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):189:9834 |==> -9834
10795:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):189:return Config.__M_NO == 0 && Config.COVERED(10793, 10794) ? 9834 : Config.__M_NO == 10794 ? -9834 : Config.__M_NO == 10793 ? 0 : 9834; |==> <NO-OP>
10796:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):191:172 |==> 0
10797:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):191:172 |==> -172
10798:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):191:return Config.__M_NO == 0 && Config.COVERED(10796, 10797) ? 172 : Config.__M_NO == 10797 ? -172 : Config.__M_NO == 10796 ? 0 : 172; |==> <NO-OP>
10799:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):193:166 |==> 0
10800:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):193:166 |==> -166
10801:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):193:return Config.__M_NO == 0 && Config.COVERED(10799, 10800) ? 166 : Config.__M_NO == 10800 ? -166 : Config.__M_NO == 10799 ? 0 : 166; |==> <NO-OP>
10802:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):199:8539 |==> 0
10803:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):199:8539 |==> -8539
10804:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):199:return Config.__M_NO == 0 && Config.COVERED(10802, 10803) ? 8539 : Config.__M_NO == 10803 ? -8539 : Config.__M_NO == 10802 ? 0 : 8539; |==> <NO-OP>
10805:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):201:8542 |==> 0
10806:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):201:8542 |==> -8542
10807:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):201:return Config.__M_NO == 0 && Config.COVERED(10805, 10806) ? 8542 : Config.__M_NO == 10806 ? -8542 : Config.__M_NO == 10805 ? 0 : 8542; |==> <NO-OP>
10808:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):204:8486 |==> 0
10809:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):204:8486 |==> -8486
10810:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):204:return Config.__M_NO == 0 && Config.COVERED(10808, 10809) ? 8486 : Config.__M_NO == 10809 ? -8486 : Config.__M_NO == 10808 ? 0 : 8486; |==> <NO-OP>
10811:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):206:198 |==> 0
10812:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):206:198 |==> -198
10813:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):206:return Config.__M_NO == 0 && Config.COVERED(10811, 10812) ? 198 : Config.__M_NO == 10812 ? -198 : Config.__M_NO == 10811 ? 0 : 198; |==> <NO-OP>
10814:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):208:272 |==> 0
10815:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):208:272 |==> -272
10816:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):208:return Config.__M_NO == 0 && Config.COVERED(10814, 10815) ? 272 : Config.__M_NO == 10815 ? -272 : Config.__M_NO == 10814 ? 0 : 272; |==> <NO-OP>
10817:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):210:170 |==> 0
10818:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):210:170 |==> -170
10819:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):210:return Config.__M_NO == 0 && Config.COVERED(10817, 10818) ? 170 : Config.__M_NO == 10818 ? -170 : Config.__M_NO == 10817 ? 0 : 170; |==> <NO-OP>
10820:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):212:294 |==> 0
10821:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):212:294 |==> -294
10822:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):212:return Config.__M_NO == 0 && Config.COVERED(10820, 10821) ? 294 : Config.__M_NO == 10821 ? -294 : Config.__M_NO == 10820 ? 0 : 294; |==> <NO-OP>
10823:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):215:306 |==> 0
10824:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):215:306 |==> -306
10825:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):215:return Config.__M_NO == 0 && Config.COVERED(10823, 10824) ? 306 : Config.__M_NO == 10824 ? -306 : Config.__M_NO == 10823 ? 0 : 306; |==> <NO-OP>
10826:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):217:319 |==> 0
10827:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):217:319 |==> -319
10828:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):217:return Config.__M_NO == 0 && Config.COVERED(10826, 10827) ? 319 : Config.__M_NO == 10827 ? -319 : Config.__M_NO == 10826 ? 0 : 319; |==> <NO-OP>
10829:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):219:321 |==> 0
10830:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):219:321 |==> -321
10831:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):219:return Config.__M_NO == 0 && Config.COVERED(10829, 10830) ? 321 : Config.__M_NO == 10830 ? -321 : Config.__M_NO == 10829 ? 0 : 321; |==> <NO-OP>
10832:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):221:216 |==> 0
10833:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):221:216 |==> -216
10834:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):221:return Config.__M_NO == 0 && Config.COVERED(10832, 10833) ? 216 : Config.__M_NO == 10833 ? -216 : Config.__M_NO == 10832 ? 0 : 216; |==> <NO-OP>
10835:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):223:338 |==> 0
10836:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):223:338 |==> -338
10837:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):223:return Config.__M_NO == 0 && Config.COVERED(10835, 10836) ? 338 : Config.__M_NO == 10836 ? -338 : Config.__M_NO == 10835 ? 0 : 338; |==> <NO-OP>
10838:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):225:186 |==> 0
10839:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):225:186 |==> -186
10840:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):225:return Config.__M_NO == 0 && Config.COVERED(10838, 10839) ? 186 : Config.__M_NO == 10839 ? -186 : Config.__M_NO == 10838 ? 0 : 186; |==> <NO-OP>
10841:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):227:222 |==> 0
10842:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):227:222 |==> -222
10843:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):227:return Config.__M_NO == 0 && Config.COVERED(10841, 10842) ? 222 : Config.__M_NO == 10842 ? -222 : Config.__M_NO == 10841 ? 0 : 222; |==> <NO-OP>
10844:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):229:358 |==> 0
10845:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):229:358 |==> -358
10846:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):229:return Config.__M_NO == 0 && Config.COVERED(10844, 10845) ? 358 : Config.__M_NO == 10845 ? -358 : Config.__M_NO == 10844 ? 0 : 358; |==> <NO-OP>
10847:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):231:330 |==> 0
10848:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):231:330 |==> -330
10849:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):231:return Config.__M_NO == 0 && Config.COVERED(10847, 10848) ? 330 : Config.__M_NO == 10848 ? -330 : Config.__M_NO == 10847 ? 0 : 330; |==> <NO-OP>
10850:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):233:329 |==> 0
10851:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):233:329 |==> -329
10852:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):233:return Config.__M_NO == 0 && Config.COVERED(10850, 10851) ? 329 : Config.__M_NO == 10851 ? -329 : Config.__M_NO == 10850 ? 0 : 329; |==> <NO-OP>
10853:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):237:312 |==> 0
10854:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):237:312 |==> -312
10855:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):237:return Config.__M_NO == 0 && Config.COVERED(10853, 10854) ? 312 : Config.__M_NO == 10854 ? -312 : Config.__M_NO == 10853 ? 0 : 312; |==> <NO-OP>
10856:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):239:230 |==> 0
10857:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):239:230 |==> -230
10858:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):239:return Config.__M_NO == 0 && Config.COVERED(10856, 10857) ? 230 : Config.__M_NO == 10857 ? -230 : Config.__M_NO == 10856 ? 0 : 230; |==> <NO-OP>
10859:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):241:273 |==> 0
10860:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):241:273 |==> -273
10861:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):241:return Config.__M_NO == 0 && Config.COVERED(10859, 10860) ? 273 : Config.__M_NO == 10860 ? -273 : Config.__M_NO == 10859 ? 0 : 273; |==> <NO-OP>
10862:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):243:240 |==> 0
10863:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):243:240 |==> -240
10864:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):243:return Config.__M_NO == 0 && Config.COVERED(10862, 10863) ? 240 : Config.__M_NO == 10863 ? -240 : Config.__M_NO == 10862 ? 0 : 240; |==> <NO-OP>
10865:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):245:295 |==> 0
10866:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):245:295 |==> -295
10867:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):245:return Config.__M_NO == 0 && Config.COVERED(10865, 10866) ? 295 : Config.__M_NO == 10866 ? -295 : Config.__M_NO == 10865 ? 0 : 295; |==> <NO-OP>
10868:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):247:305 |==> 0
10869:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):247:305 |==> -305
10870:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):247:return Config.__M_NO == 0 && Config.COVERED(10868, 10869) ? 305 : Config.__M_NO == 10869 ? -305 : Config.__M_NO == 10868 ? 0 : 305; |==> <NO-OP>
10871:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):249:307 |==> 0
10872:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):249:307 |==> -307
10873:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):249:return Config.__M_NO == 0 && Config.COVERED(10871, 10872) ? 307 : Config.__M_NO == 10872 ? -307 : Config.__M_NO == 10871 ? 0 : 307; |==> <NO-OP>
10874:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):251:320 |==> 0
10875:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):251:320 |==> -320
10876:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):251:return Config.__M_NO == 0 && Config.COVERED(10874, 10875) ? 320 : Config.__M_NO == 10875 ? -320 : Config.__M_NO == 10874 ? 0 : 320; |==> <NO-OP>
10877:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):253:322 |==> 0
10878:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):253:322 |==> -322
10879:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):253:return Config.__M_NO == 0 && Config.COVERED(10877, 10878) ? 322 : Config.__M_NO == 10878 ? -322 : Config.__M_NO == 10877 ? 0 : 322; |==> <NO-OP>
10880:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):255:248 |==> 0
10881:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):255:248 |==> -248
10882:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):255:return Config.__M_NO == 0 && Config.COVERED(10880, 10881) ? 248 : Config.__M_NO == 10881 ? -248 : Config.__M_NO == 10880 ? 0 : 248; |==> <NO-OP>
10883:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):257:339 |==> 0
10884:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):257:339 |==> -339
10885:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):257:return Config.__M_NO == 0 && Config.COVERED(10883, 10884) ? 339 : Config.__M_NO == 10884 ? -339 : Config.__M_NO == 10883 ? 0 : 339; |==> <NO-OP>
10886:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):259:223 |==> 0
10887:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):259:223 |==> -223
10888:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):259:return Config.__M_NO == 0 && Config.COVERED(10886, 10887) ? 223 : Config.__M_NO == 10887 ? -223 : Config.__M_NO == 10886 ? 0 : 223; |==> <NO-OP>
10889:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):261:254 |==> 0
10890:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):261:254 |==> -254
10891:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):261:return Config.__M_NO == 0 && Config.COVERED(10889, 10890) ? 254 : Config.__M_NO == 10890 ? -254 : Config.__M_NO == 10889 ? 0 : 254; |==> <NO-OP>
10892:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):263:359 |==> 0
10893:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):263:359 |==> -359
10894:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):263:return Config.__M_NO == 0 && Config.COVERED(10892, 10893) ? 359 : Config.__M_NO == 10893 ? -359 : Config.__M_NO == 10892 ? 0 : 359; |==> <NO-OP>
10895:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):265:331 |==> 0
10896:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):265:331 |==> -331
10897:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):265:return Config.__M_NO == 0 && Config.COVERED(10895, 10896) ? 331 : Config.__M_NO == 10896 ? -331 : Config.__M_NO == 10895 ? 0 : 331; |==> <NO-OP>
10898:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):267:173 |==> 0
10899:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):267:173 |==> -173
10900:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):267:return Config.__M_NO == 0 && Config.COVERED(10898, 10899) ? 173 : Config.__M_NO == 10899 ? -173 : Config.__M_NO == 10898 ? 0 : 173; |==> <NO-OP>
10901:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.converter.impl.Iso6937ToUnicode@getChar(int):270:(char)i |==> 0
10902:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):280:192 |==> 0
10903:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):280:192 |==> -192
10904:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):280:return Config.__M_NO == 0 && Config.COVERED(10902, 10903) ? 192 : Config.__M_NO == 10903 ? -192 : Config.__M_NO == 10902 ? 0 : 192; |==> <NO-OP>
10905:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):282:200 |==> 0
10906:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):282:200 |==> -200
10907:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):282:return Config.__M_NO == 0 && Config.COVERED(10905, 10906) ? 200 : Config.__M_NO == 10906 ? -200 : Config.__M_NO == 10905 ? 0 : 200; |==> <NO-OP>
10908:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):284:204 |==> 0
10909:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):284:204 |==> -204
10910:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):284:return Config.__M_NO == 0 && Config.COVERED(10908, 10909) ? 204 : Config.__M_NO == 10909 ? -204 : Config.__M_NO == 10908 ? 0 : 204; |==> <NO-OP>
10911:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):286:210 |==> 0
10912:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):286:210 |==> -210
10913:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):286:return Config.__M_NO == 0 && Config.COVERED(10911, 10912) ? 210 : Config.__M_NO == 10912 ? -210 : Config.__M_NO == 10911 ? 0 : 210; |==> <NO-OP>
10914:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):288:217 |==> 0
10915:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):288:217 |==> -217
10916:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):288:return Config.__M_NO == 0 && Config.COVERED(10914, 10915) ? 217 : Config.__M_NO == 10915 ? -217 : Config.__M_NO == 10914 ? 0 : 217; |==> <NO-OP>
10917:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):290:224 |==> 0
10918:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):290:224 |==> -224
10919:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):290:return Config.__M_NO == 0 && Config.COVERED(10917, 10918) ? 224 : Config.__M_NO == 10918 ? -224 : Config.__M_NO == 10917 ? 0 : 224; |==> <NO-OP>
10920:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):292:232 |==> 0
10921:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):292:232 |==> -232
10922:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):292:return Config.__M_NO == 0 && Config.COVERED(10920, 10921) ? 232 : Config.__M_NO == 10921 ? -232 : Config.__M_NO == 10920 ? 0 : 232; |==> <NO-OP>
10923:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):294:236 |==> 0
10924:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):294:236 |==> -236
10925:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):294:return Config.__M_NO == 0 && Config.COVERED(10923, 10924) ? 236 : Config.__M_NO == 10924 ? -236 : Config.__M_NO == 10923 ? 0 : 236; |==> <NO-OP>
10926:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):296:242 |==> 0
10927:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):296:242 |==> -242
10928:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):296:return Config.__M_NO == 0 && Config.COVERED(10926, 10927) ? 242 : Config.__M_NO == 10927 ? -242 : Config.__M_NO == 10926 ? 0 : 242; |==> <NO-OP>
10929:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):298:249 |==> 0
10930:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):298:249 |==> -249
10931:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):298:return Config.__M_NO == 0 && Config.COVERED(10929, 10930) ? 249 : Config.__M_NO == 10930 ? -249 : Config.__M_NO == 10929 ? 0 : 249; |==> <NO-OP>
10932:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):302:180 |==> 0
10933:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):302:180 |==> -180
10934:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):302:return Config.__M_NO == 0 && Config.COVERED(10932, 10933) ? 180 : Config.__M_NO == 10933 ? -180 : Config.__M_NO == 10932 ? 0 : 180; |==> <NO-OP>
10935:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):304:193 |==> 0
10936:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):304:193 |==> -193
10937:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):304:return Config.__M_NO == 0 && Config.COVERED(10935, 10936) ? 193 : Config.__M_NO == 10936 ? -193 : Config.__M_NO == 10935 ? 0 : 193; |==> <NO-OP>
10938:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):306:262 |==> 0
10939:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):306:262 |==> -262
10940:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):306:return Config.__M_NO == 0 && Config.COVERED(10938, 10939) ? 262 : Config.__M_NO == 10939 ? -262 : Config.__M_NO == 10938 ? 0 : 262; |==> <NO-OP>
10941:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):308:201 |==> 0
10942:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):308:201 |==> -201
10943:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):308:return Config.__M_NO == 0 && Config.COVERED(10941, 10942) ? 201 : Config.__M_NO == 10942 ? -201 : Config.__M_NO == 10941 ? 0 : 201; |==> <NO-OP>
10944:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):310:205 |==> 0
10945:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):310:205 |==> -205
10946:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):310:return Config.__M_NO == 0 && Config.COVERED(10944, 10945) ? 205 : Config.__M_NO == 10945 ? -205 : Config.__M_NO == 10944 ? 0 : 205; |==> <NO-OP>
10947:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):312:313 |==> 0
10948:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):312:313 |==> -313
10949:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):312:return Config.__M_NO == 0 && Config.COVERED(10947, 10948) ? 313 : Config.__M_NO == 10948 ? -313 : Config.__M_NO == 10947 ? 0 : 313; |==> <NO-OP>
10950:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):314:323 |==> 0
10951:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):314:323 |==> -323
10952:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):314:return Config.__M_NO == 0 && Config.COVERED(10950, 10951) ? 323 : Config.__M_NO == 10951 ? -323 : Config.__M_NO == 10950 ? 0 : 323; |==> <NO-OP>
10953:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):316:211 |==> 0
10954:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):316:211 |==> -211
10955:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):316:return Config.__M_NO == 0 && Config.COVERED(10953, 10954) ? 211 : Config.__M_NO == 10954 ? -211 : Config.__M_NO == 10953 ? 0 : 211; |==> <NO-OP>
10956:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):318:340 |==> 0
10957:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):318:340 |==> -340
10958:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):318:return Config.__M_NO == 0 && Config.COVERED(10956, 10957) ? 340 : Config.__M_NO == 10957 ? -340 : Config.__M_NO == 10956 ? 0 : 340; |==> <NO-OP>
10959:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):320:346 |==> 0
10960:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):320:346 |==> -346
10961:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):320:return Config.__M_NO == 0 && Config.COVERED(10959, 10960) ? 346 : Config.__M_NO == 10960 ? -346 : Config.__M_NO == 10959 ? 0 : 346; |==> <NO-OP>
10962:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):322:218 |==> 0
10963:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):322:218 |==> -218
10964:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):322:return Config.__M_NO == 0 && Config.COVERED(10962, 10963) ? 218 : Config.__M_NO == 10963 ? -218 : Config.__M_NO == 10962 ? 0 : 218; |==> <NO-OP>
10965:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):324:221 |==> 0
10966:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):324:221 |==> -221
10967:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):324:return Config.__M_NO == 0 && Config.COVERED(10965, 10966) ? 221 : Config.__M_NO == 10966 ? -221 : Config.__M_NO == 10965 ? 0 : 221; |==> <NO-OP>
10968:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):326:377 |==> 0
10969:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):326:377 |==> -377
10970:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):326:return Config.__M_NO == 0 && Config.COVERED(10968, 10969) ? 377 : Config.__M_NO == 10969 ? -377 : Config.__M_NO == 10968 ? 0 : 377; |==> <NO-OP>
10971:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):328:225 |==> 0
10972:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):328:225 |==> -225
10973:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):328:return Config.__M_NO == 0 && Config.COVERED(10971, 10972) ? 225 : Config.__M_NO == 10972 ? -225 : Config.__M_NO == 10971 ? 0 : 225; |==> <NO-OP>
10974:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):330:263 |==> 0
10975:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):330:263 |==> -263
10976:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):330:return Config.__M_NO == 0 && Config.COVERED(10974, 10975) ? 263 : Config.__M_NO == 10975 ? -263 : Config.__M_NO == 10974 ? 0 : 263; |==> <NO-OP>
10977:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):332:233 |==> 0
10978:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):332:233 |==> -233
10979:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):332:return Config.__M_NO == 0 && Config.COVERED(10977, 10978) ? 233 : Config.__M_NO == 10978 ? -233 : Config.__M_NO == 10977 ? 0 : 233; |==> <NO-OP>
10980:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):334:501 |==> 0
10981:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):334:501 |==> -501
10982:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):334:return Config.__M_NO == 0 && Config.COVERED(10980, 10981) ? 501 : Config.__M_NO == 10981 ? -501 : Config.__M_NO == 10980 ? 0 : 501; |==> <NO-OP>
10983:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):336:237 |==> 0
10984:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):336:237 |==> -237
10985:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):336:return Config.__M_NO == 0 && Config.COVERED(10983, 10984) ? 237 : Config.__M_NO == 10984 ? -237 : Config.__M_NO == 10983 ? 0 : 237; |==> <NO-OP>
10986:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):338:314 |==> 0
10987:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):338:314 |==> -314
10988:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):338:return Config.__M_NO == 0 && Config.COVERED(10986, 10987) ? 314 : Config.__M_NO == 10987 ? -314 : Config.__M_NO == 10986 ? 0 : 314; |==> <NO-OP>
10989:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):340:324 |==> 0
10990:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):340:324 |==> -324
10991:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):340:return Config.__M_NO == 0 && Config.COVERED(10989, 10990) ? 324 : Config.__M_NO == 10990 ? -324 : Config.__M_NO == 10989 ? 0 : 324; |==> <NO-OP>
10992:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):342:243 |==> 0
10993:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):342:243 |==> -243
10994:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):342:return Config.__M_NO == 0 && Config.COVERED(10992, 10993) ? 243 : Config.__M_NO == 10993 ? -243 : Config.__M_NO == 10992 ? 0 : 243; |==> <NO-OP>
10995:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):344:341 |==> 0
10996:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):344:341 |==> -341
10997:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):344:return Config.__M_NO == 0 && Config.COVERED(10995, 10996) ? 341 : Config.__M_NO == 10996 ? -341 : Config.__M_NO == 10995 ? 0 : 341; |==> <NO-OP>
10998:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):346:347 |==> 0
10999:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):346:347 |==> -347
11000:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):346:return Config.__M_NO == 0 && Config.COVERED(10998, 10999) ? 347 : Config.__M_NO == 10999 ? -347 : Config.__M_NO == 10998 ? 0 : 347; |==> <NO-OP>
11001:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):348:250 |==> 0
11002:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):348:250 |==> -250
11003:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):348:return Config.__M_NO == 0 && Config.COVERED(11001, 11002) ? 250 : Config.__M_NO == 11002 ? -250 : Config.__M_NO == 11001 ? 0 : 250; |==> <NO-OP>
11004:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):350:253 |==> 0
11005:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):350:253 |==> -253
11006:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):350:return Config.__M_NO == 0 && Config.COVERED(11004, 11005) ? 253 : Config.__M_NO == 11005 ? -253 : Config.__M_NO == 11004 ? 0 : 253; |==> <NO-OP>
11007:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):352:378 |==> 0
11008:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):352:378 |==> -378
11009:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):352:return Config.__M_NO == 0 && Config.COVERED(11007, 11008) ? 378 : Config.__M_NO == 11008 ? -378 : Config.__M_NO == 11007 ? 0 : 378; |==> <NO-OP>
11010:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):356:194 |==> 0
11011:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):356:194 |==> -194
11012:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):356:return Config.__M_NO == 0 && Config.COVERED(11010, 11011) ? 194 : Config.__M_NO == 11011 ? -194 : Config.__M_NO == 11010 ? 0 : 194; |==> <NO-OP>
11013:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):358:264 |==> 0
11014:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):358:264 |==> -264
11015:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):358:return Config.__M_NO == 0 && Config.COVERED(11013, 11014) ? 264 : Config.__M_NO == 11014 ? -264 : Config.__M_NO == 11013 ? 0 : 264; |==> <NO-OP>
11016:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):360:202 |==> 0
11017:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):360:202 |==> -202
11018:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):360:return Config.__M_NO == 0 && Config.COVERED(11016, 11017) ? 202 : Config.__M_NO == 11017 ? -202 : Config.__M_NO == 11016 ? 0 : 202; |==> <NO-OP>
11019:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):362:284 |==> 0
11020:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):362:284 |==> -284
11021:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):362:return Config.__M_NO == 0 && Config.COVERED(11019, 11020) ? 284 : Config.__M_NO == 11020 ? -284 : Config.__M_NO == 11019 ? 0 : 284; |==> <NO-OP>
11022:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):364:292 |==> 0
11023:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):364:292 |==> -292
11024:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):364:return Config.__M_NO == 0 && Config.COVERED(11022, 11023) ? 292 : Config.__M_NO == 11023 ? -292 : Config.__M_NO == 11022 ? 0 : 292; |==> <NO-OP>
11025:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):366:206 |==> 0
11026:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):366:206 |==> -206
11027:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):366:return Config.__M_NO == 0 && Config.COVERED(11025, 11026) ? 206 : Config.__M_NO == 11026 ? -206 : Config.__M_NO == 11025 ? 0 : 206; |==> <NO-OP>
11028:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):368:308 |==> 0
11029:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):368:308 |==> -308
11030:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):368:return Config.__M_NO == 0 && Config.COVERED(11028, 11029) ? 308 : Config.__M_NO == 11029 ? -308 : Config.__M_NO == 11028 ? 0 : 308; |==> <NO-OP>
11031:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):370:212 |==> 0
11032:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):370:212 |==> -212
11033:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):370:return Config.__M_NO == 0 && Config.COVERED(11031, 11032) ? 212 : Config.__M_NO == 11032 ? -212 : Config.__M_NO == 11031 ? 0 : 212; |==> <NO-OP>
11034:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):372:348 |==> 0
11035:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):372:348 |==> -348
11036:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):372:return Config.__M_NO == 0 && Config.COVERED(11034, 11035) ? 348 : Config.__M_NO == 11035 ? -348 : Config.__M_NO == 11034 ? 0 : 348; |==> <NO-OP>
11037:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):374:219 |==> 0
11038:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):374:219 |==> -219
11039:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):374:return Config.__M_NO == 0 && Config.COVERED(11037, 11038) ? 219 : Config.__M_NO == 11038 ? -219 : Config.__M_NO == 11037 ? 0 : 219; |==> <NO-OP>
11040:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):376:372 |==> 0
11041:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):376:372 |==> -372
11042:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):376:return Config.__M_NO == 0 && Config.COVERED(11040, 11041) ? 372 : Config.__M_NO == 11041 ? -372 : Config.__M_NO == 11040 ? 0 : 372; |==> <NO-OP>
11043:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):378:374 |==> 0
11044:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):378:374 |==> -374
11045:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):378:return Config.__M_NO == 0 && Config.COVERED(11043, 11044) ? 374 : Config.__M_NO == 11044 ? -374 : Config.__M_NO == 11043 ? 0 : 374; |==> <NO-OP>
11046:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):380:226 |==> 0
11047:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):380:226 |==> -226
11048:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):380:return Config.__M_NO == 0 && Config.COVERED(11046, 11047) ? 226 : Config.__M_NO == 11047 ? -226 : Config.__M_NO == 11046 ? 0 : 226; |==> <NO-OP>
11049:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):382:265 |==> 0
11050:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):382:265 |==> -265
11051:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):382:return Config.__M_NO == 0 && Config.COVERED(11049, 11050) ? 265 : Config.__M_NO == 11050 ? -265 : Config.__M_NO == 11049 ? 0 : 265; |==> <NO-OP>
11052:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):384:234 |==> 0
11053:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):384:234 |==> -234
11054:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):384:return Config.__M_NO == 0 && Config.COVERED(11052, 11053) ? 234 : Config.__M_NO == 11053 ? -234 : Config.__M_NO == 11052 ? 0 : 234; |==> <NO-OP>
11055:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):386:285 |==> 0
11056:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):386:285 |==> -285
11057:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):386:return Config.__M_NO == 0 && Config.COVERED(11055, 11056) ? 285 : Config.__M_NO == 11056 ? -285 : Config.__M_NO == 11055 ? 0 : 285; |==> <NO-OP>
11058:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):388:293 |==> 0
11059:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):388:293 |==> -293
11060:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):388:return Config.__M_NO == 0 && Config.COVERED(11058, 11059) ? 293 : Config.__M_NO == 11059 ? -293 : Config.__M_NO == 11058 ? 0 : 293; |==> <NO-OP>
11061:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):390:238 |==> 0
11062:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):390:238 |==> -238
11063:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):390:return Config.__M_NO == 0 && Config.COVERED(11061, 11062) ? 238 : Config.__M_NO == 11062 ? -238 : Config.__M_NO == 11061 ? 0 : 238; |==> <NO-OP>
11064:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):392:309 |==> 0
11065:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):392:309 |==> -309
11066:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):392:return Config.__M_NO == 0 && Config.COVERED(11064, 11065) ? 309 : Config.__M_NO == 11065 ? -309 : Config.__M_NO == 11064 ? 0 : 309; |==> <NO-OP>
11067:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):394:244 |==> 0
11068:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):394:244 |==> -244
11069:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):394:return Config.__M_NO == 0 && Config.COVERED(11067, 11068) ? 244 : Config.__M_NO == 11068 ? -244 : Config.__M_NO == 11067 ? 0 : 244; |==> <NO-OP>
11070:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):396:349 |==> 0
11071:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):396:349 |==> -349
11072:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):396:return Config.__M_NO == 0 && Config.COVERED(11070, 11071) ? 349 : Config.__M_NO == 11071 ? -349 : Config.__M_NO == 11070 ? 0 : 349; |==> <NO-OP>
11073:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):398:251 |==> 0
11074:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):398:251 |==> -251
11075:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):398:return Config.__M_NO == 0 && Config.COVERED(11073, 11074) ? 251 : Config.__M_NO == 11074 ? -251 : Config.__M_NO == 11073 ? 0 : 251; |==> <NO-OP>
11076:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):400:373 |==> 0
11077:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):400:373 |==> -373
11078:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):400:return Config.__M_NO == 0 && Config.COVERED(11076, 11077) ? 373 : Config.__M_NO == 11077 ? -373 : Config.__M_NO == 11076 ? 0 : 373; |==> <NO-OP>
11079:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):402:375 |==> 0
11080:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):402:375 |==> -375
11081:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):402:return Config.__M_NO == 0 && Config.COVERED(11079, 11080) ? 375 : Config.__M_NO == 11080 ? -375 : Config.__M_NO == 11079 ? 0 : 375; |==> <NO-OP>
11082:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):406:195 |==> 0
11083:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):406:195 |==> -195
11084:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):406:return Config.__M_NO == 0 && Config.COVERED(11082, 11083) ? 195 : Config.__M_NO == 11083 ? -195 : Config.__M_NO == 11082 ? 0 : 195; |==> <NO-OP>
11085:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):408:296 |==> 0
11086:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):408:296 |==> -296
11087:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):408:return Config.__M_NO == 0 && Config.COVERED(11085, 11086) ? 296 : Config.__M_NO == 11086 ? -296 : Config.__M_NO == 11085 ? 0 : 296; |==> <NO-OP>
11088:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):410:209 |==> 0
11089:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):410:209 |==> -209
11090:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):410:return Config.__M_NO == 0 && Config.COVERED(11088, 11089) ? 209 : Config.__M_NO == 11089 ? -209 : Config.__M_NO == 11088 ? 0 : 209; |==> <NO-OP>
11091:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):412:213 |==> 0
11092:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):412:213 |==> -213
11093:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):412:return Config.__M_NO == 0 && Config.COVERED(11091, 11092) ? 213 : Config.__M_NO == 11092 ? -213 : Config.__M_NO == 11091 ? 0 : 213; |==> <NO-OP>
11094:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):414:360 |==> 0
11095:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):414:360 |==> -360
11096:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):414:return Config.__M_NO == 0 && Config.COVERED(11094, 11095) ? 360 : Config.__M_NO == 11095 ? -360 : Config.__M_NO == 11094 ? 0 : 360; |==> <NO-OP>
11097:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):416:227 |==> 0
11098:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):416:227 |==> -227
11099:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):416:return Config.__M_NO == 0 && Config.COVERED(11097, 11098) ? 227 : Config.__M_NO == 11098 ? -227 : Config.__M_NO == 11097 ? 0 : 227; |==> <NO-OP>
11100:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):418:297 |==> 0
11101:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):418:297 |==> -297
11102:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):418:return Config.__M_NO == 0 && Config.COVERED(11100, 11101) ? 297 : Config.__M_NO == 11101 ? -297 : Config.__M_NO == 11100 ? 0 : 297; |==> <NO-OP>
11103:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):420:241 |==> 0
11104:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):420:241 |==> -241
11105:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):420:return Config.__M_NO == 0 && Config.COVERED(11103, 11104) ? 241 : Config.__M_NO == 11104 ? -241 : Config.__M_NO == 11103 ? 0 : 241; |==> <NO-OP>
11106:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):422:245 |==> 0
11107:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):422:245 |==> -245
11108:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):422:return Config.__M_NO == 0 && Config.COVERED(11106, 11107) ? 245 : Config.__M_NO == 11107 ? -245 : Config.__M_NO == 11106 ? 0 : 245; |==> <NO-OP>
11109:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):424:361 |==> 0
11110:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):424:361 |==> -361
11111:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):424:return Config.__M_NO == 0 && Config.COVERED(11109, 11110) ? 361 : Config.__M_NO == 11110 ? -361 : Config.__M_NO == 11109 ? 0 : 361; |==> <NO-OP>
11112:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):428:256 |==> 0
11113:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):428:256 |==> -256
11114:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):428:return Config.__M_NO == 0 && Config.COVERED(11112, 11113) ? 256 : Config.__M_NO == 11113 ? -256 : Config.__M_NO == 11112 ? 0 : 256; |==> <NO-OP>
11115:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):430:274 |==> 0
11116:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):430:274 |==> -274
11117:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):430:return Config.__M_NO == 0 && Config.COVERED(11115, 11116) ? 274 : Config.__M_NO == 11116 ? -274 : Config.__M_NO == 11115 ? 0 : 274; |==> <NO-OP>
11118:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):432:298 |==> 0
11119:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):432:298 |==> -298
11120:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):432:return Config.__M_NO == 0 && Config.COVERED(11118, 11119) ? 298 : Config.__M_NO == 11119 ? -298 : Config.__M_NO == 11118 ? 0 : 298; |==> <NO-OP>
11121:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):434:332 |==> 0
11122:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):434:332 |==> -332
11123:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):434:return Config.__M_NO == 0 && Config.COVERED(11121, 11122) ? 332 : Config.__M_NO == 11122 ? -332 : Config.__M_NO == 11121 ? 0 : 332; |==> <NO-OP>
11124:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):436:362 |==> 0
11125:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):436:362 |==> -362
11126:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):436:return Config.__M_NO == 0 && Config.COVERED(11124, 11125) ? 362 : Config.__M_NO == 11125 ? -362 : Config.__M_NO == 11124 ? 0 : 362; |==> <NO-OP>
11127:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):438:257 |==> 0
11128:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):438:257 |==> -257
11129:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):438:return Config.__M_NO == 0 && Config.COVERED(11127, 11128) ? 257 : Config.__M_NO == 11128 ? -257 : Config.__M_NO == 11127 ? 0 : 257; |==> <NO-OP>
11130:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):440:275 |==> 0
11131:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):440:275 |==> -275
11132:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):440:return Config.__M_NO == 0 && Config.COVERED(11130, 11131) ? 275 : Config.__M_NO == 11131 ? -275 : Config.__M_NO == 11130 ? 0 : 275; |==> <NO-OP>
11133:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):442:299 |==> 0
11134:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):442:299 |==> -299
11135:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):442:return Config.__M_NO == 0 && Config.COVERED(11133, 11134) ? 299 : Config.__M_NO == 11134 ? -299 : Config.__M_NO == 11133 ? 0 : 299; |==> <NO-OP>
11136:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):444:333 |==> 0
11137:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):444:333 |==> -333
11138:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):444:return Config.__M_NO == 0 && Config.COVERED(11136, 11137) ? 333 : Config.__M_NO == 11137 ? -333 : Config.__M_NO == 11136 ? 0 : 333; |==> <NO-OP>
11139:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):446:363 |==> 0
11140:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):446:363 |==> -363
11141:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):446:return Config.__M_NO == 0 && Config.COVERED(11139, 11140) ? 363 : Config.__M_NO == 11140 ? -363 : Config.__M_NO == 11139 ? 0 : 363; |==> <NO-OP>
11142:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):450:728 |==> 0
11143:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):450:728 |==> -728
11144:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):450:return Config.__M_NO == 0 && Config.COVERED(11142, 11143) ? 728 : Config.__M_NO == 11143 ? -728 : Config.__M_NO == 11142 ? 0 : 728; |==> <NO-OP>
11145:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):452:258 |==> 0
11146:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):452:258 |==> -258
11147:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):452:return Config.__M_NO == 0 && Config.COVERED(11145, 11146) ? 258 : Config.__M_NO == 11146 ? -258 : Config.__M_NO == 11145 ? 0 : 258; |==> <NO-OP>
11148:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):454:286 |==> 0
11149:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):454:286 |==> -286
11150:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):454:return Config.__M_NO == 0 && Config.COVERED(11148, 11149) ? 286 : Config.__M_NO == 11149 ? -286 : Config.__M_NO == 11148 ? 0 : 286; |==> <NO-OP>
11151:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):456:364 |==> 0
11152:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):456:364 |==> -364
11153:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):456:return Config.__M_NO == 0 && Config.COVERED(11151, 11152) ? 364 : Config.__M_NO == 11152 ? -364 : Config.__M_NO == 11151 ? 0 : 364; |==> <NO-OP>
11154:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):458:259 |==> 0
11155:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):458:259 |==> -259
11156:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):458:return Config.__M_NO == 0 && Config.COVERED(11154, 11155) ? 259 : Config.__M_NO == 11155 ? -259 : Config.__M_NO == 11154 ? 0 : 259; |==> <NO-OP>
11157:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):460:287 |==> 0
11158:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):460:287 |==> -287
11159:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):460:return Config.__M_NO == 0 && Config.COVERED(11157, 11158) ? 287 : Config.__M_NO == 11158 ? -287 : Config.__M_NO == 11157 ? 0 : 287; |==> <NO-OP>
11160:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):462:365 |==> 0
11161:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):462:365 |==> -365
11162:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):462:return Config.__M_NO == 0 && Config.COVERED(11160, 11161) ? 365 : Config.__M_NO == 11161 ? -365 : Config.__M_NO == 11160 ? 0 : 365; |==> <NO-OP>
11163:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):466:266 |==> 0
11164:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):466:266 |==> -266
11165:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):466:return Config.__M_NO == 0 && Config.COVERED(11163, 11164) ? 266 : Config.__M_NO == 11164 ? -266 : Config.__M_NO == 11163 ? 0 : 266; |==> <NO-OP>
11166:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):468:278 |==> 0
11167:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):468:278 |==> -278
11168:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):468:return Config.__M_NO == 0 && Config.COVERED(11166, 11167) ? 278 : Config.__M_NO == 11167 ? -278 : Config.__M_NO == 11166 ? 0 : 278; |==> <NO-OP>
11169:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):470:288 |==> 0
11170:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):470:288 |==> -288
11171:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):470:return Config.__M_NO == 0 && Config.COVERED(11169, 11170) ? 288 : Config.__M_NO == 11170 ? -288 : Config.__M_NO == 11169 ? 0 : 288; |==> <NO-OP>
11172:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):472:304 |==> 0
11173:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):472:304 |==> -304
11174:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):472:return Config.__M_NO == 0 && Config.COVERED(11172, 11173) ? 304 : Config.__M_NO == 11173 ? -304 : Config.__M_NO == 11172 ? 0 : 304; |==> <NO-OP>
11175:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):474:379 |==> 0
11176:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):474:379 |==> -379
11177:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):474:return Config.__M_NO == 0 && Config.COVERED(11175, 11176) ? 379 : Config.__M_NO == 11176 ? -379 : Config.__M_NO == 11175 ? 0 : 379; |==> <NO-OP>
11178:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):476:267 |==> 0
11179:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):476:267 |==> -267
11180:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):476:return Config.__M_NO == 0 && Config.COVERED(11178, 11179) ? 267 : Config.__M_NO == 11179 ? -267 : Config.__M_NO == 11178 ? 0 : 267; |==> <NO-OP>
11181:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):478:279 |==> 0
11182:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):478:279 |==> -279
11183:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):478:return Config.__M_NO == 0 && Config.COVERED(11181, 11182) ? 279 : Config.__M_NO == 11182 ? -279 : Config.__M_NO == 11181 ? 0 : 279; |==> <NO-OP>
11184:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):480:289 |==> 0
11185:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):480:289 |==> -289
11186:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):480:return Config.__M_NO == 0 && Config.COVERED(11184, 11185) ? 289 : Config.__M_NO == 11185 ? -289 : Config.__M_NO == 11184 ? 0 : 289; |==> <NO-OP>
11187:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):482:380 |==> 0
11188:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):482:380 |==> -380
11189:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):482:return Config.__M_NO == 0 && Config.COVERED(11187, 11188) ? 380 : Config.__M_NO == 11188 ? -380 : Config.__M_NO == 11187 ? 0 : 380; |==> <NO-OP>
11190:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):486:168 |==> 0
11191:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):486:168 |==> -168
11192:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):486:return Config.__M_NO == 0 && Config.COVERED(11190, 11191) ? 168 : Config.__M_NO == 11191 ? -168 : Config.__M_NO == 11190 ? 0 : 168; |==> <NO-OP>
11193:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):488:196 |==> 0
11194:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):488:196 |==> -196
11195:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):488:return Config.__M_NO == 0 && Config.COVERED(11193, 11194) ? 196 : Config.__M_NO == 11194 ? -196 : Config.__M_NO == 11193 ? 0 : 196; |==> <NO-OP>
11196:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):490:203 |==> 0
11197:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):490:203 |==> -203
11198:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):490:return Config.__M_NO == 0 && Config.COVERED(11196, 11197) ? 203 : Config.__M_NO == 11197 ? -203 : Config.__M_NO == 11196 ? 0 : 203; |==> <NO-OP>
11199:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):492:207 |==> 0
11200:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):492:207 |==> -207
11201:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):492:return Config.__M_NO == 0 && Config.COVERED(11199, 11200) ? 207 : Config.__M_NO == 11200 ? -207 : Config.__M_NO == 11199 ? 0 : 207; |==> <NO-OP>
11202:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):494:214 |==> 0
11203:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):494:214 |==> -214
11204:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):494:return Config.__M_NO == 0 && Config.COVERED(11202, 11203) ? 214 : Config.__M_NO == 11203 ? -214 : Config.__M_NO == 11202 ? 0 : 214; |==> <NO-OP>
11205:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):496:220 |==> 0
11206:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):496:220 |==> -220
11207:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):496:return Config.__M_NO == 0 && Config.COVERED(11205, 11206) ? 220 : Config.__M_NO == 11206 ? -220 : Config.__M_NO == 11205 ? 0 : 220; |==> <NO-OP>
11208:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):498:376 |==> 0
11209:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):498:376 |==> -376
11210:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):498:return Config.__M_NO == 0 && Config.COVERED(11208, 11209) ? 376 : Config.__M_NO == 11209 ? -376 : Config.__M_NO == 11208 ? 0 : 376; |==> <NO-OP>
11211:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):500:228 |==> 0
11212:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):500:228 |==> -228
11213:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):500:return Config.__M_NO == 0 && Config.COVERED(11211, 11212) ? 228 : Config.__M_NO == 11212 ? -228 : Config.__M_NO == 11211 ? 0 : 228; |==> <NO-OP>
11214:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):502:235 |==> 0
11215:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):502:235 |==> -235
11216:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):502:return Config.__M_NO == 0 && Config.COVERED(11214, 11215) ? 235 : Config.__M_NO == 11215 ? -235 : Config.__M_NO == 11214 ? 0 : 235; |==> <NO-OP>
11217:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):504:239 |==> 0
11218:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):504:239 |==> -239
11219:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):504:return Config.__M_NO == 0 && Config.COVERED(11217, 11218) ? 239 : Config.__M_NO == 11218 ? -239 : Config.__M_NO == 11217 ? 0 : 239; |==> <NO-OP>
11220:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):506:246 |==> 0
11221:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):506:246 |==> -246
11222:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):506:return Config.__M_NO == 0 && Config.COVERED(11220, 11221) ? 246 : Config.__M_NO == 11221 ? -246 : Config.__M_NO == 11220 ? 0 : 246; |==> <NO-OP>
11223:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):508:252 |==> 0
11224:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):508:252 |==> -252
11225:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):508:return Config.__M_NO == 0 && Config.COVERED(11223, 11224) ? 252 : Config.__M_NO == 11224 ? -252 : Config.__M_NO == 11223 ? 0 : 252; |==> <NO-OP>
11226:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):510:255 |==> 0
11227:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):510:255 |==> -255
11228:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):510:return Config.__M_NO == 0 && Config.COVERED(11226, 11227) ? 255 : Config.__M_NO == 11227 ? -255 : Config.__M_NO == 11226 ? 0 : 255; |==> <NO-OP>
11229:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):516:730 |==> 0
11230:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):516:730 |==> -730
11231:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):516:return Config.__M_NO == 0 && Config.COVERED(11229, 11230) ? 730 : Config.__M_NO == 11230 ? -730 : Config.__M_NO == 11229 ? 0 : 730; |==> <NO-OP>
11232:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):518:197 |==> 0
11233:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):518:197 |==> -197
11234:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):518:return Config.__M_NO == 0 && Config.COVERED(11232, 11233) ? 197 : Config.__M_NO == 11233 ? -197 : Config.__M_NO == 11232 ? 0 : 197; |==> <NO-OP>
11235:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):520:366 |==> 0
11236:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):520:366 |==> -366
11237:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):520:return Config.__M_NO == 0 && Config.COVERED(11235, 11236) ? 366 : Config.__M_NO == 11236 ? -366 : Config.__M_NO == 11235 ? 0 : 366; |==> <NO-OP>
11238:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):522:229 |==> 0
11239:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):522:229 |==> -229
11240:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):522:return Config.__M_NO == 0 && Config.COVERED(11238, 11239) ? 229 : Config.__M_NO == 11239 ? -229 : Config.__M_NO == 11238 ? 0 : 229; |==> <NO-OP>
11241:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):524:367 |==> 0
11242:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):524:367 |==> -367
11243:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):524:return Config.__M_NO == 0 && Config.COVERED(11241, 11242) ? 367 : Config.__M_NO == 11242 ? -367 : Config.__M_NO == 11241 ? 0 : 367; |==> <NO-OP>
11244:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):528:184 |==> 0
11245:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):528:184 |==> -184
11246:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):528:return Config.__M_NO == 0 && Config.COVERED(11244, 11245) ? 184 : Config.__M_NO == 11245 ? -184 : Config.__M_NO == 11244 ? 0 : 184; |==> <NO-OP>
11247:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):530:199 |==> 0
11248:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):530:199 |==> -199
11249:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):530:return Config.__M_NO == 0 && Config.COVERED(11247, 11248) ? 199 : Config.__M_NO == 11248 ? -199 : Config.__M_NO == 11247 ? 0 : 199; |==> <NO-OP>
11250:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):532:290 |==> 0
11251:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):532:290 |==> -290
11252:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):532:return Config.__M_NO == 0 && Config.COVERED(11250, 11251) ? 290 : Config.__M_NO == 11251 ? -290 : Config.__M_NO == 11250 ? 0 : 290; |==> <NO-OP>
11253:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):534:310 |==> 0
11254:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):534:310 |==> -310
11255:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):534:return Config.__M_NO == 0 && Config.COVERED(11253, 11254) ? 310 : Config.__M_NO == 11254 ? -310 : Config.__M_NO == 11253 ? 0 : 310; |==> <NO-OP>
11256:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):536:315 |==> 0
11257:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):536:315 |==> -315
11258:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):536:return Config.__M_NO == 0 && Config.COVERED(11256, 11257) ? 315 : Config.__M_NO == 11257 ? -315 : Config.__M_NO == 11256 ? 0 : 315; |==> <NO-OP>
11259:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):538:325 |==> 0
11260:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):538:325 |==> -325
11261:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):538:return Config.__M_NO == 0 && Config.COVERED(11259, 11260) ? 325 : Config.__M_NO == 11260 ? -325 : Config.__M_NO == 11259 ? 0 : 325; |==> <NO-OP>
11262:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):540:342 |==> 0
11263:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):540:342 |==> -342
11264:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):540:return Config.__M_NO == 0 && Config.COVERED(11262, 11263) ? 342 : Config.__M_NO == 11263 ? -342 : Config.__M_NO == 11262 ? 0 : 342; |==> <NO-OP>
11265:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):542:350 |==> 0
11266:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):542:350 |==> -350
11267:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):542:return Config.__M_NO == 0 && Config.COVERED(11265, 11266) ? 350 : Config.__M_NO == 11266 ? -350 : Config.__M_NO == 11265 ? 0 : 350; |==> <NO-OP>
11268:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):544:354 |==> 0
11269:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):544:354 |==> -354
11270:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):544:return Config.__M_NO == 0 && Config.COVERED(11268, 11269) ? 354 : Config.__M_NO == 11269 ? -354 : Config.__M_NO == 11268 ? 0 : 354; |==> <NO-OP>
11271:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):546:231 |==> 0
11272:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):546:231 |==> -231
11273:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):546:return Config.__M_NO == 0 && Config.COVERED(11271, 11272) ? 231 : Config.__M_NO == 11272 ? -231 : Config.__M_NO == 11271 ? 0 : 231; |==> <NO-OP>
11274:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):549:311 |==> 0
11275:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):549:311 |==> -311
11276:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):549:return Config.__M_NO == 0 && Config.COVERED(11274, 11275) ? 311 : Config.__M_NO == 11275 ? -311 : Config.__M_NO == 11274 ? 0 : 311; |==> <NO-OP>
11277:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):551:316 |==> 0
11278:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):551:316 |==> -316
11279:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):551:return Config.__M_NO == 0 && Config.COVERED(11277, 11278) ? 316 : Config.__M_NO == 11278 ? -316 : Config.__M_NO == 11277 ? 0 : 316; |==> <NO-OP>
11280:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):553:326 |==> 0
11281:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):553:326 |==> -326
11282:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):553:return Config.__M_NO == 0 && Config.COVERED(11280, 11281) ? 326 : Config.__M_NO == 11281 ? -326 : Config.__M_NO == 11280 ? 0 : 326; |==> <NO-OP>
11283:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):555:343 |==> 0
11284:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):555:343 |==> -343
11285:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):555:return Config.__M_NO == 0 && Config.COVERED(11283, 11284) ? 343 : Config.__M_NO == 11284 ? -343 : Config.__M_NO == 11283 ? 0 : 343; |==> <NO-OP>
11286:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):557:351 |==> 0
11287:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):557:351 |==> -351
11288:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):557:return Config.__M_NO == 0 && Config.COVERED(11286, 11287) ? 351 : Config.__M_NO == 11287 ? -351 : Config.__M_NO == 11286 ? 0 : 351; |==> <NO-OP>
11289:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):559:355 |==> 0
11290:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):559:355 |==> -355
11291:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):559:return Config.__M_NO == 0 && Config.COVERED(11289, 11290) ? 355 : Config.__M_NO == 11290 ? -355 : Config.__M_NO == 11289 ? 0 : 355; |==> <NO-OP>
11292:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):565:336 |==> 0
11293:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):565:336 |==> -336
11294:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):565:return Config.__M_NO == 0 && Config.COVERED(11292, 11293) ? 336 : Config.__M_NO == 11293 ? -336 : Config.__M_NO == 11292 ? 0 : 336; |==> <NO-OP>
11295:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):567:368 |==> 0
11296:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):567:368 |==> -368
11297:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):567:return Config.__M_NO == 0 && Config.COVERED(11295, 11296) ? 368 : Config.__M_NO == 11296 ? -368 : Config.__M_NO == 11295 ? 0 : 368; |==> <NO-OP>
11298:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):569:337 |==> 0
11299:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):569:337 |==> -337
11300:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):569:return Config.__M_NO == 0 && Config.COVERED(11298, 11299) ? 337 : Config.__M_NO == 11299 ? -337 : Config.__M_NO == 11298 ? 0 : 337; |==> <NO-OP>
11301:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):571:369 |==> 0
11302:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):571:369 |==> -369
11303:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):571:return Config.__M_NO == 0 && Config.COVERED(11301, 11302) ? 369 : Config.__M_NO == 11302 ? -369 : Config.__M_NO == 11301 ? 0 : 369; |==> <NO-OP>
11304:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):575:731 |==> 0
11305:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):575:731 |==> -731
11306:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):575:return Config.__M_NO == 0 && Config.COVERED(11304, 11305) ? 731 : Config.__M_NO == 11305 ? -731 : Config.__M_NO == 11304 ? 0 : 731; |==> <NO-OP>
11307:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):577:260 |==> 0
11308:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):577:260 |==> -260
11309:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):577:return Config.__M_NO == 0 && Config.COVERED(11307, 11308) ? 260 : Config.__M_NO == 11308 ? -260 : Config.__M_NO == 11307 ? 0 : 260; |==> <NO-OP>
11310:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):579:280 |==> 0
11311:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):579:280 |==> -280
11312:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):579:return Config.__M_NO == 0 && Config.COVERED(11310, 11311) ? 280 : Config.__M_NO == 11311 ? -280 : Config.__M_NO == 11310 ? 0 : 280; |==> <NO-OP>
11313:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):581:302 |==> 0
11314:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):581:302 |==> -302
11315:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):581:return Config.__M_NO == 0 && Config.COVERED(11313, 11314) ? 302 : Config.__M_NO == 11314 ? -302 : Config.__M_NO == 11313 ? 0 : 302; |==> <NO-OP>
11316:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):583:370 |==> 0
11317:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):583:370 |==> -370
11318:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):583:return Config.__M_NO == 0 && Config.COVERED(11316, 11317) ? 370 : Config.__M_NO == 11317 ? -370 : Config.__M_NO == 11316 ? 0 : 370; |==> <NO-OP>
11319:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):585:261 |==> 0
11320:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):585:261 |==> -261
11321:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):585:return Config.__M_NO == 0 && Config.COVERED(11319, 11320) ? 261 : Config.__M_NO == 11320 ? -261 : Config.__M_NO == 11319 ? 0 : 261; |==> <NO-OP>
11322:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):587:281 |==> 0
11323:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):587:281 |==> -281
11324:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):587:return Config.__M_NO == 0 && Config.COVERED(11322, 11323) ? 281 : Config.__M_NO == 11323 ? -281 : Config.__M_NO == 11322 ? 0 : 281; |==> <NO-OP>
11325:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):589:303 |==> 0
11326:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):589:303 |==> -303
11327:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):589:return Config.__M_NO == 0 && Config.COVERED(11325, 11326) ? 303 : Config.__M_NO == 11326 ? -303 : Config.__M_NO == 11325 ? 0 : 303; |==> <NO-OP>
11328:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):591:371 |==> 0
11329:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):591:371 |==> -371
11330:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):591:return Config.__M_NO == 0 && Config.COVERED(11328, 11329) ? 371 : Config.__M_NO == 11329 ? -371 : Config.__M_NO == 11328 ? 0 : 371; |==> <NO-OP>
11331:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):595:711 |==> 0
11332:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):595:711 |==> -711
11333:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):595:return Config.__M_NO == 0 && Config.COVERED(11331, 11332) ? 711 : Config.__M_NO == 11332 ? -711 : Config.__M_NO == 11331 ? 0 : 711; |==> <NO-OP>
11334:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):597:268 |==> 0
11335:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):597:268 |==> -268
11336:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):597:return Config.__M_NO == 0 && Config.COVERED(11334, 11335) ? 268 : Config.__M_NO == 11335 ? -268 : Config.__M_NO == 11334 ? 0 : 268; |==> <NO-OP>
11337:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):599:270 |==> 0
11338:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):599:270 |==> -270
11339:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):599:return Config.__M_NO == 0 && Config.COVERED(11337, 11338) ? 270 : Config.__M_NO == 11338 ? -270 : Config.__M_NO == 11337 ? 0 : 270; |==> <NO-OP>
11340:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):601:282 |==> 0
11341:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):601:282 |==> -282
11342:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):601:return Config.__M_NO == 0 && Config.COVERED(11340, 11341) ? 282 : Config.__M_NO == 11341 ? -282 : Config.__M_NO == 11340 ? 0 : 282; |==> <NO-OP>
11343:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):603:317 |==> 0
11344:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):603:317 |==> -317
11345:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):603:return Config.__M_NO == 0 && Config.COVERED(11343, 11344) ? 317 : Config.__M_NO == 11344 ? -317 : Config.__M_NO == 11343 ? 0 : 317; |==> <NO-OP>
11346:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):605:327 |==> 0
11347:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):605:327 |==> -327
11348:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):605:return Config.__M_NO == 0 && Config.COVERED(11346, 11347) ? 327 : Config.__M_NO == 11347 ? -327 : Config.__M_NO == 11346 ? 0 : 327; |==> <NO-OP>
11349:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):607:344 |==> 0
11350:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):607:344 |==> -344
11351:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):607:return Config.__M_NO == 0 && Config.COVERED(11349, 11350) ? 344 : Config.__M_NO == 11350 ? -344 : Config.__M_NO == 11349 ? 0 : 344; |==> <NO-OP>
11352:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):609:352 |==> 0
11353:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):609:352 |==> -352
11354:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):609:return Config.__M_NO == 0 && Config.COVERED(11352, 11353) ? 352 : Config.__M_NO == 11353 ? -352 : Config.__M_NO == 11352 ? 0 : 352; |==> <NO-OP>
11355:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):611:356 |==> 0
11356:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):611:356 |==> -356
11357:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):611:return Config.__M_NO == 0 && Config.COVERED(11355, 11356) ? 356 : Config.__M_NO == 11356 ? -356 : Config.__M_NO == 11355 ? 0 : 356; |==> <NO-OP>
11358:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):613:381 |==> 0
11359:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):613:381 |==> -381
11360:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):613:return Config.__M_NO == 0 && Config.COVERED(11358, 11359) ? 381 : Config.__M_NO == 11359 ? -381 : Config.__M_NO == 11358 ? 0 : 381; |==> <NO-OP>
11361:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):615:269 |==> 0
11362:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):615:269 |==> -269
11363:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):615:return Config.__M_NO == 0 && Config.COVERED(11361, 11362) ? 269 : Config.__M_NO == 11362 ? -269 : Config.__M_NO == 11361 ? 0 : 269; |==> <NO-OP>
11364:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):617:271 |==> 0
11365:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):617:271 |==> -271
11366:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):617:return Config.__M_NO == 0 && Config.COVERED(11364, 11365) ? 271 : Config.__M_NO == 11365 ? -271 : Config.__M_NO == 11364 ? 0 : 271; |==> <NO-OP>
11367:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):619:283 |==> 0
11368:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):619:283 |==> -283
11369:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):619:return Config.__M_NO == 0 && Config.COVERED(11367, 11368) ? 283 : Config.__M_NO == 11368 ? -283 : Config.__M_NO == 11367 ? 0 : 283; |==> <NO-OP>
11370:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):621:318 |==> 0
11371:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):621:318 |==> -318
11372:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):621:return Config.__M_NO == 0 && Config.COVERED(11370, 11371) ? 318 : Config.__M_NO == 11371 ? -318 : Config.__M_NO == 11370 ? 0 : 318; |==> <NO-OP>
11373:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):623:328 |==> 0
11374:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):623:328 |==> -328
11375:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):623:return Config.__M_NO == 0 && Config.COVERED(11373, 11374) ? 328 : Config.__M_NO == 11374 ? -328 : Config.__M_NO == 11373 ? 0 : 328; |==> <NO-OP>
11376:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):625:345 |==> 0
11377:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):625:345 |==> -345
11378:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):625:return Config.__M_NO == 0 && Config.COVERED(11376, 11377) ? 345 : Config.__M_NO == 11377 ? -345 : Config.__M_NO == 11376 ? 0 : 345; |==> <NO-OP>
11379:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):627:353 |==> 0
11380:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):627:353 |==> -353
11381:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):627:return Config.__M_NO == 0 && Config.COVERED(11379, 11380) ? 353 : Config.__M_NO == 11380 ? -353 : Config.__M_NO == 11379 ? 0 : 353; |==> <NO-OP>
11382:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):629:357 |==> 0
11383:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):629:357 |==> -357
11384:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):629:return Config.__M_NO == 0 && Config.COVERED(11382, 11383) ? 357 : Config.__M_NO == 11383 ? -357 : Config.__M_NO == 11382 ? 0 : 357; |==> <NO-OP>
11385:LVR:POS:0:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):631:382 |==> 0
11386:LVR:POS:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):631:382 |==> -382
11387:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):631:return Config.__M_NO == 0 && Config.COVERED(11385, 11386) ? 382 : Config.__M_NO == 11386 ? -382 : Config.__M_NO == 11385 ? 0 : 382; |==> <NO-OP>
11388:LVR:0:POS:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):634:0 |==> 1
11389:LVR:0:NEG:org.marc4j.converter.impl.Iso6937ToUnicode@getCombiningChar(int):634:0 |==> -1
11390:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@<init>():59:2 |==> 0
11391:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@<init>():59:2 |==> -2
11392:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@<init>():59:g = new byte[2] |==> <NO-OP>
11393:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@<init>():60:init() |==> <NO-OP>
11394:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTable@init():67:0 |==> 1
11395:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTable@init():67:0 |==> -1
11396:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@init():67:66 |==> 0
11397:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@init():67:66 |==> -66
11398:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@init():67:g[0] = 66 |==> <NO-OP>
11399:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@init():68:1 |==> 0
11400:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@init():68:1 |==> -1
11401:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@init():68:69 |==> 0
11402:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@init():68:69 |==> -69
11403:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@init():68:g[1] = 69 |==> <NO-OP>
11404:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@init():69:charsetsUsed = "BE" |==> <NO-OP>
11405:EVR:<ARRAY_ACCESS>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTable@getPreviousG0():78:g[G0] |==> 0
11406:EVR:<ARRAY_ACCESS>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTable@getPreviousG1():87:g[G1] |==> 0
11407:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@setPreviousG0(int):96:g[G0] = (byte)table |==> <NO-OP>
11408:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@setPreviousG1(int):105:g[G1] = (byte)table |==> <NO-OP>
11409:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.ReverseCodeTable@codeTableHash(java.lang.Character):116:lastLookupKey != null |==> true
11410:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTable@codeTableHash(java.lang.Character):116:lastLookupKey != null && c.equals(lastLookupKey) |==> lastLookupKey != null == c.equals(lastLookupKey)
11411:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTable@codeTableHash(java.lang.Character):116:lastLookupKey != null && c.equals(lastLookupKey) |==> false
11412:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTable@codeTableHash(java.lang.Character):116:lastLookupKey != null && c.equals(lastLookupKey) |==> lastLookupKey != null
11413:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTable@codeTableHash(java.lang.Character):116:lastLookupKey != null && c.equals(lastLookupKey) |==> c.equals(lastLookupKey)
11414:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@codeTableHash(java.lang.Character):117:return lastLookupValue; |==> <NO-OP>
11415:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@codeTableHash(java.lang.Character):120:lastLookupKey = c |==> <NO-OP>
11416:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@codeTableHash(java.lang.Character):121:lastLookupValue = getCharTable(c) |==> <NO-OP>
11417:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTable@codeTableHash(java.lang.Character):123:lastLookupValue |==> null
11418:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.ReverseCodeTable@charHasMatch(java.lang.Character):133:codeTableHash(c) != null |==> true
11419:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTable@inPreviousG0CharEntry(java.lang.Character):145:codeTableHash(c) |==> null
11420:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.ReverseCodeTable@inPreviousG0CharEntry(java.lang.Character):147:chars != null |==> true
11421:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.ReverseCodeTable@inPreviousG0CharEntry(java.lang.Character):147:chars.get((int)getPreviousG0()) != null |==> true
11422:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTable@inPreviousG0CharEntry(java.lang.Character):147:chars != null && chars.get((int)getPreviousG0()) != null |==> chars != null == (chars.get((int)getPreviousG0()) != null)
11423:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTable@inPreviousG0CharEntry(java.lang.Character):147:chars != null && chars.get((int)getPreviousG0()) != null |==> false
11424:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTable@inPreviousG0CharEntry(java.lang.Character):147:chars != null && chars.get((int)getPreviousG0()) != null |==> chars != null
11425:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTable@inPreviousG0CharEntry(java.lang.Character):147:chars != null && chars.get((int)getPreviousG0()) != null |==> chars.get((int)getPreviousG0()) != null
11426:LVR:TRUE:FALSE:org.marc4j.converter.impl.ReverseCodeTable@inPreviousG0CharEntry(java.lang.Character):148:true |==> false
11427:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@inPreviousG0CharEntry(java.lang.Character):148:return Config.__M_NO == 0 && Config.COVERED(11426, 11426) ? true : Config.__M_NO == 11426 ? false : true; |==> <NO-OP>
11428:LVR:FALSE:TRUE:org.marc4j.converter.impl.ReverseCodeTable@inPreviousG0CharEntry(java.lang.Character):151:false |==> true
11429:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTable@inPreviousG1CharEntry(java.lang.Character):163:codeTableHash(c) |==> null
11430:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.ReverseCodeTable@inPreviousG1CharEntry(java.lang.Character):165:chars != null |==> true
11431:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.ReverseCodeTable@inPreviousG1CharEntry(java.lang.Character):165:chars.get((int)getPreviousG1()) != null |==> true
11432:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTable@inPreviousG1CharEntry(java.lang.Character):165:chars != null && chars.get((int)getPreviousG1()) != null |==> chars != null == (chars.get((int)getPreviousG1()) != null)
11433:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTable@inPreviousG1CharEntry(java.lang.Character):165:chars != null && chars.get((int)getPreviousG1()) != null |==> false
11434:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTable@inPreviousG1CharEntry(java.lang.Character):165:chars != null && chars.get((int)getPreviousG1()) != null |==> chars != null
11435:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTable@inPreviousG1CharEntry(java.lang.Character):165:chars != null && chars.get((int)getPreviousG1()) != null |==> chars.get((int)getPreviousG1()) != null
11436:LVR:TRUE:FALSE:org.marc4j.converter.impl.ReverseCodeTable@inPreviousG1CharEntry(java.lang.Character):166:true |==> false
11437:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@inPreviousG1CharEntry(java.lang.Character):166:return Config.__M_NO == 0 && Config.COVERED(11436, 11436) ? true : Config.__M_NO == 11436 ? false : true; |==> <NO-OP>
11438:LVR:FALSE:TRUE:org.marc4j.converter.impl.ReverseCodeTable@inPreviousG1CharEntry(java.lang.Character):169:false |==> true
11439:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTable@getCurrentG0CharEntry(java.lang.Character):181:getCharEntry(c, getPreviousG0()) |==> null
11440:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTable@getCurrentG1CharEntry(java.lang.Character):193:getCharEntry(c, getPreviousG1()) |==> null
11441:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTable@getCharEntry(java.lang.Character,int):206:codeTableHash(c) |==> null
11442:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.ReverseCodeTable@getCharEntry(java.lang.Character,int):208:chars == null |==> false
11443:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTable@getCharEntry(java.lang.Character,int):209:0 |==> 1
11444:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTable@getCharEntry(java.lang.Character,int):209:0 |==> -1
11445:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@getCharEntry(java.lang.Character,int):209:return new char[Config.__M_NO == 0 && Config.COVERED(11443, 11444) ? 0 : Config.__M_NO == 11444 ? -1 : Config.__M_NO == 11443 ? 1 : 0]; |==> <NO-OP>
11446:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTable@getCharEntry(java.lang.Character,int):212:chars.get(charset) |==> null
11447:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):226:codeTableHash(c) |==> null
11448:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):229:1 |==> 0
11449:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):229:1 |==> -1
11450:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):229:chars.keySet().size() == 1 |==> chars.keySet().size() <= 1
11451:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):229:chars.keySet().size() == 1 |==> chars.keySet().size() >= 1
11452:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):229:chars.keySet().size() == 1 |==> false
11453:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):230:return (char)chars.keySet().iterator().next().intValue(); |==> <NO-OP>
11454:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):233:0 |==> 1
11455:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):233:0 |==> -1
11456:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):233:i < charsetsUsed.length() |==> i != charsetsUsed.length()
11457:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):233:i < charsetsUsed.length() |==> i <= charsetsUsed.length()
11458:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):233:i < charsetsUsed.length() |==> false
11459:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):234:charsetsUsed.charAt(i) |==> 0
11460:COR:chars.containsKey((int)toUse):TRUE:org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):236:chars.containsKey((int)toUse) |==> false
11461:COR:chars.containsKey((int)toUse):FALSE:org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):236:chars.containsKey((int)toUse) |==> true
11462:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):237:return toUse; |==> <NO-OP>
11463:COR:chars.containsKey('S'):TRUE:org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):241:chars.containsKey('S') |==> false
11464:COR:chars.containsKey('S'):FALSE:org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):241:chars.containsKey('S') |==> true
11465:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):244:(char)chars.keySet().iterator().next().intValue() |==> 0
11466:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):247:charsetsUsed = charsetsUsed + returnVal |==> <NO-OP>
11467:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTable@getBestCharSet(java.lang.Character):249:returnVal |==> 0
11468:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):262:2 |==> 0
11469:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):262:2 |==> -2
11470:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):262:str.length() == 2 |==> str.length() <= 2
11471:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):262:str.length() == 2 |==> str.length() >= 2
11472:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):262:str.length() == 2 |==> false
11473:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):263:1 |==> 0
11474:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):263:1 |==> -1
11475:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):263:result = new char[1] |==> <NO-OP>
11476:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):264:0 |==> 1
11477:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):264:0 |==> -1
11478:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):264:16 |==> 0
11479:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):264:16 |==> -16
11480:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):264:result[0] = (char)Integer.parseInt(str, 16) |==> <NO-OP>
11481:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):265:6 |==> 0
11482:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):265:6 |==> -6
11483:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):265:str.length() == 6 |==> str.length() <= 6
11484:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):265:str.length() == 6 |==> str.length() >= 6
11485:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):265:str.length() == 6 |==> false
11486:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):266:3 |==> 0
11487:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):266:3 |==> -3
11488:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):266:result = new char[3] |==> <NO-OP>
11489:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):267:0 |==> 1
11490:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):267:0 |==> -1
11491:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):267:0 |==> 1
11492:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):267:0 |==> -1
11493:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):267:2 |==> 0
11494:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):267:2 |==> -2
11495:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):267:16 |==> 0
11496:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):267:16 |==> -16
11497:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):267:result[0] = (char)Integer.parseInt(str.substring(0, 2), 16) |==> <NO-OP>
11498:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):268:1 |==> 0
11499:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):268:1 |==> -1
11500:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):268:2 |==> 0
11501:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):268:2 |==> -2
11502:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):268:4 |==> 0
11503:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):268:4 |==> -4
11504:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):268:16 |==> 0
11505:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):268:16 |==> -16
11506:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):268:result[1] = (char)Integer.parseInt(str.substring(2, 4), 16) |==> <NO-OP>
11507:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):269:2 |==> 0
11508:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):269:2 |==> -2
11509:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):269:4 |==> 0
11510:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):269:4 |==> -4
11511:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):269:6 |==> 0
11512:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):269:6 |==> -6
11513:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):269:16 |==> 0
11514:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):269:16 |==> -16
11515:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):269:result[2] = (char)Integer.parseInt(str.substring(4, 6), 16) |==> <NO-OP>
11516:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTable@deHexify(java.lang.String):272:result |==> null
11517:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):43:SAXParserFactory.newInstance() |==> null
11518:LVR:TRUE:FALSE:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):44:true |==> false
11519:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):44:factory.setNamespaceAware(true) |==> <NO-OP>
11520:LVR:FALSE:TRUE:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):45:false |==> true
11521:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):45:factory.setValidating(false) |==> <NO-OP>
11522:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):46:factory.newSAXParser() |==> null
11523:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):47:saxParser.getXMLReader() |==> null
11524:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):49:new InputSource(ReverseCodeTableHandler.class.getResourceAsStream("resources/codetables.xml")) |==> null
11525:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):52:new ReverseCodeTableHandler() |==> null
11526:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):54:rdr.setContentHandler(saxUms) |==> <NO-OP>
11527:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):55:rdr.parse(src) |==> <NO-OP>
11528:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):56:charsets = saxUms.getCharSets() |==> <NO-OP>
11529:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):57:saxUms.getCombiningChars() |==> null
11530:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):58:charsets.keySet().toArray() |==> null
11531:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):59:Arrays.sort(charsetsKeys) |==> <NO-OP>
11532:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):61:dumpTablesAsSwitchStatement(combining, charsets, System.out) |==> <NO-OP>
11533:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):64:details.printStackTrace(System.out) |==> <NO-OP>
11534:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@main(java.lang.String[]):65:System.err.println("Exception: " + details) |==> <NO-OP>
11535:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):71:out.println("package org.marc4j.converter.impl;") |==> <NO-OP>
11536:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):72:out.println("") |==> <NO-OP>
11537:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):73:out.println("/**") |==> <NO-OP>
11538:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):74:out.println(" * An implementation of ReverseCodeTable that is used in converting Unicode") |==> <NO-OP>
11539:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):75:out.println(" * data to MARC8 data, that doesn\'t rely on any data files or resources or") |==> <NO-OP>
11540:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):76:out.println(" * data structures") |==> <NO-OP>
11541:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):77:out.println(" *") |==> <NO-OP>
11542:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):78:out.println(" * Warning: This file is generated by running the main routine in the file") |==> <NO-OP>
11543:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):79:out.println(" * ReverseCodeTableHandler.java") |==> <NO-OP>
11544:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):80:out.println(" *") |==> <NO-OP>
11545:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):81:out.println(" * Warning: Do not edit this file, or all edits will be lost at the next") |==> <NO-OP>
11546:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):82:out.println(" * build.") |==> <NO-OP>
11547:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):83:out.println(" */") |==> <NO-OP>
11548:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):84:out.println("") |==> <NO-OP>
11549:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):85:out.println("import java.util.Hashtable;") |==> <NO-OP>
11550:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):86:out.println("") |==> <NO-OP>
11551:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):87:out.println("public class ReverseCodeTableGenerated extends ReverseCodeTable {") |==> <NO-OP>
11552:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):88:out.println("") |==> <NO-OP>
11553:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):89:out.println("\tpublic boolean isCombining(Character c) {") |==> <NO-OP>
11554:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):90:out.println("\t\tswitch ((int)c.charValue()) {") |==> <NO-OP>
11555:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):92:0 |==> 1
11556:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):92:0 |==> -1
11557:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):93:Arrays.sort(combineArray) |==> <NO-OP>
11558:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):96:0 |==> 1
11559:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):96:0 |==> -1
11560:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):96:i < combineArray.length |==> i != combineArray.length
11561:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):96:i < combineArray.length |==> i <= combineArray.length
11562:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):96:i < combineArray.length |==> false
11563:EVR:<ARRAY_ACCESS>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):97:combineArray[i] |==> null
11564:COR:c.equals(prevc):TRUE:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):98:c.equals(prevc) |==> false
11565:COR:c.equals(prevc):FALSE:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):98:c.equals(prevc) |==> true
11566:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):99:out.println("\t\t\tcase 0x" + Integer.toHexString(c.charValue()) + ":") |==> <NO-OP>
11567:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):101:prevc = c |==> <NO-OP>
11568:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):104:out.println("\t\t\t\treturn true;") |==> <NO-OP>
11569:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):105:out.println("\t\t\tdefault: return false;") |==> <NO-OP>
11570:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):106:out.println("\t\t}") |==> <NO-OP>
11571:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):107:out.println("\t}") |==> <NO-OP>
11572:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):108:out.println("") |==> <NO-OP>
11573:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):109:out.println("\tpublic Hashtable<Integer, char[]> getCharTable(Character c) {") |==> <NO-OP>
11574:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):110:out.println("\t\tString resultStr1 = getCharTableCharSet(c);") |==> <NO-OP>
11575:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):111:out.println("\t\tString resultStr2 = getCharTableCharString(c);") |==> <NO-OP>
11576:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):112:out.println("\t\tif (resultStr2 == null)  return(null);") |==> <NO-OP>
11577:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):113:out.println("\t\tHashtable<Integer, char[]> result = new Hashtable<Integer, char[]>(resultStr1.length());") |==> <NO-OP>
11578:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):114:out.println("\t\tString res2[] = resultStr2.split(\" \");") |==> <NO-OP>
11579:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):115:out.println("\t\tfor (int i = 0; i < resultStr1.length(); i++) {") |==> <NO-OP>
11580:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):116:out.println("\t\t\tresult.put(new Integer(resultStr1.charAt(i)), deHexify(res2[(res2.length==1) ? 0 : i]));") |==> <NO-OP>
11581:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):117:out.println("\t\t}") |==> <NO-OP>
11582:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):118:out.println("\t\treturn(result);") |==> <NO-OP>
11583:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):119:out.println("\t}") |==> <NO-OP>
11584:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):120:out.println("") |==> <NO-OP>
11585:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):122:0 |==> 1
11586:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):122:0 |==> -1
11587:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):123:Arrays.sort(charsetsKeys) |==> <NO-OP>
11588:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):124:new StringBuffer() |==> null
11589:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):126:out.println("\tprivate String getCharTableCharSet(Character c)") |==> <NO-OP>
11590:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):127:out.println("\t{") |==> <NO-OP>
11591:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):128:out.println("\t\tint cVal = (int)c.charValue();") |==> <NO-OP>
11592:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):129:out.println("\t\tswitch(cVal) {") |==> <NO-OP>
11593:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):131:0 |==> 1
11594:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):131:0 |==> -1
11595:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):131:sel < charsetsKeys.length |==> sel != charsetsKeys.length
11596:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):131:sel < charsetsKeys.length |==> sel <= charsetsKeys.length
11597:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):131:sel < charsetsKeys.length |==> false
11598:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):132:charsets.get(charsetsKeys[sel]) |==> null
11599:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):133:table.keySet().toArray() |==> null
11600:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):134:Arrays.sort(tableKeys) |==> <NO-OP>
11601:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):135:new StringBuffer() |==> null
11602:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):137:0 |==> 1
11603:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):137:0 |==> -1
11604:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):137:i < tableKeys.length |==> i != tableKeys.length
11605:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):137:i < tableKeys.length |==> i <= tableKeys.length
11606:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):137:i < tableKeys.length |==> false
11607:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):138:sb.append((char)((Integer)tableKeys[i]).intValue()) |==> <NO-OP>
11608:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):140:sb.toString().trim() |==> null
11609:COR:charset.equals("1"):TRUE:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):142:charset.equals("1") |==> false
11610:COR:charset.equals("1"):FALSE:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):142:charset.equals("1") |==> true
11611:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):143:out.println("\t\t\tcase 0x" + Integer.toHexString(charsetsKeys[sel].charValue()) + ": return \"" + charset + "\";") |==> <NO-OP>
11612:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):146:out.println("\t\t}") |==> <NO-OP>
11613:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):147:out.println("\t\treturn \"1\";") |==> <NO-OP>
11614:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):148:out.println("\t}") |==> <NO-OP>
11615:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):149:0 |==> 1
11616:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):149:0 |==> -1
11617:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):149:3500 |==> 0
11618:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):149:3500 |==> -3500
11619:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):149:dumpPartialCharTableCharString(out, buffer, charsetsKeys, charsets, 0, 3500) |==> <NO-OP>
11620:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):150:3500 |==> 0
11621:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):150:3500 |==> -3500
11622:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):150:7000 |==> 0
11623:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):150:7000 |==> -7000
11624:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):150:dumpPartialCharTableCharString(out, buffer, charsetsKeys, charsets, 3500, 7000) |==> <NO-OP>
11625:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):151:7000 |==> 0
11626:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):151:7000 |==> -7000
11627:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):151:10500 |==> 0
11628:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):151:10500 |==> -10500
11629:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):151:dumpPartialCharTableCharString(out, buffer, charsetsKeys, charsets, 7000, 10500) |==> <NO-OP>
11630:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):152:10500 |==> 0
11631:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):152:10500 |==> -10500
11632:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):152:14000 |==> 0
11633:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):152:14000 |==> -14000
11634:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):152:dumpPartialCharTableCharString(out, buffer, charsetsKeys, charsets, 10500, 14000) |==> <NO-OP>
11635:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):153:14000 |==> 0
11636:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):153:14000 |==> -14000
11637:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):153:dumpPartialCharTableCharString(out, buffer, charsetsKeys, charsets, 14000, charsetsKeys.length) |==> <NO-OP>
11638:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):155:out.println("\tprivate String getCharTableCharString(Character c)") |==> <NO-OP>
11639:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):156:out.println("\t{") |==> <NO-OP>
11640:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):157:out.println("\t\tint cVal = (int)c.charValue();") |==> <NO-OP>
11641:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):158:out.println(buffer.toString()) |==> <NO-OP>
11642:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):159:out.println("\t\treturn null;") |==> <NO-OP>
11643:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):160:out.println("\t}") |==> <NO-OP>
11644:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpTablesAsSwitchStatement(java.util.Vector<java.lang.Character>,java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,java.io.PrintStream):161:out.println("}") |==> <NO-OP>
11645:EVR:<PLUS>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):168:"0x" + Integer.toHexString(((Character)charsetsKeys[startOffset]).charValue()) |==> null
11646:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):169:1 |==> 0
11647:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):169:1 |==> -1
11648:AOR:-(int,int):%(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):169:endOffset - 1 |==> endOffset % 1
11649:AOR:-(int,int):*(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):169:endOffset - 1 |==> endOffset * 1
11650:AOR:-(int,int):+(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):169:endOffset - 1 |==> endOffset + 1
11651:AOR:-(int,int):/(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):169:endOffset - 1 |==> endOffset / 1
11652:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):170:buffer.append("\t\tif (cVal >= " + startByteStr + " && cVal <= " + endByteStr + ")  return (getCharTableCharString_" + startByteStr + "_" + endByteStr + "(c));\n") |==> <NO-OP>
11653:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):172:out.println("\tprivate String getCharTableCharString_" + startByteStr + "_" + endByteStr + "(Character c) {") |==> <NO-OP>
11654:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):173:out.println("\t\tswitch((int)c.charValue()) {") |==> <NO-OP>
11655:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):175:startOffset |==> 0
11656:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):175:sel < charsetsKeys.length |==> sel != charsetsKeys.length
11657:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):175:sel < charsetsKeys.length |==> sel <= charsetsKeys.length
11658:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):175:sel < charsetsKeys.length |==> false
11659:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):175:sel < endOffset |==> sel != endOffset
11660:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):175:sel < endOffset |==> sel <= endOffset
11661:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):175:sel < endOffset |==> false
11662:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):175:sel < charsetsKeys.length && sel < endOffset |==> sel < charsetsKeys.length == sel < endOffset
11663:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):175:sel < charsetsKeys.length && sel < endOffset |==> false
11664:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):175:sel < charsetsKeys.length && sel < endOffset |==> sel < charsetsKeys.length
11665:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):175:sel < charsetsKeys.length && sel < endOffset |==> sel < endOffset
11666:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):176:charsets.get(charsetsKeys[sel]) |==> null
11667:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):177:table.keySet().toArray() |==> null
11668:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):178:Arrays.sort(tableKeys) |==> <NO-OP>
11669:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):179:new StringBuffer() |==> null
11670:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):180:new StringBuffer() |==> null
11671:LVR:FALSE:TRUE:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):181:false |==> true
11672:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):184:0 |==> 1
11673:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):184:0 |==> -1
11674:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):184:i < tableKeys.length |==> i != tableKeys.length
11675:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):184:i < tableKeys.length |==> i <= tableKeys.length
11676:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):184:i < tableKeys.length |==> false
11677:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):185:table.get(tableKeys[i]) |==> null
11678:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):186:(char[])value |==> null
11679:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):187:sb1.append(hexify(valarray)) |==> <NO-OP>
11680:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):189:0 |==> 1
11681:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):189:0 |==> -1
11682:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):189:i == 0 |==> i <= 0
11683:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):189:i == 0 |==> i >= 0
11684:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):189:i == 0 |==> false
11685:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):190:sb2.append(hexify(valarray)) |==> <NO-OP>
11686:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:0 |==> 1
11687:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:0 |==> -1
11688:ROR:>(int,int):!=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 |==> i != 0
11689:ROR:>(int,int):>=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 |==> i >= 0
11690:ROR:>(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 |==> false
11691:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:1 |==> 0
11692:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:1 |==> -1
11693:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:valarray.length == 1 |==> valarray.length <= 1
11694:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:valarray.length == 1 |==> valarray.length >= 1
11695:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:valarray.length == 1 |==> false
11696:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 && valarray.length == 1 |==> i > 0 == (valarray.length == 1)
11697:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 && valarray.length == 1 |==> false
11698:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 && valarray.length == 1 |==> i > 0
11699:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 && valarray.length == 1 |==> valarray.length == 1
11700:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:prevcharArray != null |==> true
11701:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 && valarray.length == 1 && prevcharArray != null |==> (i > 0 && valarray.length == 1) == (prevcharArray != null)
11702:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 && valarray.length == 1 && prevcharArray != null |==> false
11703:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 && valarray.length == 1 && prevcharArray != null |==> i > 0 && valarray.length == 1
11704:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 && valarray.length == 1 && prevcharArray != null |==> prevcharArray != null
11705:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:1 |==> 0
11706:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:1 |==> -1
11707:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:prevcharArray.length == 1 |==> prevcharArray.length <= 1
11708:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:prevcharArray.length == 1 |==> prevcharArray.length >= 1
11709:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:prevcharArray.length == 1 |==> false
11710:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 && valarray.length == 1 && prevcharArray != null && prevcharArray.length == 1 |==> (i > 0 && valarray.length == 1 && prevcharArray != null) == (prevcharArray.length == 1)
11711:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 && valarray.length == 1 && prevcharArray != null && prevcharArray.length == 1 |==> false
11712:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 && valarray.length == 1 && prevcharArray != null && prevcharArray.length == 1 |==> i > 0 && valarray.length == 1 && prevcharArray != null
11713:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 && valarray.length == 1 && prevcharArray != null && prevcharArray.length == 1 |==> prevcharArray.length == 1
11714:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:0 |==> 1
11715:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:0 |==> -1
11716:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:0 |==> 1
11717:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:0 |==> -1
11718:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:valarray[0] != prevcharArray[0] |==> valarray[0] < prevcharArray[0]
11719:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:valarray[0] != prevcharArray[0] |==> valarray[0] > prevcharArray[0]
11720:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:valarray[0] != prevcharArray[0] |==> true
11721:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 && valarray.length == 1 && prevcharArray != null && prevcharArray.length == 1 && valarray[0] != prevcharArray[0] |==> (i > 0 && valarray.length == 1 && prevcharArray != null && prevcharArray.length == 1) == (valarray[0] != prevcharArray[0])
11722:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 && valarray.length == 1 && prevcharArray != null && prevcharArray.length == 1 && valarray[0] != prevcharArray[0] |==> false
11723:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 && valarray.length == 1 && prevcharArray != null && prevcharArray.length == 1 && valarray[0] != prevcharArray[0] |==> i > 0 && valarray.length == 1 && prevcharArray != null && prevcharArray.length == 1
11724:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):193:i > 0 && valarray.length == 1 && prevcharArray != null && prevcharArray.length == 1 && valarray[0] != prevcharArray[0] |==> valarray[0] != prevcharArray[0]
11725:LVR:TRUE:FALSE:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):194:true |==> false
11726:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):194:useSB1 = true |==> <NO-OP>
11727:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):196:sb1.append(" ") |==> <NO-OP>
11728:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):197:prevcharArray = valarray |==> <NO-OP>
11729:COR:useSB1:TRUE:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):199:useSB1 |==> false
11730:COR:useSB1:FALSE:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):199:useSB1 |==> true
11731:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):200:out.println("\t\t\tcase 0x" + Integer.toHexString(((Character)charsetsKeys[sel]).charValue()) + ": return \"" + returnVal + "\";") |==> <NO-OP>
11732:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):204:out.println("\t\t\tdefault: return null;") |==> <NO-OP>
11733:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):205:out.println("\t\t}") |==> <NO-OP>
11734:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):206:out.println("\t}") |==> <NO-OP>
11735:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@dumpPartialCharTableCharString(java.io.PrintStream,java.lang.StringBuffer,java.lang.Object[],java.util.Hashtable<java.lang.Character,java.util.Hashtable<java.lang.Integer,char[]>>,int,int):207:out.println("") |==> <NO-OP>
11736:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTableGenerator@hexify(char[]):219:0 |==> 1
11737:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTableGenerator@hexify(char[]):219:0 |==> -1
11738:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@hexify(char[]):219:i < valarray.length |==> i != valarray.length
11739:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@hexify(char[]):219:i < valarray.length |==> i <= valarray.length
11740:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTableGenerator@hexify(char[]):219:i < valarray.length |==> false
11741:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableGenerator@hexify(char[]):220:result += Integer.toHexString(valarray[i]) |==> <NO-OP>
11742:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableGenerator@hexify(char[]):223:result |==> null
11743:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHandler@getCharSets():68:charsets |==> null
11744:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHandler@getCombiningChars():77:combiningchars |==> null
11745:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@setDocumentLocator(org.xml.sax.Locator):89:this.locator = locator |==> <NO-OP>
11746:COR:name.equals("characterSet"):TRUE:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):95:name.equals("characterSet") |==> false
11747:COR:name.equals("characterSet"):FALSE:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):95:name.equals("characterSet") |==> true
11748:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):96:16 |==> 0
11749:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):96:16 |==> -16
11750:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):96:isocode = Integer.valueOf(atts.getValue("ISOcode"), 16) |==> <NO-OP>
11751:COR:name.equals("marc"):TRUE:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):97:name.equals("marc") |==> false
11752:COR:name.equals("marc"):FALSE:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):97:name.equals("marc") |==> true
11753:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):98:data = new StringBuffer() |==> <NO-OP>
11754:COR:name.equals("codeTables"):TRUE:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):99:name.equals("codeTables") |==> false
11755:COR:name.equals("codeTables"):FALSE:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):99:name.equals("codeTables") |==> true
11756:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):100:charsets = new Hashtable<Character, Hashtable<Integer, char[]>>() |==> <NO-OP>
11757:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):101:combiningchars = new Vector<Character>() |==> <NO-OP>
11758:COR:name.equals("ucs"):TRUE:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):102:name.equals("ucs") |==> false
11759:COR:name.equals("ucs"):FALSE:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):102:name.equals("ucs") |==> true
11760:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):103:data = new StringBuffer() |==> <NO-OP>
11761:COR:name.equals("alt"):TRUE:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):104:name.equals("alt") |==> false
11762:COR:name.equals("alt"):FALSE:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):104:name.equals("alt") |==> true
11763:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):105:data = new StringBuffer() |==> <NO-OP>
11764:COR:name.equals("code"):TRUE:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):106:name.equals("code") |==> false
11765:COR:name.equals("code"):FALSE:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):106:name.equals("code") |==> true
11766:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):107:ucs = null |==> <NO-OP>
11767:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):108:altucs = null |==> <NO-OP>
11768:LVR:FALSE:TRUE:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):109:false |==> true
11769:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):109:combining = false |==> <NO-OP>
11770:COR:name.equals("isCombining"):TRUE:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):110:name.equals("isCombining") |==> false
11771:COR:name.equals("isCombining"):FALSE:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):110:name.equals("isCombining") |==> true
11772:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes):111:data = new StringBuffer() |==> <NO-OP>
11773:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.ReverseCodeTableHandler@characters(char[],int,int):117:data != null |==> true
11774:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@characters(char[],int,int):118:data.append(ch, start, length) |==> <NO-OP>
11775:COR:name.equals("marc"):TRUE:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):124:name.equals("marc") |==> false
11776:COR:name.equals("marc"):FALSE:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):124:name.equals("marc") |==> true
11777:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):125:data.toString() |==> null
11778:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):127:6 |==> 0
11779:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):127:6 |==> -6
11780:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):127:marcstr.length() == 6 |==> marcstr.length() <= 6
11781:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):127:marcstr.length() == 6 |==> marcstr.length() >= 6
11782:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):127:marcstr.length() == 6 |==> false
11783:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):128:3 |==> 0
11784:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):128:3 |==> -3
11785:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):128:marc = new char[3] |==> <NO-OP>
11786:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):129:0 |==> 1
11787:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):129:0 |==> -1
11788:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):129:0 |==> 1
11789:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):129:0 |==> -1
11790:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):129:2 |==> 0
11791:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):129:2 |==> -2
11792:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):129:16 |==> 0
11793:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):129:16 |==> -16
11794:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):129:marc[0] = (char)Integer.parseInt(marcstr.substring(0, 2), 16) |==> <NO-OP>
11795:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):130:1 |==> 0
11796:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):130:1 |==> -1
11797:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):130:2 |==> 0
11798:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):130:2 |==> -2
11799:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):130:4 |==> 0
11800:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):130:4 |==> -4
11801:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):130:16 |==> 0
11802:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):130:16 |==> -16
11803:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):130:marc[1] = (char)Integer.parseInt(marcstr.substring(2, 4), 16) |==> <NO-OP>
11804:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):131:2 |==> 0
11805:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):131:2 |==> -2
11806:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):131:4 |==> 0
11807:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):131:4 |==> -4
11808:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):131:6 |==> 0
11809:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):131:6 |==> -6
11810:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):131:16 |==> 0
11811:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):131:16 |==> -16
11812:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):131:marc[2] = (char)Integer.parseInt(marcstr.substring(4, 6), 16) |==> <NO-OP>
11813:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):133:1 |==> 0
11814:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):133:1 |==> -1
11815:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):133:marc = new char[1] |==> <NO-OP>
11816:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):134:0 |==> 1
11817:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):134:0 |==> -1
11818:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):134:16 |==> 0
11819:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):134:16 |==> -16
11820:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):134:marc[0] = (char)Integer.parseInt(marcstr, 16) |==> <NO-OP>
11821:COR:name.equals("ucs"):TRUE:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):136:name.equals("ucs") |==> false
11822:COR:name.equals("ucs"):FALSE:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):136:name.equals("ucs") |==> true
11823:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):137:0 |==> 1
11824:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):137:0 |==> -1
11825:ROR:>(int,int):!=(int,int):org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):137:data.length() > 0 |==> data.length() != 0
11826:ROR:>(int,int):>=(int,int):org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):137:data.length() > 0 |==> data.length() >= 0
11827:ROR:>(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):137:data.length() > 0 |==> false
11828:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):138:16 |==> 0
11829:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):138:16 |==> -16
11830:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):138:ucs = new Character((char)Integer.parseInt(data.toString(), 16)) |==> <NO-OP>
11831:COR:name.equals("alt"):TRUE:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):140:name.equals("alt") |==> false
11832:COR:name.equals("alt"):FALSE:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):140:name.equals("alt") |==> true
11833:LVR:0:POS:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):141:0 |==> 1
11834:LVR:0:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):141:0 |==> -1
11835:ROR:>(int,int):!=(int,int):org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):141:data.length() > 0 |==> data.length() != 0
11836:ROR:>(int,int):>=(int,int):org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):141:data.length() > 0 |==> data.length() >= 0
11837:ROR:>(int,int):FALSE(int,int):org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):141:data.length() > 0 |==> false
11838:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):142:16 |==> 0
11839:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):142:16 |==> -16
11840:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):142:altucs = new Character((char)Integer.parseInt(data.toString(), 16)) |==> <NO-OP>
11841:COR:name.equals("code"):TRUE:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):144:name.equals("code") |==> false
11842:COR:name.equals("code"):FALSE:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):144:name.equals("code") |==> true
11843:COR:combining:TRUE:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):145:combining |==> false
11844:COR:combining:FALSE:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):145:combining |==> true
11845:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):146:ucs != null |==> true
11846:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):147:combiningchars.add(ucs) |==> <NO-OP>
11847:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):150:altucs != null |==> true
11848:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):151:combiningchars.add(altucs) |==> <NO-OP>
11849:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):155:ucs != null |==> true
11850:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):156:charsets.get(ucs) == null |==> false
11851:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):157:1 |==> 0
11852:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):157:1 |==> -1
11853:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):158:h.put(isocode, marc) |==> <NO-OP>
11854:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):159:charsets.put(ucs, h) |==> <NO-OP>
11855:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):161:charsets.get(ucs) |==> null
11856:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):162:h.put(isocode, marc) |==> <NO-OP>
11857:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):166:altucs != null |==> true
11858:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):167:charsets.get(altucs) == null |==> false
11859:LVR:POS:0:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):168:1 |==> 0
11860:LVR:POS:NEG:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):168:1 |==> -1
11861:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):170:h.put(isocode, marc) |==> <NO-OP>
11862:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):171:charsets.put(altucs, h) |==> <NO-OP>
11863:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):173:charsets.get(altucs) |==> null
11864:COR:h.containsKey(isocode):TRUE:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):175:h.containsKey(isocode) |==> false
11865:COR:h.containsKey(isocode):FALSE:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):175:h.containsKey(isocode) |==> true
11866:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):176:h.put(isocode, marc) |==> <NO-OP>
11867:COR:name.equals("isCombining"):TRUE:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):180:name.equals("isCombining") |==> false
11868:COR:name.equals("isCombining"):FALSE:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):180:name.equals("isCombining") |==> true
11869:COR:data.toString().equals("true"):TRUE:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):181:data.toString().equals("true") |==> false
11870:COR:data.toString().equals("true"):FALSE:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):181:data.toString().equals("true") |==> true
11871:LVR:TRUE:FALSE:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):182:true |==> false
11872:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):182:combining = true |==> <NO-OP>
11873:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHandler@endElement(java.lang.String,java.lang.String,java.lang.String):186:data = null |==> <NO-OP>
11874:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@isCombining(java.lang.Character):60:combining.contains(c) |==> false
11875:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@getCharTable(java.lang.Character):71:charsets.get(c) |==> null
11876:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.io.InputStream):81:SAXParserFactory.newInstance() |==> null
11877:LVR:TRUE:FALSE:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.io.InputStream):82:true |==> false
11878:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.io.InputStream):82:factory.setNamespaceAware(true) |==> <NO-OP>
11879:LVR:FALSE:TRUE:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.io.InputStream):83:false |==> true
11880:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.io.InputStream):83:factory.setValidating(false) |==> <NO-OP>
11881:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.io.InputStream):84:factory.newSAXParser() |==> null
11882:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.io.InputStream):85:saxParser.getXMLReader() |==> null
11883:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.io.InputStream):87:new InputSource(byteStream) |==> null
11884:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.io.InputStream):89:new ReverseCodeTableHandler() |==> null
11885:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.io.InputStream):91:rdr.setContentHandler(saxUms) |==> <NO-OP>
11886:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.io.InputStream):92:rdr.parse(src) |==> <NO-OP>
11887:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.io.InputStream):94:charsets = saxUms.getCharSets() |==> <NO-OP>
11888:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.io.InputStream):95:combining = saxUms.getCombiningChars() |==> <NO-OP>
11889:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.lang.String):110:SAXParserFactory.newInstance() |==> null
11890:LVR:TRUE:FALSE:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.lang.String):111:true |==> false
11891:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.lang.String):111:factory.setNamespaceAware(true) |==> <NO-OP>
11892:LVR:FALSE:TRUE:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.lang.String):112:false |==> true
11893:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.lang.String):112:factory.setValidating(false) |==> <NO-OP>
11894:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.lang.String):113:factory.newSAXParser() |==> null
11895:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.lang.String):114:saxParser.getXMLReader() |==> null
11896:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.lang.String):116:new File(filename) |==> null
11897:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.lang.String):117:new InputSource(new FileInputStream(file)) |==> null
11898:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.lang.String):119:new ReverseCodeTableHandler() |==> null
11899:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.lang.String):121:rdr.setContentHandler(saxUms) |==> <NO-OP>
11900:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.lang.String):122:rdr.parse(src) |==> <NO-OP>
11901:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.lang.String):124:charsets = saxUms.getCharSets() |==> <NO-OP>
11902:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.lang.String):125:combining = saxUms.getCombiningChars() |==> <NO-OP>
11903:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.net.URI):139:SAXParserFactory.newInstance() |==> null
11904:LVR:TRUE:FALSE:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.net.URI):140:true |==> false
11905:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.net.URI):140:factory.setNamespaceAware(true) |==> <NO-OP>
11906:LVR:FALSE:TRUE:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.net.URI):141:false |==> true
11907:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.net.URI):141:factory.setValidating(false) |==> <NO-OP>
11908:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.net.URI):142:factory.newSAXParser() |==> null
11909:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.net.URI):143:saxParser.getXMLReader() |==> null
11910:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.net.URI):145:new InputSource(uri.toURL().openStream()) |==> null
11911:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.net.URI):147:new ReverseCodeTableHandler() |==> null
11912:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.net.URI):149:rdr.setContentHandler(saxUms) |==> <NO-OP>
11913:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.net.URI):150:rdr.parse(src) |==> <NO-OP>
11914:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.net.URI):152:charsets = saxUms.getCharSets() |==> <NO-OP>
11915:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.ReverseCodeTableHash@<init>(java.net.URI):153:combining = saxUms.getCombiningChars() |==> <NO-OP>
11916:LVR:FALSE:TRUE:org.marc4j.converter.impl.UnicodeToAnsel:55:false |==> true
11917:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@<init>():63:rct = loadGeneratedTable() |==> <NO-OP>
11918:LVR:TRUE:FALSE:org.marc4j.converter.impl.UnicodeToAnsel@<init>(boolean):77:true |==> false
11919:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@<init>(boolean):77:dontChangeCharset = true |==> <NO-OP>
11920:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@<init>(boolean):78:rct = loadGeneratedTable() |==> <NO-OP>
11921:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@<init>(java.lang.String):94:rct = new ReverseCodeTableHash(pathname) |==> <NO-OP>
11922:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@<init>(java.io.InputStream):108:rct = new ReverseCodeTableHash(in) |==> <NO-OP>
11923:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToAnsel@loadGeneratedTable():113:Class.forName("org.marc4j.converter.impl.ReverseCodeTableGenerated") |==> null
11924:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToAnsel@loadGeneratedTable():114:generated.getConstructor() |==> null
11925:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToAnsel@loadGeneratedTable():115:cons.newInstance() |==> null
11926:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToAnsel@loadGeneratedTable():117:(ReverseCodeTable)rct |==> null
11927:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToAnsel@loadGeneratedTable():121:new ReverseCodeTableHash(AnselToUnicode.class.getResourceAsStream("resources/codetables.xml")) |==> null
11928:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToAnsel@loadGeneratedTable():123:rct |==> null
11929:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToAnsel@convert(char[]):139:new StringBuffer() |==> null
11930:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convert(char[]):141:rct.init() |==> <NO-OP>
11931:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convert(char[]):143:convertPortion(data, sb) |==> <NO-OP>
11932:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convert(char[]):145:rct.getPreviousG0() != ASCII |==> rct.getPreviousG0() < ASCII
11933:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convert(char[]):145:rct.getPreviousG0() != ASCII |==> rct.getPreviousG0() > ASCII
11934:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convert(char[]):145:rct.getPreviousG0() != ASCII |==> true
11935:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convert(char[]):146:sb.append(ESC) |==> <NO-OP>
11936:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convert(char[]):147:sb.append(G0) |==> <NO-OP>
11937:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convert(char[]):148:sb.append((char)ASCII) |==> <NO-OP>
11938:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToAnsel@convert(char[]):151:sb.toString() |==> null
11939:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):166:1 |==> 0
11940:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):166:1 |==> -1
11941:LVR:0:POS:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):168:0 |==> 1
11942:LVR:0:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):168:0 |==> -1
11943:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):168:i < data.length |==> i != data.length
11944:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):168:i < data.length |==> i <= data.length
11945:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):168:i < data.length |==> false
11946:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):169:new Character(data[i]) |==> null
11947:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):170:new StringBuffer() |==> null
11948:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):171:c.charValue() |==> 0
11949:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):173:32 |==> 0
11950:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):173:32 |==> -32
11951:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):173:charValue == 32 |==> charValue <= 32
11952:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):173:charValue == 32 |==> charValue >= 32
11953:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):173:charValue == 32 |==> false
11954:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):173:rct.getPreviousG0() != '1' |==> rct.getPreviousG0() < '1'
11955:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):173:rct.getPreviousG0() != '1' |==> rct.getPreviousG0() > '1'
11956:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):173:rct.getPreviousG0() != '1' |==> true
11957:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):173:charValue == 32 && rct.getPreviousG0() != '1' |==> charValue == 32 == (rct.getPreviousG0() != '1')
11958:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):173:charValue == 32 && rct.getPreviousG0() != '1' |==> false
11959:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):173:charValue == 32 && rct.getPreviousG0() != '1' |==> charValue == 32
11960:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):173:charValue == 32 && rct.getPreviousG0() != '1' |==> rct.getPreviousG0() != '1'
11961:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):174:rct.getPreviousG0() == '1' |==> rct.getPreviousG0() <= '1'
11962:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):174:rct.getPreviousG0() == '1' |==> rct.getPreviousG0() >= '1'
11963:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):174:rct.getPreviousG0() == '1' |==> false
11964:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):175:sb.append(ESC) |==> <NO-OP>
11965:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):176:sb.append(G0) |==> <NO-OP>
11966:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):177:sb.append((char)ASCII) |==> <NO-OP>
11967:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):178:rct.setPreviousG0(ASCII) |==> <NO-OP>
11968:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):181:marc.append(" ") |==> <NO-OP>
11969:COR:rct.charHasMatch(c):TRUE:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):182:rct.charHasMatch(c) |==> false
11970:COR:rct.charHasMatch(c):FALSE:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):182:rct.charHasMatch(c) |==> true
11971:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):191:c.toString() |==> null
11972:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):192:Normalizer.normalize(tmpnorm, Normalizer.Form.NFD) |==> null
11973:COR:tmpNormed.equals(tmpnorm):TRUE:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):194:tmpNormed.equals(tmpnorm) |==> false
11974:COR:tmpNormed.equals(tmpnorm):FALSE:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):194:tmpNormed.equals(tmpnorm) |==> true
11975:COR:allCharsHaveMatch(rct, tmpNormed):TRUE:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):195:allCharsHaveMatch(rct, tmpNormed) |==> false
11976:COR:allCharsHaveMatch(rct, tmpNormed):FALSE:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):195:allCharsHaveMatch(rct, tmpNormed) |==> true
11977:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):196:convertPortion(tmpNormed.toCharArray(), sb) |==> <NO-OP>
11978:STD:<CONT>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):197:continue; |==> <NO-OP>
11979:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):198:2 |==> 0
11980:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):198:2 |==> -2
11981:ROR:>(int,int):!=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):198:tmpNormed.length() > 2 |==> tmpNormed.length() != 2
11982:ROR:>(int,int):>=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):198:tmpNormed.length() > 2 |==> tmpNormed.length() >= 2
11983:ROR:>(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):198:tmpNormed.length() > 2 |==> false
11984:LVR:0:POS:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):199:0 |==> 1
11985:LVR:0:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):199:0 |==> -1
11986:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):199:2 |==> 0
11987:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):199:2 |==> -2
11988:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):200:Normalizer.normalize(firstTwo, Normalizer.Form.NFC) |==> null
11989:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):202:!partialNormed.equals(firstTwo) && allCharsHaveMatch(rct, partialNormed) |==> !partialNormed.equals(firstTwo) == allCharsHaveMatch(rct, partialNormed)
11990:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):202:!partialNormed.equals(firstTwo) && allCharsHaveMatch(rct, partialNormed) |==> false
11991:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):202:!partialNormed.equals(firstTwo) && allCharsHaveMatch(rct, partialNormed) |==> !partialNormed.equals(firstTwo)
11992:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):202:!partialNormed.equals(firstTwo) && allCharsHaveMatch(rct, partialNormed) |==> allCharsHaveMatch(rct, partialNormed)
11993:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):203:2 |==> 0
11994:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):203:2 |==> -2
11995:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):202:!partialNormed.equals(firstTwo) && allCharsHaveMatch(rct, partialNormed) && allCharsHaveMatch(rct, tmpNormed.substring(2)) |==> (!partialNormed.equals(firstTwo) && allCharsHaveMatch(rct, partialNormed)) == allCharsHaveMatch(rct, tmpNormed.substring(2))
11996:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):202:!partialNormed.equals(firstTwo) && allCharsHaveMatch(rct, partialNormed) && allCharsHaveMatch(rct, tmpNormed.substring(2)) |==> false
11997:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):202:!partialNormed.equals(firstTwo) && allCharsHaveMatch(rct, partialNormed) && allCharsHaveMatch(rct, tmpNormed.substring(2)) |==> !partialNormed.equals(firstTwo) && allCharsHaveMatch(rct, partialNormed)
11998:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):203:!partialNormed.equals(firstTwo) && allCharsHaveMatch(rct, partialNormed) && allCharsHaveMatch(rct, tmpNormed.substring(2)) |==> allCharsHaveMatch(rct, tmpNormed.substring(2))
11999:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):204:2 |==> 0
12000:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):204:2 |==> -2
12001:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):204:convertPortion((partialNormed + tmpNormed.substring(2)).toCharArray(), sb) |==> <NO-OP>
12002:STD:<CONT>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):205:continue; |==> <NO-OP>
12003:ROR:!=(int,int):<(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):210:rct.getPreviousG0() != ASCII |==> rct.getPreviousG0() < ASCII
12004:ROR:!=(int,int):>(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):210:rct.getPreviousG0() != ASCII |==> rct.getPreviousG0() > ASCII
12005:ROR:!=(int,int):TRUE(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):210:rct.getPreviousG0() != ASCII |==> true
12006:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):211:sb.append(ESC) |==> <NO-OP>
12007:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):212:sb.append(G0) |==> <NO-OP>
12008:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):213:sb.append((char)ASCII) |==> <NO-OP>
12009:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):214:rct.setPreviousG0(ASCII) |==> <NO-OP>
12010:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):217:4096 |==> 0
12011:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):217:4096 |==> -4096
12012:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):217:charValue < 4096 |==> charValue != 4096
12013:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):217:charValue < 4096 |==> charValue <= 4096
12014:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):217:charValue < 4096 |==> false
12015:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):218:65536 |==> 0
12016:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):218:65536 |==> -65536
12017:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):218:charValue + 65536 |==> charValue % 65536
12018:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):218:charValue + 65536 |==> charValue * 65536
12019:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):218:charValue + 65536 |==> charValue - 65536
12020:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):218:charValue + 65536 |==> charValue / 65536
12021:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):218:1 |==> 0
12022:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):218:1 |==> -1
12023:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):218:marc.append("&#x" + Integer.toHexString(charValue + 65536).toUpperCase().substring(1) + ";") |==> <NO-OP>
12024:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):220:marc.append("&#x" + Integer.toHexString(charValue).toUpperCase() + ";") |==> <NO-OP>
12025:COR:rct.inPreviousG0CharEntry(c):TRUE:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):223:rct.inPreviousG0CharEntry(c) |==> false
12026:COR:rct.inPreviousG0CharEntry(c):FALSE:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):223:rct.inPreviousG0CharEntry(c) |==> true
12027:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):224:marc.append(rct.getCurrentG0CharEntry(c)) |==> <NO-OP>
12028:COR:rct.inPreviousG1CharEntry(c):TRUE:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):225:rct.inPreviousG1CharEntry(c) |==> false
12029:COR:rct.inPreviousG1CharEntry(c):FALSE:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):225:rct.inPreviousG1CharEntry(c) |==> true
12030:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):226:marc.append(rct.getCurrentG1CharEntry(c)) |==> <NO-OP>
12031:COR:dontChangeCharset:TRUE:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):227:dontChangeCharset |==> false
12032:COR:dontChangeCharset:FALSE:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):227:dontChangeCharset |==> true
12033:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):228:4096 |==> 0
12034:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):228:4096 |==> -4096
12035:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):228:charValue < 4096 |==> charValue != 4096
12036:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):228:charValue < 4096 |==> charValue <= 4096
12037:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):228:charValue < 4096 |==> false
12038:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):229:65536 |==> 0
12039:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):229:65536 |==> -65536
12040:AOR:+(int,int):%(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):229:charValue + 65536 |==> charValue % 65536
12041:AOR:+(int,int):*(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):229:charValue + 65536 |==> charValue * 65536
12042:AOR:+(int,int):-(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):229:charValue + 65536 |==> charValue - 65536
12043:AOR:+(int,int):/(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):229:charValue + 65536 |==> charValue / 65536
12044:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):229:1 |==> 0
12045:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):229:1 |==> -1
12046:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):229:marc.append("&#x" + Integer.toHexString(charValue + 65536).toUpperCase().substring(1) + ";") |==> <NO-OP>
12047:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):231:marc.append("&#x" + Integer.toHexString(charValue).toUpperCase() + ";") |==> <NO-OP>
12048:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):241:rct.getBestCharSet(c) |==> 0
12049:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):242:rct.getCharEntry(c, charset) |==> null
12050:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):244:3 |==> 0
12051:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):244:3 |==> -3
12052:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):244:marc8.length == 3 |==> marc8.length <= 3
12053:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):244:marc8.length == 3 |==> marc8.length >= 3
12054:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):244:marc8.length == 3 |==> false
12055:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):245:marc.append(ESC) |==> <NO-OP>
12056:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):246:marc.append(G0multibyte) |==> <NO-OP>
12057:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):247:rct.setPreviousG0(charset) |==> <NO-OP>
12058:LVR:0:POS:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):248:0 |==> 1
12059:LVR:0:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):248:0 |==> -1
12060:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):248:128 |==> 0
12061:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):248:128 |==> -128
12062:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):248:marc8[0] < 128 |==> marc8[0] != 128
12063:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):248:marc8[0] < 128 |==> marc8[0] <= 128
12064:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):248:marc8[0] < 128 |==> false
12065:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):249:marc.append(ESC) |==> <NO-OP>
12066:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):251:98 |==> 0
12067:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):251:98 |==> -98
12068:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):251:charset == 98 |==> charset <= 98
12069:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):251:charset == 98 |==> charset >= 98
12070:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):251:charset == 98 |==> false
12071:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):251:112 |==> 0
12072:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):251:112 |==> -112
12073:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):251:charset == 112 |==> charset <= 112
12074:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):251:charset == 112 |==> charset >= 112
12075:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):251:charset == 112 |==> false
12076:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):251:charset == 98 || charset == 112 |==> charset == 98 != (charset == 112)
12077:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):251:charset == 98 || charset == 112 |==> charset == 98
12078:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):251:charset == 98 || charset == 112 |==> charset == 112
12079:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):251:charset == 98 || charset == 112 |==> true
12080:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):254:marc.append(G0) |==> <NO-OP>
12081:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):257:rct.setPreviousG0(charset) |==> <NO-OP>
12082:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):259:marc.append(ESC) |==> <NO-OP>
12083:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):260:marc.append(G1) |==> <NO-OP>
12084:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):261:rct.setPreviousG1(charset) |==> <NO-OP>
12085:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):264:marc.append((char)charset) |==> <NO-OP>
12086:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):265:marc.append(marc8) |==> <NO-OP>
12087:LVR:0:POS:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):268:0 |==> 1
12088:LVR:0:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):268:0 |==> -1
12089:ROR:>(int,int):!=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):268:sb.length() > 0 |==> sb.length() != 0
12090:ROR:>(int,int):>=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):268:sb.length() > 0 |==> sb.length() >= 0
12091:ROR:>(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):268:sb.length() > 0 |==> false
12092:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):268:rct.isCombining(c) && sb.length() > 0 |==> rct.isCombining(c) == sb.length() > 0
12093:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):268:rct.isCombining(c) && sb.length() > 0 |==> false
12094:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):268:rct.isCombining(c) && sb.length() > 0 |==> rct.isCombining(c)
12095:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):268:rct.isCombining(c) && sb.length() > 0 |==> sb.length() > 0
12096:AOR:-(int,int):%(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):269:sb.length() - prev_len |==> sb.length() % prev_len
12097:AOR:-(int,int):*(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):269:sb.length() - prev_len |==> sb.length() * prev_len
12098:AOR:-(int,int):+(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):269:sb.length() - prev_len |==> sb.length() + prev_len
12099:AOR:-(int,int):/(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):269:sb.length() - prev_len |==> sb.length() / prev_len
12100:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):269:sb.insert(sb.length() - prev_len, marc) |==> <NO-OP>
12101:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):274:864 |==> 0
12102:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):274:864 |==> -864
12103:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):274:(int)c == 864 |==> (int)c <= 864
12104:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):274:(int)c == 864 |==> (int)c >= 864
12105:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):274:(int)c == 864 |==> false
12106:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):275:251 |==> 0
12107:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):275:251 |==> -251
12108:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):275:sb.append((char)251) |==> <NO-OP>
12109:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):278:865 |==> 0
12110:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):278:865 |==> -865
12111:ROR:==(int,int):<=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):278:(int)c == 865 |==> (int)c <= 865
12112:ROR:==(int,int):>=(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):278:(int)c == 865 |==> (int)c >= 865
12113:ROR:==(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):278:(int)c == 865 |==> false
12114:LVR:POS:0:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):279:236 |==> 0
12115:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):279:236 |==> -236
12116:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):279:sb.append((char)236) |==> <NO-OP>
12117:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):282:sb.append(marc) |==> <NO-OP>
12118:STD:<ASSIGN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@convertPortion(char[],java.lang.StringBuffer):285:prev_len = marc.length() |==> <NO-OP>
12119:COR:rct.charHasMatch(c):TRUE:org.marc4j.converter.impl.UnicodeToAnsel@allCharsHaveMatch(org.marc4j.converter.impl.ReverseCodeTable,java.lang.String):291:rct.charHasMatch(c) |==> false
12120:COR:rct.charHasMatch(c):FALSE:org.marc4j.converter.impl.UnicodeToAnsel@allCharsHaveMatch(org.marc4j.converter.impl.ReverseCodeTable,java.lang.String):291:rct.charHasMatch(c) |==> true
12121:LVR:FALSE:TRUE:org.marc4j.converter.impl.UnicodeToAnsel@allCharsHaveMatch(org.marc4j.converter.impl.ReverseCodeTable,java.lang.String):292:false |==> true
12122:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToAnsel@allCharsHaveMatch(org.marc4j.converter.impl.ReverseCodeTable,java.lang.String):292:return Config.__M_NO == 0 && Config.COVERED(12121, 12121) ? false : Config.__M_NO == 12121 ? true : false; |==> <NO-OP>
12123:LVR:TRUE:FALSE:org.marc4j.converter.impl.UnicodeToAnsel@allCharsHaveMatch(org.marc4j.converter.impl.ReverseCodeTable,java.lang.String):296:true |==> false
12124:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):53:Normalizer.normalize(String.valueOf(data), Normalizer.Form.NFC).toCharArray() |==> null
12125:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):55:new StringBuffer() |==> null
12126:LVR:0:POS:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):56:0 |==> 1
12127:LVR:0:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):56:0 |==> -1
12128:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):56:i < normalizedData.length |==> i != normalizedData.length
12129:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):56:i < normalizedData.length |==> i <= normalizedData.length
12130:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):56:i < normalizedData.length |==> false
12131:EVR:<ARRAY_ACCESS>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):57:normalizedData[i] |==> 0
12132:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):58:128 |==> 0
12133:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):58:128 |==> -128
12134:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):58:c < 128 |==> c != 128
12135:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):58:c < 128 |==> c <= 128
12136:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):58:c < 128 |==> false
12137:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):59:sb.append(c) |==> <NO-OP>
12138:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):61:convert(c) |==> 0
12139:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):62:256 |==> 0
12140:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):62:256 |==> -256
12141:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):62:d < 256 |==> d != 256
12142:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):62:d < 256 |==> d <= 256
12143:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):62:d < 256 |==> false
12144:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):63:sb.append((char)d) |==> <NO-OP>
12145:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):65:256 |==> 0
12146:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):65:256 |==> -256
12147:AOR:/(int,int):%(int,int):org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):65:d / 256 |==> d % 256
12148:AOR:/(int,int):*(int,int):org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):65:d / 256 |==> d * 256
12149:AOR:/(int,int):+(int,int):org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):65:d / 256 |==> d + 256
12150:AOR:/(int,int):-(int,int):org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):65:d / 256 |==> d - 256
12151:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):65:sb.append((char)(d / 256)) |==> <NO-OP>
12152:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):66:256 |==> 0
12153:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):66:256 |==> -256
12154:AOR:%(int,int):*(int,int):org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):66:d % 256 |==> d * 256
12155:AOR:%(int,int):+(int,int):org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):66:d % 256 |==> d + 256
12156:AOR:%(int,int):-(int,int):org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):66:d % 256 |==> d - 256
12157:AOR:%(int,int):/(int,int):org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):66:d % 256 |==> d / 256
12158:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):66:sb.append((char)(d % 256)) |==> <NO-OP>
12159:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToIso5426@convert(char[]):70:sb.toString() |==> null
12160:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):76:164 |==> 0
12161:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):76:164 |==> -164
12162:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):76:return Config.__M_NO == 0 && Config.COVERED(12160, 12161) ? 164 : Config.__M_NO == 12161 ? -164 : Config.__M_NO == 12160 ? 0 : 164; |==> <NO-OP>
12163:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):78:55328 |==> 0
12164:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):78:55328 |==> -55328
12165:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):78:return Config.__M_NO == 0 && Config.COVERED(12163, 12164) ? 55328 : Config.__M_NO == 12164 ? -55328 : Config.__M_NO == 12163 ? 0 : 55328; |==> <NO-OP>
12166:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):80:161 |==> 0
12167:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):80:161 |==> -161
12168:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):80:return Config.__M_NO == 0 && Config.COVERED(12166, 12167) ? 161 : Config.__M_NO == 12167 ? -161 : Config.__M_NO == 12166 ? 0 : 161; |==> <NO-OP>
12169:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):82:163 |==> 0
12170:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):82:163 |==> -163
12171:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):82:return Config.__M_NO == 0 && Config.COVERED(12169, 12170) ? 163 : Config.__M_NO == 12170 ? -163 : Config.__M_NO == 12169 ? 0 : 163; |==> <NO-OP>
12172:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):84:165 |==> 0
12173:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):84:165 |==> -165
12174:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):84:return Config.__M_NO == 0 && Config.COVERED(12172, 12173) ? 165 : Config.__M_NO == 12173 ? -165 : Config.__M_NO == 12172 ? 0 : 165; |==> <NO-OP>
12175:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):86:167 |==> 0
12176:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):86:167 |==> -167
12177:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):86:return Config.__M_NO == 0 && Config.COVERED(12175, 12176) ? 167 : Config.__M_NO == 12176 ? -167 : Config.__M_NO == 12175 ? 0 : 167; |==> <NO-OP>
12178:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):88:51232 |==> 0
12179:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):88:51232 |==> -51232
12180:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):88:return Config.__M_NO == 0 && Config.COVERED(12178, 12179) ? 51232 : Config.__M_NO == 12179 ? -51232 : Config.__M_NO == 12178 ? 0 : 51232; |==> <NO-OP>
12181:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):90:173 |==> 0
12182:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):90:173 |==> -173
12183:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):90:return Config.__M_NO == 0 && Config.COVERED(12181, 12182) ? 173 : Config.__M_NO == 12182 ? -173 : Config.__M_NO == 12181 ? 0 : 173; |==> <NO-OP>
12184:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):92:171 |==> 0
12185:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):92:171 |==> -171
12186:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):92:return Config.__M_NO == 0 && Config.COVERED(12184, 12185) ? 171 : Config.__M_NO == 12185 ? -171 : Config.__M_NO == 12184 ? 0 : 171; |==> <NO-OP>
12187:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):94:175 |==> 0
12188:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):94:175 |==> -175
12189:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):94:return Config.__M_NO == 0 && Config.COVERED(12187, 12188) ? 175 : Config.__M_NO == 12188 ? -175 : Config.__M_NO == 12187 ? 0 : 175; |==> <NO-OP>
12190:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):96:183 |==> 0
12191:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):96:183 |==> -183
12192:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):96:return Config.__M_NO == 0 && Config.COVERED(12190, 12191) ? 183 : Config.__M_NO == 12191 ? -183 : Config.__M_NO == 12190 ? 0 : 183; |==> <NO-OP>
12193:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):98:53280 |==> 0
12194:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):98:53280 |==> -53280
12195:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):98:return Config.__M_NO == 0 && Config.COVERED(12193, 12194) ? 53280 : Config.__M_NO == 12194 ? -53280 : Config.__M_NO == 12193 ? 0 : 53280; |==> <NO-OP>
12196:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):100:187 |==> 0
12197:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):100:187 |==> -187
12198:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):100:return Config.__M_NO == 0 && Config.COVERED(12196, 12197) ? 187 : Config.__M_NO == 12197 ? -187 : Config.__M_NO == 12196 ? 0 : 187; |==> <NO-OP>
12199:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):102:191 |==> 0
12200:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):102:191 |==> -191
12201:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):102:return Config.__M_NO == 0 && Config.COVERED(12199, 12200) ? 191 : Config.__M_NO == 12200 ? -191 : Config.__M_NO == 12199 ? 0 : 191; |==> <NO-OP>
12202:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):104:49473 |==> 0
12203:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):104:49473 |==> -49473
12204:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):104:return Config.__M_NO == 0 && Config.COVERED(12202, 12203) ? 49473 : Config.__M_NO == 12203 ? -49473 : Config.__M_NO == 12202 ? 0 : 49473; |==> <NO-OP>
12205:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):106:49729 |==> 0
12206:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):106:49729 |==> -49729
12207:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):106:return Config.__M_NO == 0 && Config.COVERED(12205, 12206) ? 49729 : Config.__M_NO == 12206 ? -49729 : Config.__M_NO == 12205 ? 0 : 49729; |==> <NO-OP>
12208:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):108:49985 |==> 0
12209:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):108:49985 |==> -49985
12210:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):108:return Config.__M_NO == 0 && Config.COVERED(12208, 12209) ? 49985 : Config.__M_NO == 12209 ? -49985 : Config.__M_NO == 12208 ? 0 : 49985; |==> <NO-OP>
12211:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):110:50241 |==> 0
12212:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):110:50241 |==> -50241
12213:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):110:return Config.__M_NO == 0 && Config.COVERED(12211, 12212) ? 50241 : Config.__M_NO == 12212 ? -50241 : Config.__M_NO == 12211 ? 0 : 50241; |==> <NO-OP>
12214:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):112:51265 |==> 0
12215:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):112:51265 |==> -51265
12216:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):112:return Config.__M_NO == 0 && Config.COVERED(12214, 12215) ? 51265 : Config.__M_NO == 12215 ? -51265 : Config.__M_NO == 12214 ? 0 : 51265; |==> <NO-OP>
12217:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):114:51777 |==> 0
12218:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):114:51777 |==> -51777
12219:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):114:return Config.__M_NO == 0 && Config.COVERED(12217, 12218) ? 51777 : Config.__M_NO == 12218 ? -51777 : Config.__M_NO == 12217 ? 0 : 51777; |==> <NO-OP>
12220:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):116:225 |==> 0
12221:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):116:225 |==> -225
12222:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):116:return Config.__M_NO == 0 && Config.COVERED(12220, 12221) ? 225 : Config.__M_NO == 12221 ? -225 : Config.__M_NO == 12220 ? 0 : 225; |==> <NO-OP>
12223:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):118:53315 |==> 0
12224:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):118:53315 |==> -53315
12225:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):118:return Config.__M_NO == 0 && Config.COVERED(12223, 12224) ? 53315 : Config.__M_NO == 12224 ? -53315 : Config.__M_NO == 12223 ? 0 : 53315; |==> <NO-OP>
12226:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):120:49477 |==> 0
12227:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):120:49477 |==> -49477
12228:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):120:return Config.__M_NO == 0 && Config.COVERED(12226, 12227) ? 49477 : Config.__M_NO == 12227 ? -49477 : Config.__M_NO == 12226 ? 0 : 49477; |==> <NO-OP>
12229:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):122:49733 |==> 0
12230:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):122:49733 |==> -49733
12231:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):122:return Config.__M_NO == 0 && Config.COVERED(12229, 12230) ? 49733 : Config.__M_NO == 12230 ? -49733 : Config.__M_NO == 12229 ? 0 : 49733; |==> <NO-OP>
12232:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):124:49989 |==> 0
12233:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):124:49989 |==> -49989
12234:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):124:return Config.__M_NO == 0 && Config.COVERED(12232, 12233) ? 49989 : Config.__M_NO == 12233 ? -49989 : Config.__M_NO == 12232 ? 0 : 49989; |==> <NO-OP>
12235:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):126:51269 |==> 0
12236:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):126:51269 |==> -51269
12237:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):126:return Config.__M_NO == 0 && Config.COVERED(12235, 12236) ? 51269 : Config.__M_NO == 12236 ? -51269 : Config.__M_NO == 12235 ? 0 : 51269; |==> <NO-OP>
12238:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):128:49481 |==> 0
12239:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):128:49481 |==> -49481
12240:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):128:return Config.__M_NO == 0 && Config.COVERED(12238, 12239) ? 49481 : Config.__M_NO == 12239 ? -49481 : Config.__M_NO == 12238 ? 0 : 49481; |==> <NO-OP>
12241:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):130:49737 |==> 0
12242:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):130:49737 |==> -49737
12243:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):130:return Config.__M_NO == 0 && Config.COVERED(12241, 12242) ? 49737 : Config.__M_NO == 12242 ? -49737 : Config.__M_NO == 12241 ? 0 : 49737; |==> <NO-OP>
12244:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):132:49993 |==> 0
12245:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):132:49993 |==> -49993
12246:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):132:return Config.__M_NO == 0 && Config.COVERED(12244, 12245) ? 49993 : Config.__M_NO == 12245 ? -49993 : Config.__M_NO == 12244 ? 0 : 49993; |==> <NO-OP>
12247:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):134:51273 |==> 0
12248:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):134:51273 |==> -51273
12249:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):134:return Config.__M_NO == 0 && Config.COVERED(12247, 12248) ? 51273 : Config.__M_NO == 12248 ? -51273 : Config.__M_NO == 12247 ? 0 : 51273; |==> <NO-OP>
12250:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):136:50254 |==> 0
12251:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):136:50254 |==> -50254
12252:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):136:return Config.__M_NO == 0 && Config.COVERED(12250, 12251) ? 50254 : Config.__M_NO == 12251 ? -50254 : Config.__M_NO == 12250 ? 0 : 50254; |==> <NO-OP>
12253:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):138:49487 |==> 0
12254:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):138:49487 |==> -49487
12255:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):138:return Config.__M_NO == 0 && Config.COVERED(12253, 12254) ? 49487 : Config.__M_NO == 12254 ? -49487 : Config.__M_NO == 12253 ? 0 : 49487; |==> <NO-OP>
12256:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):140:49743 |==> 0
12257:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):140:49743 |==> -49743
12258:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):140:return Config.__M_NO == 0 && Config.COVERED(12256, 12257) ? 49743 : Config.__M_NO == 12257 ? -49743 : Config.__M_NO == 12256 ? 0 : 49743; |==> <NO-OP>
12259:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):142:49999 |==> 0
12260:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):142:49999 |==> -49999
12261:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):142:return Config.__M_NO == 0 && Config.COVERED(12259, 12260) ? 49999 : Config.__M_NO == 12260 ? -49999 : Config.__M_NO == 12259 ? 0 : 49999; |==> <NO-OP>
12262:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):144:50255 |==> 0
12263:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):144:50255 |==> -50255
12264:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):144:return Config.__M_NO == 0 && Config.COVERED(12262, 12263) ? 50255 : Config.__M_NO == 12263 ? -50255 : Config.__M_NO == 12262 ? 0 : 50255; |==> <NO-OP>
12265:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):146:51279 |==> 0
12266:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):146:51279 |==> -51279
12267:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):146:return Config.__M_NO == 0 && Config.COVERED(12265, 12266) ? 51279 : Config.__M_NO == 12266 ? -51279 : Config.__M_NO == 12265 ? 0 : 51279; |==> <NO-OP>
12268:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):148:233 |==> 0
12269:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):148:233 |==> -233
12270:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):148:return Config.__M_NO == 0 && Config.COVERED(12268, 12269) ? 233 : Config.__M_NO == 12269 ? -233 : Config.__M_NO == 12268 ? 0 : 233; |==> <NO-OP>
12271:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):151:49493 |==> 0
12272:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):151:49493 |==> -49493
12273:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):151:return Config.__M_NO == 0 && Config.COVERED(12271, 12272) ? 49493 : Config.__M_NO == 12272 ? -49493 : Config.__M_NO == 12271 ? 0 : 49493; |==> <NO-OP>
12274:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):153:49749 |==> 0
12275:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):153:49749 |==> -49749
12276:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):153:return Config.__M_NO == 0 && Config.COVERED(12274, 12275) ? 49749 : Config.__M_NO == 12275 ? -49749 : Config.__M_NO == 12274 ? 0 : 49749; |==> <NO-OP>
12277:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):155:50005 |==> 0
12278:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):155:50005 |==> -50005
12279:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):155:return Config.__M_NO == 0 && Config.COVERED(12277, 12278) ? 50005 : Config.__M_NO == 12278 ? -50005 : Config.__M_NO == 12277 ? 0 : 50005; |==> <NO-OP>
12280:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):157:51285 |==> 0
12281:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):157:51285 |==> -51285
12282:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):157:return Config.__M_NO == 0 && Config.COVERED(12280, 12281) ? 51285 : Config.__M_NO == 12281 ? -51285 : Config.__M_NO == 12280 ? 0 : 51285; |==> <NO-OP>
12283:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):159:49753 |==> 0
12284:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):159:49753 |==> -49753
12285:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):159:return Config.__M_NO == 0 && Config.COVERED(12283, 12284) ? 49753 : Config.__M_NO == 12284 ? -49753 : Config.__M_NO == 12283 ? 0 : 49753; |==> <NO-OP>
12286:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):161:236 |==> 0
12287:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):161:236 |==> -236
12288:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):161:return Config.__M_NO == 0 && Config.COVERED(12286, 12287) ? 236 : Config.__M_NO == 12287 ? -236 : Config.__M_NO == 12286 ? 0 : 236; |==> <NO-OP>
12289:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):163:251 |==> 0
12290:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):163:251 |==> -251
12291:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):163:return Config.__M_NO == 0 && Config.COVERED(12289, 12290) ? 251 : Config.__M_NO == 12290 ? -251 : Config.__M_NO == 12289 ? 0 : 251; |==> <NO-OP>
12292:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):165:49505 |==> 0
12293:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):165:49505 |==> -49505
12294:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):165:return Config.__M_NO == 0 && Config.COVERED(12292, 12293) ? 49505 : Config.__M_NO == 12293 ? -49505 : Config.__M_NO == 12292 ? 0 : 49505; |==> <NO-OP>
12295:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):167:49761 |==> 0
12296:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):167:49761 |==> -49761
12297:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):167:return Config.__M_NO == 0 && Config.COVERED(12295, 12296) ? 49761 : Config.__M_NO == 12296 ? -49761 : Config.__M_NO == 12295 ? 0 : 49761; |==> <NO-OP>
12298:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):169:50017 |==> 0
12299:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):169:50017 |==> -50017
12300:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):169:return Config.__M_NO == 0 && Config.COVERED(12298, 12299) ? 50017 : Config.__M_NO == 12299 ? -50017 : Config.__M_NO == 12298 ? 0 : 50017; |==> <NO-OP>
12301:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):171:50273 |==> 0
12302:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):171:50273 |==> -50273
12303:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):171:return Config.__M_NO == 0 && Config.COVERED(12301, 12302) ? 50273 : Config.__M_NO == 12302 ? -50273 : Config.__M_NO == 12301 ? 0 : 50273; |==> <NO-OP>
12304:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):173:51297 |==> 0
12305:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):173:51297 |==> -51297
12306:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):173:return Config.__M_NO == 0 && Config.COVERED(12304, 12305) ? 51297 : Config.__M_NO == 12305 ? -51297 : Config.__M_NO == 12304 ? 0 : 51297; |==> <NO-OP>
12307:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):175:51809 |==> 0
12308:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):175:51809 |==> -51809
12309:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):175:return Config.__M_NO == 0 && Config.COVERED(12307, 12308) ? 51809 : Config.__M_NO == 12308 ? -51809 : Config.__M_NO == 12307 ? 0 : 51809; |==> <NO-OP>
12310:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):177:241 |==> 0
12311:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):177:241 |==> -241
12312:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):177:return Config.__M_NO == 0 && Config.COVERED(12310, 12311) ? 241 : Config.__M_NO == 12311 ? -241 : Config.__M_NO == 12310 ? 0 : 241; |==> <NO-OP>
12313:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):179:53347 |==> 0
12314:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):179:53347 |==> -53347
12315:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):179:return Config.__M_NO == 0 && Config.COVERED(12313, 12314) ? 53347 : Config.__M_NO == 12314 ? -53347 : Config.__M_NO == 12313 ? 0 : 53347; |==> <NO-OP>
12316:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):181:49509 |==> 0
12317:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):181:49509 |==> -49509
12318:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):181:return Config.__M_NO == 0 && Config.COVERED(12316, 12317) ? 49509 : Config.__M_NO == 12317 ? -49509 : Config.__M_NO == 12316 ? 0 : 49509; |==> <NO-OP>
12319:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):183:49765 |==> 0
12320:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):183:49765 |==> -49765
12321:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):183:return Config.__M_NO == 0 && Config.COVERED(12319, 12320) ? 49765 : Config.__M_NO == 12320 ? -49765 : Config.__M_NO == 12319 ? 0 : 49765; |==> <NO-OP>
12322:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):185:50021 |==> 0
12323:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):185:50021 |==> -50021
12324:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):185:return Config.__M_NO == 0 && Config.COVERED(12322, 12323) ? 50021 : Config.__M_NO == 12323 ? -50021 : Config.__M_NO == 12322 ? 0 : 50021; |==> <NO-OP>
12325:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):187:51301 |==> 0
12326:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):187:51301 |==> -51301
12327:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):187:return Config.__M_NO == 0 && Config.COVERED(12325, 12326) ? 51301 : Config.__M_NO == 12326 ? -51301 : Config.__M_NO == 12325 ? 0 : 51301; |==> <NO-OP>
12328:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):189:49513 |==> 0
12329:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):189:49513 |==> -49513
12330:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):189:return Config.__M_NO == 0 && Config.COVERED(12328, 12329) ? 49513 : Config.__M_NO == 12329 ? -49513 : Config.__M_NO == 12328 ? 0 : 49513; |==> <NO-OP>
12331:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):191:49769 |==> 0
12332:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):191:49769 |==> -49769
12333:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):191:return Config.__M_NO == 0 && Config.COVERED(12331, 12332) ? 49769 : Config.__M_NO == 12332 ? -49769 : Config.__M_NO == 12331 ? 0 : 49769; |==> <NO-OP>
12334:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):193:50025 |==> 0
12335:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):193:50025 |==> -50025
12336:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):193:return Config.__M_NO == 0 && Config.COVERED(12334, 12335) ? 50025 : Config.__M_NO == 12335 ? -50025 : Config.__M_NO == 12334 ? 0 : 50025; |==> <NO-OP>
12337:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):195:51305 |==> 0
12338:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):195:51305 |==> -51305
12339:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):195:return Config.__M_NO == 0 && Config.COVERED(12337, 12338) ? 51305 : Config.__M_NO == 12338 ? -51305 : Config.__M_NO == 12337 ? 0 : 51305; |==> <NO-OP>
12340:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):197:243 |==> 0
12341:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):197:243 |==> -243
12342:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):197:return Config.__M_NO == 0 && Config.COVERED(12340, 12341) ? 243 : Config.__M_NO == 12341 ? -243 : Config.__M_NO == 12340 ? 0 : 243; |==> <NO-OP>
12343:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):199:50286 |==> 0
12344:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):199:50286 |==> -50286
12345:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):199:return Config.__M_NO == 0 && Config.COVERED(12343, 12344) ? 50286 : Config.__M_NO == 12344 ? -50286 : Config.__M_NO == 12343 ? 0 : 50286; |==> <NO-OP>
12346:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):201:49519 |==> 0
12347:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):201:49519 |==> -49519
12348:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):201:return Config.__M_NO == 0 && Config.COVERED(12346, 12347) ? 49519 : Config.__M_NO == 12347 ? -49519 : Config.__M_NO == 12346 ? 0 : 49519; |==> <NO-OP>
12349:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):203:49775 |==> 0
12350:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):203:49775 |==> -49775
12351:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):203:return Config.__M_NO == 0 && Config.COVERED(12349, 12350) ? 49775 : Config.__M_NO == 12350 ? -49775 : Config.__M_NO == 12349 ? 0 : 49775; |==> <NO-OP>
12352:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):205:50031 |==> 0
12353:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):205:50031 |==> -50031
12354:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):205:return Config.__M_NO == 0 && Config.COVERED(12352, 12353) ? 50031 : Config.__M_NO == 12353 ? -50031 : Config.__M_NO == 12352 ? 0 : 50031; |==> <NO-OP>
12355:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):207:50287 |==> 0
12356:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):207:50287 |==> -50287
12357:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):207:return Config.__M_NO == 0 && Config.COVERED(12355, 12356) ? 50287 : Config.__M_NO == 12356 ? -50287 : Config.__M_NO == 12355 ? 0 : 50287; |==> <NO-OP>
12358:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):209:51311 |==> 0
12359:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):209:51311 |==> -51311
12360:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):209:return Config.__M_NO == 0 && Config.COVERED(12358, 12359) ? 51311 : Config.__M_NO == 12359 ? -51311 : Config.__M_NO == 12358 ? 0 : 51311; |==> <NO-OP>
12361:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):211:249 |==> 0
12362:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):211:249 |==> -249
12363:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):211:return Config.__M_NO == 0 && Config.COVERED(12361, 12362) ? 249 : Config.__M_NO == 12362 ? -249 : Config.__M_NO == 12361 ? 0 : 249; |==> <NO-OP>
12364:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):213:49525 |==> 0
12365:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):213:49525 |==> -49525
12366:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):213:return Config.__M_NO == 0 && Config.COVERED(12364, 12365) ? 49525 : Config.__M_NO == 12365 ? -49525 : Config.__M_NO == 12364 ? 0 : 49525; |==> <NO-OP>
12367:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):215:49781 |==> 0
12368:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):215:49781 |==> -49781
12369:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):215:return Config.__M_NO == 0 && Config.COVERED(12367, 12368) ? 49781 : Config.__M_NO == 12368 ? -49781 : Config.__M_NO == 12367 ? 0 : 49781; |==> <NO-OP>
12370:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):217:50037 |==> 0
12371:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):217:50037 |==> -50037
12372:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):217:return Config.__M_NO == 0 && Config.COVERED(12370, 12371) ? 50037 : Config.__M_NO == 12371 ? -50037 : Config.__M_NO == 12370 ? 0 : 50037; |==> <NO-OP>
12373:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):219:51317 |==> 0
12374:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):219:51317 |==> -51317
12375:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):219:return Config.__M_NO == 0 && Config.COVERED(12373, 12374) ? 51317 : Config.__M_NO == 12374 ? -51317 : Config.__M_NO == 12373 ? 0 : 51317; |==> <NO-OP>
12376:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):221:49785 |==> 0
12377:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):221:49785 |==> -49785
12378:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):221:return Config.__M_NO == 0 && Config.COVERED(12376, 12377) ? 49785 : Config.__M_NO == 12377 ? -49785 : Config.__M_NO == 12376 ? 0 : 49785; |==> <NO-OP>
12379:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):223:252 |==> 0
12380:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):223:252 |==> -252
12381:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):223:return Config.__M_NO == 0 && Config.COVERED(12379, 12380) ? 252 : Config.__M_NO == 12380 ? -252 : Config.__M_NO == 12379 ? 0 : 252; |==> <NO-OP>
12382:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):225:51321 |==> 0
12383:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):225:51321 |==> -51321
12384:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):225:return Config.__M_NO == 0 && Config.COVERED(12382, 12383) ? 51321 : Config.__M_NO == 12383 ? -51321 : Config.__M_NO == 12382 ? 0 : 51321; |==> <NO-OP>
12385:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):227:50497 |==> 0
12386:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):227:50497 |==> -50497
12387:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):227:return Config.__M_NO == 0 && Config.COVERED(12385, 12386) ? 50497 : Config.__M_NO == 12386 ? -50497 : Config.__M_NO == 12385 ? 0 : 50497; |==> <NO-OP>
12388:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):229:50529 |==> 0
12389:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):229:50529 |==> -50529
12390:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):229:return Config.__M_NO == 0 && Config.COVERED(12388, 12389) ? 50529 : Config.__M_NO == 12389 ? -50529 : Config.__M_NO == 12388 ? 0 : 50529; |==> <NO-OP>
12391:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):231:50753 |==> 0
12392:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):231:50753 |==> -50753
12393:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):231:return Config.__M_NO == 0 && Config.COVERED(12391, 12392) ? 50753 : Config.__M_NO == 12392 ? -50753 : Config.__M_NO == 12391 ? 0 : 50753; |==> <NO-OP>
12394:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):233:50785 |==> 0
12395:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):233:50785 |==> -50785
12396:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):233:return Config.__M_NO == 0 && Config.COVERED(12394, 12395) ? 50785 : Config.__M_NO == 12395 ? -50785 : Config.__M_NO == 12394 ? 0 : 50785; |==> <NO-OP>
12397:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):235:54081 |==> 0
12398:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):235:54081 |==> -54081
12399:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):235:return Config.__M_NO == 0 && Config.COVERED(12397, 12398) ? 54081 : Config.__M_NO == 12398 ? -54081 : Config.__M_NO == 12397 ? 0 : 54081; |==> <NO-OP>
12400:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):237:54113 |==> 0
12401:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):237:54113 |==> -54113
12402:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):237:return Config.__M_NO == 0 && Config.COVERED(12400, 12401) ? 54113 : Config.__M_NO == 12401 ? -54113 : Config.__M_NO == 12400 ? 0 : 54113; |==> <NO-OP>
12403:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):239:49731 |==> 0
12404:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):239:49731 |==> -49731
12405:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):239:return Config.__M_NO == 0 && Config.COVERED(12403, 12404) ? 49731 : Config.__M_NO == 12404 ? -49731 : Config.__M_NO == 12403 ? 0 : 49731; |==> <NO-OP>
12406:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):241:49763 |==> 0
12407:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):241:49763 |==> -49763
12408:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):241:return Config.__M_NO == 0 && Config.COVERED(12406, 12407) ? 49763 : Config.__M_NO == 12407 ? -49763 : Config.__M_NO == 12406 ? 0 : 49763; |==> <NO-OP>
12409:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):243:49987 |==> 0
12410:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):243:49987 |==> -49987
12411:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):243:return Config.__M_NO == 0 && Config.COVERED(12409, 12410) ? 49987 : Config.__M_NO == 12410 ? -49987 : Config.__M_NO == 12409 ? 0 : 49987; |==> <NO-OP>
12412:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):245:50019 |==> 0
12413:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):245:50019 |==> -50019
12414:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):245:return Config.__M_NO == 0 && Config.COVERED(12412, 12413) ? 50019 : Config.__M_NO == 12413 ? -50019 : Config.__M_NO == 12412 ? 0 : 50019; |==> <NO-OP>
12415:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):247:51011 |==> 0
12416:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):247:51011 |==> -51011
12417:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):247:return Config.__M_NO == 0 && Config.COVERED(12415, 12416) ? 51011 : Config.__M_NO == 12416 ? -51011 : Config.__M_NO == 12415 ? 0 : 51011; |==> <NO-OP>
12418:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):249:51043 |==> 0
12419:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):249:51043 |==> -51043
12420:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):249:return Config.__M_NO == 0 && Config.COVERED(12418, 12419) ? 51043 : Config.__M_NO == 12419 ? -51043 : Config.__M_NO == 12418 ? 0 : 51043; |==> <NO-OP>
12421:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):251:53059 |==> 0
12422:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):251:53059 |==> -53059
12423:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):251:return Config.__M_NO == 0 && Config.COVERED(12421, 12422) ? 53059 : Config.__M_NO == 12422 ? -53059 : Config.__M_NO == 12421 ? 0 : 53059; |==> <NO-OP>
12424:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):253:53091 |==> 0
12425:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):253:53091 |==> -53091
12426:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):253:return Config.__M_NO == 0 && Config.COVERED(12424, 12425) ? 53091 : Config.__M_NO == 12425 ? -53091 : Config.__M_NO == 12424 ? 0 : 53091; |==> <NO-OP>
12427:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):255:53060 |==> 0
12428:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):255:53060 |==> -53060
12429:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):255:return Config.__M_NO == 0 && Config.COVERED(12427, 12428) ? 53060 : Config.__M_NO == 12428 ? -53060 : Config.__M_NO == 12427 ? 0 : 53060; |==> <NO-OP>
12430:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):257:53092 |==> 0
12431:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):257:53092 |==> -53092
12432:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):257:return Config.__M_NO == 0 && Config.COVERED(12430, 12431) ? 53092 : Config.__M_NO == 12431 ? -53092 : Config.__M_NO == 12430 ? 0 : 53092; |==> <NO-OP>
12433:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):259:226 |==> 0
12434:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):259:226 |==> -226
12435:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):259:return Config.__M_NO == 0 && Config.COVERED(12433, 12434) ? 226 : Config.__M_NO == 12434 ? -226 : Config.__M_NO == 12433 ? 0 : 226; |==> <NO-OP>
12436:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):261:242 |==> 0
12437:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):261:242 |==> -242
12438:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):261:return Config.__M_NO == 0 && Config.COVERED(12436, 12437) ? 242 : Config.__M_NO == 12437 ? -242 : Config.__M_NO == 12436 ? 0 : 242; |==> <NO-OP>
12439:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):263:50501 |==> 0
12440:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):263:50501 |==> -50501
12441:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):263:return Config.__M_NO == 0 && Config.COVERED(12439, 12440) ? 50501 : Config.__M_NO == 12440 ? -50501 : Config.__M_NO == 12439 ? 0 : 50501; |==> <NO-OP>
12442:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):265:50533 |==> 0
12443:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):265:50533 |==> -50533
12444:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):265:return Config.__M_NO == 0 && Config.COVERED(12442, 12443) ? 50533 : Config.__M_NO == 12443 ? -50533 : Config.__M_NO == 12442 ? 0 : 50533; |==> <NO-OP>
12445:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):267:50757 |==> 0
12446:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):267:50757 |==> -50757
12447:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):267:return Config.__M_NO == 0 && Config.COVERED(12445, 12446) ? 50757 : Config.__M_NO == 12446 ? -50757 : Config.__M_NO == 12445 ? 0 : 50757; |==> <NO-OP>
12448:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):269:50789 |==> 0
12449:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):269:50789 |==> -50789
12450:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):269:return Config.__M_NO == 0 && Config.COVERED(12448, 12449) ? 50789 : Config.__M_NO == 12449 ? -50789 : Config.__M_NO == 12448 ? 0 : 50789; |==> <NO-OP>
12451:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):271:51013 |==> 0
12452:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):271:51013 |==> -51013
12453:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):271:return Config.__M_NO == 0 && Config.COVERED(12451, 12452) ? 51013 : Config.__M_NO == 12452 ? -51013 : Config.__M_NO == 12451 ? 0 : 51013; |==> <NO-OP>
12454:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):273:51045 |==> 0
12455:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):273:51045 |==> -51045
12456:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):273:return Config.__M_NO == 0 && Config.COVERED(12454, 12455) ? 51045 : Config.__M_NO == 12455 ? -51045 : Config.__M_NO == 12454 ? 0 : 51045; |==> <NO-OP>
12457:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):275:54085 |==> 0
12458:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):275:54085 |==> -54085
12459:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):275:return Config.__M_NO == 0 && Config.COVERED(12457, 12458) ? 54085 : Config.__M_NO == 12458 ? -54085 : Config.__M_NO == 12457 ? 0 : 54085; |==> <NO-OP>
12460:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):277:54117 |==> 0
12461:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):277:54117 |==> -54117
12462:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):277:return Config.__M_NO == 0 && Config.COVERED(12460, 12461) ? 54117 : Config.__M_NO == 12461 ? -54117 : Config.__M_NO == 12460 ? 0 : 54117; |==> <NO-OP>
12463:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):279:53061 |==> 0
12464:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):279:53061 |==> -53061
12465:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):279:return Config.__M_NO == 0 && Config.COVERED(12463, 12464) ? 53061 : Config.__M_NO == 12464 ? -53061 : Config.__M_NO == 12463 ? 0 : 53061; |==> <NO-OP>
12466:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):281:53093 |==> 0
12467:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):281:53093 |==> -53093
12468:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):281:return Config.__M_NO == 0 && Config.COVERED(12466, 12467) ? 53093 : Config.__M_NO == 12467 ? -53093 : Config.__M_NO == 12466 ? 0 : 53093; |==> <NO-OP>
12469:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):283:49991 |==> 0
12470:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):283:49991 |==> -49991
12471:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):283:return Config.__M_NO == 0 && Config.COVERED(12469, 12470) ? 49991 : Config.__M_NO == 12470 ? -49991 : Config.__M_NO == 12469 ? 0 : 49991; |==> <NO-OP>
12472:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):285:50023 |==> 0
12473:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):285:50023 |==> -50023
12474:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):285:return Config.__M_NO == 0 && Config.COVERED(12472, 12473) ? 50023 : Config.__M_NO == 12473 ? -50023 : Config.__M_NO == 12472 ? 0 : 50023; |==> <NO-OP>
12475:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):287:50759 |==> 0
12476:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):287:50759 |==> -50759
12477:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):287:return Config.__M_NO == 0 && Config.COVERED(12475, 12476) ? 50759 : Config.__M_NO == 12476 ? -50759 : Config.__M_NO == 12475 ? 0 : 50759; |==> <NO-OP>
12478:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):289:50791 |==> 0
12479:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):289:50791 |==> -50791
12480:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):289:return Config.__M_NO == 0 && Config.COVERED(12478, 12479) ? 50791 : Config.__M_NO == 12479 ? -50791 : Config.__M_NO == 12478 ? 0 : 50791; |==> <NO-OP>
12481:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):291:51015 |==> 0
12482:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):291:51015 |==> -51015
12483:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):291:return Config.__M_NO == 0 && Config.COVERED(12481, 12482) ? 51015 : Config.__M_NO == 12482 ? -51015 : Config.__M_NO == 12481 ? 0 : 51015; |==> <NO-OP>
12484:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):293:51047 |==> 0
12485:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):293:51047 |==> -51047
12486:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):293:return Config.__M_NO == 0 && Config.COVERED(12484, 12485) ? 51047 : Config.__M_NO == 12485 ? -51047 : Config.__M_NO == 12484 ? 0 : 51047; |==> <NO-OP>
12487:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):295:53319 |==> 0
12488:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):295:53319 |==> -53319
12489:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):295:return Config.__M_NO == 0 && Config.COVERED(12487, 12488) ? 53319 : Config.__M_NO == 12488 ? -53319 : Config.__M_NO == 12487 ? 0 : 53319; |==> <NO-OP>
12490:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):297:53351 |==> 0
12491:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):297:53351 |==> -53351
12492:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):297:return Config.__M_NO == 0 && Config.COVERED(12490, 12491) ? 53351 : Config.__M_NO == 12491 ? -53351 : Config.__M_NO == 12490 ? 0 : 53351; |==> <NO-OP>
12493:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):299:49992 |==> 0
12494:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):299:49992 |==> -49992
12495:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):299:return Config.__M_NO == 0 && Config.COVERED(12493, 12494) ? 49992 : Config.__M_NO == 12494 ? -49992 : Config.__M_NO == 12493 ? 0 : 49992; |==> <NO-OP>
12496:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):301:50024 |==> 0
12497:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):301:50024 |==> -50024
12498:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):301:return Config.__M_NO == 0 && Config.COVERED(12496, 12497) ? 50024 : Config.__M_NO == 12497 ? -50024 : Config.__M_NO == 12496 ? 0 : 50024; |==> <NO-OP>
12499:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):303:50249 |==> 0
12500:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):303:50249 |==> -50249
12501:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):303:return Config.__M_NO == 0 && Config.COVERED(12499, 12500) ? 50249 : Config.__M_NO == 12500 ? -50249 : Config.__M_NO == 12499 ? 0 : 50249; |==> <NO-OP>
12502:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):305:50281 |==> 0
12503:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):305:50281 |==> -50281
12504:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):305:return Config.__M_NO == 0 && Config.COVERED(12502, 12503) ? 50281 : Config.__M_NO == 12503 ? -50281 : Config.__M_NO == 12502 ? 0 : 50281; |==> <NO-OP>
12505:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):307:50505 |==> 0
12506:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):307:50505 |==> -50505
12507:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):307:return Config.__M_NO == 0 && Config.COVERED(12505, 12506) ? 50505 : Config.__M_NO == 12506 ? -50505 : Config.__M_NO == 12505 ? 0 : 50505; |==> <NO-OP>
12508:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):309:50537 |==> 0
12509:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):309:50537 |==> -50537
12510:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):309:return Config.__M_NO == 0 && Config.COVERED(12508, 12509) ? 50537 : Config.__M_NO == 12509 ? -50537 : Config.__M_NO == 12508 ? 0 : 50537; |==> <NO-OP>
12511:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):311:50761 |==> 0
12512:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):311:50761 |==> -50761
12513:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):311:return Config.__M_NO == 0 && Config.COVERED(12511, 12512) ? 50761 : Config.__M_NO == 12512 ? -50761 : Config.__M_NO == 12511 ? 0 : 50761; |==> <NO-OP>
12514:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):313:50793 |==> 0
12515:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):313:50793 |==> -50793
12516:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):313:return Config.__M_NO == 0 && Config.COVERED(12514, 12515) ? 50793 : Config.__M_NO == 12515 ? -50793 : Config.__M_NO == 12514 ? 0 : 50793; |==> <NO-OP>
12517:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):315:54089 |==> 0
12518:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):315:54089 |==> -54089
12519:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):315:return Config.__M_NO == 0 && Config.COVERED(12517, 12518) ? 54089 : Config.__M_NO == 12518 ? -54089 : Config.__M_NO == 12517 ? 0 : 54089; |==> <NO-OP>
12520:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):317:54121 |==> 0
12521:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):317:54121 |==> -54121
12522:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):317:return Config.__M_NO == 0 && Config.COVERED(12520, 12521) ? 54121 : Config.__M_NO == 12521 ? -54121 : Config.__M_NO == 12520 ? 0 : 54121; |==> <NO-OP>
12523:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):319:51017 |==> 0
12524:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):319:51017 |==> -51017
12525:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):319:return Config.__M_NO == 0 && Config.COVERED(12523, 12524) ? 51017 : Config.__M_NO == 12524 ? -51017 : Config.__M_NO == 12523 ? 0 : 51017; |==> <NO-OP>
12526:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):321:245 |==> 0
12527:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):321:245 |==> -245
12528:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):321:return Config.__M_NO == 0 && Config.COVERED(12526, 12527) ? 245 : Config.__M_NO == 12527 ? -245 : Config.__M_NO == 12526 ? 0 : 245; |==> <NO-OP>
12529:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):323:230 |==> 0
12530:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):323:230 |==> -230
12531:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):323:return Config.__M_NO == 0 && Config.COVERED(12529, 12530) ? 230 : Config.__M_NO == 12530 ? -230 : Config.__M_NO == 12529 ? 0 : 230; |==> <NO-OP>
12532:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):325:246 |==> 0
12533:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):325:246 |==> -246
12534:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):325:return Config.__M_NO == 0 && Config.COVERED(12532, 12533) ? 246 : Config.__M_NO == 12533 ? -246 : Config.__M_NO == 12532 ? 0 : 246; |==> <NO-OP>
12535:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):327:49994 |==> 0
12536:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):327:49994 |==> -49994
12537:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):327:return Config.__M_NO == 0 && Config.COVERED(12535, 12536) ? 49994 : Config.__M_NO == 12536 ? -49994 : Config.__M_NO == 12535 ? 0 : 49994; |==> <NO-OP>
12538:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):329:50026 |==> 0
12539:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):329:50026 |==> -50026
12540:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):329:return Config.__M_NO == 0 && Config.COVERED(12538, 12539) ? 50026 : Config.__M_NO == 12539 ? -50026 : Config.__M_NO == 12538 ? 0 : 50026; |==> <NO-OP>
12541:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):331:53323 |==> 0
12542:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):331:53323 |==> -53323
12543:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):331:return Config.__M_NO == 0 && Config.COVERED(12541, 12542) ? 53323 : Config.__M_NO == 12542 ? -53323 : Config.__M_NO == 12541 ? 0 : 53323; |==> <NO-OP>
12544:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):333:53355 |==> 0
12545:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):333:53355 |==> -53355
12546:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):333:return Config.__M_NO == 0 && Config.COVERED(12544, 12545) ? 53355 : Config.__M_NO == 12545 ? -53355 : Config.__M_NO == 12544 ? 0 : 53355; |==> <NO-OP>
12547:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):335:49740 |==> 0
12548:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):335:49740 |==> -49740
12549:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):335:return Config.__M_NO == 0 && Config.COVERED(12547, 12548) ? 49740 : Config.__M_NO == 12548 ? -49740 : Config.__M_NO == 12547 ? 0 : 49740; |==> <NO-OP>
12550:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):337:49772 |==> 0
12551:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):337:49772 |==> -49772
12552:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):337:return Config.__M_NO == 0 && Config.COVERED(12550, 12551) ? 49772 : Config.__M_NO == 12551 ? -49772 : Config.__M_NO == 12550 ? 0 : 49772; |==> <NO-OP>
12553:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):339:53324 |==> 0
12554:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):339:53324 |==> -53324
12555:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):339:return Config.__M_NO == 0 && Config.COVERED(12553, 12554) ? 53324 : Config.__M_NO == 12554 ? -53324 : Config.__M_NO == 12553 ? 0 : 53324; |==> <NO-OP>
12556:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):341:53356 |==> 0
12557:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):341:53356 |==> -53356
12558:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):341:return Config.__M_NO == 0 && Config.COVERED(12556, 12557) ? 53356 : Config.__M_NO == 12557 ? -53356 : Config.__M_NO == 12556 ? 0 : 53356; |==> <NO-OP>
12559:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):343:53068 |==> 0
12560:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):343:53068 |==> -53068
12561:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):343:return Config.__M_NO == 0 && Config.COVERED(12559, 12560) ? 53068 : Config.__M_NO == 12560 ? -53068 : Config.__M_NO == 12559 ? 0 : 53068; |==> <NO-OP>
12562:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):345:53100 |==> 0
12563:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):345:53100 |==> -53100
12564:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):345:return Config.__M_NO == 0 && Config.COVERED(12562, 12563) ? 53100 : Config.__M_NO == 12563 ? -53100 : Config.__M_NO == 12562 ? 0 : 53100; |==> <NO-OP>
12565:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):347:232 |==> 0
12566:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):347:232 |==> -232
12567:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):347:return Config.__M_NO == 0 && Config.COVERED(12565, 12566) ? 232 : Config.__M_NO == 12566 ? -232 : Config.__M_NO == 12565 ? 0 : 232; |==> <NO-OP>
12568:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):349:248 |==> 0
12569:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):349:248 |==> -248
12570:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):349:return Config.__M_NO == 0 && Config.COVERED(12568, 12569) ? 248 : Config.__M_NO == 12569 ? -248 : Config.__M_NO == 12568 ? 0 : 248; |==> <NO-OP>
12571:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):351:49742 |==> 0
12572:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):351:49742 |==> -49742
12573:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):351:return Config.__M_NO == 0 && Config.COVERED(12571, 12572) ? 49742 : Config.__M_NO == 12572 ? -49742 : Config.__M_NO == 12571 ? 0 : 49742; |==> <NO-OP>
12574:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):353:49774 |==> 0
12575:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):353:49774 |==> -49774
12576:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):353:return Config.__M_NO == 0 && Config.COVERED(12574, 12575) ? 49774 : Config.__M_NO == 12575 ? -49774 : Config.__M_NO == 12574 ? 0 : 49774; |==> <NO-OP>
12577:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):355:53326 |==> 0
12578:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):355:53326 |==> -53326
12579:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):355:return Config.__M_NO == 0 && Config.COVERED(12577, 12578) ? 53326 : Config.__M_NO == 12578 ? -53326 : Config.__M_NO == 12577 ? 0 : 53326; |==> <NO-OP>
12580:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):357:53358 |==> 0
12581:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):357:53358 |==> -53358
12582:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):357:return Config.__M_NO == 0 && Config.COVERED(12580, 12581) ? 53358 : Config.__M_NO == 12581 ? -53358 : Config.__M_NO == 12580 ? 0 : 53358; |==> <NO-OP>
12583:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):359:53070 |==> 0
12584:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):359:53070 |==> -53070
12585:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):359:return Config.__M_NO == 0 && Config.COVERED(12583, 12584) ? 53070 : Config.__M_NO == 12584 ? -53070 : Config.__M_NO == 12583 ? 0 : 53070; |==> <NO-OP>
12586:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):361:53102 |==> 0
12587:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):361:53102 |==> -53102
12588:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):361:return Config.__M_NO == 0 && Config.COVERED(12586, 12587) ? 53102 : Config.__M_NO == 12587 ? -53102 : Config.__M_NO == 12586 ? 0 : 53102; |==> <NO-OP>
12589:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):363:50511 |==> 0
12590:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):363:50511 |==> -50511
12591:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):363:return Config.__M_NO == 0 && Config.COVERED(12589, 12590) ? 50511 : Config.__M_NO == 12590 ? -50511 : Config.__M_NO == 12589 ? 0 : 50511; |==> <NO-OP>
12592:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):365:50543 |==> 0
12593:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):365:50543 |==> -50543
12594:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):365:return Config.__M_NO == 0 && Config.COVERED(12592, 12593) ? 50543 : Config.__M_NO == 12593 ? -50543 : Config.__M_NO == 12592 ? 0 : 50543; |==> <NO-OP>
12595:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):367:50767 |==> 0
12596:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):367:50767 |==> -50767
12597:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):367:return Config.__M_NO == 0 && Config.COVERED(12595, 12596) ? 50767 : Config.__M_NO == 12596 ? -50767 : Config.__M_NO == 12595 ? 0 : 50767; |==> <NO-OP>
12598:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):369:50799 |==> 0
12599:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):369:50799 |==> -50799
12600:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):369:return Config.__M_NO == 0 && Config.COVERED(12598, 12599) ? 50799 : Config.__M_NO == 12599 ? -50799 : Config.__M_NO == 12598 ? 0 : 50799; |==> <NO-OP>
12601:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):371:52559 |==> 0
12602:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):371:52559 |==> -52559
12603:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):371:return Config.__M_NO == 0 && Config.COVERED(12601, 12602) ? 52559 : Config.__M_NO == 12602 ? -52559 : Config.__M_NO == 12601 ? 0 : 52559; |==> <NO-OP>
12604:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):373:52591 |==> 0
12605:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):373:52591 |==> -52591
12606:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):373:return Config.__M_NO == 0 && Config.COVERED(12604, 12605) ? 52591 : Config.__M_NO == 12605 ? -52591 : Config.__M_NO == 12604 ? 0 : 52591; |==> <NO-OP>
12607:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):375:234 |==> 0
12608:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):375:234 |==> -234
12609:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):375:return Config.__M_NO == 0 && Config.COVERED(12607, 12608) ? 234 : Config.__M_NO == 12608 ? -234 : Config.__M_NO == 12607 ? 0 : 234; |==> <NO-OP>
12610:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):377:250 |==> 0
12611:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):377:250 |==> -250
12612:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):377:return Config.__M_NO == 0 && Config.COVERED(12610, 12611) ? 250 : Config.__M_NO == 12611 ? -250 : Config.__M_NO == 12610 ? 0 : 250; |==> <NO-OP>
12613:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):379:49746 |==> 0
12614:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):379:49746 |==> -49746
12615:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):379:return Config.__M_NO == 0 && Config.COVERED(12613, 12614) ? 49746 : Config.__M_NO == 12614 ? -49746 : Config.__M_NO == 12613 ? 0 : 49746; |==> <NO-OP>
12616:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):381:49778 |==> 0
12617:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):381:49778 |==> -49778
12618:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):381:return Config.__M_NO == 0 && Config.COVERED(12616, 12617) ? 49778 : Config.__M_NO == 12617 ? -49778 : Config.__M_NO == 12616 ? 0 : 49778; |==> <NO-OP>
12619:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):383:53330 |==> 0
12620:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):383:53330 |==> -53330
12621:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):383:return Config.__M_NO == 0 && Config.COVERED(12619, 12620) ? 53330 : Config.__M_NO == 12620 ? -53330 : Config.__M_NO == 12619 ? 0 : 53330; |==> <NO-OP>
12622:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):385:53362 |==> 0
12623:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):385:53362 |==> -53362
12624:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):385:return Config.__M_NO == 0 && Config.COVERED(12622, 12623) ? 53362 : Config.__M_NO == 12623 ? -53362 : Config.__M_NO == 12622 ? 0 : 53362; |==> <NO-OP>
12625:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):387:53074 |==> 0
12626:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):387:53074 |==> -53074
12627:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):387:return Config.__M_NO == 0 && Config.COVERED(12625, 12626) ? 53074 : Config.__M_NO == 12626 ? -53074 : Config.__M_NO == 12625 ? 0 : 53074; |==> <NO-OP>
12628:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):389:53106 |==> 0
12629:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):389:53106 |==> -53106
12630:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):389:return Config.__M_NO == 0 && Config.COVERED(12628, 12629) ? 53106 : Config.__M_NO == 12629 ? -53106 : Config.__M_NO == 12628 ? 0 : 53106; |==> <NO-OP>
12631:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):391:49747 |==> 0
12632:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):391:49747 |==> -49747
12633:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):391:return Config.__M_NO == 0 && Config.COVERED(12631, 12632) ? 49747 : Config.__M_NO == 12632 ? -49747 : Config.__M_NO == 12631 ? 0 : 49747; |==> <NO-OP>
12634:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):393:49779 |==> 0
12635:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):393:49779 |==> -49779
12636:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):393:return Config.__M_NO == 0 && Config.COVERED(12634, 12635) ? 49779 : Config.__M_NO == 12635 ? -49779 : Config.__M_NO == 12634 ? 0 : 49779; |==> <NO-OP>
12637:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):395:50003 |==> 0
12638:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):395:50003 |==> -50003
12639:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):395:return Config.__M_NO == 0 && Config.COVERED(12637, 12638) ? 50003 : Config.__M_NO == 12638 ? -50003 : Config.__M_NO == 12637 ? 0 : 50003; |==> <NO-OP>
12640:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):397:50035 |==> 0
12641:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):397:50035 |==> -50035
12642:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):397:return Config.__M_NO == 0 && Config.COVERED(12640, 12641) ? 50035 : Config.__M_NO == 12641 ? -50035 : Config.__M_NO == 12640 ? 0 : 50035; |==> <NO-OP>
12643:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):399:53331 |==> 0
12644:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):399:53331 |==> -53331
12645:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):399:return Config.__M_NO == 0 && Config.COVERED(12643, 12644) ? 53331 : Config.__M_NO == 12644 ? -53331 : Config.__M_NO == 12643 ? 0 : 53331; |==> <NO-OP>
12646:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):401:53363 |==> 0
12647:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):401:53363 |==> -53363
12648:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):401:return Config.__M_NO == 0 && Config.COVERED(12646, 12647) ? 53363 : Config.__M_NO == 12647 ? -53363 : Config.__M_NO == 12646 ? 0 : 53363; |==> <NO-OP>
12649:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):403:53075 |==> 0
12650:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):403:53075 |==> -53075
12651:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):403:return Config.__M_NO == 0 && Config.COVERED(12649, 12650) ? 53075 : Config.__M_NO == 12650 ? -53075 : Config.__M_NO == 12649 ? 0 : 53075; |==> <NO-OP>
12652:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):405:53107 |==> 0
12653:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):405:53107 |==> -53107
12654:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):405:return Config.__M_NO == 0 && Config.COVERED(12652, 12653) ? 53107 : Config.__M_NO == 12653 ? -53107 : Config.__M_NO == 12652 ? 0 : 53107; |==> <NO-OP>
12655:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):407:53332 |==> 0
12656:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):407:53332 |==> -53332
12657:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):407:return Config.__M_NO == 0 && Config.COVERED(12655, 12656) ? 53332 : Config.__M_NO == 12656 ? -53332 : Config.__M_NO == 12655 ? 0 : 53332; |==> <NO-OP>
12658:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):409:53364 |==> 0
12659:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):409:53364 |==> -53364
12660:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):409:return Config.__M_NO == 0 && Config.COVERED(12658, 12659) ? 53364 : Config.__M_NO == 12659 ? -53364 : Config.__M_NO == 12658 ? 0 : 53364; |==> <NO-OP>
12661:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):411:53076 |==> 0
12662:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):411:53076 |==> -53076
12663:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):411:return Config.__M_NO == 0 && Config.COVERED(12661, 12662) ? 53076 : Config.__M_NO == 12662 ? -53076 : Config.__M_NO == 12661 ? 0 : 53076; |==> <NO-OP>
12664:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):413:53108 |==> 0
12665:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):413:53108 |==> -53108
12666:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):413:return Config.__M_NO == 0 && Config.COVERED(12664, 12665) ? 53108 : Config.__M_NO == 12665 ? -53108 : Config.__M_NO == 12664 ? 0 : 53108; |==> <NO-OP>
12667:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):415:50261 |==> 0
12668:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):415:50261 |==> -50261
12669:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):415:return Config.__M_NO == 0 && Config.COVERED(12667, 12668) ? 50261 : Config.__M_NO == 12668 ? -50261 : Config.__M_NO == 12667 ? 0 : 50261; |==> <NO-OP>
12670:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):417:50293 |==> 0
12671:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):417:50293 |==> -50293
12672:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):417:return Config.__M_NO == 0 && Config.COVERED(12670, 12671) ? 50293 : Config.__M_NO == 12671 ? -50293 : Config.__M_NO == 12670 ? 0 : 50293; |==> <NO-OP>
12673:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):419:50517 |==> 0
12674:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):419:50517 |==> -50517
12675:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):419:return Config.__M_NO == 0 && Config.COVERED(12673, 12674) ? 50517 : Config.__M_NO == 12674 ? -50517 : Config.__M_NO == 12673 ? 0 : 50517; |==> <NO-OP>
12676:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):421:50549 |==> 0
12677:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):421:50549 |==> -50549
12678:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):421:return Config.__M_NO == 0 && Config.COVERED(12676, 12677) ? 50549 : Config.__M_NO == 12677 ? -50549 : Config.__M_NO == 12676 ? 0 : 50549; |==> <NO-OP>
12679:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):423:50773 |==> 0
12680:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):423:50773 |==> -50773
12681:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):423:return Config.__M_NO == 0 && Config.COVERED(12679, 12680) ? 50773 : Config.__M_NO == 12680 ? -50773 : Config.__M_NO == 12679 ? 0 : 50773; |==> <NO-OP>
12682:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):425:50805 |==> 0
12683:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):425:50805 |==> -50805
12684:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):425:return Config.__M_NO == 0 && Config.COVERED(12682, 12683) ? 50805 : Config.__M_NO == 12683 ? -50805 : Config.__M_NO == 12682 ? 0 : 50805; |==> <NO-OP>
12685:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):427:51885 |==> 0
12686:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):427:51885 |==> -51885
12687:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):427:return Config.__M_NO == 0 && Config.COVERED(12685, 12686) ? 51885 : Config.__M_NO == 12686 ? -51885 : Config.__M_NO == 12685 ? 0 : 51885; |==> <NO-OP>
12688:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):429:51829 |==> 0
12689:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):429:51829 |==> -51829
12690:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):429:return Config.__M_NO == 0 && Config.COVERED(12688, 12689) ? 51829 : Config.__M_NO == 12689 ? -51829 : Config.__M_NO == 12688 ? 0 : 51829; |==> <NO-OP>
12691:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):431:52565 |==> 0
12692:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):431:52565 |==> -52565
12693:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):431:return Config.__M_NO == 0 && Config.COVERED(12691, 12692) ? 52565 : Config.__M_NO == 12692 ? -52565 : Config.__M_NO == 12691 ? 0 : 52565; |==> <NO-OP>
12694:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):433:52597 |==> 0
12695:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):433:52597 |==> -52597
12696:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):433:return Config.__M_NO == 0 && Config.COVERED(12694, 12695) ? 52597 : Config.__M_NO == 12695 ? -52597 : Config.__M_NO == 12694 ? 0 : 52597; |==> <NO-OP>
12697:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):435:54101 |==> 0
12698:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):435:54101 |==> -54101
12699:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):435:return Config.__M_NO == 0 && Config.COVERED(12697, 12698) ? 54101 : Config.__M_NO == 12698 ? -54101 : Config.__M_NO == 12697 ? 0 : 54101; |==> <NO-OP>
12700:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):437:54133 |==> 0
12701:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):437:54133 |==> -54133
12702:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):437:return Config.__M_NO == 0 && Config.COVERED(12700, 12701) ? 54133 : Config.__M_NO == 12701 ? -54133 : Config.__M_NO == 12700 ? 0 : 54133; |==> <NO-OP>
12703:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):439:50007 |==> 0
12704:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):439:50007 |==> -50007
12705:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):439:return Config.__M_NO == 0 && Config.COVERED(12703, 12704) ? 50007 : Config.__M_NO == 12704 ? -50007 : Config.__M_NO == 12703 ? 0 : 50007; |==> <NO-OP>
12706:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):441:50039 |==> 0
12707:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):441:50039 |==> -50039
12708:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):441:return Config.__M_NO == 0 && Config.COVERED(12706, 12707) ? 50039 : Config.__M_NO == 12707 ? -50039 : Config.__M_NO == 12706 ? 0 : 50039; |==> <NO-OP>
12709:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):443:50009 |==> 0
12710:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):443:50009 |==> -50009
12711:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):443:return Config.__M_NO == 0 && Config.COVERED(12709, 12710) ? 50009 : Config.__M_NO == 12710 ? -50009 : Config.__M_NO == 12709 ? 0 : 50009; |==> <NO-OP>
12712:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):445:50041 |==> 0
12713:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):445:50041 |==> -50041
12714:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):445:return Config.__M_NO == 0 && Config.COVERED(12712, 12713) ? 50041 : Config.__M_NO == 12713 ? -50041 : Config.__M_NO == 12712 ? 0 : 50041; |==> <NO-OP>
12715:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):447:51289 |==> 0
12716:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):447:51289 |==> -51289
12717:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):447:return Config.__M_NO == 0 && Config.COVERED(12715, 12716) ? 51289 : Config.__M_NO == 12716 ? -51289 : Config.__M_NO == 12715 ? 0 : 51289; |==> <NO-OP>
12718:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):449:49754 |==> 0
12719:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):449:49754 |==> -49754
12720:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):449:return Config.__M_NO == 0 && Config.COVERED(12718, 12719) ? 49754 : Config.__M_NO == 12719 ? -49754 : Config.__M_NO == 12718 ? 0 : 49754; |==> <NO-OP>
12721:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):451:49786 |==> 0
12722:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):451:49786 |==> -49786
12723:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):451:return Config.__M_NO == 0 && Config.COVERED(12721, 12722) ? 49786 : Config.__M_NO == 12722 ? -49786 : Config.__M_NO == 12721 ? 0 : 49786; |==> <NO-OP>
12724:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):453:51034 |==> 0
12725:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):453:51034 |==> -51034
12726:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):453:return Config.__M_NO == 0 && Config.COVERED(12724, 12725) ? 51034 : Config.__M_NO == 12725 ? -51034 : Config.__M_NO == 12724 ? 0 : 51034; |==> <NO-OP>
12727:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):455:51066 |==> 0
12728:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):455:51066 |==> -51066
12729:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):455:return Config.__M_NO == 0 && Config.COVERED(12727, 12728) ? 51066 : Config.__M_NO == 12728 ? -51066 : Config.__M_NO == 12727 ? 0 : 51066; |==> <NO-OP>
12730:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):457:53082 |==> 0
12731:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):457:53082 |==> -53082
12732:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):457:return Config.__M_NO == 0 && Config.COVERED(12730, 12731) ? 53082 : Config.__M_NO == 12731 ? -53082 : Config.__M_NO == 12730 ? 0 : 53082; |==> <NO-OP>
12733:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):459:53114 |==> 0
12734:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):459:53114 |==> -53114
12735:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):459:return Config.__M_NO == 0 && Config.COVERED(12733, 12734) ? 53114 : Config.__M_NO == 12734 ? -53114 : Config.__M_NO == 12733 ? 0 : 53114; |==> <NO-OP>
12736:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):461:52820 |==> 0
12737:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):461:52820 |==> -52820
12738:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):461:return Config.__M_NO == 0 && Config.COVERED(12736, 12737) ? 52820 : Config.__M_NO == 12737 ? -52820 : Config.__M_NO == 12736 ? 0 : 52820; |==> <NO-OP>
12739:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):463:52852 |==> 0
12740:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):463:52852 |==> -52852
12741:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):463:return Config.__M_NO == 0 && Config.COVERED(12739, 12740) ? 52852 : Config.__M_NO == 12740 ? -52852 : Config.__M_NO == 12739 ? 0 : 52852; |==> <NO-OP>
12742:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):465:52821 |==> 0
12743:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):465:52821 |==> -52821
12744:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):465:return Config.__M_NO == 0 && Config.COVERED(12742, 12743) ? 52821 : Config.__M_NO == 12743 ? -52821 : Config.__M_NO == 12742 ? 0 : 52821; |==> <NO-OP>
12745:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):467:52853 |==> 0
12746:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):467:52853 |==> -52853
12747:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):467:return Config.__M_NO == 0 && Config.COVERED(12745, 12746) ? 52853 : Config.__M_NO == 12746 ? -52853 : Config.__M_NO == 12745 ? 0 : 52853; |==> <NO-OP>
12748:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):469:53057 |==> 0
12749:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):469:53057 |==> -53057
12750:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):469:return Config.__M_NO == 0 && Config.COVERED(12748, 12749) ? 53057 : Config.__M_NO == 12749 ? -53057 : Config.__M_NO == 12748 ? 0 : 53057; |==> <NO-OP>
12751:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):471:53089 |==> 0
12752:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):471:53089 |==> -53089
12753:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):471:return Config.__M_NO == 0 && Config.COVERED(12751, 12752) ? 53089 : Config.__M_NO == 12752 ? -53089 : Config.__M_NO == 12751 ? 0 : 53089; |==> <NO-OP>
12754:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):473:53065 |==> 0
12755:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):473:53065 |==> -53065
12756:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):473:return Config.__M_NO == 0 && Config.COVERED(12754, 12755) ? 53065 : Config.__M_NO == 12755 ? -53065 : Config.__M_NO == 12754 ? 0 : 53065; |==> <NO-OP>
12757:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):475:53097 |==> 0
12758:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):475:53097 |==> -53097
12759:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):475:return Config.__M_NO == 0 && Config.COVERED(12757, 12758) ? 53097 : Config.__M_NO == 12758 ? -53097 : Config.__M_NO == 12757 ? 0 : 53097; |==> <NO-OP>
12760:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):477:53071 |==> 0
12761:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):477:53071 |==> -53071
12762:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):477:return Config.__M_NO == 0 && Config.COVERED(12760, 12761) ? 53071 : Config.__M_NO == 12761 ? -53071 : Config.__M_NO == 12760 ? 0 : 53071; |==> <NO-OP>
12763:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):479:53103 |==> 0
12764:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):479:53103 |==> -53103
12765:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):479:return Config.__M_NO == 0 && Config.COVERED(12763, 12764) ? 53103 : Config.__M_NO == 12764 ? -53103 : Config.__M_NO == 12763 ? 0 : 53103; |==> <NO-OP>
12766:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):481:53077 |==> 0
12767:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):481:53077 |==> -53077
12768:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):481:return Config.__M_NO == 0 && Config.COVERED(12766, 12767) ? 53077 : Config.__M_NO == 12767 ? -53077 : Config.__M_NO == 12766 ? 0 : 53077; |==> <NO-OP>
12769:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):483:53109 |==> 0
12770:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):483:53109 |==> -53109
12771:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):483:return Config.__M_NO == 0 && Config.COVERED(12769, 12770) ? 53109 : Config.__M_NO == 12770 ? -53109 : Config.__M_NO == 12769 ? 0 : 53109; |==> <NO-OP>
12772:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):485:50657 |==> 0
12773:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):485:50657 |==> -50657
12774:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):485:return Config.__M_NO == 0 && Config.COVERED(12772, 12773) ? 50657 : Config.__M_NO == 12773 ? -50657 : Config.__M_NO == 12772 ? 0 : 50657; |==> <NO-OP>
12775:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):487:50673 |==> 0
12776:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):487:50673 |==> -50673
12777:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):487:return Config.__M_NO == 0 && Config.COVERED(12775, 12776) ? 50673 : Config.__M_NO == 12776 ? -50673 : Config.__M_NO == 12775 ? 0 : 50673; |==> <NO-OP>
12778:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):489:53063 |==> 0
12779:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):489:53063 |==> -53063
12780:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):489:return Config.__M_NO == 0 && Config.COVERED(12778, 12779) ? 53063 : Config.__M_NO == 12779 ? -53063 : Config.__M_NO == 12778 ? 0 : 53063; |==> <NO-OP>
12781:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):491:53095 |==> 0
12782:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):491:53095 |==> -53095
12783:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):491:return Config.__M_NO == 0 && Config.COVERED(12781, 12782) ? 53095 : Config.__M_NO == 12782 ? -53095 : Config.__M_NO == 12781 ? 0 : 53095; |==> <NO-OP>
12784:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):493:53067 |==> 0
12785:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):493:53067 |==> -53067
12786:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):493:return Config.__M_NO == 0 && Config.COVERED(12784, 12785) ? 53067 : Config.__M_NO == 12785 ? -53067 : Config.__M_NO == 12784 ? 0 : 53067; |==> <NO-OP>
12787:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):495:53099 |==> 0
12788:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):495:53099 |==> -53099
12789:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):495:return Config.__M_NO == 0 && Config.COVERED(12787, 12788) ? 53099 : Config.__M_NO == 12788 ? -53099 : Config.__M_NO == 12787 ? 0 : 53099; |==> <NO-OP>
12790:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):497:54095 |==> 0
12791:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):497:54095 |==> -54095
12792:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):497:return Config.__M_NO == 0 && Config.COVERED(12790, 12791) ? 54095 : Config.__M_NO == 12791 ? -54095 : Config.__M_NO == 12790 ? 0 : 54095; |==> <NO-OP>
12793:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):499:54127 |==> 0
12794:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):499:54127 |==> -54127
12795:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):499:return Config.__M_NO == 0 && Config.COVERED(12793, 12794) ? 54127 : Config.__M_NO == 12794 ? -54127 : Config.__M_NO == 12793 ? 0 : 54127; |==> <NO-OP>
12796:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):501:53098 |==> 0
12797:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):501:53098 |==> -53098
12798:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):501:return Config.__M_NO == 0 && Config.COVERED(12796, 12797) ? 53098 : Config.__M_NO == 12797 ? -53098 : Config.__M_NO == 12796 ? 0 : 53098; |==> <NO-OP>
12799:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):503:49735 |==> 0
12800:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):503:49735 |==> -49735
12801:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):503:return Config.__M_NO == 0 && Config.COVERED(12799, 12800) ? 49735 : Config.__M_NO == 12800 ? -49735 : Config.__M_NO == 12799 ? 0 : 49735; |==> <NO-OP>
12802:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):505:49767 |==> 0
12803:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):505:49767 |==> -49767
12804:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):505:return Config.__M_NO == 0 && Config.COVERED(12802, 12803) ? 49767 : Config.__M_NO == 12803 ? -49767 : Config.__M_NO == 12802 ? 0 : 49767; |==> <NO-OP>
12805:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):507:49889 |==> 0
12806:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):507:49889 |==> -49889
12807:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):507:return Config.__M_NO == 0 && Config.COVERED(12805, 12806) ? 49889 : Config.__M_NO == 12806 ? -49889 : Config.__M_NO == 12805 ? 0 : 49889; |==> <NO-OP>
12808:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):509:49905 |==> 0
12809:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):509:49905 |==> -49905
12810:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):509:return Config.__M_NO == 0 && Config.COVERED(12808, 12809) ? 49905 : Config.__M_NO == 12809 ? -49905 : Config.__M_NO == 12808 ? 0 : 49905; |==> <NO-OP>
12811:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):511:189 |==> 0
12812:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):511:189 |==> -189
12813:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):511:return Config.__M_NO == 0 && Config.COVERED(12811, 12812) ? 189 : Config.__M_NO == 12812 ? -189 : Config.__M_NO == 12811 ? 0 : 189; |==> <NO-OP>
12814:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):513:190 |==> 0
12815:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):513:190 |==> -190
12816:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):513:return Config.__M_NO == 0 && Config.COVERED(12814, 12815) ? 190 : Config.__M_NO == 12815 ? -190 : Config.__M_NO == 12814 ? 0 : 190; |==> <NO-OP>
12817:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):515:176 |==> 0
12818:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):515:176 |==> -176
12819:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):515:return Config.__M_NO == 0 && Config.COVERED(12817, 12818) ? 176 : Config.__M_NO == 12818 ? -176 : Config.__M_NO == 12817 ? 0 : 176; |==> <NO-OP>
12820:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):517:177 |==> 0
12821:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):517:177 |==> -177
12822:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):517:return Config.__M_NO == 0 && Config.COVERED(12820, 12821) ? 177 : Config.__M_NO == 12821 ? -177 : Config.__M_NO == 12820 ? 0 : 177; |==> <NO-OP>
12823:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):519:55840 |==> 0
12824:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):519:55840 |==> -55840
12825:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):519:return Config.__M_NO == 0 && Config.COVERED(12823, 12824) ? 55840 : Config.__M_NO == 12824 ? -55840 : Config.__M_NO == 12823 ? 0 : 55840; |==> <NO-OP>
12826:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):521:54048 |==> 0
12827:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):521:54048 |==> -54048
12828:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):521:return Config.__M_NO == 0 && Config.COVERED(12826, 12827) ? 54048 : Config.__M_NO == 12827 ? -54048 : Config.__M_NO == 12826 ? 0 : 54048; |==> <NO-OP>
12829:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):523:54337 |==> 0
12830:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):523:54337 |==> -54337
12831:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):523:return Config.__M_NO == 0 && Config.COVERED(12829, 12830) ? 54337 : Config.__M_NO == 12830 ? -54337 : Config.__M_NO == 12829 ? 0 : 54337; |==> <NO-OP>
12832:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):525:54369 |==> 0
12833:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):525:54369 |==> -54369
12834:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):525:return Config.__M_NO == 0 && Config.COVERED(12832, 12833) ? 54369 : Config.__M_NO == 12833 ? -54369 : Config.__M_NO == 12832 ? 0 : 54369; |==> <NO-OP>
12835:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):527:51010 |==> 0
12836:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):527:51010 |==> -51010
12837:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):527:return Config.__M_NO == 0 && Config.COVERED(12835, 12836) ? 51010 : Config.__M_NO == 12836 ? -51010 : Config.__M_NO == 12835 ? 0 : 51010; |==> <NO-OP>
12838:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):529:51042 |==> 0
12839:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):529:51042 |==> -51042
12840:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):529:return Config.__M_NO == 0 && Config.COVERED(12838, 12839) ? 51042 : Config.__M_NO == 12839 ? -51042 : Config.__M_NO == 12838 ? 0 : 51042; |==> <NO-OP>
12841:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):531:54850 |==> 0
12842:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):531:54850 |==> -54850
12843:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):531:return Config.__M_NO == 0 && Config.COVERED(12841, 12842) ? 54850 : Config.__M_NO == 12842 ? -54850 : Config.__M_NO == 12841 ? 0 : 54850; |==> <NO-OP>
12844:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):533:54882 |==> 0
12845:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):533:54882 |==> -54882
12846:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):533:return Config.__M_NO == 0 && Config.COVERED(12844, 12845) ? 54882 : Config.__M_NO == 12845 ? -54882 : Config.__M_NO == 12844 ? 0 : 54882; |==> <NO-OP>
12847:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):535:51012 |==> 0
12848:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):535:51012 |==> -51012
12849:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):535:return Config.__M_NO == 0 && Config.COVERED(12847, 12848) ? 51012 : Config.__M_NO == 12848 ? -51012 : Config.__M_NO == 12847 ? 0 : 51012; |==> <NO-OP>
12850:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):537:51044 |==> 0
12851:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):537:51044 |==> -51044
12852:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):537:return Config.__M_NO == 0 && Config.COVERED(12850, 12851) ? 51044 : Config.__M_NO == 12851 ? -51044 : Config.__M_NO == 12850 ? 0 : 51044; |==> <NO-OP>
12853:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):539:54852 |==> 0
12854:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):539:54852 |==> -54852
12855:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):539:return Config.__M_NO == 0 && Config.COVERED(12853, 12854) ? 54852 : Config.__M_NO == 12854 ? -54852 : Config.__M_NO == 12853 ? 0 : 54852; |==> <NO-OP>
12856:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):541:54884 |==> 0
12857:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):541:54884 |==> -54884
12858:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):541:return Config.__M_NO == 0 && Config.COVERED(12856, 12857) ? 54884 : Config.__M_NO == 12857 ? -54884 : Config.__M_NO == 12856 ? 0 : 54884; |==> <NO-OP>
12859:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):543:53316 |==> 0
12860:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):543:53316 |==> -53316
12861:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):543:return Config.__M_NO == 0 && Config.COVERED(12859, 12860) ? 53316 : Config.__M_NO == 12860 ? -53316 : Config.__M_NO == 12859 ? 0 : 53316; |==> <NO-OP>
12862:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):545:53348 |==> 0
12863:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):545:53348 |==> -53348
12864:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):545:return Config.__M_NO == 0 && Config.COVERED(12862, 12863) ? 53348 : Config.__M_NO == 12863 ? -53348 : Config.__M_NO == 12862 ? 0 : 53348; |==> <NO-OP>
12865:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):547:51014 |==> 0
12866:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):547:51014 |==> -51014
12867:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):547:return Config.__M_NO == 0 && Config.COVERED(12865, 12866) ? 51014 : Config.__M_NO == 12866 ? -51014 : Config.__M_NO == 12865 ? 0 : 51014; |==> <NO-OP>
12868:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):549:51046 |==> 0
12869:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):549:51046 |==> -51046
12870:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):549:return Config.__M_NO == 0 && Config.COVERED(12868, 12869) ? 51046 : Config.__M_NO == 12869 ? -51046 : Config.__M_NO == 12868 ? 0 : 51046; |==> <NO-OP>
12871:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):551:50503 |==> 0
12872:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):551:50503 |==> -50503
12873:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):551:return Config.__M_NO == 0 && Config.COVERED(12871, 12872) ? 50503 : Config.__M_NO == 12872 ? -50503 : Config.__M_NO == 12871 ? 0 : 50503; |==> <NO-OP>
12874:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):553:50535 |==> 0
12875:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):553:50535 |==> -50535
12876:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):553:return Config.__M_NO == 0 && Config.COVERED(12874, 12875) ? 50535 : Config.__M_NO == 12875 ? -50535 : Config.__M_NO == 12874 ? 0 : 50535; |==> <NO-OP>
12877:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):555:51016 |==> 0
12878:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):555:51016 |==> -51016
12879:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):555:return Config.__M_NO == 0 && Config.COVERED(12877, 12878) ? 51016 : Config.__M_NO == 12878 ? -51016 : Config.__M_NO == 12877 ? 0 : 51016; |==> <NO-OP>
12880:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):557:51048 |==> 0
12881:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):557:51048 |==> -51048
12882:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):557:return Config.__M_NO == 0 && Config.COVERED(12880, 12881) ? 51048 : Config.__M_NO == 12881 ? -51048 : Config.__M_NO == 12880 ? 0 : 51048; |==> <NO-OP>
12883:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):559:54856 |==> 0
12884:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):559:54856 |==> -54856
12885:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):559:return Config.__M_NO == 0 && Config.COVERED(12883, 12884) ? 54856 : Config.__M_NO == 12884 ? -54856 : Config.__M_NO == 12883 ? 0 : 54856; |==> <NO-OP>
12886:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):561:54888 |==> 0
12887:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):561:54888 |==> -54888
12888:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):561:return Config.__M_NO == 0 && Config.COVERED(12886, 12887) ? 54888 : Config.__M_NO == 12887 ? -54888 : Config.__M_NO == 12886 ? 0 : 54888; |==> <NO-OP>
12889:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):563:51272 |==> 0
12890:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):563:51272 |==> -51272
12891:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):563:return Config.__M_NO == 0 && Config.COVERED(12889, 12890) ? 51272 : Config.__M_NO == 12890 ? -51272 : Config.__M_NO == 12889 ? 0 : 51272; |==> <NO-OP>
12892:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):565:51304 |==> 0
12893:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):565:51304 |==> -51304
12894:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):565:return Config.__M_NO == 0 && Config.COVERED(12892, 12893) ? 51304 : Config.__M_NO == 12893 ? -51304 : Config.__M_NO == 12892 ? 0 : 51304; |==> <NO-OP>
12895:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):567:53320 |==> 0
12896:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):567:53320 |==> -53320
12897:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):567:return Config.__M_NO == 0 && Config.COVERED(12895, 12896) ? 53320 : Config.__M_NO == 12896 ? -53320 : Config.__M_NO == 12895 ? 0 : 53320; |==> <NO-OP>
12898:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):569:53352 |==> 0
12899:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):569:53352 |==> -53352
12900:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):569:return Config.__M_NO == 0 && Config.COVERED(12898, 12899) ? 53352 : Config.__M_NO == 12899 ? -53352 : Config.__M_NO == 12898 ? 0 : 53352; |==> <NO-OP>
12901:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):571:63816 |==> 0
12902:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):571:63816 |==> -63816
12903:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):571:return Config.__M_NO == 0 && Config.COVERED(12901, 12902) ? 63816 : Config.__M_NO == 12902 ? -63816 : Config.__M_NO == 12901 ? 0 : 63816; |==> <NO-OP>
12904:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):573:63848 |==> 0
12905:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):573:63848 |==> -63848
12906:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):573:return Config.__M_NO == 0 && Config.COVERED(12904, 12905) ? 63848 : Config.__M_NO == 12905 ? -63848 : Config.__M_NO == 12904 ? 0 : 63848; |==> <NO-OP>
12907:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):575:49739 |==> 0
12908:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):575:49739 |==> -49739
12909:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):575:return Config.__M_NO == 0 && Config.COVERED(12907, 12908) ? 49739 : Config.__M_NO == 12908 ? -49739 : Config.__M_NO == 12907 ? 0 : 49739; |==> <NO-OP>
12910:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):577:49771 |==> 0
12911:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):577:49771 |==> -49771
12912:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):577:return Config.__M_NO == 0 && Config.COVERED(12910, 12911) ? 49771 : Config.__M_NO == 12911 ? -49771 : Config.__M_NO == 12910 ? 0 : 49771; |==> <NO-OP>
12913:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):579:54859 |==> 0
12914:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):579:54859 |==> -54859
12915:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):579:return Config.__M_NO == 0 && Config.COVERED(12913, 12914) ? 54859 : Config.__M_NO == 12914 ? -54859 : Config.__M_NO == 12913 ? 0 : 54859; |==> <NO-OP>
12916:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):581:54891 |==> 0
12917:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):581:54891 |==> -54891
12918:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):581:return Config.__M_NO == 0 && Config.COVERED(12916, 12917) ? 54891 : Config.__M_NO == 12917 ? -54891 : Config.__M_NO == 12916 ? 0 : 54891; |==> <NO-OP>
12919:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):583:54860 |==> 0
12920:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):583:54860 |==> -54860
12921:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):583:return Config.__M_NO == 0 && Config.COVERED(12919, 12920) ? 54860 : Config.__M_NO == 12920 ? -54860 : Config.__M_NO == 12919 ? 0 : 54860; |==> <NO-OP>
12922:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):585:54892 |==> 0
12923:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):585:54892 |==> -54892
12924:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):585:return Config.__M_NO == 0 && Config.COVERED(12922, 12923) ? 54892 : Config.__M_NO == 12923 ? -54892 : Config.__M_NO == 12922 ? 0 : 54892; |==> <NO-OP>
12925:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):587:49741 |==> 0
12926:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):587:49741 |==> -49741
12927:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):587:return Config.__M_NO == 0 && Config.COVERED(12925, 12926) ? 49741 : Config.__M_NO == 12926 ? -49741 : Config.__M_NO == 12925 ? 0 : 49741; |==> <NO-OP>
12928:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):589:49773 |==> 0
12929:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):589:49773 |==> -49773
12930:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):589:return Config.__M_NO == 0 && Config.COVERED(12928, 12929) ? 49773 : Config.__M_NO == 12929 ? -49773 : Config.__M_NO == 12928 ? 0 : 49773; |==> <NO-OP>
12931:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):591:51021 |==> 0
12932:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):591:51021 |==> -51021
12933:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):591:return Config.__M_NO == 0 && Config.COVERED(12931, 12932) ? 51021 : Config.__M_NO == 12932 ? -51021 : Config.__M_NO == 12931 ? 0 : 51021; |==> <NO-OP>
12934:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):593:51053 |==> 0
12935:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):593:51053 |==> -51053
12936:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):593:return Config.__M_NO == 0 && Config.COVERED(12934, 12935) ? 51053 : Config.__M_NO == 12935 ? -51053 : Config.__M_NO == 12934 ? 0 : 51053; |==> <NO-OP>
12937:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):595:54861 |==> 0
12938:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):595:54861 |==> -54861
12939:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):595:return Config.__M_NO == 0 && Config.COVERED(12937, 12938) ? 54861 : Config.__M_NO == 12938 ? -54861 : Config.__M_NO == 12937 ? 0 : 54861; |==> <NO-OP>
12940:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):597:54893 |==> 0
12941:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):597:54893 |==> -54893
12942:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):597:return Config.__M_NO == 0 && Config.COVERED(12940, 12941) ? 54893 : Config.__M_NO == 12941 ? -54893 : Config.__M_NO == 12940 ? 0 : 54893; |==> <NO-OP>
12943:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):599:51022 |==> 0
12944:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):599:51022 |==> -51022
12945:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):599:return Config.__M_NO == 0 && Config.COVERED(12943, 12944) ? 51022 : Config.__M_NO == 12944 ? -51022 : Config.__M_NO == 12943 ? 0 : 51022; |==> <NO-OP>
12946:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):601:51054 |==> 0
12947:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):601:51054 |==> -51054
12948:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):601:return Config.__M_NO == 0 && Config.COVERED(12946, 12947) ? 51054 : Config.__M_NO == 12947 ? -51054 : Config.__M_NO == 12946 ? 0 : 51054; |==> <NO-OP>
12949:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):603:54862 |==> 0
12950:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):603:54862 |==> -54862
12951:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):603:return Config.__M_NO == 0 && Config.COVERED(12949, 12950) ? 54862 : Config.__M_NO == 12950 ? -54862 : Config.__M_NO == 12949 ? 0 : 54862; |==> <NO-OP>
12952:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):605:54894 |==> 0
12953:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):605:54894 |==> -54894
12954:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):605:return Config.__M_NO == 0 && Config.COVERED(12952, 12953) ? 54894 : Config.__M_NO == 12953 ? -54894 : Config.__M_NO == 12952 ? 0 : 54894; |==> <NO-OP>
12955:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):607:49744 |==> 0
12956:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):607:49744 |==> -49744
12957:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):607:return Config.__M_NO == 0 && Config.COVERED(12955, 12956) ? 49744 : Config.__M_NO == 12956 ? -49744 : Config.__M_NO == 12955 ? 0 : 49744; |==> <NO-OP>
12958:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):609:49776 |==> 0
12959:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):609:49776 |==> -49776
12960:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):609:return Config.__M_NO == 0 && Config.COVERED(12958, 12959) ? 49776 : Config.__M_NO == 12959 ? -49776 : Config.__M_NO == 12958 ? 0 : 49776; |==> <NO-OP>
12961:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):611:51024 |==> 0
12962:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):611:51024 |==> -51024
12963:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):611:return Config.__M_NO == 0 && Config.COVERED(12961, 12962) ? 51024 : Config.__M_NO == 12962 ? -51024 : Config.__M_NO == 12961 ? 0 : 51024; |==> <NO-OP>
12964:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):613:51056 |==> 0
12965:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):613:51056 |==> -51056
12966:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):613:return Config.__M_NO == 0 && Config.COVERED(12964, 12965) ? 51056 : Config.__M_NO == 12965 ? -51056 : Config.__M_NO == 12964 ? 0 : 51056; |==> <NO-OP>
12967:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):615:51026 |==> 0
12968:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):615:51026 |==> -51026
12969:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):615:return Config.__M_NO == 0 && Config.COVERED(12967, 12968) ? 51026 : Config.__M_NO == 12968 ? -51026 : Config.__M_NO == 12967 ? 0 : 51026; |==> <NO-OP>
12970:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):617:51058 |==> 0
12971:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):617:51058 |==> -51058
12972:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):617:return Config.__M_NO == 0 && Config.COVERED(12970, 12971) ? 51058 : Config.__M_NO == 12971 ? -51058 : Config.__M_NO == 12970 ? 0 : 51058; |==> <NO-OP>
12973:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):619:54866 |==> 0
12974:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):619:54866 |==> -54866
12975:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):619:return Config.__M_NO == 0 && Config.COVERED(12973, 12974) ? 54866 : Config.__M_NO == 12974 ? -54866 : Config.__M_NO == 12973 ? 0 : 54866; |==> <NO-OP>
12976:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):621:54898 |==> 0
12977:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):621:54898 |==> -54898
12978:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):621:return Config.__M_NO == 0 && Config.COVERED(12976, 12977) ? 54898 : Config.__M_NO == 12977 ? -54898 : Config.__M_NO == 12976 ? 0 : 54898; |==> <NO-OP>
12979:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):623:51027 |==> 0
12980:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):623:51027 |==> -51027
12981:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):623:return Config.__M_NO == 0 && Config.COVERED(12979, 12980) ? 51027 : Config.__M_NO == 12980 ? -51027 : Config.__M_NO == 12979 ? 0 : 51027; |==> <NO-OP>
12982:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):625:51059 |==> 0
12983:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):625:51059 |==> -51059
12984:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):625:return Config.__M_NO == 0 && Config.COVERED(12982, 12983) ? 51059 : Config.__M_NO == 12983 ? -51059 : Config.__M_NO == 12982 ? 0 : 51059; |==> <NO-OP>
12985:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):627:54867 |==> 0
12986:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):627:54867 |==> -54867
12987:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):627:return Config.__M_NO == 0 && Config.COVERED(12985, 12986) ? 54867 : Config.__M_NO == 12986 ? -54867 : Config.__M_NO == 12985 ? 0 : 54867; |==> <NO-OP>
12988:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):629:54899 |==> 0
12989:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):629:54899 |==> -54899
12990:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):629:return Config.__M_NO == 0 && Config.COVERED(12988, 12989) ? 54899 : Config.__M_NO == 12989 ? -54899 : Config.__M_NO == 12988 ? 0 : 54899; |==> <NO-OP>
12991:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):631:51028 |==> 0
12992:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):631:51028 |==> -51028
12993:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):631:return Config.__M_NO == 0 && Config.COVERED(12991, 12992) ? 51028 : Config.__M_NO == 12992 ? -51028 : Config.__M_NO == 12991 ? 0 : 51028; |==> <NO-OP>
12994:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):633:51060 |==> 0
12995:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):633:51060 |==> -51060
12996:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):633:return Config.__M_NO == 0 && Config.COVERED(12994, 12995) ? 51060 : Config.__M_NO == 12995 ? -51060 : Config.__M_NO == 12994 ? 0 : 51060; |==> <NO-OP>
12997:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):635:54868 |==> 0
12998:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):635:54868 |==> -54868
12999:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):635:return Config.__M_NO == 0 && Config.COVERED(12997, 12998) ? 54868 : Config.__M_NO == 12998 ? -54868 : Config.__M_NO == 12997 ? 0 : 54868; |==> <NO-OP>
13000:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):637:54900 |==> 0
13001:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):637:54900 |==> -54900
13002:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):637:return Config.__M_NO == 0 && Config.COVERED(13000, 13001) ? 54900 : Config.__M_NO == 13001 ? -54900 : Config.__M_NO == 13000 ? 0 : 54900; |==> <NO-OP>
13003:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):639:55125 |==> 0
13004:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):639:55125 |==> -55125
13005:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):639:return Config.__M_NO == 0 && Config.COVERED(13003, 13004) ? 55125 : Config.__M_NO == 13004 ? -55125 : Config.__M_NO == 13003 ? 0 : 55125; |==> <NO-OP>
13006:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):641:55157 |==> 0
13007:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):641:55157 |==> -55157
13008:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):641:return Config.__M_NO == 0 && Config.COVERED(13006, 13007) ? 55157 : Config.__M_NO == 13007 ? -55157 : Config.__M_NO == 13006 ? 0 : 55157; |==> <NO-OP>
13009:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):643:50262 |==> 0
13010:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):643:50262 |==> -50262
13011:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):643:return Config.__M_NO == 0 && Config.COVERED(13009, 13010) ? 50262 : Config.__M_NO == 13010 ? -50262 : Config.__M_NO == 13009 ? 0 : 50262; |==> <NO-OP>
13012:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):645:50294 |==> 0
13013:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):645:50294 |==> -50294
13014:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):645:return Config.__M_NO == 0 && Config.COVERED(13012, 13013) ? 50294 : Config.__M_NO == 13013 ? -50294 : Config.__M_NO == 13012 ? 0 : 50294; |==> <NO-OP>
13015:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):647:54870 |==> 0
13016:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):647:54870 |==> -54870
13017:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):647:return Config.__M_NO == 0 && Config.COVERED(13015, 13016) ? 54870 : Config.__M_NO == 13016 ? -54870 : Config.__M_NO == 13015 ? 0 : 54870; |==> <NO-OP>
13018:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):649:54902 |==> 0
13019:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):649:54902 |==> -54902
13020:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):649:return Config.__M_NO == 0 && Config.COVERED(13018, 13019) ? 54902 : Config.__M_NO == 13019 ? -54902 : Config.__M_NO == 13018 ? 0 : 54902; |==> <NO-OP>
13021:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):651:49495 |==> 0
13022:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):651:49495 |==> -49495
13023:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):651:return Config.__M_NO == 0 && Config.COVERED(13021, 13022) ? 49495 : Config.__M_NO == 13022 ? -49495 : Config.__M_NO == 13021 ? 0 : 49495; |==> <NO-OP>
13024:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):653:49527 |==> 0
13025:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):653:49527 |==> -49527
13026:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):653:return Config.__M_NO == 0 && Config.COVERED(13024, 13025) ? 49527 : Config.__M_NO == 13025 ? -49527 : Config.__M_NO == 13024 ? 0 : 49527; |==> <NO-OP>
13027:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):655:49751 |==> 0
13028:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):655:49751 |==> -49751
13029:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):655:return Config.__M_NO == 0 && Config.COVERED(13027, 13028) ? 49751 : Config.__M_NO == 13028 ? -49751 : Config.__M_NO == 13027 ? 0 : 49751; |==> <NO-OP>
13030:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):657:49783 |==> 0
13031:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):657:49783 |==> -49783
13032:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):657:return Config.__M_NO == 0 && Config.COVERED(13030, 13031) ? 49783 : Config.__M_NO == 13031 ? -49783 : Config.__M_NO == 13030 ? 0 : 49783; |==> <NO-OP>
13033:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):659:51287 |==> 0
13034:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):659:51287 |==> -51287
13035:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):659:return Config.__M_NO == 0 && Config.COVERED(13033, 13034) ? 51287 : Config.__M_NO == 13034 ? -51287 : Config.__M_NO == 13033 ? 0 : 51287; |==> <NO-OP>
13036:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):661:51319 |==> 0
13037:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):661:51319 |==> -51319
13038:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):661:return Config.__M_NO == 0 && Config.COVERED(13036, 13037) ? 51319 : Config.__M_NO == 13037 ? -51319 : Config.__M_NO == 13036 ? 0 : 51319; |==> <NO-OP>
13039:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):663:51031 |==> 0
13040:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):663:51031 |==> -51031
13041:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):663:return Config.__M_NO == 0 && Config.COVERED(13039, 13040) ? 51031 : Config.__M_NO == 13040 ? -51031 : Config.__M_NO == 13039 ? 0 : 51031; |==> <NO-OP>
13042:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):665:51063 |==> 0
13043:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):665:51063 |==> -51063
13044:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):665:return Config.__M_NO == 0 && Config.COVERED(13042, 13043) ? 51063 : Config.__M_NO == 13043 ? -51063 : Config.__M_NO == 13042 ? 0 : 51063; |==> <NO-OP>
13045:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):667:54871 |==> 0
13046:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):667:54871 |==> -54871
13047:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):667:return Config.__M_NO == 0 && Config.COVERED(13045, 13046) ? 54871 : Config.__M_NO == 13046 ? -54871 : Config.__M_NO == 13045 ? 0 : 54871; |==> <NO-OP>
13048:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):669:54903 |==> 0
13049:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):669:54903 |==> -54903
13050:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):669:return Config.__M_NO == 0 && Config.COVERED(13048, 13049) ? 54903 : Config.__M_NO == 13049 ? -54903 : Config.__M_NO == 13048 ? 0 : 54903; |==> <NO-OP>
13051:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):671:51032 |==> 0
13052:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):671:51032 |==> -51032
13053:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):671:return Config.__M_NO == 0 && Config.COVERED(13051, 13052) ? 51032 : Config.__M_NO == 13052 ? -51032 : Config.__M_NO == 13051 ? 0 : 51032; |==> <NO-OP>
13054:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):673:51064 |==> 0
13055:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):673:51064 |==> -51064
13056:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):673:return Config.__M_NO == 0 && Config.COVERED(13054, 13055) ? 51064 : Config.__M_NO == 13055 ? -51064 : Config.__M_NO == 13054 ? 0 : 51064; |==> <NO-OP>
13057:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):675:51288 |==> 0
13058:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):675:51288 |==> -51288
13059:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):675:return Config.__M_NO == 0 && Config.COVERED(13057, 13058) ? 51288 : Config.__M_NO == 13058 ? -51288 : Config.__M_NO == 13057 ? 0 : 51288; |==> <NO-OP>
13060:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):677:51320 |==> 0
13061:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):677:51320 |==> -51320
13062:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):677:return Config.__M_NO == 0 && Config.COVERED(13060, 13061) ? 51320 : Config.__M_NO == 13061 ? -51320 : Config.__M_NO == 13060 ? 0 : 51320; |==> <NO-OP>
13063:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):679:51033 |==> 0
13064:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):679:51033 |==> -51033
13065:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):679:return Config.__M_NO == 0 && Config.COVERED(13063, 13064) ? 51033 : Config.__M_NO == 13064 ? -51033 : Config.__M_NO == 13063 ? 0 : 51033; |==> <NO-OP>
13066:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):681:51065 |==> 0
13067:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):681:51065 |==> -51065
13068:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):681:return Config.__M_NO == 0 && Config.COVERED(13066, 13067) ? 51065 : Config.__M_NO == 13067 ? -51065 : Config.__M_NO == 13066 ? 0 : 51065; |==> <NO-OP>
13069:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):683:50010 |==> 0
13070:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):683:50010 |==> -50010
13071:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):683:return Config.__M_NO == 0 && Config.COVERED(13069, 13070) ? 50010 : Config.__M_NO == 13070 ? -50010 : Config.__M_NO == 13069 ? 0 : 50010; |==> <NO-OP>
13072:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):685:50042 |==> 0
13073:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):685:50042 |==> -50042
13074:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):685:return Config.__M_NO == 0 && Config.COVERED(13072, 13073) ? 50042 : Config.__M_NO == 13073 ? -50042 : Config.__M_NO == 13072 ? 0 : 50042; |==> <NO-OP>
13075:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):687:54874 |==> 0
13076:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):687:54874 |==> -54874
13077:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):687:return Config.__M_NO == 0 && Config.COVERED(13075, 13076) ? 54874 : Config.__M_NO == 13076 ? -54874 : Config.__M_NO == 13075 ? 0 : 54874; |==> <NO-OP>
13078:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):689:54906 |==> 0
13079:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):689:54906 |==> -54906
13080:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):689:return Config.__M_NO == 0 && Config.COVERED(13078, 13079) ? 54906 : Config.__M_NO == 13079 ? -54906 : Config.__M_NO == 13078 ? 0 : 54906; |==> <NO-OP>
13081:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):691:51316 |==> 0
13082:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):691:51316 |==> -51316
13083:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):691:return Config.__M_NO == 0 && Config.COVERED(13081, 13082) ? 51316 : Config.__M_NO == 13082 ? -51316 : Config.__M_NO == 13081 ? 0 : 51316; |==> <NO-OP>
13084:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):693:51831 |==> 0
13085:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):693:51831 |==> -51831
13086:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):693:return Config.__M_NO == 0 && Config.COVERED(13084, 13085) ? 51831 : Config.__M_NO == 13085 ? -51831 : Config.__M_NO == 13084 ? 0 : 51831; |==> <NO-OP>
13087:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):695:51833 |==> 0
13088:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):695:51833 |==> -51833
13089:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):695:return Config.__M_NO == 0 && Config.COVERED(13087, 13088) ? 51833 : Config.__M_NO == 13088 ? -51833 : Config.__M_NO == 13087 ? 0 : 51833; |==> <NO-OP>
13090:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):697:54849 |==> 0
13091:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):697:54849 |==> -54849
13092:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):697:return Config.__M_NO == 0 && Config.COVERED(13090, 13091) ? 54849 : Config.__M_NO == 13091 ? -54849 : Config.__M_NO == 13090 ? 0 : 54849; |==> <NO-OP>
13093:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):699:54881 |==> 0
13094:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):699:54881 |==> -54881
13095:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):699:return Config.__M_NO == 0 && Config.COVERED(13093, 13094) ? 54881 : Config.__M_NO == 13094 ? -54881 : Config.__M_NO == 13093 ? 0 : 54881; |==> <NO-OP>
13096:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):701:49217 |==> 0
13097:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):701:49217 |==> -49217
13098:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):701:return Config.__M_NO == 0 && Config.COVERED(13096, 13097) ? 49217 : Config.__M_NO == 13097 ? -49217 : Config.__M_NO == 13096 ? 0 : 49217; |==> <NO-OP>
13099:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):703:49249 |==> 0
13100:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):703:49249 |==> -49249
13101:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):703:return Config.__M_NO == 0 && Config.COVERED(13099, 13100) ? 49249 : Config.__M_NO == 13100 ? -49249 : Config.__M_NO == 13099 ? 0 : 49249; |==> <NO-OP>
13102:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):705:54853 |==> 0
13103:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):705:54853 |==> -54853
13104:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):705:return Config.__M_NO == 0 && Config.COVERED(13102, 13103) ? 54853 : Config.__M_NO == 13103 ? -54853 : Config.__M_NO == 13102 ? 0 : 54853; |==> <NO-OP>
13105:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):707:54885 |==> 0
13106:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):707:54885 |==> -54885
13107:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):707:return Config.__M_NO == 0 && Config.COVERED(13105, 13106) ? 54885 : Config.__M_NO == 13106 ? -54885 : Config.__M_NO == 13105 ? 0 : 54885; |==> <NO-OP>
13108:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):709:49221 |==> 0
13109:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):709:49221 |==> -49221
13110:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):709:return Config.__M_NO == 0 && Config.COVERED(13108, 13109) ? 49221 : Config.__M_NO == 13109 ? -49221 : Config.__M_NO == 13108 ? 0 : 49221; |==> <NO-OP>
13111:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):711:49253 |==> 0
13112:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):711:49253 |==> -49253
13113:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):711:return Config.__M_NO == 0 && Config.COVERED(13111, 13112) ? 49253 : Config.__M_NO == 13112 ? -49253 : Config.__M_NO == 13111 ? 0 : 49253; |==> <NO-OP>
13114:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):713:50245 |==> 0
13115:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):713:50245 |==> -50245
13116:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):713:return Config.__M_NO == 0 && Config.COVERED(13114, 13115) ? 50245 : Config.__M_NO == 13115 ? -50245 : Config.__M_NO == 13114 ? 0 : 50245; |==> <NO-OP>
13117:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):715:50277 |==> 0
13118:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):715:50277 |==> -50277
13119:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):715:return Config.__M_NO == 0 && Config.COVERED(13117, 13118) ? 50277 : Config.__M_NO == 13118 ? -50277 : Config.__M_NO == 13117 ? 0 : 50277; |==> <NO-OP>
13120:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):717:49225 |==> 0
13121:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):717:49225 |==> -49225
13122:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):717:return Config.__M_NO == 0 && Config.COVERED(13120, 13121) ? 49225 : Config.__M_NO == 13121 ? -49225 : Config.__M_NO == 13120 ? 0 : 49225; |==> <NO-OP>
13123:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):719:49257 |==> 0
13124:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):719:49257 |==> -49257
13125:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):719:return Config.__M_NO == 0 && Config.COVERED(13123, 13124) ? 49257 : Config.__M_NO == 13124 ? -49257 : Config.__M_NO == 13123 ? 0 : 49257; |==> <NO-OP>
13126:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):721:54857 |==> 0
13127:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):721:54857 |==> -54857
13128:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):721:return Config.__M_NO == 0 && Config.COVERED(13126, 13127) ? 54857 : Config.__M_NO == 13127 ? -54857 : Config.__M_NO == 13126 ? 0 : 54857; |==> <NO-OP>
13129:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):723:54889 |==> 0
13130:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):723:54889 |==> -54889
13131:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):723:return Config.__M_NO == 0 && Config.COVERED(13129, 13130) ? 54889 : Config.__M_NO == 13130 ? -54889 : Config.__M_NO == 13129 ? 0 : 54889; |==> <NO-OP>
13132:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):725:54863 |==> 0
13133:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):725:54863 |==> -54863
13134:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):725:return Config.__M_NO == 0 && Config.COVERED(13132, 13133) ? 54863 : Config.__M_NO == 13133 ? -54863 : Config.__M_NO == 13132 ? 0 : 54863; |==> <NO-OP>
13135:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):727:54895 |==> 0
13136:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):727:54895 |==> -54895
13137:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):727:return Config.__M_NO == 0 && Config.COVERED(13135, 13136) ? 54895 : Config.__M_NO == 13136 ? -54895 : Config.__M_NO == 13135 ? 0 : 54895; |==> <NO-OP>
13138:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):729:49231 |==> 0
13139:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):729:49231 |==> -49231
13140:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):729:return Config.__M_NO == 0 && Config.COVERED(13138, 13139) ? 49231 : Config.__M_NO == 13139 ? -49231 : Config.__M_NO == 13138 ? 0 : 49231; |==> <NO-OP>
13141:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):731:49263 |==> 0
13142:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):731:49263 |==> -49263
13143:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):731:return Config.__M_NO == 0 && Config.COVERED(13141, 13142) ? 49263 : Config.__M_NO == 13142 ? -49263 : Config.__M_NO == 13141 ? 0 : 49263; |==> <NO-OP>
13144:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):733:54869 |==> 0
13145:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):733:54869 |==> -54869
13146:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):733:return Config.__M_NO == 0 && Config.COVERED(13144, 13145) ? 54869 : Config.__M_NO == 13145 ? -54869 : Config.__M_NO == 13144 ? 0 : 54869; |==> <NO-OP>
13147:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):735:54901 |==> 0
13148:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):735:54901 |==> -54901
13149:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):735:return Config.__M_NO == 0 && Config.COVERED(13147, 13148) ? 54901 : Config.__M_NO == 13148 ? -54901 : Config.__M_NO == 13147 ? 0 : 54901; |==> <NO-OP>
13150:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):737:49237 |==> 0
13151:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):737:49237 |==> -49237
13152:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):737:return Config.__M_NO == 0 && Config.COVERED(13150, 13151) ? 49237 : Config.__M_NO == 13151 ? -49237 : Config.__M_NO == 13150 ? 0 : 49237; |==> <NO-OP>
13153:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):739:49269 |==> 0
13154:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):739:49269 |==> -49269
13155:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):739:return Config.__M_NO == 0 && Config.COVERED(13153, 13154) ? 49269 : Config.__M_NO == 13154 ? -49269 : Config.__M_NO == 13153 ? 0 : 49269; |==> <NO-OP>
13156:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):741:49497 |==> 0
13157:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):741:49497 |==> -49497
13158:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):741:return Config.__M_NO == 0 && Config.COVERED(13156, 13157) ? 49497 : Config.__M_NO == 13157 ? -49497 : Config.__M_NO == 13156 ? 0 : 49497; |==> <NO-OP>
13159:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):743:49529 |==> 0
13160:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):743:49529 |==> -49529
13161:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):743:return Config.__M_NO == 0 && Config.COVERED(13159, 13160) ? 49529 : Config.__M_NO == 13160 ? -49529 : Config.__M_NO == 13159 ? 0 : 49529; |==> <NO-OP>
13162:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):745:54873 |==> 0
13163:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):745:54873 |==> -54873
13164:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):745:return Config.__M_NO == 0 && Config.COVERED(13162, 13163) ? 54873 : Config.__M_NO == 13163 ? -54873 : Config.__M_NO == 13162 ? 0 : 54873; |==> <NO-OP>
13165:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):747:54905 |==> 0
13166:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):747:54905 |==> -54905
13167:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):747:return Config.__M_NO == 0 && Config.COVERED(13165, 13166) ? 54905 : Config.__M_NO == 13166 ? -54905 : Config.__M_NO == 13165 ? 0 : 54905; |==> <NO-OP>
13168:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):749:49241 |==> 0
13169:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):749:49241 |==> -49241
13170:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):749:return Config.__M_NO == 0 && Config.COVERED(13168, 13169) ? 49241 : Config.__M_NO == 13169 ? -49241 : Config.__M_NO == 13168 ? 0 : 49241; |==> <NO-OP>
13171:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):751:49273 |==> 0
13172:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):751:49273 |==> -49273
13173:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):751:return Config.__M_NO == 0 && Config.COVERED(13171, 13172) ? 49273 : Config.__M_NO == 13172 ? -49273 : Config.__M_NO == 13171 ? 0 : 49273; |==> <NO-OP>
13174:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):753:50265 |==> 0
13175:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):753:50265 |==> -50265
13176:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):753:return Config.__M_NO == 0 && Config.COVERED(13174, 13175) ? 50265 : Config.__M_NO == 13175 ? -50265 : Config.__M_NO == 13174 ? 0 : 50265; |==> <NO-OP>
13177:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):755:50297 |==> 0
13178:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):755:50297 |==> -50297
13179:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):755:return Config.__M_NO == 0 && Config.COVERED(13177, 13178) ? 50297 : Config.__M_NO == 13178 ? -50297 : Config.__M_NO == 13177 ? 0 : 50297; |==> <NO-OP>
13180:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):757:55584 |==> 0
13181:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):757:55584 |==> -55584
13182:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):757:return Config.__M_NO == 0 && Config.COVERED(13180, 13181) ? 55584 : Config.__M_NO == 13181 ? -55584 : Config.__M_NO == 13180 ? 0 : 55584; |==> <NO-OP>
13183:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):759:169 |==> 0
13184:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):759:169 |==> -169
13185:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):759:return Config.__M_NO == 0 && Config.COVERED(13183, 13184) ? 169 : Config.__M_NO == 13184 ? -169 : Config.__M_NO == 13183 ? 0 : 169; |==> <NO-OP>
13186:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):761:185 |==> 0
13187:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):761:185 |==> -185
13188:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):761:return Config.__M_NO == 0 && Config.COVERED(13186, 13187) ? 185 : Config.__M_NO == 13187 ? -185 : Config.__M_NO == 13186 ? 0 : 185; |==> <NO-OP>
13189:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):763:178 |==> 0
13190:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):763:178 |==> -178
13191:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):763:return Config.__M_NO == 0 && Config.COVERED(13189, 13190) ? 178 : Config.__M_NO == 13190 ? -178 : Config.__M_NO == 13189 ? 0 : 178; |==> <NO-OP>
13192:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):765:170 |==> 0
13193:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):765:170 |==> -170
13194:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):765:return Config.__M_NO == 0 && Config.COVERED(13192, 13193) ? 170 : Config.__M_NO == 13193 ? -170 : Config.__M_NO == 13192 ? 0 : 170; |==> <NO-OP>
13195:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):767:186 |==> 0
13196:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):767:186 |==> -186
13197:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):767:return Config.__M_NO == 0 && Config.COVERED(13195, 13196) ? 186 : Config.__M_NO == 13196 ? -186 : Config.__M_NO == 13195 ? 0 : 186; |==> <NO-OP>
13198:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):769:162 |==> 0
13199:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):769:162 |==> -162
13200:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):769:return Config.__M_NO == 0 && Config.COVERED(13198, 13199) ? 162 : Config.__M_NO == 13199 ? -162 : Config.__M_NO == 13198 ? 0 : 162; |==> <NO-OP>
13201:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):771:166 |==> 0
13202:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):771:166 |==> -166
13203:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):771:return Config.__M_NO == 0 && Config.COVERED(13201, 13202) ? 166 : Config.__M_NO == 13202 ? -166 : Config.__M_NO == 13201 ? 0 : 166; |==> <NO-OP>
13204:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):773:182 |==> 0
13205:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):773:182 |==> -182
13206:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):773:return Config.__M_NO == 0 && Config.COVERED(13204, 13205) ? 182 : Config.__M_NO == 13205 ? -182 : Config.__M_NO == 13204 ? 0 : 182; |==> <NO-OP>
13207:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):775:168 |==> 0
13208:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):775:168 |==> -168
13209:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):775:return Config.__M_NO == 0 && Config.COVERED(13207, 13208) ? 168 : Config.__M_NO == 13208 ? -168 : Config.__M_NO == 13207 ? 0 : 168; |==> <NO-OP>
13210:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):777:184 |==> 0
13211:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):777:184 |==> -184
13212:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):777:return Config.__M_NO == 0 && Config.COVERED(13210, 13211) ? 184 : Config.__M_NO == 13211 ? -184 : Config.__M_NO == 13210 ? 0 : 184; |==> <NO-OP>
13213:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):779:174 |==> 0
13214:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):779:174 |==> -174
13215:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):779:return Config.__M_NO == 0 && Config.COVERED(13213, 13214) ? 174 : Config.__M_NO == 13214 ? -174 : Config.__M_NO == 13213 ? 0 : 174; |==> <NO-OP>
13216:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):781:172 |==> 0
13217:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):781:172 |==> -172
13218:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):781:return Config.__M_NO == 0 && Config.COVERED(13216, 13217) ? 172 : Config.__M_NO == 13217 ? -172 : Config.__M_NO == 13216 ? 0 : 172; |==> <NO-OP>
13219:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):783:188 |==> 0
13220:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):783:188 |==> -188
13221:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):783:return Config.__M_NO == 0 && Config.COVERED(13219, 13220) ? 188 : Config.__M_NO == 13220 ? -188 : Config.__M_NO == 13219 ? 0 : 188; |==> <NO-OP>
13222:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):786:63 |==> 0
13223:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso5426@convert(int):786:63 |==> -63
13224:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):48:new StringBuffer() |==> null
13225:LVR:0:POS:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):49:0 |==> 1
13226:LVR:0:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):49:0 |==> -1
13227:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):49:i < data.length |==> i != data.length
13228:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):49:i < data.length |==> i <= data.length
13229:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):49:i < data.length |==> false
13230:EVR:<ARRAY_ACCESS>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):50:data[i] |==> 0
13231:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):51:128 |==> 0
13232:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):51:128 |==> -128
13233:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):51:c < 128 |==> c != 128
13234:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):51:c < 128 |==> c <= 128
13235:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):51:c < 128 |==> false
13236:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):52:sb.append(c) |==> <NO-OP>
13237:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):54:convert(c) |==> 0
13238:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):55:256 |==> 0
13239:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):55:256 |==> -256
13240:ROR:<(int,int):!=(int,int):org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):55:d < 256 |==> d != 256
13241:ROR:<(int,int):<=(int,int):org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):55:d < 256 |==> d <= 256
13242:ROR:<(int,int):FALSE(int,int):org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):55:d < 256 |==> false
13243:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):56:sb.append((char)d) |==> <NO-OP>
13244:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):58:256 |==> 0
13245:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):58:256 |==> -256
13246:AOR:/(int,int):%(int,int):org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):58:d / 256 |==> d % 256
13247:AOR:/(int,int):*(int,int):org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):58:d / 256 |==> d * 256
13248:AOR:/(int,int):+(int,int):org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):58:d / 256 |==> d + 256
13249:AOR:/(int,int):-(int,int):org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):58:d / 256 |==> d - 256
13250:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):58:sb.append((char)(d / 256)) |==> <NO-OP>
13251:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):59:256 |==> 0
13252:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):59:256 |==> -256
13253:AOR:%(int,int):*(int,int):org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):59:d % 256 |==> d * 256
13254:AOR:%(int,int):+(int,int):org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):59:d % 256 |==> d + 256
13255:AOR:%(int,int):-(int,int):org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):59:d % 256 |==> d - 256
13256:AOR:%(int,int):/(int,int):org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):59:d % 256 |==> d / 256
13257:STD:<CALL>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):59:sb.append((char)(d % 256)) |==> <NO-OP>
13258:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.converter.impl.UnicodeToIso6937@convert(char[]):63:sb.toString() |==> null
13259:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):69:160 |==> 0
13260:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):69:160 |==> -160
13261:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):69:return Config.__M_NO == 0 && Config.COVERED(13259, 13260) ? 160 : Config.__M_NO == 13260 ? -160 : Config.__M_NO == 13259 ? 0 : 160; |==> <NO-OP>
13262:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):71:161 |==> 0
13263:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):71:161 |==> -161
13264:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):71:return Config.__M_NO == 0 && Config.COVERED(13262, 13263) ? 161 : Config.__M_NO == 13263 ? -161 : Config.__M_NO == 13262 ? 0 : 161; |==> <NO-OP>
13265:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):73:162 |==> 0
13266:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):73:162 |==> -162
13267:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):73:return Config.__M_NO == 0 && Config.COVERED(13265, 13266) ? 162 : Config.__M_NO == 13266 ? -162 : Config.__M_NO == 13265 ? 0 : 162; |==> <NO-OP>
13268:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):75:163 |==> 0
13269:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):75:163 |==> -163
13270:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):75:return Config.__M_NO == 0 && Config.COVERED(13268, 13269) ? 163 : Config.__M_NO == 13269 ? -163 : Config.__M_NO == 13268 ? 0 : 163; |==> <NO-OP>
13271:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):77:168 |==> 0
13272:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):77:168 |==> -168
13273:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):77:return Config.__M_NO == 0 && Config.COVERED(13271, 13272) ? 168 : Config.__M_NO == 13272 ? -168 : Config.__M_NO == 13271 ? 0 : 168; |==> <NO-OP>
13274:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):79:165 |==> 0
13275:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):79:165 |==> -165
13276:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):79:return Config.__M_NO == 0 && Config.COVERED(13274, 13275) ? 165 : Config.__M_NO == 13275 ? -165 : Config.__M_NO == 13274 ? 0 : 165; |==> <NO-OP>
13277:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):81:215 |==> 0
13278:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):81:215 |==> -215
13279:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):81:return Config.__M_NO == 0 && Config.COVERED(13277, 13278) ? 215 : Config.__M_NO == 13278 ? -215 : Config.__M_NO == 13277 ? 0 : 215; |==> <NO-OP>
13280:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):83:167 |==> 0
13281:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):83:167 |==> -167
13282:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):83:return Config.__M_NO == 0 && Config.COVERED(13280, 13281) ? 167 : Config.__M_NO == 13281 ? -167 : Config.__M_NO == 13280 ? 0 : 167; |==> <NO-OP>
13283:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):85:51232 |==> 0
13284:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):85:51232 |==> -51232
13285:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):85:return Config.__M_NO == 0 && Config.COVERED(13283, 13284) ? 51232 : Config.__M_NO == 13284 ? -51232 : Config.__M_NO == 13283 ? 0 : 51232; |==> <NO-OP>
13286:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):87:211 |==> 0
13287:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):87:211 |==> -211
13288:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):87:return Config.__M_NO == 0 && Config.COVERED(13286, 13287) ? 211 : Config.__M_NO == 13287 ? -211 : Config.__M_NO == 13286 ? 0 : 211; |==> <NO-OP>
13289:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):89:227 |==> 0
13290:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):89:227 |==> -227
13291:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):89:return Config.__M_NO == 0 && Config.COVERED(13289, 13290) ? 227 : Config.__M_NO == 13290 ? -227 : Config.__M_NO == 13289 ? 0 : 227; |==> <NO-OP>
13292:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):91:171 |==> 0
13293:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):91:171 |==> -171
13294:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):91:return Config.__M_NO == 0 && Config.COVERED(13292, 13293) ? 171 : Config.__M_NO == 13293 ? -171 : Config.__M_NO == 13292 ? 0 : 171; |==> <NO-OP>
13295:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):93:214 |==> 0
13296:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):93:214 |==> -214
13297:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):93:return Config.__M_NO == 0 && Config.COVERED(13295, 13296) ? 214 : Config.__M_NO == 13296 ? -214 : Config.__M_NO == 13295 ? 0 : 214; |==> <NO-OP>
13298:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):95:255 |==> 0
13299:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):95:255 |==> -255
13300:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):95:return Config.__M_NO == 0 && Config.COVERED(13298, 13299) ? 255 : Config.__M_NO == 13299 ? -255 : Config.__M_NO == 13298 ? 0 : 255; |==> <NO-OP>
13301:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):97:212 |==> 0
13302:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):97:212 |==> -212
13303:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):97:return Config.__M_NO == 0 && Config.COVERED(13301, 13302) ? 212 : Config.__M_NO == 13302 ? -212 : Config.__M_NO == 13301 ? 0 : 212; |==> <NO-OP>
13304:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):99:176 |==> 0
13305:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):99:176 |==> -176
13306:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):99:return Config.__M_NO == 0 && Config.COVERED(13304, 13305) ? 176 : Config.__M_NO == 13305 ? -176 : Config.__M_NO == 13304 ? 0 : 176; |==> <NO-OP>
13307:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):101:177 |==> 0
13308:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):101:177 |==> -177
13309:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):101:return Config.__M_NO == 0 && Config.COVERED(13307, 13308) ? 177 : Config.__M_NO == 13308 ? -177 : Config.__M_NO == 13307 ? 0 : 177; |==> <NO-OP>
13310:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):103:178 |==> 0
13311:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):103:178 |==> -178
13312:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):103:return Config.__M_NO == 0 && Config.COVERED(13310, 13311) ? 178 : Config.__M_NO == 13311 ? -178 : Config.__M_NO == 13310 ? 0 : 178; |==> <NO-OP>
13313:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):105:179 |==> 0
13314:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):105:179 |==> -179
13315:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):105:return Config.__M_NO == 0 && Config.COVERED(13313, 13314) ? 179 : Config.__M_NO == 13314 ? -179 : Config.__M_NO == 13313 ? 0 : 179; |==> <NO-OP>
13316:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):107:49696 |==> 0
13317:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):107:49696 |==> -49696
13318:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):107:return Config.__M_NO == 0 && Config.COVERED(13316, 13317) ? 49696 : Config.__M_NO == 13317 ? -49696 : Config.__M_NO == 13316 ? 0 : 49696; |==> <NO-OP>
13319:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):109:181 |==> 0
13320:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):109:181 |==> -181
13321:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):109:return Config.__M_NO == 0 && Config.COVERED(13319, 13320) ? 181 : Config.__M_NO == 13320 ? -181 : Config.__M_NO == 13319 ? 0 : 181; |==> <NO-OP>
13322:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):111:182 |==> 0
13323:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):111:182 |==> -182
13324:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):111:return Config.__M_NO == 0 && Config.COVERED(13322, 13323) ? 182 : Config.__M_NO == 13323 ? -182 : Config.__M_NO == 13322 ? 0 : 182; |==> <NO-OP>
13325:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):113:183 |==> 0
13326:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):113:183 |==> -183
13327:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):113:return Config.__M_NO == 0 && Config.COVERED(13325, 13326) ? 183 : Config.__M_NO == 13326 ? -183 : Config.__M_NO == 13325 ? 0 : 183; |==> <NO-OP>
13328:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):115:52000 |==> 0
13329:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):115:52000 |==> -52000
13330:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):115:return Config.__M_NO == 0 && Config.COVERED(13328, 13329) ? 52000 : Config.__M_NO == 13329 ? -52000 : Config.__M_NO == 13328 ? 0 : 52000; |==> <NO-OP>
13331:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):117:209 |==> 0
13332:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):117:209 |==> -209
13333:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):117:return Config.__M_NO == 0 && Config.COVERED(13331, 13332) ? 209 : Config.__M_NO == 13332 ? -209 : Config.__M_NO == 13331 ? 0 : 209; |==> <NO-OP>
13334:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):119:235 |==> 0
13335:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):119:235 |==> -235
13336:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):119:return Config.__M_NO == 0 && Config.COVERED(13334, 13335) ? 235 : Config.__M_NO == 13335 ? -235 : Config.__M_NO == 13334 ? 0 : 235; |==> <NO-OP>
13337:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):121:187 |==> 0
13338:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):121:187 |==> -187
13339:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):121:return Config.__M_NO == 0 && Config.COVERED(13337, 13338) ? 187 : Config.__M_NO == 13338 ? -187 : Config.__M_NO == 13337 ? 0 : 187; |==> <NO-OP>
13340:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):123:188 |==> 0
13341:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):123:188 |==> -188
13342:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):123:return Config.__M_NO == 0 && Config.COVERED(13340, 13341) ? 188 : Config.__M_NO == 13341 ? -188 : Config.__M_NO == 13340 ? 0 : 188; |==> <NO-OP>
13343:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):125:189 |==> 0
13344:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):125:189 |==> -189
13345:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):125:return Config.__M_NO == 0 && Config.COVERED(13343, 13344) ? 189 : Config.__M_NO == 13344 ? -189 : Config.__M_NO == 13343 ? 0 : 189; |==> <NO-OP>
13346:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):127:190 |==> 0
13347:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):127:190 |==> -190
13348:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):127:return Config.__M_NO == 0 && Config.COVERED(13346, 13347) ? 190 : Config.__M_NO == 13347 ? -190 : Config.__M_NO == 13346 ? 0 : 190; |==> <NO-OP>
13349:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):129:191 |==> 0
13350:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):129:191 |==> -191
13351:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):129:return Config.__M_NO == 0 && Config.COVERED(13349, 13350) ? 191 : Config.__M_NO == 13350 ? -191 : Config.__M_NO == 13349 ? 0 : 191; |==> <NO-OP>
13352:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):131:49473 |==> 0
13353:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):131:49473 |==> -49473
13354:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):131:return Config.__M_NO == 0 && Config.COVERED(13352, 13353) ? 49473 : Config.__M_NO == 13353 ? -49473 : Config.__M_NO == 13352 ? 0 : 49473; |==> <NO-OP>
13355:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):133:49729 |==> 0
13356:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):133:49729 |==> -49729
13357:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):133:return Config.__M_NO == 0 && Config.COVERED(13355, 13356) ? 49729 : Config.__M_NO == 13356 ? -49729 : Config.__M_NO == 13355 ? 0 : 49729; |==> <NO-OP>
13358:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):135:49985 |==> 0
13359:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):135:49985 |==> -49985
13360:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):135:return Config.__M_NO == 0 && Config.COVERED(13358, 13359) ? 49985 : Config.__M_NO == 13359 ? -49985 : Config.__M_NO == 13358 ? 0 : 49985; |==> <NO-OP>
13361:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):137:50241 |==> 0
13362:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):137:50241 |==> -50241
13363:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):137:return Config.__M_NO == 0 && Config.COVERED(13361, 13362) ? 50241 : Config.__M_NO == 13362 ? -50241 : Config.__M_NO == 13361 ? 0 : 50241; |==> <NO-OP>
13364:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):139:51265 |==> 0
13365:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):139:51265 |==> -51265
13366:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):139:return Config.__M_NO == 0 && Config.COVERED(13364, 13365) ? 51265 : Config.__M_NO == 13365 ? -51265 : Config.__M_NO == 13364 ? 0 : 51265; |==> <NO-OP>
13367:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):141:51777 |==> 0
13368:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):141:51777 |==> -51777
13369:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):141:return Config.__M_NO == 0 && Config.COVERED(13367, 13368) ? 51777 : Config.__M_NO == 13368 ? -51777 : Config.__M_NO == 13367 ? 0 : 51777; |==> <NO-OP>
13370:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):143:225 |==> 0
13371:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):143:225 |==> -225
13372:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):143:return Config.__M_NO == 0 && Config.COVERED(13370, 13371) ? 225 : Config.__M_NO == 13371 ? -225 : Config.__M_NO == 13370 ? 0 : 225; |==> <NO-OP>
13373:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):145:52035 |==> 0
13374:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):145:52035 |==> -52035
13375:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):145:return Config.__M_NO == 0 && Config.COVERED(13373, 13374) ? 52035 : Config.__M_NO == 13374 ? -52035 : Config.__M_NO == 13373 ? 0 : 52035; |==> <NO-OP>
13376:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):147:49477 |==> 0
13377:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):147:49477 |==> -49477
13378:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):147:return Config.__M_NO == 0 && Config.COVERED(13376, 13377) ? 49477 : Config.__M_NO == 13377 ? -49477 : Config.__M_NO == 13376 ? 0 : 49477; |==> <NO-OP>
13379:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):149:49733 |==> 0
13380:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):149:49733 |==> -49733
13381:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):149:return Config.__M_NO == 0 && Config.COVERED(13379, 13380) ? 49733 : Config.__M_NO == 13380 ? -49733 : Config.__M_NO == 13379 ? 0 : 49733; |==> <NO-OP>
13382:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):151:49989 |==> 0
13383:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):151:49989 |==> -49989
13384:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):151:return Config.__M_NO == 0 && Config.COVERED(13382, 13383) ? 49989 : Config.__M_NO == 13383 ? -49989 : Config.__M_NO == 13382 ? 0 : 49989; |==> <NO-OP>
13385:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):153:51269 |==> 0
13386:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):153:51269 |==> -51269
13387:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):153:return Config.__M_NO == 0 && Config.COVERED(13385, 13386) ? 51269 : Config.__M_NO == 13386 ? -51269 : Config.__M_NO == 13385 ? 0 : 51269; |==> <NO-OP>
13388:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):155:49481 |==> 0
13389:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):155:49481 |==> -49481
13390:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):155:return Config.__M_NO == 0 && Config.COVERED(13388, 13389) ? 49481 : Config.__M_NO == 13389 ? -49481 : Config.__M_NO == 13388 ? 0 : 49481; |==> <NO-OP>
13391:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):157:49737 |==> 0
13392:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):157:49737 |==> -49737
13393:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):157:return Config.__M_NO == 0 && Config.COVERED(13391, 13392) ? 49737 : Config.__M_NO == 13392 ? -49737 : Config.__M_NO == 13391 ? 0 : 49737; |==> <NO-OP>
13394:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):159:49993 |==> 0
13395:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):159:49993 |==> -49993
13396:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):159:return Config.__M_NO == 0 && Config.COVERED(13394, 13395) ? 49993 : Config.__M_NO == 13395 ? -49993 : Config.__M_NO == 13394 ? 0 : 49993; |==> <NO-OP>
13397:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):161:51273 |==> 0
13398:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):161:51273 |==> -51273
13399:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):161:return Config.__M_NO == 0 && Config.COVERED(13397, 13398) ? 51273 : Config.__M_NO == 13398 ? -51273 : Config.__M_NO == 13397 ? 0 : 51273; |==> <NO-OP>
13400:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):163:50254 |==> 0
13401:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):163:50254 |==> -50254
13402:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):163:return Config.__M_NO == 0 && Config.COVERED(13400, 13401) ? 50254 : Config.__M_NO == 13401 ? -50254 : Config.__M_NO == 13400 ? 0 : 50254; |==> <NO-OP>
13403:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):165:49487 |==> 0
13404:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):165:49487 |==> -49487
13405:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):165:return Config.__M_NO == 0 && Config.COVERED(13403, 13404) ? 49487 : Config.__M_NO == 13404 ? -49487 : Config.__M_NO == 13403 ? 0 : 49487; |==> <NO-OP>
13406:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):167:49743 |==> 0
13407:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):167:49743 |==> -49743
13408:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):167:return Config.__M_NO == 0 && Config.COVERED(13406, 13407) ? 49743 : Config.__M_NO == 13407 ? -49743 : Config.__M_NO == 13406 ? 0 : 49743; |==> <NO-OP>
13409:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):169:49999 |==> 0
13410:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):169:49999 |==> -49999
13411:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):169:return Config.__M_NO == 0 && Config.COVERED(13409, 13410) ? 49999 : Config.__M_NO == 13410 ? -49999 : Config.__M_NO == 13409 ? 0 : 49999; |==> <NO-OP>
13412:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):171:50255 |==> 0
13413:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):171:50255 |==> -50255
13414:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):171:return Config.__M_NO == 0 && Config.COVERED(13412, 13413) ? 50255 : Config.__M_NO == 13413 ? -50255 : Config.__M_NO == 13412 ? 0 : 50255; |==> <NO-OP>
13415:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):173:51279 |==> 0
13416:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):173:51279 |==> -51279
13417:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):173:return Config.__M_NO == 0 && Config.COVERED(13415, 13416) ? 51279 : Config.__M_NO == 13416 ? -51279 : Config.__M_NO == 13415 ? 0 : 51279; |==> <NO-OP>
13418:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):175:180 |==> 0
13419:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):175:180 |==> -180
13420:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):175:return Config.__M_NO == 0 && Config.COVERED(13418, 13419) ? 180 : Config.__M_NO == 13419 ? -180 : Config.__M_NO == 13418 ? 0 : 180; |==> <NO-OP>
13421:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):177:233 |==> 0
13422:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):177:233 |==> -233
13423:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):177:return Config.__M_NO == 0 && Config.COVERED(13421, 13422) ? 233 : Config.__M_NO == 13422 ? -233 : Config.__M_NO == 13421 ? 0 : 233; |==> <NO-OP>
13424:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):179:49493 |==> 0
13425:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):179:49493 |==> -49493
13426:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):179:return Config.__M_NO == 0 && Config.COVERED(13424, 13425) ? 49493 : Config.__M_NO == 13425 ? -49493 : Config.__M_NO == 13424 ? 0 : 49493; |==> <NO-OP>
13427:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):181:49749 |==> 0
13428:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):181:49749 |==> -49749
13429:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):181:return Config.__M_NO == 0 && Config.COVERED(13427, 13428) ? 49749 : Config.__M_NO == 13428 ? -49749 : Config.__M_NO == 13427 ? 0 : 49749; |==> <NO-OP>
13430:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):183:50005 |==> 0
13431:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):183:50005 |==> -50005
13432:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):183:return Config.__M_NO == 0 && Config.COVERED(13430, 13431) ? 50005 : Config.__M_NO == 13431 ? -50005 : Config.__M_NO == 13430 ? 0 : 50005; |==> <NO-OP>
13433:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):185:51285 |==> 0
13434:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):185:51285 |==> -51285
13435:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):185:return Config.__M_NO == 0 && Config.COVERED(13433, 13434) ? 51285 : Config.__M_NO == 13434 ? -51285 : Config.__M_NO == 13433 ? 0 : 51285; |==> <NO-OP>
13436:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):187:49753 |==> 0
13437:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):187:49753 |==> -49753
13438:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):187:return Config.__M_NO == 0 && Config.COVERED(13436, 13437) ? 49753 : Config.__M_NO == 13437 ? -49753 : Config.__M_NO == 13436 ? 0 : 49753; |==> <NO-OP>
13439:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):189:236 |==> 0
13440:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):189:236 |==> -236
13441:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):189:return Config.__M_NO == 0 && Config.COVERED(13439, 13440) ? 236 : Config.__M_NO == 13440 ? -236 : Config.__M_NO == 13439 ? 0 : 236; |==> <NO-OP>
13442:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):191:251 |==> 0
13443:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):191:251 |==> -251
13444:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):191:return Config.__M_NO == 0 && Config.COVERED(13442, 13443) ? 251 : Config.__M_NO == 13443 ? -251 : Config.__M_NO == 13442 ? 0 : 251; |==> <NO-OP>
13445:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):193:49505 |==> 0
13446:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):193:49505 |==> -49505
13447:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):193:return Config.__M_NO == 0 && Config.COVERED(13445, 13446) ? 49505 : Config.__M_NO == 13446 ? -49505 : Config.__M_NO == 13445 ? 0 : 49505; |==> <NO-OP>
13448:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):195:49761 |==> 0
13449:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):195:49761 |==> -49761
13450:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):195:return Config.__M_NO == 0 && Config.COVERED(13448, 13449) ? 49761 : Config.__M_NO == 13449 ? -49761 : Config.__M_NO == 13448 ? 0 : 49761; |==> <NO-OP>
13451:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):197:50017 |==> 0
13452:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):197:50017 |==> -50017
13453:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):197:return Config.__M_NO == 0 && Config.COVERED(13451, 13452) ? 50017 : Config.__M_NO == 13452 ? -50017 : Config.__M_NO == 13451 ? 0 : 50017; |==> <NO-OP>
13454:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):199:50273 |==> 0
13455:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):199:50273 |==> -50273
13456:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):199:return Config.__M_NO == 0 && Config.COVERED(13454, 13455) ? 50273 : Config.__M_NO == 13455 ? -50273 : Config.__M_NO == 13454 ? 0 : 50273; |==> <NO-OP>
13457:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):201:51297 |==> 0
13458:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):201:51297 |==> -51297
13459:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):201:return Config.__M_NO == 0 && Config.COVERED(13457, 13458) ? 51297 : Config.__M_NO == 13458 ? -51297 : Config.__M_NO == 13457 ? 0 : 51297; |==> <NO-OP>
13460:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):203:51809 |==> 0
13461:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):203:51809 |==> -51809
13462:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):203:return Config.__M_NO == 0 && Config.COVERED(13460, 13461) ? 51809 : Config.__M_NO == 13461 ? -51809 : Config.__M_NO == 13460 ? 0 : 51809; |==> <NO-OP>
13463:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):205:241 |==> 0
13464:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):205:241 |==> -241
13465:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):205:return Config.__M_NO == 0 && Config.COVERED(13463, 13464) ? 241 : Config.__M_NO == 13464 ? -241 : Config.__M_NO == 13463 ? 0 : 241; |==> <NO-OP>
13466:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):207:52067 |==> 0
13467:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):207:52067 |==> -52067
13468:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):207:return Config.__M_NO == 0 && Config.COVERED(13466, 13467) ? 52067 : Config.__M_NO == 13467 ? -52067 : Config.__M_NO == 13466 ? 0 : 52067; |==> <NO-OP>
13469:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):209:49509 |==> 0
13470:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):209:49509 |==> -49509
13471:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):209:return Config.__M_NO == 0 && Config.COVERED(13469, 13470) ? 49509 : Config.__M_NO == 13470 ? -49509 : Config.__M_NO == 13469 ? 0 : 49509; |==> <NO-OP>
13472:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):211:49765 |==> 0
13473:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):211:49765 |==> -49765
13474:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):211:return Config.__M_NO == 0 && Config.COVERED(13472, 13473) ? 49765 : Config.__M_NO == 13473 ? -49765 : Config.__M_NO == 13472 ? 0 : 49765; |==> <NO-OP>
13475:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):213:50021 |==> 0
13476:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):213:50021 |==> -50021
13477:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):213:return Config.__M_NO == 0 && Config.COVERED(13475, 13476) ? 50021 : Config.__M_NO == 13476 ? -50021 : Config.__M_NO == 13475 ? 0 : 50021; |==> <NO-OP>
13478:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):215:51301 |==> 0
13479:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):215:51301 |==> -51301
13480:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):215:return Config.__M_NO == 0 && Config.COVERED(13478, 13479) ? 51301 : Config.__M_NO == 13479 ? -51301 : Config.__M_NO == 13478 ? 0 : 51301; |==> <NO-OP>
13481:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):217:49513 |==> 0
13482:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):217:49513 |==> -49513
13483:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):217:return Config.__M_NO == 0 && Config.COVERED(13481, 13482) ? 49513 : Config.__M_NO == 13482 ? -49513 : Config.__M_NO == 13481 ? 0 : 49513; |==> <NO-OP>
13484:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):219:49769 |==> 0
13485:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):219:49769 |==> -49769
13486:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):219:return Config.__M_NO == 0 && Config.COVERED(13484, 13485) ? 49769 : Config.__M_NO == 13485 ? -49769 : Config.__M_NO == 13484 ? 0 : 49769; |==> <NO-OP>
13487:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):221:50025 |==> 0
13488:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):221:50025 |==> -50025
13489:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):221:return Config.__M_NO == 0 && Config.COVERED(13487, 13488) ? 50025 : Config.__M_NO == 13488 ? -50025 : Config.__M_NO == 13487 ? 0 : 50025; |==> <NO-OP>
13490:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):223:51305 |==> 0
13491:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):223:51305 |==> -51305
13492:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):223:return Config.__M_NO == 0 && Config.COVERED(13490, 13491) ? 51305 : Config.__M_NO == 13491 ? -51305 : Config.__M_NO == 13490 ? 0 : 51305; |==> <NO-OP>
13493:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):225:243 |==> 0
13494:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):225:243 |==> -243
13495:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):225:return Config.__M_NO == 0 && Config.COVERED(13493, 13494) ? 243 : Config.__M_NO == 13494 ? -243 : Config.__M_NO == 13493 ? 0 : 243; |==> <NO-OP>
13496:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):227:50286 |==> 0
13497:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):227:50286 |==> -50286
13498:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):227:return Config.__M_NO == 0 && Config.COVERED(13496, 13497) ? 50286 : Config.__M_NO == 13497 ? -50286 : Config.__M_NO == 13496 ? 0 : 50286; |==> <NO-OP>
13499:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):229:49519 |==> 0
13500:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):229:49519 |==> -49519
13501:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):229:return Config.__M_NO == 0 && Config.COVERED(13499, 13500) ? 49519 : Config.__M_NO == 13500 ? -49519 : Config.__M_NO == 13499 ? 0 : 49519; |==> <NO-OP>
13502:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):231:49775 |==> 0
13503:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):231:49775 |==> -49775
13504:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):231:return Config.__M_NO == 0 && Config.COVERED(13502, 13503) ? 49775 : Config.__M_NO == 13503 ? -49775 : Config.__M_NO == 13502 ? 0 : 49775; |==> <NO-OP>
13505:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):233:50031 |==> 0
13506:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):233:50031 |==> -50031
13507:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):233:return Config.__M_NO == 0 && Config.COVERED(13505, 13506) ? 50031 : Config.__M_NO == 13506 ? -50031 : Config.__M_NO == 13505 ? 0 : 50031; |==> <NO-OP>
13508:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):235:50287 |==> 0
13509:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):235:50287 |==> -50287
13510:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):235:return Config.__M_NO == 0 && Config.COVERED(13508, 13509) ? 50287 : Config.__M_NO == 13509 ? -50287 : Config.__M_NO == 13508 ? 0 : 50287; |==> <NO-OP>
13511:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):237:51311 |==> 0
13512:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):237:51311 |==> -51311
13513:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):237:return Config.__M_NO == 0 && Config.COVERED(13511, 13512) ? 51311 : Config.__M_NO == 13512 ? -51311 : Config.__M_NO == 13511 ? 0 : 51311; |==> <NO-OP>
13514:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):239:184 |==> 0
13515:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):239:184 |==> -184
13516:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):239:return Config.__M_NO == 0 && Config.COVERED(13514, 13515) ? 184 : Config.__M_NO == 13515 ? -184 : Config.__M_NO == 13514 ? 0 : 184; |==> <NO-OP>
13517:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):241:249 |==> 0
13518:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):241:249 |==> -249
13519:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):241:return Config.__M_NO == 0 && Config.COVERED(13517, 13518) ? 249 : Config.__M_NO == 13518 ? -249 : Config.__M_NO == 13517 ? 0 : 249; |==> <NO-OP>
13520:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):243:49525 |==> 0
13521:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):243:49525 |==> -49525
13522:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):243:return Config.__M_NO == 0 && Config.COVERED(13520, 13521) ? 49525 : Config.__M_NO == 13521 ? -49525 : Config.__M_NO == 13520 ? 0 : 49525; |==> <NO-OP>
13523:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):245:49781 |==> 0
13524:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):245:49781 |==> -49781
13525:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):245:return Config.__M_NO == 0 && Config.COVERED(13523, 13524) ? 49781 : Config.__M_NO == 13524 ? -49781 : Config.__M_NO == 13523 ? 0 : 49781; |==> <NO-OP>
13526:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):247:50037 |==> 0
13527:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):247:50037 |==> -50037
13528:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):247:return Config.__M_NO == 0 && Config.COVERED(13526, 13527) ? 50037 : Config.__M_NO == 13527 ? -50037 : Config.__M_NO == 13526 ? 0 : 50037; |==> <NO-OP>
13529:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):249:51317 |==> 0
13530:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):249:51317 |==> -51317
13531:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):249:return Config.__M_NO == 0 && Config.COVERED(13529, 13530) ? 51317 : Config.__M_NO == 13530 ? -51317 : Config.__M_NO == 13529 ? 0 : 51317; |==> <NO-OP>
13532:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):251:49785 |==> 0
13533:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):251:49785 |==> -49785
13534:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):251:return Config.__M_NO == 0 && Config.COVERED(13532, 13533) ? 49785 : Config.__M_NO == 13533 ? -49785 : Config.__M_NO == 13532 ? 0 : 49785; |==> <NO-OP>
13535:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):253:252 |==> 0
13536:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):253:252 |==> -252
13537:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):253:return Config.__M_NO == 0 && Config.COVERED(13535, 13536) ? 252 : Config.__M_NO == 13536 ? -252 : Config.__M_NO == 13535 ? 0 : 252; |==> <NO-OP>
13538:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):255:51321 |==> 0
13539:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):255:51321 |==> -51321
13540:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):255:return Config.__M_NO == 0 && Config.COVERED(13538, 13539) ? 51321 : Config.__M_NO == 13539 ? -51321 : Config.__M_NO == 13538 ? 0 : 51321; |==> <NO-OP>
13541:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):257:50497 |==> 0
13542:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):257:50497 |==> -50497
13543:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):257:return Config.__M_NO == 0 && Config.COVERED(13541, 13542) ? 50497 : Config.__M_NO == 13542 ? -50497 : Config.__M_NO == 13541 ? 0 : 50497; |==> <NO-OP>
13544:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):259:50529 |==> 0
13545:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):259:50529 |==> -50529
13546:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):259:return Config.__M_NO == 0 && Config.COVERED(13544, 13545) ? 50529 : Config.__M_NO == 13545 ? -50529 : Config.__M_NO == 13544 ? 0 : 50529; |==> <NO-OP>
13547:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):261:50753 |==> 0
13548:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):261:50753 |==> -50753
13549:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):261:return Config.__M_NO == 0 && Config.COVERED(13547, 13548) ? 50753 : Config.__M_NO == 13548 ? -50753 : Config.__M_NO == 13547 ? 0 : 50753; |==> <NO-OP>
13550:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):263:50785 |==> 0
13551:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):263:50785 |==> -50785
13552:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):263:return Config.__M_NO == 0 && Config.COVERED(13550, 13551) ? 50785 : Config.__M_NO == 13551 ? -50785 : Config.__M_NO == 13550 ? 0 : 50785; |==> <NO-OP>
13553:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):265:52801 |==> 0
13554:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):265:52801 |==> -52801
13555:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):265:return Config.__M_NO == 0 && Config.COVERED(13553, 13554) ? 52801 : Config.__M_NO == 13554 ? -52801 : Config.__M_NO == 13553 ? 0 : 52801; |==> <NO-OP>
13556:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):267:52833 |==> 0
13557:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):267:52833 |==> -52833
13558:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):267:return Config.__M_NO == 0 && Config.COVERED(13556, 13557) ? 52833 : Config.__M_NO == 13557 ? -52833 : Config.__M_NO == 13556 ? 0 : 52833; |==> <NO-OP>
13559:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):269:49731 |==> 0
13560:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):269:49731 |==> -49731
13561:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):269:return Config.__M_NO == 0 && Config.COVERED(13559, 13560) ? 49731 : Config.__M_NO == 13560 ? -49731 : Config.__M_NO == 13559 ? 0 : 49731; |==> <NO-OP>
13562:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):271:49763 |==> 0
13563:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):271:49763 |==> -49763
13564:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):271:return Config.__M_NO == 0 && Config.COVERED(13562, 13563) ? 49763 : Config.__M_NO == 13563 ? -49763 : Config.__M_NO == 13562 ? 0 : 49763; |==> <NO-OP>
13565:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):273:49987 |==> 0
13566:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):273:49987 |==> -49987
13567:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):273:return Config.__M_NO == 0 && Config.COVERED(13565, 13566) ? 49987 : Config.__M_NO == 13566 ? -49987 : Config.__M_NO == 13565 ? 0 : 49987; |==> <NO-OP>
13568:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):275:50019 |==> 0
13569:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):275:50019 |==> -50019
13570:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):275:return Config.__M_NO == 0 && Config.COVERED(13568, 13569) ? 50019 : Config.__M_NO == 13569 ? -50019 : Config.__M_NO == 13568 ? 0 : 50019; |==> <NO-OP>
13571:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):277:51011 |==> 0
13572:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):277:51011 |==> -51011
13573:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):277:return Config.__M_NO == 0 && Config.COVERED(13571, 13572) ? 51011 : Config.__M_NO == 13572 ? -51011 : Config.__M_NO == 13571 ? 0 : 51011; |==> <NO-OP>
13574:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):279:51043 |==> 0
13575:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):279:51043 |==> -51043
13576:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):279:return Config.__M_NO == 0 && Config.COVERED(13574, 13575) ? 51043 : Config.__M_NO == 13575 ? -51043 : Config.__M_NO == 13574 ? 0 : 51043; |==> <NO-OP>
13577:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):281:53059 |==> 0
13578:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):281:53059 |==> -53059
13579:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):281:return Config.__M_NO == 0 && Config.COVERED(13577, 13578) ? 53059 : Config.__M_NO == 13578 ? -53059 : Config.__M_NO == 13577 ? 0 : 53059; |==> <NO-OP>
13580:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):283:53091 |==> 0
13581:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):283:53091 |==> -53091
13582:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):283:return Config.__M_NO == 0 && Config.COVERED(13580, 13581) ? 53091 : Config.__M_NO == 13581 ? -53091 : Config.__M_NO == 13580 ? 0 : 53091; |==> <NO-OP>
13583:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):285:53060 |==> 0
13584:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):285:53060 |==> -53060
13585:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):285:return Config.__M_NO == 0 && Config.COVERED(13583, 13584) ? 53060 : Config.__M_NO == 13584 ? -53060 : Config.__M_NO == 13583 ? 0 : 53060; |==> <NO-OP>
13586:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):287:53092 |==> 0
13587:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):287:53092 |==> -53092
13588:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):287:return Config.__M_NO == 0 && Config.COVERED(13586, 13587) ? 53092 : Config.__M_NO == 13587 ? -53092 : Config.__M_NO == 13586 ? 0 : 53092; |==> <NO-OP>
13589:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):289:226 |==> 0
13590:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):289:226 |==> -226
13591:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):289:return Config.__M_NO == 0 && Config.COVERED(13589, 13590) ? 226 : Config.__M_NO == 13590 ? -226 : Config.__M_NO == 13589 ? 0 : 226; |==> <NO-OP>
13592:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):291:242 |==> 0
13593:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):291:242 |==> -242
13594:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):291:return Config.__M_NO == 0 && Config.COVERED(13592, 13593) ? 242 : Config.__M_NO == 13593 ? -242 : Config.__M_NO == 13592 ? 0 : 242; |==> <NO-OP>
13595:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):293:50501 |==> 0
13596:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):293:50501 |==> -50501
13597:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):293:return Config.__M_NO == 0 && Config.COVERED(13595, 13596) ? 50501 : Config.__M_NO == 13596 ? -50501 : Config.__M_NO == 13595 ? 0 : 50501; |==> <NO-OP>
13598:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):295:50533 |==> 0
13599:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):295:50533 |==> -50533
13600:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):295:return Config.__M_NO == 0 && Config.COVERED(13598, 13599) ? 50533 : Config.__M_NO == 13599 ? -50533 : Config.__M_NO == 13598 ? 0 : 50533; |==> <NO-OP>
13601:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):297:51013 |==> 0
13602:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):297:51013 |==> -51013
13603:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):297:return Config.__M_NO == 0 && Config.COVERED(13601, 13602) ? 51013 : Config.__M_NO == 13602 ? -51013 : Config.__M_NO == 13601 ? 0 : 51013; |==> <NO-OP>
13604:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):299:51045 |==> 0
13605:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):299:51045 |==> -51045
13606:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):299:return Config.__M_NO == 0 && Config.COVERED(13604, 13605) ? 51045 : Config.__M_NO == 13605 ? -51045 : Config.__M_NO == 13604 ? 0 : 51045; |==> <NO-OP>
13607:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):301:52805 |==> 0
13608:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):301:52805 |==> -52805
13609:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):301:return Config.__M_NO == 0 && Config.COVERED(13607, 13608) ? 52805 : Config.__M_NO == 13608 ? -52805 : Config.__M_NO == 13607 ? 0 : 52805; |==> <NO-OP>
13610:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):303:52837 |==> 0
13611:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):303:52837 |==> -52837
13612:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):303:return Config.__M_NO == 0 && Config.COVERED(13610, 13611) ? 52837 : Config.__M_NO == 13611 ? -52837 : Config.__M_NO == 13610 ? 0 : 52837; |==> <NO-OP>
13613:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):305:53061 |==> 0
13614:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):305:53061 |==> -53061
13615:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):305:return Config.__M_NO == 0 && Config.COVERED(13613, 13614) ? 53061 : Config.__M_NO == 13614 ? -53061 : Config.__M_NO == 13613 ? 0 : 53061; |==> <NO-OP>
13616:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):307:53093 |==> 0
13617:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):307:53093 |==> -53093
13618:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):307:return Config.__M_NO == 0 && Config.COVERED(13616, 13617) ? 53093 : Config.__M_NO == 13617 ? -53093 : Config.__M_NO == 13616 ? 0 : 53093; |==> <NO-OP>
13619:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):309:49991 |==> 0
13620:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):309:49991 |==> -49991
13621:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):309:return Config.__M_NO == 0 && Config.COVERED(13619, 13620) ? 49991 : Config.__M_NO == 13620 ? -49991 : Config.__M_NO == 13619 ? 0 : 49991; |==> <NO-OP>
13622:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):311:50023 |==> 0
13623:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):311:50023 |==> -50023
13624:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):311:return Config.__M_NO == 0 && Config.COVERED(13622, 13623) ? 50023 : Config.__M_NO == 13623 ? -50023 : Config.__M_NO == 13622 ? 0 : 50023; |==> <NO-OP>
13625:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):313:50759 |==> 0
13626:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):313:50759 |==> -50759
13627:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):313:return Config.__M_NO == 0 && Config.COVERED(13625, 13626) ? 50759 : Config.__M_NO == 13626 ? -50759 : Config.__M_NO == 13625 ? 0 : 50759; |==> <NO-OP>
13628:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):315:50791 |==> 0
13629:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):315:50791 |==> -50791
13630:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):315:return Config.__M_NO == 0 && Config.COVERED(13628, 13629) ? 50791 : Config.__M_NO == 13629 ? -50791 : Config.__M_NO == 13628 ? 0 : 50791; |==> <NO-OP>
13631:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):317:51015 |==> 0
13632:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):317:51015 |==> -51015
13633:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):317:return Config.__M_NO == 0 && Config.COVERED(13631, 13632) ? 51015 : Config.__M_NO == 13632 ? -51015 : Config.__M_NO == 13631 ? 0 : 51015; |==> <NO-OP>
13634:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):319:51047 |==> 0
13635:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):319:51047 |==> -51047
13636:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):319:return Config.__M_NO == 0 && Config.COVERED(13634, 13635) ? 51047 : Config.__M_NO == 13635 ? -51047 : Config.__M_NO == 13634 ? 0 : 51047; |==> <NO-OP>
13637:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):321:52039 |==> 0
13638:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):321:52039 |==> -52039
13639:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):321:return Config.__M_NO == 0 && Config.COVERED(13637, 13638) ? 52039 : Config.__M_NO == 13638 ? -52039 : Config.__M_NO == 13637 ? 0 : 52039; |==> <NO-OP>
13640:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):324:49992 |==> 0
13641:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):324:49992 |==> -49992
13642:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):324:return Config.__M_NO == 0 && Config.COVERED(13640, 13641) ? 49992 : Config.__M_NO == 13641 ? -49992 : Config.__M_NO == 13640 ? 0 : 49992; |==> <NO-OP>
13643:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):326:50024 |==> 0
13644:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):326:50024 |==> -50024
13645:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):326:return Config.__M_NO == 0 && Config.COVERED(13643, 13644) ? 50024 : Config.__M_NO == 13644 ? -50024 : Config.__M_NO == 13643 ? 0 : 50024; |==> <NO-OP>
13646:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):328:228 |==> 0
13647:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):328:228 |==> -228
13648:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):328:return Config.__M_NO == 0 && Config.COVERED(13646, 13647) ? 228 : Config.__M_NO == 13647 ? -228 : Config.__M_NO == 13646 ? 0 : 228; |==> <NO-OP>
13649:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):330:244 |==> 0
13650:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):330:244 |==> -244
13651:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):330:return Config.__M_NO == 0 && Config.COVERED(13649, 13650) ? 244 : Config.__M_NO == 13650 ? -244 : Config.__M_NO == 13649 ? 0 : 244; |==> <NO-OP>
13652:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):332:50249 |==> 0
13653:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):332:50249 |==> -50249
13654:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):332:return Config.__M_NO == 0 && Config.COVERED(13652, 13653) ? 50249 : Config.__M_NO == 13653 ? -50249 : Config.__M_NO == 13652 ? 0 : 50249; |==> <NO-OP>
13655:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):334:50281 |==> 0
13656:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):334:50281 |==> -50281
13657:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):334:return Config.__M_NO == 0 && Config.COVERED(13655, 13656) ? 50281 : Config.__M_NO == 13656 ? -50281 : Config.__M_NO == 13655 ? 0 : 50281; |==> <NO-OP>
13658:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):336:50505 |==> 0
13659:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):336:50505 |==> -50505
13660:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):336:return Config.__M_NO == 0 && Config.COVERED(13658, 13659) ? 50505 : Config.__M_NO == 13659 ? -50505 : Config.__M_NO == 13658 ? 0 : 50505; |==> <NO-OP>
13661:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):338:50537 |==> 0
13662:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):338:50537 |==> -50537
13663:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):338:return Config.__M_NO == 0 && Config.COVERED(13661, 13662) ? 50537 : Config.__M_NO == 13662 ? -50537 : Config.__M_NO == 13661 ? 0 : 50537; |==> <NO-OP>
13664:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):340:52809 |==> 0
13665:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):340:52809 |==> -52809
13666:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):340:return Config.__M_NO == 0 && Config.COVERED(13664, 13665) ? 52809 : Config.__M_NO == 13665 ? -52809 : Config.__M_NO == 13664 ? 0 : 52809; |==> <NO-OP>
13667:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):342:52841 |==> 0
13668:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):342:52841 |==> -52841
13669:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):342:return Config.__M_NO == 0 && Config.COVERED(13667, 13668) ? 52841 : Config.__M_NO == 13668 ? -52841 : Config.__M_NO == 13667 ? 0 : 52841; |==> <NO-OP>
13670:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):344:51017 |==> 0
13671:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):344:51017 |==> -51017
13672:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):344:return Config.__M_NO == 0 && Config.COVERED(13670, 13671) ? 51017 : Config.__M_NO == 13671 ? -51017 : Config.__M_NO == 13670 ? 0 : 51017; |==> <NO-OP>
13673:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):346:245 |==> 0
13674:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):346:245 |==> -245
13675:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):346:return Config.__M_NO == 0 && Config.COVERED(13673, 13674) ? 245 : Config.__M_NO == 13674 ? -245 : Config.__M_NO == 13673 ? 0 : 245; |==> <NO-OP>
13676:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):348:230 |==> 0
13677:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):348:230 |==> -230
13678:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):348:return Config.__M_NO == 0 && Config.COVERED(13676, 13677) ? 230 : Config.__M_NO == 13677 ? -230 : Config.__M_NO == 13676 ? 0 : 230; |==> <NO-OP>
13679:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):350:246 |==> 0
13680:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):350:246 |==> -246
13681:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):350:return Config.__M_NO == 0 && Config.COVERED(13679, 13680) ? 246 : Config.__M_NO == 13680 ? -246 : Config.__M_NO == 13679 ? 0 : 246; |==> <NO-OP>
13682:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):352:49994 |==> 0
13683:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):352:49994 |==> -49994
13684:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):352:return Config.__M_NO == 0 && Config.COVERED(13682, 13683) ? 49994 : Config.__M_NO == 13683 ? -49994 : Config.__M_NO == 13682 ? 0 : 49994; |==> <NO-OP>
13685:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):354:50026 |==> 0
13686:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):354:50026 |==> -50026
13687:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):354:return Config.__M_NO == 0 && Config.COVERED(13685, 13686) ? 50026 : Config.__M_NO == 13686 ? -50026 : Config.__M_NO == 13685 ? 0 : 50026; |==> <NO-OP>
13688:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):356:52043 |==> 0
13689:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):356:52043 |==> -52043
13690:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):356:return Config.__M_NO == 0 && Config.COVERED(13688, 13689) ? 52043 : Config.__M_NO == 13689 ? -52043 : Config.__M_NO == 13688 ? 0 : 52043; |==> <NO-OP>
13691:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):358:52075 |==> 0
13692:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):358:52075 |==> -52075
13693:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):358:return Config.__M_NO == 0 && Config.COVERED(13691, 13692) ? 52075 : Config.__M_NO == 13692 ? -52075 : Config.__M_NO == 13691 ? 0 : 52075; |==> <NO-OP>
13694:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):360:240 |==> 0
13695:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):360:240 |==> -240
13696:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):360:return Config.__M_NO == 0 && Config.COVERED(13694, 13695) ? 240 : Config.__M_NO == 13695 ? -240 : Config.__M_NO == 13694 ? 0 : 240; |==> <NO-OP>
13697:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):362:49740 |==> 0
13698:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):362:49740 |==> -49740
13699:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):362:return Config.__M_NO == 0 && Config.COVERED(13697, 13698) ? 49740 : Config.__M_NO == 13698 ? -49740 : Config.__M_NO == 13697 ? 0 : 49740; |==> <NO-OP>
13700:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):364:49772 |==> 0
13701:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):364:49772 |==> -49772
13702:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):364:return Config.__M_NO == 0 && Config.COVERED(13700, 13701) ? 49772 : Config.__M_NO == 13701 ? -49772 : Config.__M_NO == 13700 ? 0 : 49772; |==> <NO-OP>
13703:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):366:52044 |==> 0
13704:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):366:52044 |==> -52044
13705:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):366:return Config.__M_NO == 0 && Config.COVERED(13703, 13704) ? 52044 : Config.__M_NO == 13704 ? -52044 : Config.__M_NO == 13703 ? 0 : 52044; |==> <NO-OP>
13706:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):368:52076 |==> 0
13707:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):368:52076 |==> -52076
13708:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):368:return Config.__M_NO == 0 && Config.COVERED(13706, 13707) ? 52076 : Config.__M_NO == 13707 ? -52076 : Config.__M_NO == 13706 ? 0 : 52076; |==> <NO-OP>
13709:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):370:53068 |==> 0
13710:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):370:53068 |==> -53068
13711:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):370:return Config.__M_NO == 0 && Config.COVERED(13709, 13710) ? 53068 : Config.__M_NO == 13710 ? -53068 : Config.__M_NO == 13709 ? 0 : 53068; |==> <NO-OP>
13712:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):372:53100 |==> 0
13713:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):372:53100 |==> -53100
13714:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):372:return Config.__M_NO == 0 && Config.COVERED(13712, 13713) ? 53100 : Config.__M_NO == 13713 ? -53100 : Config.__M_NO == 13712 ? 0 : 53100; |==> <NO-OP>
13715:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):374:231 |==> 0
13716:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):374:231 |==> -231
13717:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):374:return Config.__M_NO == 0 && Config.COVERED(13715, 13716) ? 231 : Config.__M_NO == 13716 ? -231 : Config.__M_NO == 13715 ? 0 : 231; |==> <NO-OP>
13718:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):376:247 |==> 0
13719:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):376:247 |==> -247
13720:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):376:return Config.__M_NO == 0 && Config.COVERED(13718, 13719) ? 247 : Config.__M_NO == 13719 ? -247 : Config.__M_NO == 13718 ? 0 : 247; |==> <NO-OP>
13721:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):378:232 |==> 0
13722:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):378:232 |==> -232
13723:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):378:return Config.__M_NO == 0 && Config.COVERED(13721, 13722) ? 232 : Config.__M_NO == 13722 ? -232 : Config.__M_NO == 13721 ? 0 : 232; |==> <NO-OP>
13724:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):380:248 |==> 0
13725:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):380:248 |==> -248
13726:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):380:return Config.__M_NO == 0 && Config.COVERED(13724, 13725) ? 248 : Config.__M_NO == 13725 ? -248 : Config.__M_NO == 13724 ? 0 : 248; |==> <NO-OP>
13727:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):382:49742 |==> 0
13728:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):382:49742 |==> -49742
13729:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):382:return Config.__M_NO == 0 && Config.COVERED(13727, 13728) ? 49742 : Config.__M_NO == 13728 ? -49742 : Config.__M_NO == 13727 ? 0 : 49742; |==> <NO-OP>
13730:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):384:49774 |==> 0
13731:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):384:49774 |==> -49774
13732:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):384:return Config.__M_NO == 0 && Config.COVERED(13730, 13731) ? 49774 : Config.__M_NO == 13731 ? -49774 : Config.__M_NO == 13730 ? 0 : 49774; |==> <NO-OP>
13733:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):386:52046 |==> 0
13734:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):386:52046 |==> -52046
13735:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):386:return Config.__M_NO == 0 && Config.COVERED(13733, 13734) ? 52046 : Config.__M_NO == 13734 ? -52046 : Config.__M_NO == 13733 ? 0 : 52046; |==> <NO-OP>
13736:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):388:52078 |==> 0
13737:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):388:52078 |==> -52078
13738:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):388:return Config.__M_NO == 0 && Config.COVERED(13736, 13737) ? 52078 : Config.__M_NO == 13737 ? -52078 : Config.__M_NO == 13736 ? 0 : 52078; |==> <NO-OP>
13739:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):390:53070 |==> 0
13740:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):390:53070 |==> -53070
13741:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):390:return Config.__M_NO == 0 && Config.COVERED(13739, 13740) ? 53070 : Config.__M_NO == 13740 ? -53070 : Config.__M_NO == 13739 ? 0 : 53070; |==> <NO-OP>
13742:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):392:53102 |==> 0
13743:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):392:53102 |==> -53102
13744:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):392:return Config.__M_NO == 0 && Config.COVERED(13742, 13743) ? 53102 : Config.__M_NO == 13743 ? -53102 : Config.__M_NO == 13742 ? 0 : 53102; |==> <NO-OP>
13745:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):394:239 |==> 0
13746:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):394:239 |==> -239
13747:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):394:return Config.__M_NO == 0 && Config.COVERED(13745, 13746) ? 239 : Config.__M_NO == 13746 ? -239 : Config.__M_NO == 13745 ? 0 : 239; |==> <NO-OP>
13748:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):397:238 |==> 0
13749:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):397:238 |==> -238
13750:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):397:return Config.__M_NO == 0 && Config.COVERED(13748, 13749) ? 238 : Config.__M_NO == 13749 ? -238 : Config.__M_NO == 13748 ? 0 : 238; |==> <NO-OP>
13751:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):399:254 |==> 0
13752:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):399:254 |==> -254
13753:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):399:return Config.__M_NO == 0 && Config.COVERED(13751, 13752) ? 254 : Config.__M_NO == 13752 ? -254 : Config.__M_NO == 13751 ? 0 : 254; |==> <NO-OP>
13754:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):401:50511 |==> 0
13755:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):401:50511 |==> -50511
13756:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):401:return Config.__M_NO == 0 && Config.COVERED(13754, 13755) ? 50511 : Config.__M_NO == 13755 ? -50511 : Config.__M_NO == 13754 ? 0 : 50511; |==> <NO-OP>
13757:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):403:50543 |==> 0
13758:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):403:50543 |==> -50543
13759:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):403:return Config.__M_NO == 0 && Config.COVERED(13757, 13758) ? 50543 : Config.__M_NO == 13758 ? -50543 : Config.__M_NO == 13757 ? 0 : 50543; |==> <NO-OP>
13760:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):405:52559 |==> 0
13761:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):405:52559 |==> -52559
13762:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):405:return Config.__M_NO == 0 && Config.COVERED(13760, 13761) ? 52559 : Config.__M_NO == 13761 ? -52559 : Config.__M_NO == 13760 ? 0 : 52559; |==> <NO-OP>
13763:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):407:52591 |==> 0
13764:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):407:52591 |==> -52591
13765:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):407:return Config.__M_NO == 0 && Config.COVERED(13763, 13764) ? 52591 : Config.__M_NO == 13764 ? -52591 : Config.__M_NO == 13763 ? 0 : 52591; |==> <NO-OP>
13766:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):409:234 |==> 0
13767:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):409:234 |==> -234
13768:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):409:return Config.__M_NO == 0 && Config.COVERED(13766, 13767) ? 234 : Config.__M_NO == 13767 ? -234 : Config.__M_NO == 13766 ? 0 : 234; |==> <NO-OP>
13769:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):411:250 |==> 0
13770:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):411:250 |==> -250
13771:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):411:return Config.__M_NO == 0 && Config.COVERED(13769, 13770) ? 250 : Config.__M_NO == 13770 ? -250 : Config.__M_NO == 13769 ? 0 : 250; |==> <NO-OP>
13772:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):413:49746 |==> 0
13773:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):413:49746 |==> -49746
13774:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):413:return Config.__M_NO == 0 && Config.COVERED(13772, 13773) ? 49746 : Config.__M_NO == 13773 ? -49746 : Config.__M_NO == 13772 ? 0 : 49746; |==> <NO-OP>
13775:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):415:49778 |==> 0
13776:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):415:49778 |==> -49778
13777:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):415:return Config.__M_NO == 0 && Config.COVERED(13775, 13776) ? 49778 : Config.__M_NO == 13776 ? -49778 : Config.__M_NO == 13775 ? 0 : 49778; |==> <NO-OP>
13778:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):417:52050 |==> 0
13779:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):417:52050 |==> -52050
13780:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):417:return Config.__M_NO == 0 && Config.COVERED(13778, 13779) ? 52050 : Config.__M_NO == 13779 ? -52050 : Config.__M_NO == 13778 ? 0 : 52050; |==> <NO-OP>
13781:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):419:52082 |==> 0
13782:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):419:52082 |==> -52082
13783:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):419:return Config.__M_NO == 0 && Config.COVERED(13781, 13782) ? 52082 : Config.__M_NO == 13782 ? -52082 : Config.__M_NO == 13781 ? 0 : 52082; |==> <NO-OP>
13784:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):421:53074 |==> 0
13785:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):421:53074 |==> -53074
13786:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):421:return Config.__M_NO == 0 && Config.COVERED(13784, 13785) ? 53074 : Config.__M_NO == 13785 ? -53074 : Config.__M_NO == 13784 ? 0 : 53074; |==> <NO-OP>
13787:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):423:53106 |==> 0
13788:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):423:53106 |==> -53106
13789:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):423:return Config.__M_NO == 0 && Config.COVERED(13787, 13788) ? 53106 : Config.__M_NO == 13788 ? -53106 : Config.__M_NO == 13787 ? 0 : 53106; |==> <NO-OP>
13790:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):425:49747 |==> 0
13791:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):425:49747 |==> -49747
13792:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):425:return Config.__M_NO == 0 && Config.COVERED(13790, 13791) ? 49747 : Config.__M_NO == 13791 ? -49747 : Config.__M_NO == 13790 ? 0 : 49747; |==> <NO-OP>
13793:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):427:49779 |==> 0
13794:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):427:49779 |==> -49779
13795:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):427:return Config.__M_NO == 0 && Config.COVERED(13793, 13794) ? 49779 : Config.__M_NO == 13794 ? -49779 : Config.__M_NO == 13793 ? 0 : 49779; |==> <NO-OP>
13796:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):429:50003 |==> 0
13797:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):429:50003 |==> -50003
13798:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):429:return Config.__M_NO == 0 && Config.COVERED(13796, 13797) ? 50003 : Config.__M_NO == 13797 ? -50003 : Config.__M_NO == 13796 ? 0 : 50003; |==> <NO-OP>
13799:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):431:50035 |==> 0
13800:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):431:50035 |==> -50035
13801:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):431:return Config.__M_NO == 0 && Config.COVERED(13799, 13800) ? 50035 : Config.__M_NO == 13800 ? -50035 : Config.__M_NO == 13799 ? 0 : 50035; |==> <NO-OP>
13802:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):433:52051 |==> 0
13803:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):433:52051 |==> -52051
13804:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):433:return Config.__M_NO == 0 && Config.COVERED(13802, 13803) ? 52051 : Config.__M_NO == 13803 ? -52051 : Config.__M_NO == 13802 ? 0 : 52051; |==> <NO-OP>
13805:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):435:52083 |==> 0
13806:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):435:52083 |==> -52083
13807:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):435:return Config.__M_NO == 0 && Config.COVERED(13805, 13806) ? 52083 : Config.__M_NO == 13806 ? -52083 : Config.__M_NO == 13805 ? 0 : 52083; |==> <NO-OP>
13808:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):437:53075 |==> 0
13809:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):437:53075 |==> -53075
13810:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):437:return Config.__M_NO == 0 && Config.COVERED(13808, 13809) ? 53075 : Config.__M_NO == 13809 ? -53075 : Config.__M_NO == 13808 ? 0 : 53075; |==> <NO-OP>
13811:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):439:53107 |==> 0
13812:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):439:53107 |==> -53107
13813:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):439:return Config.__M_NO == 0 && Config.COVERED(13811, 13812) ? 53107 : Config.__M_NO == 13812 ? -53107 : Config.__M_NO == 13811 ? 0 : 53107; |==> <NO-OP>
13814:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):441:52052 |==> 0
13815:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):441:52052 |==> -52052
13816:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):441:return Config.__M_NO == 0 && Config.COVERED(13814, 13815) ? 52052 : Config.__M_NO == 13815 ? -52052 : Config.__M_NO == 13814 ? 0 : 52052; |==> <NO-OP>
13817:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):443:52084 |==> 0
13818:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):443:52084 |==> -52084
13819:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):443:return Config.__M_NO == 0 && Config.COVERED(13817, 13818) ? 52084 : Config.__M_NO == 13818 ? -52084 : Config.__M_NO == 13817 ? 0 : 52084; |==> <NO-OP>
13820:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):445:53076 |==> 0
13821:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):445:53076 |==> -53076
13822:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):445:return Config.__M_NO == 0 && Config.COVERED(13820, 13821) ? 53076 : Config.__M_NO == 13821 ? -53076 : Config.__M_NO == 13820 ? 0 : 53076; |==> <NO-OP>
13823:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):447:53108 |==> 0
13824:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):447:53108 |==> -53108
13825:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):447:return Config.__M_NO == 0 && Config.COVERED(13823, 13824) ? 53108 : Config.__M_NO == 13824 ? -53108 : Config.__M_NO == 13823 ? 0 : 53108; |==> <NO-OP>
13826:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):449:237 |==> 0
13827:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):449:237 |==> -237
13828:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):449:return Config.__M_NO == 0 && Config.COVERED(13826, 13827) ? 237 : Config.__M_NO == 13827 ? -237 : Config.__M_NO == 13826 ? 0 : 237; |==> <NO-OP>
13829:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):451:253 |==> 0
13830:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):451:253 |==> -253
13831:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):451:return Config.__M_NO == 0 && Config.COVERED(13829, 13830) ? 253 : Config.__M_NO == 13830 ? -253 : Config.__M_NO == 13829 ? 0 : 253; |==> <NO-OP>
13832:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):453:50261 |==> 0
13833:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):453:50261 |==> -50261
13834:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):453:return Config.__M_NO == 0 && Config.COVERED(13832, 13833) ? 50261 : Config.__M_NO == 13833 ? -50261 : Config.__M_NO == 13832 ? 0 : 50261; |==> <NO-OP>
13835:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):455:50293 |==> 0
13836:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):455:50293 |==> -50293
13837:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):455:return Config.__M_NO == 0 && Config.COVERED(13835, 13836) ? 50293 : Config.__M_NO == 13836 ? -50293 : Config.__M_NO == 13835 ? 0 : 50293; |==> <NO-OP>
13838:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):457:50517 |==> 0
13839:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):457:50517 |==> -50517
13840:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):457:return Config.__M_NO == 0 && Config.COVERED(13838, 13839) ? 50517 : Config.__M_NO == 13839 ? -50517 : Config.__M_NO == 13838 ? 0 : 50517; |==> <NO-OP>
13841:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):459:50549 |==> 0
13842:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):459:50549 |==> -50549
13843:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):459:return Config.__M_NO == 0 && Config.COVERED(13841, 13842) ? 50549 : Config.__M_NO == 13842 ? -50549 : Config.__M_NO == 13841 ? 0 : 50549; |==> <NO-OP>
13844:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):461:50773 |==> 0
13845:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):461:50773 |==> -50773
13846:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):461:return Config.__M_NO == 0 && Config.COVERED(13844, 13845) ? 50773 : Config.__M_NO == 13845 ? -50773 : Config.__M_NO == 13844 ? 0 : 50773; |==> <NO-OP>
13847:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):463:50805 |==> 0
13848:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):463:50805 |==> -50805
13849:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):463:return Config.__M_NO == 0 && Config.COVERED(13847, 13848) ? 50805 : Config.__M_NO == 13848 ? -50805 : Config.__M_NO == 13847 ? 0 : 50805; |==> <NO-OP>
13850:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):465:51885 |==> 0
13851:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):465:51885 |==> -51885
13852:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):465:return Config.__M_NO == 0 && Config.COVERED(13850, 13851) ? 51885 : Config.__M_NO == 13851 ? -51885 : Config.__M_NO == 13850 ? 0 : 51885; |==> <NO-OP>
13853:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):467:51829 |==> 0
13854:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):467:51829 |==> -51829
13855:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):467:return Config.__M_NO == 0 && Config.COVERED(13853, 13854) ? 51829 : Config.__M_NO == 13854 ? -51829 : Config.__M_NO == 13853 ? 0 : 51829; |==> <NO-OP>
13856:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):469:52565 |==> 0
13857:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):469:52565 |==> -52565
13858:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):469:return Config.__M_NO == 0 && Config.COVERED(13856, 13857) ? 52565 : Config.__M_NO == 13857 ? -52565 : Config.__M_NO == 13856 ? 0 : 52565; |==> <NO-OP>
13859:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):471:52597 |==> 0
13860:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):471:52597 |==> -52597
13861:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):471:return Config.__M_NO == 0 && Config.COVERED(13859, 13860) ? 52597 : Config.__M_NO == 13860 ? -52597 : Config.__M_NO == 13859 ? 0 : 52597; |==> <NO-OP>
13862:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):473:52821 |==> 0
13863:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):473:52821 |==> -52821
13864:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):473:return Config.__M_NO == 0 && Config.COVERED(13862, 13863) ? 52821 : Config.__M_NO == 13863 ? -52821 : Config.__M_NO == 13862 ? 0 : 52821; |==> <NO-OP>
13865:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):475:52853 |==> 0
13866:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):475:52853 |==> -52853
13867:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):475:return Config.__M_NO == 0 && Config.COVERED(13865, 13866) ? 52853 : Config.__M_NO == 13866 ? -52853 : Config.__M_NO == 13865 ? 0 : 52853; |==> <NO-OP>
13868:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):477:50007 |==> 0
13869:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):477:50007 |==> -50007
13870:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):477:return Config.__M_NO == 0 && Config.COVERED(13868, 13869) ? 50007 : Config.__M_NO == 13869 ? -50007 : Config.__M_NO == 13868 ? 0 : 50007; |==> <NO-OP>
13871:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):479:50039 |==> 0
13872:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):479:50039 |==> -50039
13873:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):479:return Config.__M_NO == 0 && Config.COVERED(13871, 13872) ? 50039 : Config.__M_NO == 13872 ? -50039 : Config.__M_NO == 13871 ? 0 : 50039; |==> <NO-OP>
13874:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):481:50009 |==> 0
13875:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):481:50009 |==> -50009
13876:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):481:return Config.__M_NO == 0 && Config.COVERED(13874, 13875) ? 50009 : Config.__M_NO == 13875 ? -50009 : Config.__M_NO == 13874 ? 0 : 50009; |==> <NO-OP>
13877:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):483:50041 |==> 0
13878:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):483:50041 |==> -50041
13879:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):483:return Config.__M_NO == 0 && Config.COVERED(13877, 13878) ? 50041 : Config.__M_NO == 13878 ? -50041 : Config.__M_NO == 13877 ? 0 : 50041; |==> <NO-OP>
13880:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):485:51289 |==> 0
13881:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):485:51289 |==> -51289
13882:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):485:return Config.__M_NO == 0 && Config.COVERED(13880, 13881) ? 51289 : Config.__M_NO == 13881 ? -51289 : Config.__M_NO == 13880 ? 0 : 51289; |==> <NO-OP>
13883:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):487:49754 |==> 0
13884:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):487:49754 |==> -49754
13885:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):487:return Config.__M_NO == 0 && Config.COVERED(13883, 13884) ? 49754 : Config.__M_NO == 13884 ? -49754 : Config.__M_NO == 13883 ? 0 : 49754; |==> <NO-OP>
13886:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):489:49786 |==> 0
13887:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):489:49786 |==> -49786
13888:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):489:return Config.__M_NO == 0 && Config.COVERED(13886, 13887) ? 49786 : Config.__M_NO == 13887 ? -49786 : Config.__M_NO == 13886 ? 0 : 49786; |==> <NO-OP>
13889:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):491:51034 |==> 0
13890:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):491:51034 |==> -51034
13891:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):491:return Config.__M_NO == 0 && Config.COVERED(13889, 13890) ? 51034 : Config.__M_NO == 13890 ? -51034 : Config.__M_NO == 13889 ? 0 : 51034; |==> <NO-OP>
13892:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):493:51066 |==> 0
13893:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):493:51066 |==> -51066
13894:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):493:return Config.__M_NO == 0 && Config.COVERED(13892, 13893) ? 51066 : Config.__M_NO == 13893 ? -51066 : Config.__M_NO == 13892 ? 0 : 51066; |==> <NO-OP>
13895:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):495:53082 |==> 0
13896:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):495:53082 |==> -53082
13897:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):495:return Config.__M_NO == 0 && Config.COVERED(13895, 13896) ? 53082 : Config.__M_NO == 13896 ? -53082 : Config.__M_NO == 13895 ? 0 : 53082; |==> <NO-OP>
13898:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):497:53114 |==> 0
13899:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):497:53114 |==> -53114
13900:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):497:return Config.__M_NO == 0 && Config.COVERED(13898, 13899) ? 53114 : Config.__M_NO == 13899 ? -53114 : Config.__M_NO == 13898 ? 0 : 53114; |==> <NO-OP>
13901:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):499:49767 |==> 0
13902:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):499:49767 |==> -49767
13903:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):499:return Config.__M_NO == 0 && Config.COVERED(13901, 13902) ? 49767 : Config.__M_NO == 13902 ? -49767 : Config.__M_NO == 13901 ? 0 : 49767; |==> <NO-OP>
13904:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):501:53024 |==> 0
13905:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):501:53024 |==> -53024
13906:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):501:return Config.__M_NO == 0 && Config.COVERED(13904, 13905) ? 53024 : Config.__M_NO == 13905 ? -53024 : Config.__M_NO == 13904 ? 0 : 53024; |==> <NO-OP>
13907:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):503:50720 |==> 0
13908:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):503:50720 |==> -50720
13909:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):503:return Config.__M_NO == 0 && Config.COVERED(13907, 13908) ? 50720 : Config.__M_NO == 13908 ? -50720 : Config.__M_NO == 13907 ? 0 : 50720; |==> <NO-OP>
13910:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):505:51744 |==> 0
13911:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):505:51744 |==> -51744
13912:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):505:return Config.__M_NO == 0 && Config.COVERED(13910, 13911) ? 51744 : Config.__M_NO == 13911 ? -51744 : Config.__M_NO == 13910 ? 0 : 51744; |==> <NO-OP>
13913:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):507:52768 |==> 0
13914:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):507:52768 |==> -52768
13915:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):507:return Config.__M_NO == 0 && Config.COVERED(13913, 13914) ? 52768 : Config.__M_NO == 13914 ? -52768 : Config.__M_NO == 13913 ? 0 : 52768; |==> <NO-OP>
13916:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):509:208 |==> 0
13917:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):509:208 |==> -208
13918:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):509:return Config.__M_NO == 0 && Config.COVERED(13916, 13917) ? 208 : Config.__M_NO == 13917 ? -208 : Config.__M_NO == 13916 ? 0 : 208; |==> <NO-OP>
13919:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):511:169 |==> 0
13920:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):511:169 |==> -169
13921:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):511:return Config.__M_NO == 0 && Config.COVERED(13919, 13920) ? 169 : Config.__M_NO == 13920 ? -169 : Config.__M_NO == 13919 ? 0 : 169; |==> <NO-OP>
13922:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):513:185 |==> 0
13923:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):513:185 |==> -185
13924:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):513:return Config.__M_NO == 0 && Config.COVERED(13922, 13923) ? 185 : Config.__M_NO == 13923 ? -185 : Config.__M_NO == 13922 ? 0 : 185; |==> <NO-OP>
13925:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):515:170 |==> 0
13926:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):515:170 |==> -170
13927:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):515:return Config.__M_NO == 0 && Config.COVERED(13925, 13926) ? 170 : Config.__M_NO == 13926 ? -170 : Config.__M_NO == 13925 ? 0 : 170; |==> <NO-OP>
13928:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):517:186 |==> 0
13929:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):517:186 |==> -186
13930:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):517:return Config.__M_NO == 0 && Config.COVERED(13928, 13929) ? 186 : Config.__M_NO == 13929 ? -186 : Config.__M_NO == 13928 ? 0 : 186; |==> <NO-OP>
13931:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):519:210 |==> 0
13932:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):519:210 |==> -210
13933:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):519:return Config.__M_NO == 0 && Config.COVERED(13931, 13932) ? 210 : Config.__M_NO == 13932 ? -210 : Config.__M_NO == 13931 ? 0 : 210; |==> <NO-OP>
13934:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):521:224 |==> 0
13935:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):521:224 |==> -224
13936:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):521:return Config.__M_NO == 0 && Config.COVERED(13934, 13935) ? 224 : Config.__M_NO == 13935 ? -224 : Config.__M_NO == 13934 ? 0 : 224; |==> <NO-OP>
13937:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):523:220 |==> 0
13938:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):523:220 |==> -220
13939:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):523:return Config.__M_NO == 0 && Config.COVERED(13937, 13938) ? 220 : Config.__M_NO == 13938 ? -220 : Config.__M_NO == 13937 ? 0 : 220; |==> <NO-OP>
13940:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):525:223 |==> 0
13941:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):525:223 |==> -223
13942:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):525:return Config.__M_NO == 0 && Config.COVERED(13940, 13941) ? 223 : Config.__M_NO == 13941 ? -223 : Config.__M_NO == 13940 ? 0 : 223; |==> <NO-OP>
13943:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):527:172 |==> 0
13944:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):527:172 |==> -172
13945:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):527:return Config.__M_NO == 0 && Config.COVERED(13943, 13944) ? 172 : Config.__M_NO == 13944 ? -172 : Config.__M_NO == 13943 ? 0 : 172; |==> <NO-OP>
13946:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):529:173 |==> 0
13947:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):529:173 |==> -173
13948:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):529:return Config.__M_NO == 0 && Config.COVERED(13946, 13947) ? 173 : Config.__M_NO == 13947 ? -173 : Config.__M_NO == 13946 ? 0 : 173; |==> <NO-OP>
13949:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):531:174 |==> 0
13950:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):531:174 |==> -174
13951:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):531:return Config.__M_NO == 0 && Config.COVERED(13949, 13950) ? 174 : Config.__M_NO == 13950 ? -174 : Config.__M_NO == 13949 ? 0 : 174; |==> <NO-OP>
13952:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):533:175 |==> 0
13953:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):533:175 |==> -175
13954:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):533:return Config.__M_NO == 0 && Config.COVERED(13952, 13953) ? 175 : Config.__M_NO == 13953 ? -175 : Config.__M_NO == 13952 ? 0 : 175; |==> <NO-OP>
13955:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):535:213 |==> 0
13956:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):535:213 |==> -213
13957:STD:<RETURN>:<NO-OP>:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):535:return Config.__M_NO == 0 && Config.COVERED(13955, 13956) ? 213 : Config.__M_NO == 13956 ? -213 : Config.__M_NO == 13955 ? 0 : 213; |==> <NO-OP>
13958:LVR:POS:0:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):538:63 |==> 0
13959:LVR:POS:NEG:org.marc4j.converter.impl.UnicodeToIso6937@convert(int):538:63 |==> -63
13960:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.ControlFieldImpl@<init>(java.lang.String,java.lang.String):67:this.setData(data) |==> <NO-OP>
13961:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.ControlFieldImpl@setData(java.lang.String):77:this.data = data |==> <NO-OP>
13962:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.ControlFieldImpl@getData():87:data |==> null
13963:EVR:<PLUS>:<DEFAULT>:org.marc4j.marc.impl.ControlFieldImpl@toString():103:super.toString() + " " + getData() |==> null
13964:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.ControlFieldImpl@find(java.lang.String):114:Pattern.compile(pattern) |==> null
13965:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.ControlFieldImpl@find(java.lang.String):115:p.matcher(getData()) |==> null
13966:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.ControlFieldImpl@find(java.lang.String):116:m.find() |==> false
13967:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.ControlFieldImpl@setId(java.lang.Long):121:this.id = id |==> <NO-OP>
13968:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.ControlFieldImpl@getId():126:id |==> null
13969:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.marc.impl.VariableFieldImpl@<init>(java.lang.String):51:tag == null |==> false
13970:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.VariableFieldImpl@<init>(java.lang.String):54:this.setTag(tag) |==> <NO-OP>
13971:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.VariableFieldImpl@setTag(java.lang.String):64:this.tag = tag |==> <NO-OP>
13972:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.VariableFieldImpl@getTag():74:tag |==> null
13973:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.VariableFieldImpl@compareTo(org.marc4j.marc.VariableField):89:tag.compareTo(obj.getTag()) |==> 0
13974:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.VariableFieldImpl@toString():99:tag |==> null
13975:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.DataFieldImpl:55:new ArrayList<Subfield>() |==> null
13976:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@<init>(java.lang.String,char,char):71:this.setIndicator1(ind1) |==> <NO-OP>
13977:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@<init>(java.lang.String,char,char):72:this.setIndicator2(ind2) |==> <NO-OP>
13978:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@setIndicator1(char):82:this.ind1 = ind1 |==> <NO-OP>
13979:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.DataFieldImpl@getIndicator1():92:ind1 |==> 0
13980:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@setIndicator2(char):102:this.ind2 = ind2 |==> <NO-OP>
13981:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.DataFieldImpl@getIndicator2():112:ind2 |==> 0
13982:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@addSubfield(org.marc4j.marc.Subfield):124:subfields.add(subfield) |==> <NO-OP>
13983:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@addSubfield(int,org.marc4j.marc.Subfield):139:subfields.add(index, subfield) |==> <NO-OP>
13984:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@removeSubfield(org.marc4j.marc.Subfield):149:subfields.remove(subfield) |==> <NO-OP>
13985:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.DataFieldImpl@getSubfields():159:subfields |==> null
13986:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.DataFieldImpl@getSubfields(char):170:new ArrayList<Subfield>() |==> null
13987:ROR:==(int,int):<=(int,int):org.marc4j.marc.impl.DataFieldImpl@getSubfields(char):173:sf.getCode() == code |==> sf.getCode() <= code
13988:ROR:==(int,int):>=(int,int):org.marc4j.marc.impl.DataFieldImpl@getSubfields(char):173:sf.getCode() == code |==> sf.getCode() >= code
13989:ROR:==(int,int):FALSE(int,int):org.marc4j.marc.impl.DataFieldImpl@getSubfields(char):173:sf.getCode() == code |==> false
13990:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@getSubfields(char):174:result.add(sf) |==> <NO-OP>
13991:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.DataFieldImpl@getSubfields(char):178:result |==> null
13992:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):190:new ArrayList<Subfield>() |==> null
13993:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):192:sfSpec == null |==> false
13994:LVR:0:POS:org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):192:0 |==> 1
13995:LVR:0:NEG:org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):192:0 |==> -1
13996:ROR:==(int,int):<=(int,int):org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):192:sfSpec.length() == 0 |==> sfSpec.length() <= 0
13997:ROR:==(int,int):>=(int,int):org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):192:sfSpec.length() == 0 |==> sfSpec.length() >= 0
13998:ROR:==(int,int):FALSE(int,int):org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):192:sfSpec.length() == 0 |==> false
13999:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):192:sfSpec == null || sfSpec.length() == 0 |==> sfSpec == null != (sfSpec.length() == 0)
14000:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):192:sfSpec == null || sfSpec.length() == 0 |==> sfSpec == null
14001:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):192:sfSpec == null || sfSpec.length() == 0 |==> sfSpec.length() == 0
14002:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):192:sfSpec == null || sfSpec.length() == 0 |==> true
14003:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):194:sfData.add(sf) |==> <NO-OP>
14004:COR:sfSpec.contains("["):TRUE:org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):196:sfSpec.contains("[") |==> false
14005:COR:sfSpec.contains("["):FALSE:org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):196:sfSpec.contains("[") |==> true
14006:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):200:sfPattern = Pattern.compile(sfSpec) |==> <NO-OP>
14007:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):202:sfPattern.matcher("" + sf.getCode()) |==> null
14008:COR:m.matches():TRUE:org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):204:m.matches() |==> false
14009:COR:m.matches():FALSE:org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):204:m.matches() |==> true
14010:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):205:sfData.add(sf) |==> <NO-OP>
14011:COR:sfSpec.contains(String.valueOf(sf.getCode())):TRUE:org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):216:sfSpec.contains(String.valueOf(sf.getCode())) |==> false
14012:COR:sfSpec.contains(String.valueOf(sf.getCode())):FALSE:org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):216:sfSpec.contains(String.valueOf(sf.getCode())) |==> true
14013:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):217:sfData.add(sf) |==> <NO-OP>
14014:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.DataFieldImpl@getSubfields(java.lang.String):222:sfData |==> null
14015:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.DataFieldImpl@getSubfieldsAsString(java.lang.String):229:this.getSubfields(sfSpec) |==> null
14016:COR:sfList.isEmpty():TRUE:org.marc4j.marc.impl.DataFieldImpl@getSubfieldsAsString(java.lang.String):230:sfList.isEmpty() |==> false
14017:COR:sfList.isEmpty():FALSE:org.marc4j.marc.impl.DataFieldImpl@getSubfieldsAsString(java.lang.String):230:sfList.isEmpty() |==> true
14018:STD:<RETURN>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@getSubfieldsAsString(java.lang.String):231:return null; |==> <NO-OP>
14019:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.DataFieldImpl@getSubfieldsAsString(java.lang.String):233:new StringBuilder() |==> null
14020:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@getSubfieldsAsString(java.lang.String):235:buf.append(sf.getData()) |==> <NO-OP>
14021:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.DataFieldImpl@getSubfieldsAsString(java.lang.String):237:buf.toString() |==> null
14022:ROR:==(int,int):<=(int,int):org.marc4j.marc.impl.DataFieldImpl@getSubfield(char):248:sf.getCode() == code |==> sf.getCode() <= code
14023:ROR:==(int,int):>=(int,int):org.marc4j.marc.impl.DataFieldImpl@getSubfield(char):248:sf.getCode() == code |==> sf.getCode() >= code
14024:ROR:==(int,int):FALSE(int,int):org.marc4j.marc.impl.DataFieldImpl@getSubfield(char):248:sf.getCode() == code |==> false
14025:STD:<RETURN>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@getSubfield(char):249:return sf; |==> <NO-OP>
14026:COR:sf.find(pattern):TRUE:org.marc4j.marc.impl.DataFieldImpl@find(java.lang.String):265:sf.find(pattern) |==> false
14027:COR:sf.find(pattern):FALSE:org.marc4j.marc.impl.DataFieldImpl@find(java.lang.String):265:sf.find(pattern) |==> true
14028:LVR:TRUE:FALSE:org.marc4j.marc.impl.DataFieldImpl@find(java.lang.String):266:true |==> false
14029:STD:<RETURN>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@find(java.lang.String):266:return Config.__M_NO == 0 && Config.COVERED(14028, 14028) ? true : Config.__M_NO == 14028 ? false : true; |==> <NO-OP>
14030:LVR:FALSE:TRUE:org.marc4j.marc.impl.DataFieldImpl@find(java.lang.String):270:false |==> true
14031:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.DataFieldImpl@toString():286:new StringBuilder() |==> null
14032:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@toString():287:sb.append(super.toString()) |==> <NO-OP>
14033:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@toString():288:sb.append(' ') |==> <NO-OP>
14034:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@toString():289:sb.append(getIndicator1()) |==> <NO-OP>
14035:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@toString():290:sb.append(getIndicator2()) |==> <NO-OP>
14036:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@toString():293:sb.append(sf.toString()) |==> <NO-OP>
14037:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.DataFieldImpl@toString():295:sb.toString() |==> null
14038:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.DataFieldImpl@setId(java.lang.Long):300:this.id = id |==> <NO-OP>
14039:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.DataFieldImpl@getId():305:id |==> null
14040:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@<init>(java.lang.String):83:unmarshal(ldr) |==> <NO-OP>
14041:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@setRecordLength(int):93:this.recordLength = recordLength |==> <NO-OP>
14042:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@setRecordStatus(char):103:this.recordStatus = recordStatus |==> <NO-OP>
14043:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@setTypeOfRecord(char):113:this.typeOfRecord = typeOfRecord |==> <NO-OP>
14044:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@setImplDefined1(char[]):124:this.implDefined1 = implDefined1 |==> <NO-OP>
14045:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@setCharCodingScheme(char):134:this.charCodingScheme = charCodingScheme |==> <NO-OP>
14046:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@setIndicatorCount(int):145:this.indicatorCount = indicatorCount |==> <NO-OP>
14047:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@setSubfieldCodeLength(int):155:this.subfieldCodeLength = subfieldCodeLength |==> <NO-OP>
14048:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@setBaseAddressOfData(int):165:this.baseAddressOfData = baseAddressOfData |==> <NO-OP>
14049:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@setImplDefined2(char[]):176:this.implDefined2 = implDefined2 |==> <NO-OP>
14050:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@setEntryMap(char[]):186:this.entryMap = entryMap |==> <NO-OP>
14051:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.LeaderImpl@getRecordLength():196:recordLength |==> 0
14052:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.LeaderImpl@getRecordStatus():206:recordStatus |==> 0
14053:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.LeaderImpl@getTypeOfRecord():216:typeOfRecord |==> 0
14054:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.LeaderImpl@getImplDefined1():226:implDefined1 |==> null
14055:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.LeaderImpl@getCharCodingScheme():236:charCodingScheme |==> 0
14056:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.LeaderImpl@getIndicatorCount():246:indicatorCount |==> 0
14057:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.LeaderImpl@getSubfieldCodeLength():256:subfieldCodeLength |==> 0
14058:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.LeaderImpl@getBaseAddressOfData():266:baseAddressOfData |==> 0
14059:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.LeaderImpl@getImplDefined2():276:implDefined2 |==> null
14060:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.LeaderImpl@getEntryMap():286:entryMap |==> null
14061:LVR:0:POS:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):304:0 |==> 1
14062:LVR:0:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):304:0 |==> -1
14063:LVR:POS:0:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):304:5 |==> 0
14064:LVR:POS:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):304:5 |==> -5
14065:COR:isInteger(s):TRUE:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):305:isInteger(s) |==> false
14066:COR:isInteger(s):FALSE:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):305:isInteger(s) |==> true
14067:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):306:setRecordLength(Integer.parseInt(s)) |==> <NO-OP>
14068:LVR:0:POS:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):308:0 |==> 1
14069:LVR:0:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):308:0 |==> -1
14070:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):308:setRecordLength(0) |==> <NO-OP>
14071:LVR:POS:0:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):310:5 |==> 0
14072:LVR:POS:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):310:5 |==> -5
14073:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):310:setRecordStatus(ldr.charAt(5)) |==> <NO-OP>
14074:LVR:POS:0:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):311:6 |==> 0
14075:LVR:POS:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):311:6 |==> -6
14076:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):311:setTypeOfRecord(ldr.charAt(6)) |==> <NO-OP>
14077:LVR:POS:0:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):312:7 |==> 0
14078:LVR:POS:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):312:7 |==> -7
14079:LVR:POS:0:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):312:9 |==> 0
14080:LVR:POS:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):312:9 |==> -9
14081:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):312:setImplDefined1(ldr.substring(7, 9).toCharArray()) |==> <NO-OP>
14082:LVR:POS:0:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):313:9 |==> 0
14083:LVR:POS:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):313:9 |==> -9
14084:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):313:setCharCodingScheme(ldr.charAt(9)) |==> <NO-OP>
14085:LVR:POS:0:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):314:10 |==> 0
14086:LVR:POS:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):314:10 |==> -10
14087:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):314:s = String.valueOf(ldr.charAt(10)) |==> <NO-OP>
14088:COR:isInteger(s):TRUE:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):315:isInteger(s) |==> false
14089:COR:isInteger(s):FALSE:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):315:isInteger(s) |==> true
14090:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):316:setIndicatorCount(Integer.parseInt(s)) |==> <NO-OP>
14091:LVR:POS:0:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):318:2 |==> 0
14092:LVR:POS:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):318:2 |==> -2
14093:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):318:setIndicatorCount(2) |==> <NO-OP>
14094:LVR:POS:0:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):320:11 |==> 0
14095:LVR:POS:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):320:11 |==> -11
14096:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):320:s = String.valueOf(ldr.charAt(11)) |==> <NO-OP>
14097:COR:isInteger(s):TRUE:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):321:isInteger(s) |==> false
14098:COR:isInteger(s):FALSE:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):321:isInteger(s) |==> true
14099:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):322:setSubfieldCodeLength(Integer.parseInt(s)) |==> <NO-OP>
14100:LVR:POS:0:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):324:2 |==> 0
14101:LVR:POS:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):324:2 |==> -2
14102:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):324:setSubfieldCodeLength(2) |==> <NO-OP>
14103:LVR:POS:0:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):326:12 |==> 0
14104:LVR:POS:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):326:12 |==> -12
14105:LVR:POS:0:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):326:17 |==> 0
14106:LVR:POS:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):326:17 |==> -17
14107:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):326:s = ldr.substring(12, 17) |==> <NO-OP>
14108:COR:isInteger(s):TRUE:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):327:isInteger(s) |==> false
14109:COR:isInteger(s):FALSE:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):327:isInteger(s) |==> true
14110:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):328:setBaseAddressOfData(Integer.parseInt(s)) |==> <NO-OP>
14111:LVR:0:POS:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):330:0 |==> 1
14112:LVR:0:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):330:0 |==> -1
14113:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):330:setBaseAddressOfData(0) |==> <NO-OP>
14114:LVR:POS:0:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):332:17 |==> 0
14115:LVR:POS:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):332:17 |==> -17
14116:LVR:POS:0:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):332:20 |==> 0
14117:LVR:POS:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):332:20 |==> -20
14118:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):332:setImplDefined2(ldr.substring(17, 20).toCharArray()) |==> <NO-OP>
14119:LVR:POS:0:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):333:20 |==> 0
14120:LVR:POS:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):333:20 |==> -20
14121:LVR:POS:0:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):333:24 |==> 0
14122:LVR:POS:NEG:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):333:24 |==> -24
14123:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@unmarshal(java.lang.String):333:setEntryMap(ldr.substring(20, 24).toCharArray()) |==> <NO-OP>
14124:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.LeaderImpl@marshal():346:this.toString() |==> null
14125:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.LeaderImpl@toString():365:new StringBuffer().append(format5.format(getRecordLength())).append(getRecordStatus()).append(getTypeOfRecord()).append(getImplDefined1()).append(getCharCodingScheme()).append(getIndicatorCount()).append(getSubfieldCodeLength()).append(format5.format(getBaseAddressOfData())).append(getImplDefined2()).append(getEntryMap()).toString() |==> null
14126:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.LeaderImpl@isInteger(java.lang.String):369:value.length() |==> 0
14127:LVR:0:POS:org.marc4j.marc.impl.LeaderImpl@isInteger(java.lang.String):370:0 |==> 1
14128:LVR:0:NEG:org.marc4j.marc.impl.LeaderImpl@isInteger(java.lang.String):370:0 |==> -1
14129:ROR:==(int,int):<=(int,int):org.marc4j.marc.impl.LeaderImpl@isInteger(java.lang.String):370:len == 0 |==> len <= 0
14130:ROR:==(int,int):>=(int,int):org.marc4j.marc.impl.LeaderImpl@isInteger(java.lang.String):370:len == 0 |==> len >= 0
14131:ROR:==(int,int):FALSE(int,int):org.marc4j.marc.impl.LeaderImpl@isInteger(java.lang.String):370:len == 0 |==> false
14132:LVR:FALSE:TRUE:org.marc4j.marc.impl.LeaderImpl@isInteger(java.lang.String):371:false |==> true
14133:STD:<RETURN>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@isInteger(java.lang.String):371:return Config.__M_NO == 0 && Config.COVERED(14132, 14132) ? false : Config.__M_NO == 14132 ? true : false; |==> <NO-OP>
14134:LVR:0:POS:org.marc4j.marc.impl.LeaderImpl@isInteger(java.lang.String):373:0 |==> 1
14135:LVR:0:NEG:org.marc4j.marc.impl.LeaderImpl@isInteger(java.lang.String):373:0 |==> -1
14136:STD:<BREAK>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@isInteger(java.lang.String):386:break; |==> <NO-OP>
14137:LVR:FALSE:TRUE:org.marc4j.marc.impl.LeaderImpl@isInteger(java.lang.String):388:false |==> true
14138:STD:<RETURN>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@isInteger(java.lang.String):388:return Config.__M_NO == 0 && Config.COVERED(14137, 14137) ? false : Config.__M_NO == 14137 ? true : false; |==> <NO-OP>
14139:ROR:<(int,int):!=(int,int):org.marc4j.marc.impl.LeaderImpl@isInteger(java.lang.String):390:++i < len |==> ++i != len
14140:ROR:<(int,int):<=(int,int):org.marc4j.marc.impl.LeaderImpl@isInteger(java.lang.String):390:++i < len |==> ++i <= len
14141:ROR:<(int,int):FALSE(int,int):org.marc4j.marc.impl.LeaderImpl@isInteger(java.lang.String):390:++i < len |==> false
14142:LVR:TRUE:FALSE:org.marc4j.marc.impl.LeaderImpl@isInteger(java.lang.String):391:true |==> false
14143:LVR:POS:0:org.marc4j.marc.impl.LeaderImpl:394:5 |==> 0
14144:LVR:POS:NEG:org.marc4j.marc.impl.LeaderImpl:394:5 |==> -5
14145:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.LeaderImpl@setId(java.lang.Long):401:this.id = id |==> <NO-OP>
14146:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.LeaderImpl@getId():409:id |==> null
14147:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.MarcFactoryImpl@newControlField():51:new ControlFieldImpl() |==> null
14148:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.MarcFactoryImpl@newControlField(java.lang.String):61:new ControlFieldImpl(tag) |==> null
14149:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.MarcFactoryImpl@newControlField(java.lang.String,java.lang.String):72:new ControlFieldImpl(tag, data) |==> null
14150:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.MarcFactoryImpl@newDataField():82:new DataFieldImpl() |==> null
14151:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char):93:new DataFieldImpl(tag, ind1, ind2) |==> null
14152:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):105:new DataFieldImpl(tag, ind1, ind2) |==> null
14153:LVR:POS:0:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):106:2 |==> 0
14154:LVR:POS:NEG:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):106:2 |==> -2
14155:AOR:%(int,int):*(int,int):org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):106:subfieldCodesAndData.length % 2 |==> subfieldCodesAndData.length * 2
14156:AOR:%(int,int):+(int,int):org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):106:subfieldCodesAndData.length % 2 |==> subfieldCodesAndData.length + 2
14157:AOR:%(int,int):-(int,int):org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):106:subfieldCodesAndData.length % 2 |==> subfieldCodesAndData.length - 2
14158:AOR:%(int,int):/(int,int):org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):106:subfieldCodesAndData.length % 2 |==> subfieldCodesAndData.length / 2
14159:LVR:POS:0:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):106:1 |==> 0
14160:LVR:POS:NEG:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):106:1 |==> -1
14161:ROR:==(int,int):<=(int,int):org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):106:subfieldCodesAndData.length % 2 == 1 |==> subfieldCodesAndData.length % 2 <= 1
14162:ROR:==(int,int):>=(int,int):org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):106:subfieldCodesAndData.length % 2 == 1 |==> subfieldCodesAndData.length % 2 >= 1
14163:ROR:==(int,int):FALSE(int,int):org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):106:subfieldCodesAndData.length % 2 == 1 |==> false
14164:LVR:0:POS:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):110:0 |==> 1
14165:LVR:0:NEG:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):110:0 |==> -1
14166:ROR:<(int,int):!=(int,int):org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):110:i < subfieldCodesAndData.length |==> i != subfieldCodesAndData.length
14167:ROR:<(int,int):<=(int,int):org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):110:i < subfieldCodesAndData.length |==> i <= subfieldCodesAndData.length
14168:ROR:<(int,int):FALSE(int,int):org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):110:i < subfieldCodesAndData.length |==> false
14169:LVR:POS:0:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):110:2 |==> 0
14170:LVR:POS:NEG:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):110:2 |==> -2
14171:LVR:POS:0:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):111:1 |==> 0
14172:LVR:POS:NEG:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):111:1 |==> -1
14173:ROR:!=(int,int):<(int,int):org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):111:subfieldCodesAndData[i].length() != 1 |==> subfieldCodesAndData[i].length() < 1
14174:ROR:!=(int,int):>(int,int):org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):111:subfieldCodesAndData[i].length() != 1 |==> subfieldCodesAndData[i].length() > 1
14175:ROR:!=(int,int):TRUE(int,int):org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):111:subfieldCodesAndData[i].length() != 1 |==> true
14176:LVR:0:POS:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):114:0 |==> 1
14177:LVR:0:NEG:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):114:0 |==> -1
14178:LVR:POS:0:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):115:1 |==> 0
14179:LVR:POS:NEG:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):115:1 |==> -1
14180:AOR:+(int,int):%(int,int):org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):115:i + 1 |==> i % 1
14181:AOR:+(int,int):*(int,int):org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):115:i + 1 |==> i * 1
14182:AOR:+(int,int):-(int,int):org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):115:i + 1 |==> i - 1
14183:AOR:+(int,int):/(int,int):org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):115:i + 1 |==> i / 1
14184:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):116:df.addSubfield(sf) |==> <NO-OP>
14185:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.marc.impl.MarcFactoryImpl@newDataField(java.lang.String,char,char,java.lang.String[]):118:(df) |==> null
14186:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.MarcFactoryImpl@newLeader():128:new LeaderImpl() |==> null
14187:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.MarcFactoryImpl@newLeader(java.lang.String):138:new LeaderImpl(ldr) |==> null
14188:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.MarcFactoryImpl@newRecord():148:newRecord(new LeaderImpl("00000nam a2200000 a 4500")) |==> null
14189:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.MarcFactoryImpl@newSubfield():158:new SubfieldImpl() |==> null
14190:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.MarcFactoryImpl@newSubfield(char):168:new SubfieldImpl(code) |==> null
14191:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.MarcFactoryImpl@newSubfield(char,java.lang.String):178:new SubfieldImpl(code, data) |==> null
14192:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.MarcFactoryImpl@newRecord(org.marc4j.marc.Leader):186:new RecordImpl() |==> null
14193:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.MarcFactoryImpl@newRecord(org.marc4j.marc.Leader):187:record.setLeader(leader) |==> <NO-OP>
14194:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.MarcFactoryImpl@newRecord(org.marc4j.marc.Leader):188:record |==> null
14195:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.MarcFactoryImpl@newRecord(java.lang.String):197:newRecord(new LeaderImpl(leader)) |==> null
14196:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@<init>():67:controlFields = new ArrayList<ControlField>() |==> <NO-OP>
14197:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@<init>():68:dataFields = new ArrayList<DataField>() |==> <NO-OP>
14198:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@setType(java.lang.String):78:this.type = type |==> <NO-OP>
14199:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getType():88:type |==> null
14200:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@setLeader(org.marc4j.marc.Leader):98:this.leader = leader |==> <NO-OP>
14201:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getLeader():108:leader |==> null
14202:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@addVariableField(org.marc4j.marc.VariableField):123:field.getTag() |==> null
14203:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@addVariableField(org.marc4j.marc.VariableField):125:(ControlField)field |==> null
14204:COR:Verifier.isLeaderField(tag):TRUE:org.marc4j.marc.impl.RecordImpl@addVariableField(org.marc4j.marc.VariableField):127:Verifier.isLeaderField(tag) |==> false
14205:COR:Verifier.isLeaderField(tag):FALSE:org.marc4j.marc.impl.RecordImpl@addVariableField(org.marc4j.marc.VariableField):127:Verifier.isLeaderField(tag) |==> true
14206:COR:Verifier.isControlNumberField(tag):TRUE:org.marc4j.marc.impl.RecordImpl@addVariableField(org.marc4j.marc.VariableField):129:Verifier.isControlNumberField(tag) |==> false
14207:COR:Verifier.isControlNumberField(tag):FALSE:org.marc4j.marc.impl.RecordImpl@addVariableField(org.marc4j.marc.VariableField):129:Verifier.isControlNumberField(tag) |==> true
14208:COR:Verifier.hasControlNumberField(controlFields):TRUE:org.marc4j.marc.impl.RecordImpl@addVariableField(org.marc4j.marc.VariableField):130:Verifier.hasControlNumberField(controlFields) |==> false
14209:COR:Verifier.hasControlNumberField(controlFields):FALSE:org.marc4j.marc.impl.RecordImpl@addVariableField(org.marc4j.marc.VariableField):130:Verifier.hasControlNumberField(controlFields) |==> true
14210:LVR:0:POS:org.marc4j.marc.impl.RecordImpl@addVariableField(org.marc4j.marc.VariableField):131:0 |==> 1
14211:LVR:0:NEG:org.marc4j.marc.impl.RecordImpl@addVariableField(org.marc4j.marc.VariableField):131:0 |==> -1
14212:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@addVariableField(org.marc4j.marc.VariableField):131:controlFields.set(0, controlField) |==> <NO-OP>
14213:LVR:0:POS:org.marc4j.marc.impl.RecordImpl@addVariableField(org.marc4j.marc.VariableField):133:0 |==> 1
14214:LVR:0:NEG:org.marc4j.marc.impl.RecordImpl@addVariableField(org.marc4j.marc.VariableField):133:0 |==> -1
14215:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@addVariableField(org.marc4j.marc.VariableField):133:controlFields.add(0, controlField) |==> <NO-OP>
14216:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@addVariableField(org.marc4j.marc.VariableField):136:controlFields.add(controlField) |==> <NO-OP>
14217:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@addVariableField(org.marc4j.marc.VariableField):139:dataFields.add((DataField)field) |==> <NO-OP>
14218:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@removeVariableField(org.marc4j.marc.VariableField):145:field.getTag() |==> null
14219:COR:Verifier.isControlField(tag):TRUE:org.marc4j.marc.impl.RecordImpl@removeVariableField(org.marc4j.marc.VariableField):146:Verifier.isControlField(tag) |==> false
14220:COR:Verifier.isControlField(tag):FALSE:org.marc4j.marc.impl.RecordImpl@removeVariableField(org.marc4j.marc.VariableField):146:Verifier.isControlField(tag) |==> true
14221:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@removeVariableField(org.marc4j.marc.VariableField):147:controlFields.remove(field) |==> <NO-OP>
14222:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@removeVariableField(org.marc4j.marc.VariableField):149:dataFields.remove(field) |==> <NO-OP>
14223:COR:Verifier.hasControlNumberField(controlFields):TRUE:org.marc4j.marc.impl.RecordImpl@getControlNumberField():160:Verifier.hasControlNumberField(controlFields) |==> false
14224:COR:Verifier.hasControlNumberField(controlFields):FALSE:org.marc4j.marc.impl.RecordImpl@getControlNumberField():160:Verifier.hasControlNumberField(controlFields) |==> true
14225:LVR:0:POS:org.marc4j.marc.impl.RecordImpl@getControlNumberField():161:0 |==> 1
14226:LVR:0:NEG:org.marc4j.marc.impl.RecordImpl@getControlNumberField():161:0 |==> -1
14227:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getControlFields():172:controlFields |==> null
14228:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getDataFields():180:dataFields |==> null
14229:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getVariableField(java.lang.String):190:getVariableFieldsWithLeader() |==> null
14230:COR:fieldMatches(field, tag):TRUE:org.marc4j.marc.impl.RecordImpl@getVariableField(java.lang.String):193:fieldMatches(field, tag) |==> false
14231:COR:fieldMatches(field, tag):FALSE:org.marc4j.marc.impl.RecordImpl@getVariableField(java.lang.String):193:fieldMatches(field, tag) |==> true
14232:STD:<RETURN>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@getVariableField(java.lang.String):194:return field; |==> <NO-OP>
14233:COR:field.getTag().equals(tag):TRUE:org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):202:field.getTag().equals(tag) |==> false
14234:COR:field.getTag().equals(tag):FALSE:org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):202:field.getTag().equals(tag) |==> true
14235:LVR:TRUE:FALSE:org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):203:true |==> false
14236:STD:<RETURN>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):203:return Config.__M_NO == 0 && Config.COVERED(14235, 14235) ? true : Config.__M_NO == 14235 ? false : true; |==> <NO-OP>
14237:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):205:tag.startsWith("LNK") && field.getTag().equals("880") |==> tag.startsWith("LNK") == field.getTag().equals("880")
14238:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):205:tag.startsWith("LNK") && field.getTag().equals("880") |==> false
14239:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):205:tag.startsWith("LNK") && field.getTag().equals("880") |==> tag.startsWith("LNK")
14240:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):205:tag.startsWith("LNK") && field.getTag().equals("880") |==> field.getTag().equals("880")
14241:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):206:(DataField)field |==> null
14242:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):207:df.getSubfield('6') |==> null
14243:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):208:link != null |==> true
14244:LVR:POS:0:org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):208:3 |==> 0
14245:LVR:POS:NEG:org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):208:3 |==> -3
14246:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):208:link != null && link.getData().equals(tag.substring(3)) |==> link != null == link.getData().equals(tag.substring(3))
14247:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):208:link != null && link.getData().equals(tag.substring(3)) |==> false
14248:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):208:link != null && link.getData().equals(tag.substring(3)) |==> link != null
14249:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):208:link != null && link.getData().equals(tag.substring(3)) |==> link.getData().equals(tag.substring(3))
14250:LVR:TRUE:FALSE:org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):209:true |==> false
14251:STD:<RETURN>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):209:return Config.__M_NO == 0 && Config.COVERED(14250, 14250) ? true : Config.__M_NO == 14250 ? false : true; |==> <NO-OP>
14252:LVR:FALSE:TRUE:org.marc4j.marc.impl.RecordImpl@fieldMatches(org.marc4j.marc.VariableField,java.lang.String):212:false |==> true
14253:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getVariableFields(java.lang.String):220:new ArrayList<VariableField>() |==> null
14254:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getVariableFields(java.lang.String):221:getVariableFieldsWithLeader() |==> null
14255:COR:fieldMatches(field, tag):TRUE:org.marc4j.marc.impl.RecordImpl@getVariableFields(java.lang.String):224:fieldMatches(field, tag) |==> false
14256:COR:fieldMatches(field, tag):FALSE:org.marc4j.marc.impl.RecordImpl@getVariableFields(java.lang.String):224:fieldMatches(field, tag) |==> true
14257:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@getVariableFields(java.lang.String):225:result.add(field) |==> <NO-OP>
14258:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getVariableFields(java.lang.String):228:result |==> null
14259:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getVariableFields():236:new ArrayList<VariableField>() |==> null
14260:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@getVariableFields():238:fields.addAll(controlFields) |==> <NO-OP>
14261:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@getVariableFields():239:fields.addAll(dataFields) |==> <NO-OP>
14262:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getVariableFields():241:fields |==> null
14263:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getVariableFieldsWithLeader():251:new ArrayList<VariableField>() |==> null
14264:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getVariableFieldsWithLeader():252:new ControlFieldImpl("000", this.getLeader().toString()) |==> null
14265:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@getVariableFieldsWithLeader():253:fields.add(leaderAsField) |==> <NO-OP>
14266:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@getVariableFieldsWithLeader():254:fields.addAll(controlFields) |==> <NO-OP>
14267:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@getVariableFieldsWithLeader():255:fields.addAll(dataFields) |==> <NO-OP>
14268:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getVariableFieldsWithLeader():256:fields |==> null
14269:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getControlNumber():264:getControlNumberField() |==> null
14270:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.marc.impl.RecordImpl@getControlNumber():266:f == null |==> false
14271:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.marc.impl.RecordImpl@getControlNumber():266:f.getData() == null |==> false
14272:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.marc.impl.RecordImpl@getControlNumber():266:f == null || f.getData() == null |==> f == null != (f.getData() == null)
14273:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.marc.impl.RecordImpl@getControlNumber():266:f == null || f.getData() == null |==> f == null
14274:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.marc.impl.RecordImpl@getControlNumber():266:f == null || f.getData() == null |==> f.getData() == null
14275:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.marc.impl.RecordImpl@getControlNumber():266:f == null || f.getData() == null |==> true
14276:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getControlNumber():269:f.getData() |==> null
14277:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getVariableFields(java.lang.String[]):278:new ArrayList<VariableField>() |==> null
14278:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getVariableFields(java.lang.String[]):279:getVariableFieldsWithLeader() |==> null
14279:COR:fieldMatches(field, tag):TRUE:org.marc4j.marc.impl.RecordImpl@getVariableFields(java.lang.String[]):283:fieldMatches(field, tag) |==> false
14280:COR:fieldMatches(field, tag):FALSE:org.marc4j.marc.impl.RecordImpl@getVariableFields(java.lang.String[]):283:fieldMatches(field, tag) |==> true
14281:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@getVariableFields(java.lang.String[]):284:result.add(field) |==> <NO-OP>
14282:STD:<BREAK>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@getVariableFields(java.lang.String[]):285:break; |==> <NO-OP>
14283:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getVariableFields(java.lang.String[]):290:result |==> null
14284:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@toString():321:new StringBuilder() |==> null
14285:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@toString():323:sb.append("LEADER ") |==> <NO-OP>
14286:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@toString():324:sb.append(getLeader().toString()) |==> <NO-OP>
14287:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@toString():325:sb.append('\n') |==> <NO-OP>
14288:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@toString():328:sb.append(field.toString()) |==> <NO-OP>
14289:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@toString():329:sb.append('\n') |==> <NO-OP>
14290:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@toString():332:sb.toString() |==> null
14291:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@find(java.lang.String):340:new ArrayList<VariableField>() |==> null
14292:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@find(java.lang.String):341:controlFields.iterator() |==> null
14293:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@find(java.lang.String):344:i.next() |==> null
14294:COR:field.find(pattern):TRUE:org.marc4j.marc.impl.RecordImpl@find(java.lang.String):346:field.find(pattern) |==> false
14295:COR:field.find(pattern):FALSE:org.marc4j.marc.impl.RecordImpl@find(java.lang.String):346:field.find(pattern) |==> true
14296:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@find(java.lang.String):347:result.add(field) |==> <NO-OP>
14297:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@find(java.lang.String):351:i = dataFields.iterator() |==> <NO-OP>
14298:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@find(java.lang.String):354:i.next() |==> null
14299:COR:field.find(pattern):TRUE:org.marc4j.marc.impl.RecordImpl@find(java.lang.String):356:field.find(pattern) |==> false
14300:COR:field.find(pattern):FALSE:org.marc4j.marc.impl.RecordImpl@find(java.lang.String):356:field.find(pattern) |==> true
14301:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@find(java.lang.String):357:result.add(field) |==> <NO-OP>
14302:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@find(java.lang.String):361:result |==> null
14303:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@find(java.lang.String,java.lang.String):369:new ArrayList<VariableField>() |==> null
14304:COR:field.find(pattern):TRUE:org.marc4j.marc.impl.RecordImpl@find(java.lang.String,java.lang.String):372:field.find(pattern) |==> false
14305:COR:field.find(pattern):FALSE:org.marc4j.marc.impl.RecordImpl@find(java.lang.String,java.lang.String):372:field.find(pattern) |==> true
14306:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@find(java.lang.String,java.lang.String):373:result.add(field) |==> <NO-OP>
14307:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@find(java.lang.String,java.lang.String):377:result |==> null
14308:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@find(java.lang.String[],java.lang.String):385:new ArrayList<VariableField>() |==> null
14309:COR:field.find(pattern):TRUE:org.marc4j.marc.impl.RecordImpl@find(java.lang.String[],java.lang.String):388:field.find(pattern) |==> false
14310:COR:field.find(pattern):FALSE:org.marc4j.marc.impl.RecordImpl@find(java.lang.String[],java.lang.String):388:field.find(pattern) |==> true
14311:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@find(java.lang.String[],java.lang.String):389:result.add(field) |==> <NO-OP>
14312:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@find(java.lang.String[],java.lang.String):393:result |==> null
14313:COR:field.find(pattern):TRUE:org.marc4j.marc.impl.RecordImpl@hasMatch(java.lang.String[],java.lang.String):398:field.find(pattern) |==> false
14314:COR:field.find(pattern):FALSE:org.marc4j.marc.impl.RecordImpl@hasMatch(java.lang.String[],java.lang.String):398:field.find(pattern) |==> true
14315:LVR:TRUE:FALSE:org.marc4j.marc.impl.RecordImpl@hasMatch(java.lang.String[],java.lang.String):399:true |==> false
14316:STD:<RETURN>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@hasMatch(java.lang.String[],java.lang.String):399:return Config.__M_NO == 0 && Config.COVERED(14315, 14315) ? true : Config.__M_NO == 14315 ? false : true; |==> <NO-OP>
14317:LVR:FALSE:TRUE:org.marc4j.marc.impl.RecordImpl@hasMatch(java.lang.String[],java.lang.String):402:false |==> true
14318:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@setId(java.lang.Long):412:this.id = id |==> <NO-OP>
14319:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getId():422:id |==> null
14320:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.marc.impl.RecordImpl@addError(java.lang.String,java.lang.String,int,java.lang.String):438:errors == null |==> false
14321:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@addError(java.lang.String,java.lang.String,int,java.lang.String):439:errors = new LinkedList<MarcError>() |==> <NO-OP>
14322:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@addError(java.lang.String,java.lang.String,int,java.lang.String):441:errors.add(new MarcError(field, subfield, severity, message)) |==> <NO-OP>
14323:ROR:>(int,int):!=(int,int):org.marc4j.marc.impl.RecordImpl@addError(java.lang.String,java.lang.String,int,java.lang.String):442:severity > maxSeverity |==> severity != maxSeverity
14324:ROR:>(int,int):>=(int,int):org.marc4j.marc.impl.RecordImpl@addError(java.lang.String,java.lang.String,int,java.lang.String):442:severity > maxSeverity |==> severity >= maxSeverity
14325:ROR:>(int,int):FALSE(int,int):org.marc4j.marc.impl.RecordImpl@addError(java.lang.String,java.lang.String,int,java.lang.String):442:severity > maxSeverity |==> false
14326:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@addError(java.lang.String,java.lang.String,int,java.lang.String):443:maxSeverity = severity |==> <NO-OP>
14327:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):454:newErrors == null |==> false
14328:LVR:0:POS:org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):454:0 |==> 1
14329:LVR:0:NEG:org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):454:0 |==> -1
14330:ROR:==(int,int):<=(int,int):org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):454:newErrors.size() == 0 |==> newErrors.size() <= 0
14331:ROR:==(int,int):>=(int,int):org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):454:newErrors.size() == 0 |==> newErrors.size() >= 0
14332:ROR:==(int,int):FALSE(int,int):org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):454:newErrors.size() == 0 |==> false
14333:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):454:newErrors == null || newErrors.size() == 0 |==> newErrors == null != (newErrors.size() == 0)
14334:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):454:newErrors == null || newErrors.size() == 0 |==> newErrors == null
14335:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):454:newErrors == null || newErrors.size() == 0 |==> newErrors.size() == 0
14336:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):454:newErrors == null || newErrors.size() == 0 |==> true
14337:STD:<RETURN>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):455:return; |==> <NO-OP>
14338:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):457:errors == null |==> false
14339:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):458:errors = new LinkedList<MarcError>() |==> <NO-OP>
14340:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):461:errors.add(err) |==> <NO-OP>
14341:ROR:>(int,int):!=(int,int):org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):462:err.severity > maxSeverity |==> err.severity != maxSeverity
14342:ROR:>(int,int):>=(int,int):org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):462:err.severity > maxSeverity |==> err.severity >= maxSeverity
14343:ROR:>(int,int):FALSE(int,int):org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):462:err.severity > maxSeverity |==> false
14344:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.RecordImpl@addErrors(java.util.List<org.marc4j.MarcError>):463:maxSeverity = err.severity |==> <NO-OP>
14345:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.marc.impl.RecordImpl@hasErrors():470:errors != null |==> true
14346:LVR:0:POS:org.marc4j.marc.impl.RecordImpl@hasErrors():470:0 |==> 1
14347:LVR:0:NEG:org.marc4j.marc.impl.RecordImpl@hasErrors():470:0 |==> -1
14348:ROR:>(int,int):!=(int,int):org.marc4j.marc.impl.RecordImpl@hasErrors():470:errors.size() > 0 |==> errors.size() != 0
14349:ROR:>(int,int):>=(int,int):org.marc4j.marc.impl.RecordImpl@hasErrors():470:errors.size() > 0 |==> errors.size() >= 0
14350:ROR:>(int,int):FALSE(int,int):org.marc4j.marc.impl.RecordImpl@hasErrors():470:errors.size() > 0 |==> false
14351:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.marc.impl.RecordImpl@hasErrors():470:errors != null && errors.size() > 0 |==> errors != null == errors.size() > 0
14352:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.marc.impl.RecordImpl@hasErrors():470:errors != null && errors.size() > 0 |==> false
14353:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.marc.impl.RecordImpl@hasErrors():470:errors != null && errors.size() > 0 |==> errors != null
14354:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.marc.impl.RecordImpl@hasErrors():470:errors != null && errors.size() > 0 |==> errors.size() > 0
14355:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.RecordImpl@getErrors():475:errors |==> null
14356:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.marc.impl.SortedMarcFactoryImpl@newRecord(org.marc4j.marc.Leader):18:new SortedRecordImpl() |==> null
14357:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.SortedMarcFactoryImpl@newRecord(org.marc4j.marc.Leader):19:record.setLeader(leader) |==> <NO-OP>
14358:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.SortedMarcFactoryImpl@newRecord(org.marc4j.marc.Leader):20:record |==> null
14359:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):31:(ControlField)field |==> null
14360:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):32:controlField.getTag() |==> null
14361:COR:Verifier.isControlNumberField(tag):TRUE:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):34:Verifier.isControlNumberField(tag) |==> false
14362:COR:Verifier.isControlNumberField(tag):FALSE:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):34:Verifier.isControlNumberField(tag) |==> true
14363:COR:Verifier.hasControlNumberField(getControlFields()):TRUE:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):35:Verifier.hasControlNumberField(getControlFields()) |==> false
14364:COR:Verifier.hasControlNumberField(getControlFields()):FALSE:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):35:Verifier.hasControlNumberField(getControlFields()) |==> true
14365:LVR:0:POS:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):36:0 |==> 1
14366:LVR:0:NEG:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):36:0 |==> -1
14367:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):36:getControlFields().set(0, controlField) |==> <NO-OP>
14368:LVR:0:POS:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):38:0 |==> 1
14369:LVR:0:NEG:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):38:0 |==> -1
14370:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):38:getControlFields().add(0, controlField) |==> <NO-OP>
14371:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):41:Collections.sort(controlFields) |==> <NO-OP>
14372:COR:Verifier.isControlField(tag):TRUE:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):42:Verifier.isControlField(tag) |==> false
14373:COR:Verifier.isControlField(tag):FALSE:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):42:Verifier.isControlField(tag) |==> true
14374:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):43:getControlFields().add(controlField) |==> <NO-OP>
14375:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):44:Collections.sort(controlFields) |==> <NO-OP>
14376:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):47:getDataFields().add((DataField)field) |==> <NO-OP>
14377:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.SortedRecordImpl@addVariableField(org.marc4j.marc.VariableField):48:Collections.sort(dataFields) |==> <NO-OP>
14378:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.SubfieldImpl@<init>(char):58:this.setCode(code) |==> <NO-OP>
14379:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.SubfieldImpl@<init>(char,java.lang.String):69:this.setCode(code) |==> <NO-OP>
14380:STD:<CALL>:<NO-OP>:org.marc4j.marc.impl.SubfieldImpl@<init>(char,java.lang.String):70:this.setData(data) |==> <NO-OP>
14381:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.SubfieldImpl@setCode(char):78:this.code = code |==> <NO-OP>
14382:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.SubfieldImpl@getCode():86:code |==> 0
14383:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.SubfieldImpl@setData(java.lang.String):94:this.data = data |==> <NO-OP>
14384:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.SubfieldImpl@getData():102:data |==> null
14385:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.SubfieldImpl@find(java.lang.String):111:Pattern.compile(pattern) |==> null
14386:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.SubfieldImpl@find(java.lang.String):112:p.matcher(getData()) |==> null
14387:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.SubfieldImpl@find(java.lang.String):114:m.find() |==> false
14388:EVR:<PLUS>:<DEFAULT>:org.marc4j.marc.impl.SubfieldImpl@toString():130:"$" + getCode() + getData() |==> null
14389:STD:<ASSIGN>:<NO-OP>:org.marc4j.marc.impl.SubfieldImpl@setId(java.lang.Long):138:this.id = id |==> <NO-OP>
14390:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.marc.impl.SubfieldImpl@getId():146:id |==> null
14391:LVR:POS:0:org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:3 |==> 0
14392:LVR:POS:NEG:org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:3 |==> -3
14393:ROR:==(int,int):<=(int,int):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 |==> tag.length() <= 3
14394:ROR:==(int,int):>=(int,int):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 |==> tag.length() >= 3
14395:ROR:==(int,int):FALSE(int,int):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 |==> false
14396:LVR:0:POS:org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:0 |==> 1
14397:LVR:0:NEG:org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:0 |==> -1
14398:ROR:==(int,int):<=(int,int):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.charAt(0) == '0' |==> tag.charAt(0) <= '0'
14399:ROR:==(int,int):>=(int,int):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.charAt(0) == '0' |==> tag.charAt(0) >= '0'
14400:ROR:==(int,int):FALSE(int,int):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.charAt(0) == '0' |==> false
14401:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 && tag.charAt(0) == '0' |==> tag.length() == 3 == (tag.charAt(0) == '0')
14402:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 && tag.charAt(0) == '0' |==> false
14403:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 && tag.charAt(0) == '0' |==> tag.length() == 3
14404:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 && tag.charAt(0) == '0' |==> tag.charAt(0) == '0'
14405:LVR:POS:0:org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:1 |==> 0
14406:LVR:POS:NEG:org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:1 |==> -1
14407:ROR:==(int,int):<=(int,int):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.charAt(1) == '0' |==> tag.charAt(1) <= '0'
14408:ROR:==(int,int):>=(int,int):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.charAt(1) == '0' |==> tag.charAt(1) >= '0'
14409:ROR:==(int,int):FALSE(int,int):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.charAt(1) == '0' |==> false
14410:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 && tag.charAt(0) == '0' && tag.charAt(1) == '0' |==> (tag.length() == 3 && tag.charAt(0) == '0') == (tag.charAt(1) == '0')
14411:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 && tag.charAt(0) == '0' && tag.charAt(1) == '0' |==> false
14412:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 && tag.charAt(0) == '0' && tag.charAt(1) == '0' |==> tag.length() == 3 && tag.charAt(0) == '0'
14413:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 && tag.charAt(0) == '0' && tag.charAt(1) == '0' |==> tag.charAt(1) == '0'
14414:LVR:POS:0:org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:2 |==> 0
14415:LVR:POS:NEG:org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:2 |==> -2
14416:ROR:>=(int,int):==(int,int):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.charAt(2) >= '0' |==> tag.charAt(2) == '0'
14417:ROR:>=(int,int):>(int,int):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.charAt(2) >= '0' |==> tag.charAt(2) > '0'
14418:ROR:>=(int,int):TRUE(int,int):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.charAt(2) >= '0' |==> true
14419:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 && tag.charAt(0) == '0' && tag.charAt(1) == '0' && tag.charAt(2) >= '0' |==> (tag.length() == 3 && tag.charAt(0) == '0' && tag.charAt(1) == '0') == tag.charAt(2) >= '0'
14420:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 && tag.charAt(0) == '0' && tag.charAt(1) == '0' && tag.charAt(2) >= '0' |==> false
14421:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 && tag.charAt(0) == '0' && tag.charAt(1) == '0' && tag.charAt(2) >= '0' |==> tag.length() == 3 && tag.charAt(0) == '0' && tag.charAt(1) == '0'
14422:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 && tag.charAt(0) == '0' && tag.charAt(1) == '0' && tag.charAt(2) >= '0' |==> tag.charAt(2) >= '0'
14423:LVR:POS:0:org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:2 |==> 0
14424:LVR:POS:NEG:org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:2 |==> -2
14425:ROR:<=(int,int):<(int,int):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.charAt(2) <= '9' |==> tag.charAt(2) < '9'
14426:ROR:<=(int,int):==(int,int):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.charAt(2) <= '9' |==> tag.charAt(2) == '9'
14427:ROR:<=(int,int):TRUE(int,int):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.charAt(2) <= '9' |==> true
14428:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 && tag.charAt(0) == '0' && tag.charAt(1) == '0' && tag.charAt(2) >= '0' && tag.charAt(2) <= '9' |==> (tag.length() == 3 && tag.charAt(0) == '0' && tag.charAt(1) == '0' && tag.charAt(2) >= '0') == tag.charAt(2) <= '9'
14429:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 && tag.charAt(0) == '0' && tag.charAt(1) == '0' && tag.charAt(2) >= '0' && tag.charAt(2) <= '9' |==> false
14430:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 && tag.charAt(0) == '0' && tag.charAt(1) == '0' && tag.charAt(2) >= '0' && tag.charAt(2) <= '9' |==> tag.length() == 3 && tag.charAt(0) == '0' && tag.charAt(1) == '0' && tag.charAt(2) >= '0'
14431:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):44:tag.length() == 3 && tag.charAt(0) == '0' && tag.charAt(1) == '0' && tag.charAt(2) >= '0' && tag.charAt(2) <= '9' |==> tag.charAt(2) <= '9'
14432:LVR:TRUE:FALSE:org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):46:true |==> false
14433:STD:<RETURN>:<NO-OP>:org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):46:return Config.__M_NO == 0 && Config.COVERED(14432, 14432) ? true : Config.__M_NO == 14432 ? false : true; |==> <NO-OP>
14434:LVR:FALSE:TRUE:org.marc4j.marc.impl.Verifier@isControlField(java.lang.String):48:false |==> true
14435:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.marc.impl.Verifier@isLeaderField(java.lang.String):58:(tag.equals(LEADER_AS_FIELD)) |==> false
14436:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.marc.impl.Verifier@isControlNumberField(java.lang.String):68:(tag.equals("001")) |==> false
14437:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.marc.impl.Verifier@hasControlNumberField(java.util.Collection<org.marc4j.marc.ControlField>):81:field.getTag() |==> null
14438:COR:isControlNumberField(tag):TRUE:org.marc4j.marc.impl.Verifier@hasControlNumberField(java.util.Collection<org.marc4j.marc.ControlField>):82:isControlNumberField(tag) |==> false
14439:COR:isControlNumberField(tag):FALSE:org.marc4j.marc.impl.Verifier@hasControlNumberField(java.util.Collection<org.marc4j.marc.ControlField>):82:isControlNumberField(tag) |==> true
14440:LVR:TRUE:FALSE:org.marc4j.marc.impl.Verifier@hasControlNumberField(java.util.Collection<org.marc4j.marc.ControlField>):82:true |==> false
14441:STD:<RETURN>:<NO-OP>:org.marc4j.marc.impl.Verifier@hasControlNumberField(java.util.Collection<org.marc4j.marc.ControlField>):82:return Config.__M_NO == 0 && Config.COVERED(14440, 14440) ? true : Config.__M_NO == 14440 ? false : true; |==> <NO-OP>
14442:LVR:FALSE:TRUE:org.marc4j.marc.impl.Verifier@hasControlNumberField(java.util.Collection<org.marc4j.marc.ControlField>):84:false |==> true
14443:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.AddLocationExample@main(java.lang.String[]):40:AddLocationExample.class.getResourceAsStream("resources/summerland.mrc") |==> null
14444:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.AddLocationExample@main(java.lang.String[]):42:MarcFactory.newInstance() |==> null
14445:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.AddLocationExample@main(java.lang.String[]):44:new MarcStreamReader(input) |==> null
14446:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.AddLocationExample@main(java.lang.String[]):46:reader.next() |==> null
14447:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.AddLocationExample@main(java.lang.String[]):48:factory.newDataField("856", '4', '2') |==> null
14448:STD:<CALL>:<NO-OP>:org.marc4j.samples.AddLocationExample@main(java.lang.String[]):49:field.addSubfield(factory.newSubfield('3', "Contributor biographical information")) |==> <NO-OP>
14449:STD:<CALL>:<NO-OP>:org.marc4j.samples.AddLocationExample@main(java.lang.String[]):51:field.addSubfield(factory.newSubfield('u', "http://en.wikipedia.org/wiki/Michael_Chabon")) |==> <NO-OP>
14450:STD:<CALL>:<NO-OP>:org.marc4j.samples.AddLocationExample@main(java.lang.String[]):53:record.addVariableField(field) |==> <NO-OP>
14451:STD:<CALL>:<NO-OP>:org.marc4j.samples.AddLocationExample@main(java.lang.String[]):55:System.out.println(record.toString()) |==> <NO-OP>
14452:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.CheckAgencyExample@main(java.lang.String[]):40:ReadMarcExample.class.getResourceAsStream("resources/summerland.mrc") |==> null
14453:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.CheckAgencyExample@main(java.lang.String[]):42:new MarcStreamReader(input) |==> null
14454:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.CheckAgencyExample@main(java.lang.String[]):44:reader.next() |==> null
14455:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.CheckAgencyExample@main(java.lang.String[]):47:record.find("040", "DLC") |==> null
14456:LVR:0:POS:org.marc4j.samples.CheckAgencyExample@main(java.lang.String[]):48:0 |==> 1
14457:LVR:0:NEG:org.marc4j.samples.CheckAgencyExample@main(java.lang.String[]):48:0 |==> -1
14458:ROR:>(int,int):!=(int,int):org.marc4j.samples.CheckAgencyExample@main(java.lang.String[]):48:result.size() > 0 |==> result.size() != 0
14459:ROR:>(int,int):>=(int,int):org.marc4j.samples.CheckAgencyExample@main(java.lang.String[]):48:result.size() > 0 |==> result.size() >= 0
14460:ROR:>(int,int):FALSE(int,int):org.marc4j.samples.CheckAgencyExample@main(java.lang.String[]):48:result.size() > 0 |==> false
14461:STD:<CALL>:<NO-OP>:org.marc4j.samples.CheckAgencyExample@main(java.lang.String[]):49:System.out.println("Agency for this record is DLC") |==> <NO-OP>
14462:LVR:0:POS:org.marc4j.samples.CheckAgencyExample@main(java.lang.String[]):53:0 |==> 1
14463:LVR:0:NEG:org.marc4j.samples.CheckAgencyExample@main(java.lang.String[]):53:0 |==> -1
14464:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.CheckAgencyExample@main(java.lang.String[]):54:field.getSubfield('a').getData() |==> null
14465:COR:agency.matches("DLC"):TRUE:org.marc4j.samples.CheckAgencyExample@main(java.lang.String[]):55:agency.matches("DLC") |==> false
14466:COR:agency.matches("DLC"):FALSE:org.marc4j.samples.CheckAgencyExample@main(java.lang.String[]):55:agency.matches("DLC") |==> true
14467:STD:<CALL>:<NO-OP>:org.marc4j.samples.CheckAgencyExample@main(java.lang.String[]):56:System.out.println("DLC is the original agency") |==> <NO-OP>
14468:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.ControlFieldExample@main(java.lang.String[]):39:ReadMarcExample.class.getResourceAsStream("resources/chabon.mrc") |==> null
14469:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.ControlFieldExample@main(java.lang.String[]):41:new MarcStreamReader(input) |==> null
14470:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.ControlFieldExample@main(java.lang.String[]):43:reader.next() |==> null
14471:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.samples.ControlFieldExample@main(java.lang.String[]):46:(ControlField)record.getVariableField("008") |==> null
14472:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.ControlFieldExample@main(java.lang.String[]):49:controlField.getData() |==> null
14473:LVR:POS:0:org.marc4j.samples.ControlFieldExample@main(java.lang.String[]):53:35 |==> 0
14474:LVR:POS:NEG:org.marc4j.samples.ControlFieldExample@main(java.lang.String[]):53:35 |==> -35
14475:LVR:POS:0:org.marc4j.samples.ControlFieldExample@main(java.lang.String[]):53:38 |==> 0
14476:LVR:POS:NEG:org.marc4j.samples.ControlFieldExample@main(java.lang.String[]):53:38 |==> -38
14477:STD:<CALL>:<NO-OP>:org.marc4j.samples.ControlFieldExample@main(java.lang.String[]):54:System.out.println("Language code (008 35-37): " + lang) |==> <NO-OP>
14478:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):42:DataFieldExample.class.getResourceAsStream("resources/summerland.mrc") |==> null
14479:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):44:new MarcStreamReader(input) |==> null
14480:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):46:reader.next() |==> null
14481:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):49:(DataField)record.getVariableField("245") |==> null
14482:STD:<CALL>:<NO-OP>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):50:System.out.println(dataField.toString() + '\n') |==> <NO-OP>
14483:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):53:record.getVariableFields("650") |==> null
14484:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):54:dataFields.iterator() |==> null
14485:STD:<ASSIGN>:<NO-OP>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):56:dataField = (DataField)i.next() |==> <NO-OP>
14486:STD:<CALL>:<NO-OP>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):57:System.out.println(dataField.toString()) |==> <NO-OP>
14487:STD:<CALL>:<NO-OP>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):59:System.out.print('\n') |==> <NO-OP>
14488:EVR:<NEW_ARRAY>:<DEFAULT>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):62:{"010", "100", "245", "250", "260", "300"} |==> null
14489:STD:<ASSIGN>:<NO-OP>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):63:dataFields = record.getVariableFields(tags) |==> <NO-OP>
14490:STD:<ASSIGN>:<NO-OP>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):64:i = dataFields.iterator() |==> <NO-OP>
14491:STD:<ASSIGN>:<NO-OP>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):66:dataField = (DataField)i.next() |==> <NO-OP>
14492:STD:<CALL>:<NO-OP>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):67:System.out.println(dataField.toString()) |==> <NO-OP>
14493:STD:<CALL>:<NO-OP>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):69:System.out.print('\n') |==> <NO-OP>
14494:STD:<ASSIGN>:<NO-OP>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):72:dataField = (DataField)record.getVariableField("245") |==> <NO-OP>
14495:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):73:dataField.getTag() |==> null
14496:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):74:dataField.getIndicator1() |==> 0
14497:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):75:dataField.getIndicator2() |==> 0
14498:STD:<CALL>:<NO-OP>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):77:System.out.println("Tag: " + tag + " Indicator 1: " + ind1 + " Indicator 2: " + ind2) |==> <NO-OP>
14499:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):80:dataField.getSubfields() |==> null
14500:STD:<ASSIGN>:<NO-OP>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):81:i = subfields.iterator() |==> <NO-OP>
14501:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):84:(Subfield)i.next() |==> null
14502:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):85:subfield.getCode() |==> 0
14503:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):86:subfield.getData() |==> null
14504:STD:<CALL>:<NO-OP>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):88:System.out.println("Subfield code: " + code + " Data element: " + data) |==> <NO-OP>
14505:STD:<CALL>:<NO-OP>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):91:System.out.print('\n') |==> <NO-OP>
14506:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):94:dataField.getSubfield('a') |==> null
14507:STD:<CALL>:<NO-OP>:org.marc4j.samples.DataFieldExample@main(java.lang.String[]):95:System.out.println("Title proper: " + subfield.getData()) |==> <NO-OP>
14508:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.HandleExceptionExample@main(java.lang.String[]):39:HandleExceptionExample.class.getResourceAsStream("resources/error.mrc") |==> null
14509:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.HandleExceptionExample@main(java.lang.String[]):42:new MarcStreamReader(input) |==> null
14510:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.HandleExceptionExample@main(java.lang.String[]):44:reader.next() |==> null
14511:STD:<CALL>:<NO-OP>:org.marc4j.samples.HandleExceptionExample@main(java.lang.String[]):45:System.out.println(record.toString()) |==> <NO-OP>
14512:STD:<CALL>:<NO-OP>:org.marc4j.samples.HandleExceptionExample@main(java.lang.String[]):48:System.out.println("something went wrong man!") |==> <NO-OP>
14513:STD:<CALL>:<NO-OP>:org.marc4j.samples.HandleExceptionExample@main(java.lang.String[]):52:System.out.println("damn!") |==> <NO-OP>
14514:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.Marc2DomExample@main(java.lang.String[]):43:ReadMarcExample.class.getResourceAsStream("resources/summerland.mrc") |==> null
14515:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc2DomExample@main(java.lang.String[]):45:new MarcStreamReader(input) |==> null
14516:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc2DomExample@main(java.lang.String[]):47:new DOMResult() |==> null
14517:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc2DomExample@main(java.lang.String[]):48:new MarcXmlWriter(result) |==> null
14518:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc2DomExample@main(java.lang.String[]):49:writer.setConverter(new AnselToUnicode()) |==> <NO-OP>
14519:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.samples.Marc2DomExample@main(java.lang.String[]):51:(Record)reader.next() |==> null
14520:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc2DomExample@main(java.lang.String[]):52:writer.write(record) |==> <NO-OP>
14521:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc2DomExample@main(java.lang.String[]):54:writer.close() |==> <NO-OP>
14522:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.samples.Marc2DomExample@main(java.lang.String[]):56:(Document)result.getNode() |==> null
14523:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc2DomExample@main(java.lang.String[]):57:System.out.println(doc.getDocumentElement().getLocalName()) |==> <NO-OP>
14524:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.Marc2MarcXmlExample@main(java.lang.String[]):41:ReadMarcExample.class.getResourceAsStream("resources/summerland.mrc") |==> null
14525:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc2MarcXmlExample@main(java.lang.String[]):43:new MarcStreamReader(input) |==> null
14526:LVR:TRUE:FALSE:org.marc4j.samples.Marc2MarcXmlExample@main(java.lang.String[]):44:true |==> false
14527:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc2MarcXmlExample@main(java.lang.String[]):46:new AnselToUnicode() |==> null
14528:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc2MarcXmlExample@main(java.lang.String[]):47:writer.setConverter(converter) |==> <NO-OP>
14529:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.Marc2MarcXmlExample@main(java.lang.String[]):50:reader.next() |==> null
14530:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc2MarcXmlExample@main(java.lang.String[]):51:writer.write(record) |==> <NO-OP>
14531:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc2MarcXmlExample@main(java.lang.String[]):53:writer.close() |==> <NO-OP>
14532:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc2ModsExample@main(java.lang.String[]):45:new StreamSource(stylesheetUrl) |==> null
14533:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc2ModsExample@main(java.lang.String[]):47:new StreamResult(System.out) |==> null
14534:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.Marc2ModsExample@main(java.lang.String[]):50:ReadMarcExample.class.getResourceAsStream("resources/summerland.mrc") |==> null
14535:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc2ModsExample@main(java.lang.String[]):51:new MarcStreamReader(input) |==> null
14536:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc2ModsExample@main(java.lang.String[]):53:new MarcXmlWriter(result, stylesheet) |==> null
14537:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc2ModsExample@main(java.lang.String[]):54:writer.setConverter(new AnselToUnicode()) |==> <NO-OP>
14538:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.samples.Marc2ModsExample@main(java.lang.String[]):56:(Record)reader.next() |==> null
14539:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc2ModsExample@main(java.lang.String[]):57:writer.write(record) |==> <NO-OP>
14540:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc2ModsExample@main(java.lang.String[]):59:writer.close() |==> <NO-OP>
14541:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.Marc2ModsInDomExample@main(java.lang.String[]):45:ReadMarcExample.class.getResourceAsStream("resources/summerland.mrc") |==> null
14542:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc2ModsInDomExample@main(java.lang.String[]):47:new MarcStreamReader(input) |==> null
14543:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc2ModsInDomExample@main(java.lang.String[]):50:new StreamSource(stylesheetUrl) |==> null
14544:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc2ModsInDomExample@main(java.lang.String[]):52:new DOMResult() |==> null
14545:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc2ModsInDomExample@main(java.lang.String[]):53:new MarcXmlWriter(result, stylesheet) |==> null
14546:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc2ModsInDomExample@main(java.lang.String[]):54:writer.setConverter(new AnselToUnicode()) |==> <NO-OP>
14547:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.samples.Marc2ModsInDomExample@main(java.lang.String[]):56:(Record)reader.next() |==> null
14548:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc2ModsInDomExample@main(java.lang.String[]):57:writer.write(record) |==> <NO-OP>
14549:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc2ModsInDomExample@main(java.lang.String[]):59:writer.close() |==> <NO-OP>
14550:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.samples.Marc2ModsInDomExample@main(java.lang.String[]):61:(Document)result.getNode() |==> null
14551:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc2ModsInDomExample@main(java.lang.String[]):63:System.out.println(doc.getDocumentElement().getLocalName()) |==> <NO-OP>
14552:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.Marc8ToMarcXmlExample@main(java.lang.String[]):43:ReadMarcExample.class.getResourceAsStream("resources/brkrtest.mrc") |==> null
14553:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc8ToMarcXmlExample@main(java.lang.String[]):45:new FileOutputStream("c:/temp/summerland.xml") |==> null
14554:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc8ToMarcXmlExample@main(java.lang.String[]):47:new MarcStreamReader(input) |==> null
14555:LVR:TRUE:FALSE:org.marc4j.samples.Marc8ToMarcXmlExample@main(java.lang.String[]):48:true |==> false
14556:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc8ToMarcXmlExample@main(java.lang.String[]):50:new AnselToUnicode() |==> null
14557:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc8ToMarcXmlExample@main(java.lang.String[]):51:writer.setConverter(converter) |==> <NO-OP>
14558:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.Marc8ToMarcXmlExample@main(java.lang.String[]):54:reader.next() |==> null
14559:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc8ToMarcXmlExample@main(java.lang.String[]):55:writer.write(record) |==> <NO-OP>
14560:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc8ToMarcXmlExample@main(java.lang.String[]):57:writer.close() |==> <NO-OP>
14561:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.Marc8ToUnicodeExample@main(java.lang.String[]):41:ReadMarcExample.class.getResourceAsStream("resources/brkrtest.mrc") |==> null
14562:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc8ToUnicodeExample@main(java.lang.String[]):43:new MarcStreamReader(input) |==> null
14563:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc8ToUnicodeExample@main(java.lang.String[]):44:new MarcStreamWriter(System.out, "UTF8") |==> null
14564:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.Marc8ToUnicodeExample@main(java.lang.String[]):46:new AnselToUnicode() |==> null
14565:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc8ToUnicodeExample@main(java.lang.String[]):47:writer.setConverter(converter) |==> <NO-OP>
14566:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.Marc8ToUnicodeExample@main(java.lang.String[]):50:reader.next() |==> null
14567:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc8ToUnicodeExample@main(java.lang.String[]):51:writer.write(record) |==> <NO-OP>
14568:STD:<CALL>:<NO-OP>:org.marc4j.samples.Marc8ToUnicodeExample@main(java.lang.String[]):53:writer.close() |==> <NO-OP>
14569:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.ModsToMarc21lExample@main(java.lang.String[]):38:ModsToMarc21lExample.class.getResourceAsStream("resources/modsoutput.xml") |==> null
14570:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.ModsToMarc21lExample@main(java.lang.String[]):40:new MarcXmlReader(input, "http://www.loc.gov/standards/marcxml/xslt/MODS2MARC21slim.xsl") |==> null
14571:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.ModsToMarc21lExample@main(java.lang.String[]):44:reader.next() |==> null
14572:STD:<CALL>:<NO-OP>:org.marc4j.samples.ModsToMarc21lExample@main(java.lang.String[]):45:System.out.println(record.toString()) |==> <NO-OP>
14573:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.NonSortExample@main(java.lang.String[]):40:DataFieldExample.class.getResourceAsStream("resources/chabon.mrc") |==> null
14574:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.NonSortExample@main(java.lang.String[]):42:new MarcStreamReader(input) |==> null
14575:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.NonSortExample@main(java.lang.String[]):44:reader.next() |==> null
14576:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.samples.NonSortExample@main(java.lang.String[]):47:(DataField)record.getVariableField("245") |==> null
14577:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.NonSortExample@main(java.lang.String[]):50:dataField.getIndicator2() |==> 0
14578:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.NonSortExample@main(java.lang.String[]):53:dataField.getSubfield('a') |==> null
14579:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.NonSortExample@main(java.lang.String[]):54:subfield.getData() |==> null
14580:STD:<CALL>:<NO-OP>:org.marc4j.samples.NonSortExample@main(java.lang.String[]):55:System.out.println("Title proper: " + title) |==> <NO-OP>
14581:LVR:POS:0:org.marc4j.samples.NonSortExample@main(java.lang.String[]):58:10 |==> 0
14582:LVR:POS:NEG:org.marc4j.samples.NonSortExample@main(java.lang.String[]):58:10 |==> -10
14583:STD:<ASSIGN>:<NO-OP>:org.marc4j.samples.NonSortExample@main(java.lang.String[]):59:title = title.substring(nonSort) |==> <NO-OP>
14584:STD:<CALL>:<NO-OP>:org.marc4j.samples.NonSortExample@main(java.lang.String[]):60:System.out.println("Title non-sort (" + nonSort + "): " + title + '\n') |==> <NO-OP>
14585:EVR:<MEMBER_SELECT>:<DEFAULT>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):68:System.out |==> null
14586:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):69:Boolean.parseBoolean(System.getProperty("marc.verbose")) |==> false
14587:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):70:Boolean.parseBoolean(System.getProperty("marc.verbose")) |==> false
14588:LVR:0:POS:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):71:0 |==> 1
14589:LVR:0:NEG:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):71:0 |==> -1
14590:COR:args[0].equals("-v"):TRUE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):71:args[0].equals("-v") |==> false
14591:COR:args[0].equals("-v"):FALSE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):71:args[0].equals("-v") |==> true
14592:LVR:TRUE:FALSE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):73:true |==> false
14593:STD:<ASSIGN>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):73:verbose = true |==> <NO-OP>
14594:LVR:POS:0:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):74:1 |==> 0
14595:LVR:POS:NEG:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):74:1 |==> -1
14596:AOR:-(int,int):%(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):74:args.length - 1 |==> args.length % 1
14597:AOR:-(int,int):*(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):74:args.length - 1 |==> args.length * 1
14598:AOR:-(int,int):+(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):74:args.length - 1 |==> args.length + 1
14599:AOR:-(int,int):/(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):74:args.length - 1 |==> args.length / 1
14600:LVR:POS:0:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):75:1 |==> 0
14601:LVR:POS:NEG:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):75:1 |==> -1
14602:LVR:0:POS:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):75:0 |==> 1
14603:LVR:0:NEG:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):75:0 |==> -1
14604:LVR:POS:0:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):75:1 |==> 0
14605:LVR:POS:NEG:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):75:1 |==> -1
14606:AOR:-(int,int):%(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):75:args.length - 1 |==> args.length % 1
14607:AOR:-(int,int):*(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):75:args.length - 1 |==> args.length * 1
14608:AOR:-(int,int):+(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):75:args.length - 1 |==> args.length + 1
14609:AOR:-(int,int):/(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):75:args.length - 1 |==> args.length / 1
14610:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):75:System.arraycopy(args, 1, newArgs, 0, args.length - 1) |==> <NO-OP>
14611:STD:<ASSIGN>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):76:args = newArgs |==> <NO-OP>
14612:LVR:0:POS:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):78:0 |==> 1
14613:LVR:0:NEG:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):78:0 |==> -1
14614:COR:args[0].equals("-vv"):TRUE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):78:args[0].equals("-vv") |==> false
14615:COR:args[0].equals("-vv"):FALSE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):78:args[0].equals("-vv") |==> true
14616:LVR:TRUE:FALSE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):80:true |==> false
14617:STD:<ASSIGN>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):80:verbose = true |==> <NO-OP>
14618:LVR:TRUE:FALSE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):81:true |==> false
14619:STD:<ASSIGN>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):81:veryverbose = true |==> <NO-OP>
14620:LVR:POS:0:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):82:1 |==> 0
14621:LVR:POS:NEG:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):82:1 |==> -1
14622:AOR:-(int,int):%(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):82:args.length - 1 |==> args.length % 1
14623:AOR:-(int,int):*(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):82:args.length - 1 |==> args.length * 1
14624:AOR:-(int,int):+(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):82:args.length - 1 |==> args.length + 1
14625:AOR:-(int,int):/(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):82:args.length - 1 |==> args.length / 1
14626:LVR:POS:0:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):83:1 |==> 0
14627:LVR:POS:NEG:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):83:1 |==> -1
14628:LVR:0:POS:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):83:0 |==> 1
14629:LVR:0:NEG:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):83:0 |==> -1
14630:LVR:POS:0:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):83:1 |==> 0
14631:LVR:POS:NEG:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):83:1 |==> -1
14632:AOR:-(int,int):%(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):83:args.length - 1 |==> args.length % 1
14633:AOR:-(int,int):*(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):83:args.length - 1 |==> args.length * 1
14634:AOR:-(int,int):+(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):83:args.length - 1 |==> args.length + 1
14635:AOR:-(int,int):/(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):83:args.length - 1 |==> args.length / 1
14636:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):83:System.arraycopy(args, 1, newArgs, 0, args.length - 1) |==> <NO-OP>
14637:STD:<ASSIGN>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):84:args = newArgs |==> <NO-OP>
14638:LVR:0:POS:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):86:0 |==> 1
14639:LVR:0:NEG:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):86:0 |==> -1
14640:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):87:new File(fileStr) |==> null
14641:LVR:TRUE:FALSE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):90:true |==> false
14642:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):99:new FileInputStream(file) |==> null
14643:LVR:FALSE:TRUE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):100:false |==> true
14644:STD:<ASSIGN>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):100:readerNormal = new MarcPermissiveStreamReader(inNorm, false, to_utf_8) |==> <NO-OP>
14645:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):101:new FileInputStream(file) |==> null
14646:LVR:TRUE:FALSE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):102:true |==> false
14647:STD:<ASSIGN>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):102:readerPermissive = new MarcPermissiveStreamReader(inPerm, true, to_utf_8, "BESTGUESS") |==> <NO-OP>
14648:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):107:e.printStackTrace() |==> <NO-OP>
14649:LVR:POS:0:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):109:1 |==> 0
14650:LVR:POS:NEG:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):109:1 |==> -1
14651:ROR:>(int,int):!=(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):109:args.length > 1 |==> args.length != 1
14652:ROR:>(int,int):>=(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):109:args.length > 1 |==> args.length >= 1
14653:ROR:>(int,int):FALSE(int,int):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):109:args.length > 1 |==> false
14654:LVR:POS:0:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):113:1 |==> 0
14655:LVR:POS:NEG:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):113:1 |==> -1
14656:STD:<ASSIGN>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):114:patchedRecs = new MarcStreamWriter(patchedRecStream) |==> <NO-OP>
14657:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):119:e.printStackTrace() |==> <NO-OP>
14658:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):122:readerNormal.hasNext() && readerPermissive.hasNext() |==> readerNormal.hasNext() == readerPermissive.hasNext()
14659:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):122:readerNormal.hasNext() && readerPermissive.hasNext() |==> false
14660:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):122:readerNormal.hasNext() && readerPermissive.hasNext() |==> readerNormal.hasNext()
14661:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):122:readerNormal.hasNext() && readerPermissive.hasNext() |==> readerPermissive.hasNext()
14662:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):126:readerPermissive.next() |==> null
14663:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):127:recPerm.toString() |==> null
14664:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):129:readerNormal.next() |==> null
14665:COR:verbose:TRUE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):133:verbose |==> false
14666:COR:verbose:FALSE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):133:verbose |==> true
14667:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):135:out.println("Fatal Exception: " + me.getMessage()) |==> <NO-OP>
14668:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):136:dumpErrors(out, recPerm.getErrors()) |==> <NO-OP>
14669:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):137:showDiffs(out, null, strPerm) |==> <NO-OP>
14670:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):138:out.println("-------------------------------------------------------------------------------------") |==> <NO-OP>
14671:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):142:recNorm.toString() |==> null
14672:COR:strNorm.equals(strPerm):TRUE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):143:strNorm.equals(strPerm) |==> false
14673:COR:strNorm.equals(strPerm):FALSE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):143:strNorm.equals(strPerm) |==> true
14674:COR:verbose:TRUE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):145:verbose |==> false
14675:COR:verbose:FALSE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):145:verbose |==> true
14676:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):147:dumpErrors(out, recPerm.getErrors()) |==> <NO-OP>
14677:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):148:showDiffs(out, strNorm, strPerm) |==> <NO-OP>
14678:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):149:out.println("-------------------------------------------------------------------------------------") |==> <NO-OP>
14679:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):152:patchedRecs != null |==> true
14680:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):154:patchedRecs.write(recPerm) |==> <NO-OP>
14681:COR:recPerm.hasErrors():TRUE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):157:recPerm.hasErrors() |==> false
14682:COR:recPerm.hasErrors():FALSE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):157:recPerm.hasErrors() |==> true
14683:COR:verbose:TRUE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):159:verbose |==> false
14684:COR:verbose:FALSE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):159:verbose |==> true
14685:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):161:out.println("Results identical, but errors reported") |==> <NO-OP>
14686:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):162:dumpErrors(out, recPerm.getErrors()) |==> <NO-OP>
14687:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):163:showDiffs(out, strNorm, strPerm) |==> <NO-OP>
14688:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):164:out.println("-------------------------------------------------------------------------------------") |==> <NO-OP>
14689:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):166:patchedRecs != null |==> true
14690:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):168:patchedRecs.write(recPerm) |==> <NO-OP>
14691:COR:veryverbose:TRUE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):171:veryverbose |==> false
14692:COR:veryverbose:FALSE:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):171:veryverbose |==> true
14693:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@main(java.lang.String[]):173:showDiffs(out, strNorm, strPerm) |==> <NO-OP>
14694:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):181:strNorm != null |==> true
14695:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):183:strNorm.split("\n") |==> null
14696:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):184:strPerm.split("\n") |==> null
14697:ROR:==(int,int):<=(int,int):org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):185:normLines.length == permLines.length |==> normLines.length <= permLines.length
14698:ROR:==(int,int):>=(int,int):org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):185:normLines.length == permLines.length |==> normLines.length >= permLines.length
14699:ROR:==(int,int):FALSE(int,int):org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):185:normLines.length == permLines.length |==> false
14700:LVR:0:POS:org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):187:0 |==> 1
14701:LVR:0:NEG:org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):187:0 |==> -1
14702:ROR:<(int,int):!=(int,int):org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):187:i < normLines.length |==> i != normLines.length
14703:ROR:<(int,int):<=(int,int):org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):187:i < normLines.length |==> i <= normLines.length
14704:ROR:<(int,int):FALSE(int,int):org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):187:i < normLines.length |==> false
14705:COR:normLines[i].equals(permLines[i]):TRUE:org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):189:normLines[i].equals(permLines[i]) |==> false
14706:COR:normLines[i].equals(permLines[i]):FALSE:org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):189:normLines[i].equals(permLines[i]) |==> true
14707:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):191:out.println("   " + normLines[i]) |==> <NO-OP>
14708:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):195:out.println(" < " + normLines[i]) |==> <NO-OP>
14709:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):196:out.println(" > " + permLines[i]) |==> <NO-OP>
14710:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):203:strPerm.split("\n") |==> null
14711:LVR:0:POS:org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):204:0 |==> 1
14712:LVR:0:NEG:org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):204:0 |==> -1
14713:ROR:<(int,int):!=(int,int):org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):204:i < permLines.length |==> i != permLines.length
14714:ROR:<(int,int):<=(int,int):org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):204:i < permLines.length |==> i <= permLines.length
14715:ROR:<(int,int):FALSE(int,int):org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):204:i < permLines.length |==> false
14716:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@showDiffs(java.io.PrintStream,java.lang.String,java.lang.String):206:out.println("   " + permLines[i]) |==> <NO-OP>
14717:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.samples.PermissiveReaderExample@dumpErrors(java.io.PrintStream,java.util.List<org.marc4j.MarcError>):215:errors != null |==> true
14718:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.PermissiveReaderExample@dumpErrors(java.io.PrintStream,java.util.List<org.marc4j.MarcError>):217:errors.iterator() |==> null
14719:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.PermissiveReaderExample@dumpErrors(java.io.PrintStream,java.util.List<org.marc4j.MarcError>):220:iter.next() |==> null
14720:STD:<CALL>:<NO-OP>:org.marc4j.samples.PermissiveReaderExample@dumpErrors(java.io.PrintStream,java.util.List<org.marc4j.MarcError>):221:out.println(error.toString()) |==> <NO-OP>
14721:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.PersonalNamesExample@main(java.lang.String[]):37:PersonalNamesExample.class.getResourceAsStream("resources/names.txt") |==> null
14722:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.PersonalNamesExample@main(java.lang.String[]):39:new PersonalNamesReader(input) |==> null
14723:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.PersonalNamesExample@main(java.lang.String[]):41:reader.next() |==> null
14724:STD:<CALL>:<NO-OP>:org.marc4j.samples.PersonalNamesExample@main(java.lang.String[]):42:System.out.println(record.toString()) |==> <NO-OP>
14725:STD:<ASSIGN>:<NO-OP>:org.marc4j.samples.PersonalNamesReader@<init>(java.io.InputStream):24:factory = MarcFactory.newInstance() |==> <NO-OP>
14726:STD:<ASSIGN>:<NO-OP>:org.marc4j.samples.PersonalNamesReader@<init>(java.io.InputStream):25:br = new BufferedReader(new InputStreamReader(in)) |==> <NO-OP>
14727:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.samples.PersonalNamesReader@hasNext():30:(line = br.readLine()) != null |==> true
14728:LVR:TRUE:FALSE:org.marc4j.samples.PersonalNamesReader@hasNext():31:true |==> false
14729:LVR:FALSE:TRUE:org.marc4j.samples.PersonalNamesReader@hasNext():33:false |==> true
14730:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.PersonalNamesReader@next():40:line.trim().split("\t") |==> null
14731:LVR:POS:0:org.marc4j.samples.PersonalNamesReader@next():42:3 |==> 0
14732:LVR:POS:NEG:org.marc4j.samples.PersonalNamesReader@next():42:3 |==> -3
14733:ROR:!=(int,int):<(int,int):org.marc4j.samples.PersonalNamesReader@next():42:tokens.length != 3 |==> tokens.length < 3
14734:ROR:!=(int,int):>(int,int):org.marc4j.samples.PersonalNamesReader@next():42:tokens.length != 3 |==> tokens.length > 3
14735:ROR:!=(int,int):TRUE(int,int):org.marc4j.samples.PersonalNamesReader@next():42:tokens.length != 3 |==> true
14736:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.PersonalNamesReader@next():45:factory.newRecord("00000nz  a2200000o  4500") |==> null
14737:LVR:0:POS:org.marc4j.samples.PersonalNamesReader@next():47:0 |==> 1
14738:LVR:0:NEG:org.marc4j.samples.PersonalNamesReader@next():47:0 |==> -1
14739:STD:<CALL>:<NO-OP>:org.marc4j.samples.PersonalNamesReader@next():48:record.addVariableField(cf) |==> <NO-OP>
14740:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.PersonalNamesReader@next():50:factory.newDataField("100", '1', ' ') |==> null
14741:LVR:POS:0:org.marc4j.samples.PersonalNamesReader@next():51:1 |==> 0
14742:LVR:POS:NEG:org.marc4j.samples.PersonalNamesReader@next():51:1 |==> -1
14743:STD:<CALL>:<NO-OP>:org.marc4j.samples.PersonalNamesReader@next():51:df.addSubfield(factory.newSubfield('a', tokens[1])) |==> <NO-OP>
14744:LVR:POS:0:org.marc4j.samples.PersonalNamesReader@next():52:2 |==> 0
14745:LVR:POS:NEG:org.marc4j.samples.PersonalNamesReader@next():52:2 |==> -2
14746:STD:<CALL>:<NO-OP>:org.marc4j.samples.PersonalNamesReader@next():52:df.addSubfield(factory.newSubfield('d', tokens[2])) |==> <NO-OP>
14747:STD:<CALL>:<NO-OP>:org.marc4j.samples.PersonalNamesReader@next():53:record.addVariableField(df) |==> <NO-OP>
14748:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.samples.PersonalNamesReader@next():55:record |==> null
14749:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.ReadFromInputSourceExample@main(java.lang.String[]):37:new InputSource(systemId) |==> null
14750:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.ReadFromInputSourceExample@main(java.lang.String[]):39:new MarcXmlReader(input) |==> null
14751:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.ReadFromInputSourceExample@main(java.lang.String[]):41:reader.next() |==> null
14752:STD:<CALL>:<NO-OP>:org.marc4j.samples.ReadFromInputSourceExample@main(java.lang.String[]):42:System.out.println(record.toString()) |==> <NO-OP>
14753:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.ReadMarcExample@main(java.lang.String[]):38:ReadMarcExample.class.getResourceAsStream("resources/summerland.mrc") |==> null
14754:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.ReadMarcExample@main(java.lang.String[]):40:new MarcStreamReader(input) |==> null
14755:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.ReadMarcExample@main(java.lang.String[]):42:reader.next() |==> null
14756:STD:<CALL>:<NO-OP>:org.marc4j.samples.ReadMarcExample@main(java.lang.String[]):43:System.out.println(record.toString()) |==> <NO-OP>
14757:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.ReadMarcFromURLExample@main(java.lang.String[]):37:new URL("http://www.loc.gov/standards/marcxml/Sandburg/sandburg.mrc") |==> null
14758:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.ReadMarcFromURLExample@main(java.lang.String[]):40:new MarcStreamReader(url.openStream()) |==> null
14759:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.ReadMarcFromURLExample@main(java.lang.String[]):42:reader.next() |==> null
14760:STD:<CALL>:<NO-OP>:org.marc4j.samples.ReadMarcFromURLExample@main(java.lang.String[]):43:System.out.println(record.toString()) |==> <NO-OP>
14761:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.ReadMarcXmlExample@main(java.lang.String[]):38:ReadMarcExample.class.getResourceAsStream("resources/summerland.xml") |==> null
14762:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.ReadMarcXmlExample@main(java.lang.String[]):40:new MarcXmlReader(input) |==> null
14763:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.ReadMarcXmlExample@main(java.lang.String[]):42:reader.next() |==> null
14764:STD:<CALL>:<NO-OP>:org.marc4j.samples.ReadMarcXmlExample@main(java.lang.String[]):43:System.out.println(record.toString()) |==> <NO-OP>
14765:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.ReadSingleRecordExample@main(java.lang.String[]):38:ReadSingleRecordExample.class.getResourceAsStream("resources/summerland.mrc") |==> null
14766:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.ReadSingleRecordExample@main(java.lang.String[]):40:new MarcStreamReader(input) |==> null
14767:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.ReadSingleRecordExample@main(java.lang.String[]):41:reader.next() |==> null
14768:STD:<CALL>:<NO-OP>:org.marc4j.samples.ReadSingleRecordExample@main(java.lang.String[]):42:System.out.println(record.toString()) |==> <NO-OP>
14769:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.RemoveLocalFieldsExample@main(java.lang.String[]):43:RemoveLocalFieldsExample.class.getResourceAsStream("resources/chabon-loc.mrc") |==> null
14770:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.RemoveLocalFieldsExample@main(java.lang.String[]):45:new MarcStreamReader(input) |==> null
14771:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.RemoveLocalFieldsExample@main(java.lang.String[]):47:reader.next() |==> null
14772:STD:<CALL>:<NO-OP>:org.marc4j.samples.RemoveLocalFieldsExample@main(java.lang.String[]):48:System.out.println(record.toString()) |==> <NO-OP>
14773:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.RemoveLocalFieldsExample@main(java.lang.String[]):50:Pattern.compile("9\\d\\d") |==> null
14774:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.RemoveLocalFieldsExample@main(java.lang.String[]):52:record.getDataFields() |==> null
14775:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.RemoveLocalFieldsExample@main(java.lang.String[]):54:fields.iterator() |==> null
14776:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.samples.RemoveLocalFieldsExample@main(java.lang.String[]):56:(DataField)i.next() |==> null
14777:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.RemoveLocalFieldsExample@main(java.lang.String[]):57:pattern.matcher(field.getTag()) |==> null
14778:COR:matcher.matches():TRUE:org.marc4j.samples.RemoveLocalFieldsExample@main(java.lang.String[]):58:matcher.matches() |==> false
14779:COR:matcher.matches():FALSE:org.marc4j.samples.RemoveLocalFieldsExample@main(java.lang.String[]):58:matcher.matches() |==> true
14780:STD:<CALL>:<NO-OP>:org.marc4j.samples.RemoveLocalFieldsExample@main(java.lang.String[]):59:i.remove() |==> <NO-OP>
14781:STD:<CALL>:<NO-OP>:org.marc4j.samples.RemoveLocalFieldsExample@main(java.lang.String[]):61:System.out.println(record.toString()) |==> <NO-OP>
14782:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):31:TransformerFactory.newInstance() |==> null
14783:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):33:tFactory.getFeature(SAXSource.FEATURE) && tFactory.getFeature(SAXResult.FEATURE) |==> tFactory.getFeature(SAXSource.FEATURE) == tFactory.getFeature(SAXResult.FEATURE)
14784:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):34:tFactory.getFeature(SAXSource.FEATURE) && tFactory.getFeature(SAXResult.FEATURE) |==> false
14785:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):33:tFactory.getFeature(SAXSource.FEATURE) && tFactory.getFeature(SAXResult.FEATURE) |==> tFactory.getFeature(SAXSource.FEATURE)
14786:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):34:tFactory.getFeature(SAXSource.FEATURE) && tFactory.getFeature(SAXResult.FEATURE) |==> tFactory.getFeature(SAXResult.FEATURE)
14787:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):37:((SAXTransformerFactory)tFactory) |==> null
14788:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):41:saxTFactory.newTransformerHandler(new StreamSource("http://www.loc.gov/standards/mods/v3/MARC21slim2MODS3.xsl")) |==> null
14789:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):44:saxTFactory.newTransformerHandler(new StreamSource("http://www.loc.gov/standards/marcxml/xslt/MODS2MARC21slim.xsl")) |==> null
14790:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):47:saxTFactory.newTransformerHandler(new StreamSource("http://www.loc.gov/standards/marcxml/xslt/MARC21slim2HTML.xsl")) |==> null
14791:STD:<CALL>:<NO-OP>:org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):51:tHandler1.setResult(new SAXResult(tHandler2)) |==> <NO-OP>
14792:STD:<CALL>:<NO-OP>:org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):52:tHandler2.setResult(new SAXResult(tHandler3)) |==> <NO-OP>
14793:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):54:new FileOutputStream("c:/temp/output.html") |==> null
14794:STD:<CALL>:<NO-OP>:org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):55:tHandler3.setResult(new StreamResult(out)) |==> <NO-OP>
14795:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):58:new SAXResult(tHandler1) |==> null
14796:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):62:ReadMarcExample.class.getResourceAsStream("resources/summerland.mrc") |==> null
14797:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):65:new MarcStreamReader(input) |==> null
14798:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):66:new MarcXmlWriter(result) |==> null
14799:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):68:reader.next() |==> null
14800:STD:<CALL>:<NO-OP>:org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):69:writer.write(record) |==> <NO-OP>
14801:STD:<CALL>:<NO-OP>:org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):71:writer.close() |==> <NO-OP>
14802:STD:<CALL>:<NO-OP>:org.marc4j.samples.StylesheetChainExample@main(java.lang.String[]):73:out.close() |==> <NO-OP>
14803:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):25:AddLocationExample.class.getResourceAsStream("resources/chabon.mrc") |==> null
14804:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):27:new Hashtable() |==> null
14805:LVR:0:POS:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):29:0 |==> 1
14806:LVR:0:NEG:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):29:0 |==> -1
14807:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):31:new MarcStreamReader(input) |==> null
14808:STD:<INC>:<NO-OP>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):33:counter++ |==> <NO-OP>
14809:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):35:reader.next() |==> null
14810:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):37:record.getVariableFields() |==> null
14811:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):38:fields.iterator() |==> null
14812:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):40:(VariableField)i.next() |==> null
14813:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):41:field.getTag() |==> null
14814:COR:table.containsKey(tag):TRUE:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):42:table.containsKey(tag) |==> false
14815:COR:table.containsKey(tag):FALSE:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):42:table.containsKey(tag) |==> true
14816:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):43:(Integer)table.get(tag) |==> null
14817:LVR:POS:0:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):44:1 |==> 0
14818:LVR:POS:NEG:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):44:1 |==> -1
14819:AOR:+(int,int):%(int,int):org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):44:counts.intValue() + 1 |==> counts.intValue() % 1
14820:AOR:+(int,int):*(int,int):org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):44:counts.intValue() + 1 |==> counts.intValue() * 1
14821:AOR:+(int,int):-(int,int):org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):44:counts.intValue() + 1 |==> counts.intValue() - 1
14822:AOR:+(int,int):/(int,int):org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):44:counts.intValue() + 1 |==> counts.intValue() / 1
14823:STD:<CALL>:<NO-OP>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):44:table.put(tag, new Integer(counts.intValue() + 1)) |==> <NO-OP>
14824:LVR:POS:0:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):46:1 |==> 0
14825:LVR:POS:NEG:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):46:1 |==> -1
14826:STD:<CALL>:<NO-OP>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):46:table.put(tag, new Integer(1)) |==> <NO-OP>
14827:STD:<CALL>:<NO-OP>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):52:System.out.println("Analyzed " + counter + " records") |==> <NO-OP>
14828:STD:<CALL>:<NO-OP>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):53:System.out.println("Tag\tCount") |==> <NO-OP>
14829:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):55:new ArrayList(table.keySet()) |==> null
14830:STD:<CALL>:<NO-OP>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):56:Collections.sort(list) |==> <NO-OP>
14831:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):57:list.iterator() |==> null
14832:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):59:(String)i.next() |==> null
14833:EVR:<TYPE_CAST>:<DEFAULT>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):60:(Integer)table.get(tag) |==> null
14834:STD:<CALL>:<NO-OP>:org.marc4j.samples.TagAnalysisExample@main(java.lang.String[]):61:System.out.println(tag + "\t" + value) |==> <NO-OP>
14835:LVR:POS:0:org.marc4j.samples.TemplatesExample@main(java.lang.String[]):29:1 |==> 0
14836:LVR:POS:NEG:org.marc4j.samples.TemplatesExample@main(java.lang.String[]):29:1 |==> -1
14837:ROR:!=(int,int):<(int,int):org.marc4j.samples.TemplatesExample@main(java.lang.String[]):29:args.length != 1 |==> args.length < 1
14838:ROR:!=(int,int):>(int,int):org.marc4j.samples.TemplatesExample@main(java.lang.String[]):29:args.length != 1 |==> args.length > 1
14839:ROR:!=(int,int):TRUE(int,int):org.marc4j.samples.TemplatesExample@main(java.lang.String[]):29:args.length != 1 |==> true
14840:LVR:0:POS:org.marc4j.samples.TemplatesExample@main(java.lang.String[]):32:0 |==> 1
14841:LVR:0:NEG:org.marc4j.samples.TemplatesExample@main(java.lang.String[]):32:0 |==> -1
14842:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.TemplatesExample@main(java.lang.String[]):34:TransformerFactory.newInstance() |==> null
14843:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.samples.TemplatesExample@main(java.lang.String[]):36:tFactory.getFeature(SAXSource.FEATURE) && tFactory.getFeature(SAXResult.FEATURE) |==> tFactory.getFeature(SAXSource.FEATURE) == tFactory.getFeature(SAXResult.FEATURE)
14844:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.samples.TemplatesExample@main(java.lang.String[]):37:tFactory.getFeature(SAXSource.FEATURE) && tFactory.getFeature(SAXResult.FEATURE) |==> false
14845:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.samples.TemplatesExample@main(java.lang.String[]):36:tFactory.getFeature(SAXSource.FEATURE) && tFactory.getFeature(SAXResult.FEATURE) |==> tFactory.getFeature(SAXSource.FEATURE)
14846:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.samples.TemplatesExample@main(java.lang.String[]):37:tFactory.getFeature(SAXSource.FEATURE) && tFactory.getFeature(SAXResult.FEATURE) |==> tFactory.getFeature(SAXResult.FEATURE)
14847:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.samples.TemplatesExample@main(java.lang.String[]):40:((SAXTransformerFactory)tFactory) |==> null
14848:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.TemplatesExample@main(java.lang.String[]):42:new StreamSource("http://www.loc.gov/standards/marcxml/xslt/MODS2MARC21slim.xsl") |==> null
14849:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.TemplatesExample@main(java.lang.String[]):46:tFactory.newTemplates(stylesheet) |==> null
14850:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.TemplatesExample@main(java.lang.String[]):48:new File(inputDir) |==> null
14851:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.TemplatesExample$1@accept(java.io.File,java.lang.String):53:name.endsWith(".xml") |==> false
14852:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.TemplatesExample@main(java.lang.String[]):56:dir.listFiles(filter) |==> null
14853:LVR:0:POS:org.marc4j.samples.TemplatesExample@main(java.lang.String[]):58:0 |==> 1
14854:LVR:0:NEG:org.marc4j.samples.TemplatesExample@main(java.lang.String[]):58:0 |==> -1
14855:ROR:<(int,int):!=(int,int):org.marc4j.samples.TemplatesExample@main(java.lang.String[]):58:i < files.length |==> i != files.length
14856:ROR:<(int,int):<=(int,int):org.marc4j.samples.TemplatesExample@main(java.lang.String[]):58:i < files.length |==> i <= files.length
14857:ROR:<(int,int):FALSE(int,int):org.marc4j.samples.TemplatesExample@main(java.lang.String[]):58:i < files.length |==> false
14858:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.TemplatesExample@main(java.lang.String[]):59:new FileInputStream(files[i]) |==> null
14859:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.TemplatesExample@main(java.lang.String[]):62:saxTFactory.newTransformerHandler(templates) |==> null
14860:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.TemplatesExample@main(java.lang.String[]):65:new MarcXmlReader(input, handler) |==> null
14861:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.TemplatesExample@main(java.lang.String[]):67:reader.next() |==> null
14862:STD:<CALL>:<NO-OP>:org.marc4j.samples.TemplatesExample@main(java.lang.String[]):68:System.out.println(record.toString()) |==> <NO-OP>
14863:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.WriteMarcExample@main(java.lang.String[]):40:ReadMarcExample.class.getResourceAsStream("resources/summerland.mrc") |==> null
14864:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.WriteMarcExample@main(java.lang.String[]):42:new MarcStreamReader(input) |==> null
14865:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.WriteMarcExample@main(java.lang.String[]):43:new MarcStreamWriter(System.out) |==> null
14866:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.WriteMarcExample@main(java.lang.String[]):45:reader.next() |==> null
14867:STD:<CALL>:<NO-OP>:org.marc4j.samples.WriteMarcExample@main(java.lang.String[]):46:writer.write(record) |==> <NO-OP>
14868:STD:<CALL>:<NO-OP>:org.marc4j.samples.WriteMarcExample@main(java.lang.String[]):48:writer.close() |==> <NO-OP>
14869:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.XercesSerializerExample@main(java.lang.String[]):43:ReadMarcExample.class.getResourceAsStream("resources/summerland.mrc") |==> null
14870:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.samples.XercesSerializerExample@main(java.lang.String[]):44:new MarcStreamReader(input) |==> null
14871:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.samples.XercesSerializerExample@main(java.lang.String[]):54:reader.next() |==> null
14872:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.CustomDecimalFormat:32:REP_ALL_NINES |==> 0
14873:LVR:0:POS:org.marc4j.util.CustomDecimalFormat@<init>(int):42:0 |==> 1
14874:LVR:0:NEG:org.marc4j.util.CustomDecimalFormat@<init>(int):42:0 |==> -1
14875:LVR:0:POS:org.marc4j.util.CustomDecimalFormat@<init>(int):44:0 |==> 1
14876:LVR:0:NEG:org.marc4j.util.CustomDecimalFormat@<init>(int):44:0 |==> -1
14877:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.CustomDecimalFormat@<init>(int):44:maximumValue = Long.parseLong(maxString.substring(0, numberDigits)) |==> <NO-OP>
14878:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.CustomDecimalFormat@<init>(int):45:overflowRepresentation = REP_ALL_NINES |==> <NO-OP>
14879:STD:<CALL>:<NO-OP>:org.marc4j.util.CustomDecimalFormat@<init>(int):47:this.setMaximumIntegerDigits(numberDigits) |==> <NO-OP>
14880:LVR:0:POS:org.marc4j.util.CustomDecimalFormat@<init>(int,int):58:0 |==> 1
14881:LVR:0:NEG:org.marc4j.util.CustomDecimalFormat@<init>(int,int):58:0 |==> -1
14882:LVR:0:POS:org.marc4j.util.CustomDecimalFormat@<init>(int,int):60:0 |==> 1
14883:LVR:0:NEG:org.marc4j.util.CustomDecimalFormat@<init>(int,int):60:0 |==> -1
14884:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.CustomDecimalFormat@<init>(int,int):60:maximumValue = Long.parseLong(maxString.substring(0, numberDigits)) |==> <NO-OP>
14885:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.CustomDecimalFormat@<init>(int,int):61:overflowRepresentation = overflowType |==> <NO-OP>
14886:LVR:POS:0:org.marc4j.util.CustomDecimalFormat@<init>(int,int):63:5 |==> 0
14887:LVR:POS:NEG:org.marc4j.util.CustomDecimalFormat@<init>(int,int):63:5 |==> -5
14888:STD:<CALL>:<NO-OP>:org.marc4j.util.CustomDecimalFormat@<init>(int,int):63:this.setMaximumIntegerDigits(5) |==> <NO-OP>
14889:ROR:>(double,double):!=(double,double):org.marc4j.util.CustomDecimalFormat@format(double,java.lang.StringBuffer,java.text.FieldPosition):68:number > maximumValue |==> number != maximumValue
14890:ROR:>(double,double):>=(double,double):org.marc4j.util.CustomDecimalFormat@format(double,java.lang.StringBuffer,java.text.FieldPosition):68:number > maximumValue |==> number >= maximumValue
14891:ROR:>(double,double):FALSE(double,double):org.marc4j.util.CustomDecimalFormat@format(double,java.lang.StringBuffer,java.text.FieldPosition):68:number > maximumValue |==> false
14892:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.CustomDecimalFormat@format(double,java.lang.StringBuffer,java.text.FieldPosition):69:number = getOverflowRepresentation((long)number) |==> <NO-OP>
14893:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.CustomDecimalFormat@format(double,java.lang.StringBuffer,java.text.FieldPosition):72:super.format(number, toAppendTo, pos) |==> null
14894:ROR:>(long,long):!=(long,long):org.marc4j.util.CustomDecimalFormat@format(long,java.lang.StringBuffer,java.text.FieldPosition):77:number > maximumValue |==> number != maximumValue
14895:ROR:>(long,long):>=(long,long):org.marc4j.util.CustomDecimalFormat@format(long,java.lang.StringBuffer,java.text.FieldPosition):77:number > maximumValue |==> number >= maximumValue
14896:ROR:>(long,long):FALSE(long,long):org.marc4j.util.CustomDecimalFormat@format(long,java.lang.StringBuffer,java.text.FieldPosition):77:number > maximumValue |==> false
14897:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.CustomDecimalFormat@format(long,java.lang.StringBuffer,java.text.FieldPosition):78:number = getOverflowRepresentation(number) |==> <NO-OP>
14898:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.CustomDecimalFormat@format(long,java.lang.StringBuffer,java.text.FieldPosition):80:super.format(number, toAppendTo, pos) |==> null
14899:LVR:0:POS:org.marc4j.util.CustomDecimalFormat@getOverflowRepresentation(long):86:0 |==> 1
14900:LVR:0:NEG:org.marc4j.util.CustomDecimalFormat@getOverflowRepresentation(long):86:0 |==> -1
14901:STD:<RETURN>:<NO-OP>:org.marc4j.util.CustomDecimalFormat@getOverflowRepresentation(long):86:return (Config.__M_NO == 0 && Config.COVERED(14899, 14900) ? 0 : Config.__M_NO == 14900 ? -1 : Config.__M_NO == 14899 ? 1 : 0); |==> <NO-OP>
14902:STD:<RETURN>:<NO-OP>:org.marc4j.util.CustomDecimalFormat@getOverflowRepresentation(long):89:return (maximumValue); |==> <NO-OP>
14903:LVR:POS:0:org.marc4j.util.CustomDecimalFormat@getOverflowRepresentation(long):91:1 |==> 0
14904:LVR:POS:NEG:org.marc4j.util.CustomDecimalFormat@getOverflowRepresentation(long):91:1 |==> -1
14905:AOR:+(long,long):%(long,long):org.marc4j.util.CustomDecimalFormat@getOverflowRepresentation(long):91:maximumValue + 1 |==> maximumValue % 1
14906:AOR:+(long,long):*(long,long):org.marc4j.util.CustomDecimalFormat@getOverflowRepresentation(long):91:maximumValue + 1 |==> maximumValue * 1
14907:AOR:+(long,long):-(long,long):org.marc4j.util.CustomDecimalFormat@getOverflowRepresentation(long):91:maximumValue + 1 |==> maximumValue - 1
14908:AOR:+(long,long):/(long,long):org.marc4j.util.CustomDecimalFormat@getOverflowRepresentation(long):91:maximumValue + 1 |==> maximumValue / 1
14909:AOR:%(long,long):*(long,long):org.marc4j.util.CustomDecimalFormat@getOverflowRepresentation(long):91:number % (maximumValue + 1) |==> number * (maximumValue + 1)
14910:AOR:%(long,long):+(long,long):org.marc4j.util.CustomDecimalFormat@getOverflowRepresentation(long):91:number % (maximumValue + 1) |==> number + (maximumValue + 1)
14911:AOR:%(long,long):-(long,long):org.marc4j.util.CustomDecimalFormat@getOverflowRepresentation(long):91:number % (maximumValue + 1) |==> number - (maximumValue + 1)
14912:AOR:%(long,long):/(long,long):org.marc4j.util.CustomDecimalFormat@getOverflowRepresentation(long):91:number % (maximumValue + 1) |==> number / (maximumValue + 1)
14913:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.FileFinderUtil@getFileInputStream(java.lang.String):14:new URL(propertyFileURLStr) |==> null
14914:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.FileFinderUtil@getFileInputStream(java.lang.String):15:in = url.openStream() |==> <NO-OP>
14915:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.util.FileFinderUtil@getFileInputStream(java.lang.String):17:(in) |==> null
14916:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.FileFinderUtil@getFileInputStream(java.lang.String[],java.lang.String):23:getFileAbsoluteURL(propertyPaths, propertyFileName) |==> null
14917:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.util.FileFinderUtil@getFileInputStream(java.lang.String[],java.lang.String):24:(getFileInputStream(fullPropertyFileURLStr)) |==> null
14918:LVR:0:POS:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):31:0 |==> 1
14919:LVR:0:NEG:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):31:0 |==> -1
14920:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):34:new File(fileName) |==> null
14921:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):35:file.isAbsolute() && file.exists() |==> file.isAbsolute() == file.exists()
14922:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):35:file.isAbsolute() && file.exists() |==> false
14923:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):35:file.isAbsolute() && file.exists() |==> file.isAbsolute()
14924:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):35:file.isAbsolute() && file.exists() |==> file.exists()
14925:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):35:file.isAbsolute() && file.exists() && file.isFile() |==> (file.isAbsolute() && file.exists()) == file.isFile()
14926:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):35:file.isAbsolute() && file.exists() && file.isFile() |==> false
14927:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):35:file.isAbsolute() && file.exists() && file.isFile() |==> file.isAbsolute() && file.exists()
14928:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):35:file.isAbsolute() && file.exists() && file.isFile() |==> file.isFile()
14929:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):35:file.isAbsolute() && file.exists() && file.isFile() && file.canRead() |==> (file.isAbsolute() && file.exists() && file.isFile()) == file.canRead()
14930:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):35:file.isAbsolute() && file.exists() && file.isFile() && file.canRead() |==> false
14931:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):35:file.isAbsolute() && file.exists() && file.isFile() && file.canRead() |==> file.isAbsolute() && file.exists() && file.isFile()
14932:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):35:file.isAbsolute() && file.exists() && file.isFile() && file.canRead() |==> file.canRead()
14933:LVR:POS:0:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):36:1 |==> 0
14934:LVR:POS:NEG:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):36:1 |==> -1
14935:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):36:numFound = 1 |==> <NO-OP>
14936:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):37:fileToReturn = file |==> <NO-OP>
14937:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):39:file.toURI().toURL().toExternalForm() |==> null
14938:STD:<CALL>:<NO-OP>:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):41:e.printStackTrace() |==> <NO-OP>
14939:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):43:directoryPaths != null |==> true
14940:LVR:0:POS:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):43:0 |==> 1
14941:LVR:0:NEG:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):43:0 |==> -1
14942:ROR:!=(int,int):<(int,int):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):43:directoryPaths.length != 0 |==> directoryPaths.length < 0
14943:ROR:!=(int,int):>(int,int):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):43:directoryPaths.length != 0 |==> directoryPaths.length > 0
14944:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):43:directoryPaths.length != 0 |==> true
14945:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):43:directoryPaths != null && directoryPaths.length != 0 |==> directoryPaths != null == (directoryPaths.length != 0)
14946:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):43:directoryPaths != null && directoryPaths.length != 0 |==> false
14947:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):43:directoryPaths != null && directoryPaths.length != 0 |==> directoryPaths != null
14948:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):43:directoryPaths != null && directoryPaths.length != 0 |==> directoryPaths.length != 0
14949:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):45:file = new File(pathPrefix, fileName) |==> <NO-OP>
14950:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):46:file.exists() && file.isFile() |==> file.exists() == file.isFile()
14951:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):46:file.exists() && file.isFile() |==> false
14952:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):46:file.exists() && file.isFile() |==> file.exists()
14953:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):46:file.exists() && file.isFile() |==> file.isFile()
14954:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):46:file.exists() && file.isFile() && file.canRead() |==> (file.exists() && file.isFile()) == file.canRead()
14955:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):46:file.exists() && file.isFile() && file.canRead() |==> false
14956:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):46:file.exists() && file.isFile() && file.canRead() |==> file.exists() && file.isFile()
14957:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):46:file.exists() && file.isFile() && file.canRead() |==> file.canRead()
14958:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):47:fileToReturn == null |==> false
14959:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):48:fileToReturn = file |==> <NO-OP>
14960:STD:<INC>:<NO-OP>:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):50:numFound++ |==> <NO-OP>
14961:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):54:fileToReturn != null |==> true
14962:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):56:fileToReturn.toURI().toURL().toExternalForm() |==> null
14963:STD:<CALL>:<NO-OP>:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):59:e.printStackTrace() |==> <NO-OP>
14964:LVR:0:POS:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):62:0 |==> 1
14965:LVR:0:NEG:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):62:0 |==> -1
14966:ROR:==(int,int):<=(int,int):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):62:numFound == 0 |==> numFound <= 0
14967:ROR:==(int,int):>=(int,int):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):62:numFound == 0 |==> numFound >= 0
14968:ROR:==(int,int):FALSE(int,int):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):62:numFound == 0 |==> false
14969:EVR:<PLUS>:<DEFAULT>:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):63:"Fatal error: Unable to find specified properties file: " + fileName |==> null
14970:LVR:POS:0:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):66:1 |==> 0
14971:LVR:POS:NEG:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):66:1 |==> -1
14972:ROR:==(int,int):<=(int,int):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):66:numFound == 1 |==> numFound <= 1
14973:ROR:==(int,int):>=(int,int):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):66:numFound == 1 |==> numFound >= 1
14974:ROR:==(int,int):FALSE(int,int):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):66:numFound == 1 |==> false
14975:LVR:POS:0:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):68:1 |==> 0
14976:LVR:POS:NEG:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):68:1 |==> -1
14977:ROR:>(int,int):!=(int,int):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):68:numFound > 1 |==> numFound != 1
14978:ROR:>(int,int):>=(int,int):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):68:numFound > 1 |==> numFound >= 1
14979:ROR:>(int,int):FALSE(int,int):org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):68:numFound > 1 |==> false
14980:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.util.FileFinderUtil@getFileAbsoluteURL(java.lang.String[],java.lang.String):72:(fullPathNameToReturn) |==> null
14981:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):105:System.currentTimeMillis() |==> 0L
14982:LVR:FALSE:TRUE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):112:false |==> true
14983:LVR:0:POS:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):114:0 |==> 1
14984:LVR:0:NEG:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):114:0 |==> -1
14985:ROR:<(int,int):!=(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):114:i < args.length |==> i != args.length
14986:ROR:<(int,int):<=(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):114:i < args.length |==> i <= args.length
14987:ROR:<(int,int):FALSE(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):114:i < args.length |==> false
14988:COR:args[i].equals("-xsl"):TRUE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):115:args[i].equals("-xsl") |==> false
14989:COR:args[i].equals("-xsl"):FALSE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):115:args[i].equals("-xsl") |==> true
14990:LVR:POS:0:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):116:1 |==> 0
14991:LVR:POS:NEG:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):116:1 |==> -1
14992:AOR:-(int,int):%(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):116:args.length - 1 |==> args.length % 1
14993:AOR:-(int,int):*(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):116:args.length - 1 |==> args.length * 1
14994:AOR:-(int,int):+(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):116:args.length - 1 |==> args.length + 1
14995:AOR:-(int,int):/(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):116:args.length - 1 |==> args.length / 1
14996:ROR:==(int,int):<=(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):116:i == args.length - 1 |==> i <= args.length - 1
14997:ROR:==(int,int):>=(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):116:i == args.length - 1 |==> i >= args.length - 1
14998:ROR:==(int,int):FALSE(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):116:i == args.length - 1 |==> false
14999:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):117:usage() |==> <NO-OP>
15000:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):119:stylesheet = args[++i].trim() |==> <NO-OP>
15001:COR:args[i].equals("-out"):TRUE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):120:args[i].equals("-out") |==> false
15002:COR:args[i].equals("-out"):FALSE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):120:args[i].equals("-out") |==> true
15003:LVR:POS:0:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):121:1 |==> 0
15004:LVR:POS:NEG:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):121:1 |==> -1
15005:AOR:-(int,int):%(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):121:args.length - 1 |==> args.length % 1
15006:AOR:-(int,int):*(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):121:args.length - 1 |==> args.length * 1
15007:AOR:-(int,int):+(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):121:args.length - 1 |==> args.length + 1
15008:AOR:-(int,int):/(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):121:args.length - 1 |==> args.length / 1
15009:ROR:==(int,int):<=(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):121:i == args.length - 1 |==> i <= args.length - 1
15010:ROR:==(int,int):>=(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):121:i == args.length - 1 |==> i >= args.length - 1
15011:ROR:==(int,int):FALSE(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):121:i == args.length - 1 |==> false
15012:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):122:usage() |==> <NO-OP>
15013:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):124:output = args[++i].trim() |==> <NO-OP>
15014:COR:args[i].equals("-convert"):TRUE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):125:args[i].equals("-convert") |==> false
15015:COR:args[i].equals("-convert"):FALSE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):125:args[i].equals("-convert") |==> true
15016:LVR:POS:0:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):126:1 |==> 0
15017:LVR:POS:NEG:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):126:1 |==> -1
15018:AOR:-(int,int):%(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):126:args.length - 1 |==> args.length % 1
15019:AOR:-(int,int):*(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):126:args.length - 1 |==> args.length * 1
15020:AOR:-(int,int):+(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):126:args.length - 1 |==> args.length + 1
15021:AOR:-(int,int):/(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):126:args.length - 1 |==> args.length / 1
15022:ROR:==(int,int):<=(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):126:i == args.length - 1 |==> i <= args.length - 1
15023:ROR:==(int,int):>=(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):126:i == args.length - 1 |==> i >= args.length - 1
15024:ROR:==(int,int):FALSE(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):126:i == args.length - 1 |==> false
15025:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):127:usage() |==> <NO-OP>
15026:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):129:convert = args[++i].trim() |==> <NO-OP>
15027:COR:args[i].equals("-encoding"):TRUE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):130:args[i].equals("-encoding") |==> false
15028:COR:args[i].equals("-encoding"):FALSE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):130:args[i].equals("-encoding") |==> true
15029:LVR:POS:0:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):131:1 |==> 0
15030:LVR:POS:NEG:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):131:1 |==> -1
15031:AOR:-(int,int):%(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):131:args.length - 1 |==> args.length % 1
15032:AOR:-(int,int):*(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):131:args.length - 1 |==> args.length * 1
15033:AOR:-(int,int):+(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):131:args.length - 1 |==> args.length + 1
15034:AOR:-(int,int):/(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):131:args.length - 1 |==> args.length / 1
15035:ROR:==(int,int):<=(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):131:i == args.length - 1 |==> i <= args.length - 1
15036:ROR:==(int,int):>=(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):131:i == args.length - 1 |==> i >= args.length - 1
15037:ROR:==(int,int):FALSE(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):131:i == args.length - 1 |==> false
15038:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):132:usage() |==> <NO-OP>
15039:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):134:encoding = args[++i].trim() |==> <NO-OP>
15040:COR:args[i].equals("-normalize"):TRUE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):135:args[i].equals("-normalize") |==> false
15041:COR:args[i].equals("-normalize"):FALSE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):135:args[i].equals("-normalize") |==> true
15042:LVR:TRUE:FALSE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):136:true |==> false
15043:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):136:normalize = true |==> <NO-OP>
15044:COR:args[i].equals("-usage"):TRUE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):137:args[i].equals("-usage") |==> false
15045:COR:args[i].equals("-usage"):FALSE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):137:args[i].equals("-usage") |==> true
15046:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):138:usage() |==> <NO-OP>
15047:COR:args[i].equals("-help"):TRUE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):139:args[i].equals("-help") |==> false
15048:COR:args[i].equals("-help"):FALSE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):139:args[i].equals("-help") |==> true
15049:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):140:usage() |==> <NO-OP>
15050:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):142:input = args[i].trim() |==> <NO-OP>
15051:LVR:POS:0:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):145:1 |==> 0
15052:LVR:POS:NEG:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):145:1 |==> -1
15053:AOR:-(int,int):%(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):145:args.length - 1 |==> args.length % 1
15054:AOR:-(int,int):*(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):145:args.length - 1 |==> args.length * 1
15055:AOR:-(int,int):+(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):145:args.length - 1 |==> args.length + 1
15056:AOR:-(int,int):/(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):145:args.length - 1 |==> args.length / 1
15057:ROR:!=(int,int):<(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):145:i != args.length - 1 |==> i < args.length - 1
15058:ROR:!=(int,int):>(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):145:i != args.length - 1 |==> i > args.length - 1
15059:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):145:i != args.length - 1 |==> true
15060:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):146:usage() |==> <NO-OP>
15061:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):150:input == null |==> false
15062:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):151:usage() |==> <NO-OP>
15063:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):156:new FileInputStream(input) |==> null
15064:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):158:e.printStackTrace() |==> <NO-OP>
15065:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):161:encoding != null |==> true
15066:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):162:reader = new MarcStreamReader(in, encoding) |==> <NO-OP>
15067:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):164:reader = new MarcStreamReader(in) |==> <NO-OP>
15068:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):168:output != null |==> true
15069:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):170:new FileOutputStream(output) |==> null
15070:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):172:e.printStackTrace() |==> <NO-OP>
15071:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):175:out = System.out |==> <NO-OP>
15072:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):180:stylesheet == null |==> false
15073:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):181:convert != null |==> true
15074:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):182:writer = new MarcXmlWriter(out, "UTF8") |==> <NO-OP>
15075:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):184:writer = new MarcXmlWriter(out, "UTF8") |==> <NO-OP>
15076:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):188:convert != null |==> true
15077:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):190:new OutputStreamWriter(out, "UTF8") |==> null
15078:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):192:e.printStackTrace() |==> <NO-OP>
15079:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):194:outputWriter = new BufferedWriter(outputWriter) |==> <NO-OP>
15080:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):196:outputWriter = new OutputStreamWriter(out) |==> <NO-OP>
15081:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):197:outputWriter = new BufferedWriter(outputWriter) |==> <NO-OP>
15082:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):199:new StreamResult(outputWriter) |==> null
15083:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):200:new StreamSource(stylesheet) |==> null
15084:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):201:writer = new MarcXmlWriter(result, source) |==> <NO-OP>
15085:LVR:TRUE:FALSE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):203:true |==> false
15086:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):203:writer.setIndent(true) |==> <NO-OP>
15087:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):205:convert != null |==> true
15088:COR:Constants.MARC_8_ENCODING.equals(convert):TRUE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):207:Constants.MARC_8_ENCODING.equals(convert) |==> false
15089:COR:Constants.MARC_8_ENCODING.equals(convert):FALSE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):207:Constants.MARC_8_ENCODING.equals(convert) |==> true
15090:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):208:charconv = new AnselToUnicode() |==> <NO-OP>
15091:COR:Constants.ISO5426_ENCODING.equals(convert):TRUE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):209:Constants.ISO5426_ENCODING.equals(convert) |==> false
15092:COR:Constants.ISO5426_ENCODING.equals(convert):FALSE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):209:Constants.ISO5426_ENCODING.equals(convert) |==> true
15093:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):210:charconv = new Iso5426ToUnicode() |==> <NO-OP>
15094:COR:Constants.ISO6937_ENCODING.equals(convert):TRUE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):211:Constants.ISO6937_ENCODING.equals(convert) |==> false
15095:COR:Constants.ISO6937_ENCODING.equals(convert):FALSE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):211:Constants.ISO6937_ENCODING.equals(convert) |==> true
15096:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):212:charconv = new Iso6937ToUnicode() |==> <NO-OP>
15097:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):214:System.err.println("Unknown character set") |==> <NO-OP>
15098:LVR:POS:0:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):215:1 |==> 0
15099:LVR:POS:NEG:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):215:1 |==> -1
15100:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):215:System.exit(1) |==> <NO-OP>
15101:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):217:writer.setConverter(charconv) |==> <NO-OP>
15102:COR:normalize:TRUE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):220:normalize |==> false
15103:COR:normalize:FALSE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):220:normalize |==> true
15104:LVR:TRUE:FALSE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):221:true |==> false
15105:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):221:writer.setUnicodeNormalization(true) |==> <NO-OP>
15106:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):225:reader.next() |==> null
15107:COR:Constants.MARC_8_ENCODING.equals(convert):TRUE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):226:Constants.MARC_8_ENCODING.equals(convert) |==> false
15108:COR:Constants.MARC_8_ENCODING.equals(convert):FALSE:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):226:Constants.MARC_8_ENCODING.equals(convert) |==> true
15109:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):227:record.getLeader().setCharCodingScheme('a') |==> <NO-OP>
15110:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):229:writer.write(record) |==> <NO-OP>
15111:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):231:writer.close() |==> <NO-OP>
15112:AOR:-(long,long):%(long,long):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):233:System.currentTimeMillis() - start |==> System.currentTimeMillis() % start
15113:AOR:-(long,long):*(long,long):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):233:System.currentTimeMillis() - start |==> System.currentTimeMillis() * start
15114:AOR:-(long,long):+(long,long):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):233:System.currentTimeMillis() - start |==> System.currentTimeMillis() + start
15115:AOR:-(long,long):/(long,long):org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):233:System.currentTimeMillis() - start |==> System.currentTimeMillis() / start
15116:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@main(java.lang.String[]):233:System.err.println("Total time: " + (System.currentTimeMillis() - start) + " miliseconds") |==> <NO-OP>
15117:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@usage():237:System.err.println("MARC4J, Copyright (C) 2002-2006 Bas Peters") |==> <NO-OP>
15118:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@usage():238:System.err.println("Usage: org.marc4j.util.MarcXmlDriver [-options] <file.mrc>") |==> <NO-OP>
15119:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@usage():239:System.err.println("       -convert <encoding> = Converts <encoding> to UTF-8") |==> <NO-OP>
15120:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@usage():240:System.err.println("       Valid encodings are: MARC8, ISO5426, ISO6937") |==> <NO-OP>
15121:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@usage():241:System.err.println("       -normalize = perform Unicode normalization") |==> <NO-OP>
15122:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@usage():242:System.err.println("       -xsl <file> = Post-process MARCXML using XSLT stylesheet <file>") |==> <NO-OP>
15123:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@usage():243:System.err.println("       -out <file> = Output using <file>") |==> <NO-OP>
15124:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@usage():244:System.err.println("       -usage or -help = this message") |==> <NO-OP>
15125:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@usage():245:System.err.println("The program outputs well-formed MARCXML") |==> <NO-OP>
15126:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@usage():246:System.err.println("See http://marc4j.tigris.org for more information.") |==> <NO-OP>
15127:LVR:POS:0:org.marc4j.util.MarcXmlDriver@usage():247:1 |==> 0
15128:LVR:POS:NEG:org.marc4j.util.MarcXmlDriver@usage():247:1 |==> -1
15129:STD:<CALL>:<NO-OP>:org.marc4j.util.MarcXmlDriver@usage():247:System.exit(1) |==> <NO-OP>
15130:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecord@<init>(java.io.DataInputStream):35:init(ds) |==> <NO-OP>
15131:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecord@<init>(java.io.DataInputStream):37:rawRecordData != null |==> true
15132:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecord@<init>(java.io.DataInputStream):38:id = getRecordId() |==> <NO-OP>
15133:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):43:id = null |==> <NO-OP>
15134:LVR:POS:0:org.marc4j.util.RawRecord@init(java.io.DataInputStream):44:24 |==> 0
15135:LVR:POS:NEG:org.marc4j.util.RawRecord@init(java.io.DataInputStream):44:24 |==> -24
15136:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):44:ds.mark(24) |==> <NO-OP>
15137:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecord@init(java.io.DataInputStream):46:leader == null |==> false
15138:LVR:POS:0:org.marc4j.util.RawRecord@init(java.io.DataInputStream):47:24 |==> 0
15139:LVR:POS:NEG:org.marc4j.util.RawRecord@init(java.io.DataInputStream):47:24 |==> -24
15140:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):47:leader = new byte[24] |==> <NO-OP>
15141:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):51:ds.readFully(leader) |==> <NO-OP>
15142:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):52:parseRecordLength(leader) |==> 0
15143:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):53:ds.reset() |==> <NO-OP>
15144:LVR:POS:0:org.marc4j.util.RawRecord@init(java.io.DataInputStream):54:2 |==> 0
15145:LVR:POS:NEG:org.marc4j.util.RawRecord@init(java.io.DataInputStream):54:2 |==> -2
15146:AOR:*(int,int):%(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):54:length * 2 |==> length % 2
15147:AOR:*(int,int):+(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):54:length * 2 |==> length + 2
15148:AOR:*(int,int):-(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):54:length * 2 |==> length - 2
15149:AOR:*(int,int):/(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):54:length * 2 |==> length / 2
15150:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):54:ds.mark(length * 2) |==> <NO-OP>
15151:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):55:rawRecordData = new byte[length] |==> <NO-OP>
15152:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):58:ds.readFully(rawRecordData) |==> <NO-OP>
15153:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):60:ds.reset() |==> <NO-OP>
15154:LVR:0:POS:org.marc4j.util.RawRecord@init(java.io.DataInputStream):62:0 |==> 1
15155:LVR:0:NEG:org.marc4j.util.RawRecord@init(java.io.DataInputStream):62:0 |==> -1
15156:LVR:NEG:0:org.marc4j.util.RawRecord@init(java.io.DataInputStream):64:-1 |==> 0
15157:LVR:NEG:POS:org.marc4j.util.RawRecord@init(java.io.DataInputStream):64:-1 |==> 1
15158:ROR:!=(int,int):<(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):64:(c = ds.read()) != -1 |==> (c = ds.read()) < -1
15159:ROR:!=(int,int):>(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):64:(c = ds.read()) != -1 |==> (c = ds.read()) > -1
15160:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):65:rawRecordData[cnt++] = (byte)c |==> <NO-OP>
15161:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):68:byteArrayContains(rawRecordData, Constants.RT) |==> 0
15162:LVR:NEG:0:org.marc4j.util.RawRecord@init(java.io.DataInputStream):70:-1 |==> 0
15163:LVR:NEG:POS:org.marc4j.util.RawRecord@init(java.io.DataInputStream):70:-1 |==> 1
15164:ROR:!=(int,int):<(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):70:location != -1 |==> location < -1
15165:ROR:!=(int,int):>(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):70:location != -1 |==> location > -1
15166:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):70:location != -1 |==> true
15167:LVR:POS:0:org.marc4j.util.RawRecord@init(java.io.DataInputStream):71:1 |==> 0
15168:LVR:POS:NEG:org.marc4j.util.RawRecord@init(java.io.DataInputStream):71:1 |==> -1
15169:AOR:+(int,int):%(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):71:location + 1 |==> location % 1
15170:AOR:+(int,int):*(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):71:location + 1 |==> location * 1
15171:AOR:+(int,int):-(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):71:location + 1 |==> location - 1
15172:AOR:+(int,int):/(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):71:location + 1 |==> location / 1
15173:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):71:length = location + 1 |==> <NO-OP>
15174:LVR:POS:0:org.marc4j.util.RawRecord@init(java.io.DataInputStream):77:1 |==> 0
15175:LVR:POS:NEG:org.marc4j.util.RawRecord@init(java.io.DataInputStream):77:1 |==> -1
15176:AOR:-(int,int):%(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):77:length - 1 |==> length % 1
15177:AOR:-(int,int):*(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):77:length - 1 |==> length * 1
15178:AOR:-(int,int):+(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):77:length - 1 |==> length + 1
15179:AOR:-(int,int):/(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):77:length - 1 |==> length / 1
15180:ROR:!=(int,int):<(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):77:rawRecordData[length - 1] != Constants.RT |==> rawRecordData[length - 1] < Constants.RT
15181:ROR:!=(int,int):>(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):77:rawRecordData[length - 1] != Constants.RT |==> rawRecordData[length - 1] > Constants.RT
15182:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):77:rawRecordData[length - 1] != Constants.RT |==> true
15183:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):78:byteArrayContains(rawRecordData, Constants.RT) |==> 0
15184:LVR:NEG:0:org.marc4j.util.RawRecord@init(java.io.DataInputStream):81:-1 |==> 0
15185:LVR:NEG:POS:org.marc4j.util.RawRecord@init(java.io.DataInputStream):81:-1 |==> 1
15186:ROR:!=(int,int):<(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):81:location != -1 |==> location < -1
15187:ROR:!=(int,int):>(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):81:location != -1 |==> location > -1
15188:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):81:location != -1 |==> true
15189:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):82:ds.reset() |==> <NO-OP>
15190:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):83:rawRecordData = new byte[location] |==> <NO-OP>
15191:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):84:ds.readFully(rawRecordData) |==> <NO-OP>
15192:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):87:new ArrayList<Byte>() |==> null
15193:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):88:ds.reset() |==> <NO-OP>
15194:LVR:POS:0:org.marc4j.util.RawRecord@init(java.io.DataInputStream):90:1 |==> 0
15195:LVR:POS:NEG:org.marc4j.util.RawRecord@init(java.io.DataInputStream):90:1 |==> -1
15196:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):93:ds.read(byteRead) |==> 0
15197:LVR:NEG:0:org.marc4j.util.RawRecord@init(java.io.DataInputStream):95:-1 |==> 0
15198:LVR:NEG:POS:org.marc4j.util.RawRecord@init(java.io.DataInputStream):95:-1 |==> 1
15199:ROR:==(int,int):<=(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):95:numRead == -1 |==> numRead <= -1
15200:ROR:==(int,int):>=(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):95:numRead == -1 |==> numRead >= -1
15201:ROR:==(int,int):FALSE(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):95:numRead == -1 |==> false
15202:STD:<BREAK>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):96:break; |==> <NO-OP>
15203:LVR:0:POS:org.marc4j.util.RawRecord@init(java.io.DataInputStream):98:0 |==> 1
15204:LVR:0:NEG:org.marc4j.util.RawRecord@init(java.io.DataInputStream):98:0 |==> -1
15205:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):98:recBuf.add(byteRead[0]) |==> <NO-OP>
15206:LVR:0:POS:org.marc4j.util.RawRecord@init(java.io.DataInputStream):100:0 |==> 1
15207:LVR:0:NEG:org.marc4j.util.RawRecord@init(java.io.DataInputStream):100:0 |==> -1
15208:ROR:==(int,int):<=(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):100:byteRead[0] == Constants.RT |==> byteRead[0] <= Constants.RT
15209:ROR:==(int,int):>=(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):100:byteRead[0] == Constants.RT |==> byteRead[0] >= Constants.RT
15210:ROR:==(int,int):FALSE(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):100:byteRead[0] == Constants.RT |==> false
15211:STD:<BREAK>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):101:break; |==> <NO-OP>
15212:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):105:rawRecordData = new byte[recBuf.size()] |==> <NO-OP>
15213:LVR:0:POS:org.marc4j.util.RawRecord@init(java.io.DataInputStream):107:0 |==> 1
15214:LVR:0:NEG:org.marc4j.util.RawRecord@init(java.io.DataInputStream):107:0 |==> -1
15215:ROR:<(int,int):!=(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):107:i < recBuf.size() |==> i != recBuf.size()
15216:ROR:<(int,int):<=(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):107:i < recBuf.size() |==> i <= recBuf.size()
15217:ROR:<(int,int):FALSE(int,int):org.marc4j.util.RawRecord@init(java.io.DataInputStream):107:i < recBuf.size() |==> false
15218:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):108:rawRecordData[i] = recBuf.get(i) |==> <NO-OP>
15219:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):114:rawRecordData = null |==> <NO-OP>
15220:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecord@init(java.io.DataInputStream):115:ds.reset() |==> <NO-OP>
15221:LVR:0:POS:org.marc4j.util.RawRecord@byteArrayContains(byte[],int):123:0 |==> 1
15222:LVR:0:NEG:org.marc4j.util.RawRecord@byteArrayContains(byte[],int):123:0 |==> -1
15223:ROR:<(int,int):!=(int,int):org.marc4j.util.RawRecord@byteArrayContains(byte[],int):123:i < data.length |==> i != data.length
15224:ROR:<(int,int):<=(int,int):org.marc4j.util.RawRecord@byteArrayContains(byte[],int):123:i < data.length |==> i <= data.length
15225:ROR:<(int,int):FALSE(int,int):org.marc4j.util.RawRecord@byteArrayContains(byte[],int):123:i < data.length |==> false
15226:ROR:==(int,int):<=(int,int):org.marc4j.util.RawRecord@byteArrayContains(byte[],int):124:data[i] == value |==> data[i] <= value
15227:ROR:==(int,int):>=(int,int):org.marc4j.util.RawRecord@byteArrayContains(byte[],int):124:data[i] == value |==> data[i] >= value
15228:ROR:==(int,int):FALSE(int,int):org.marc4j.util.RawRecord@byteArrayContains(byte[],int):124:data[i] == value |==> false
15229:STD:<RETURN>:<NO-OP>:org.marc4j.util.RawRecord@byteArrayContains(byte[],int):125:return (i); |==> <NO-OP>
15230:LVR:NEG:0:org.marc4j.util.RawRecord@byteArrayContains(byte[],int):128:-1 |==> 0
15231:LVR:NEG:POS:org.marc4j.util.RawRecord@byteArrayContains(byte[],int):128:-1 |==> 1
15232:AOR:+(int,int):%(int,int):org.marc4j.util.RawRecord@<init>(org.marc4j.util.RawRecord,org.marc4j.util.RawRecord):139:rec1.getRecordBytes().length + rec2.getRecordBytes().length |==> rec1.getRecordBytes().length % rec2.getRecordBytes().length
15233:AOR:+(int,int):*(int,int):org.marc4j.util.RawRecord@<init>(org.marc4j.util.RawRecord,org.marc4j.util.RawRecord):139:rec1.getRecordBytes().length + rec2.getRecordBytes().length |==> rec1.getRecordBytes().length * rec2.getRecordBytes().length
15234:AOR:+(int,int):-(int,int):org.marc4j.util.RawRecord@<init>(org.marc4j.util.RawRecord,org.marc4j.util.RawRecord):139:rec1.getRecordBytes().length + rec2.getRecordBytes().length |==> rec1.getRecordBytes().length - rec2.getRecordBytes().length
15235:AOR:+(int,int):/(int,int):org.marc4j.util.RawRecord@<init>(org.marc4j.util.RawRecord,org.marc4j.util.RawRecord):139:rec1.getRecordBytes().length + rec2.getRecordBytes().length |==> rec1.getRecordBytes().length / rec2.getRecordBytes().length
15236:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecord@<init>(org.marc4j.util.RawRecord,org.marc4j.util.RawRecord):139:rawRecordData = new byte[rec1.getRecordBytes().length + rec2.getRecordBytes().length] |==> <NO-OP>
15237:LVR:0:POS:org.marc4j.util.RawRecord@<init>(org.marc4j.util.RawRecord,org.marc4j.util.RawRecord):140:0 |==> 1
15238:LVR:0:NEG:org.marc4j.util.RawRecord@<init>(org.marc4j.util.RawRecord,org.marc4j.util.RawRecord):140:0 |==> -1
15239:LVR:0:POS:org.marc4j.util.RawRecord@<init>(org.marc4j.util.RawRecord,org.marc4j.util.RawRecord):140:0 |==> 1
15240:LVR:0:NEG:org.marc4j.util.RawRecord@<init>(org.marc4j.util.RawRecord,org.marc4j.util.RawRecord):140:0 |==> -1
15241:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecord@<init>(org.marc4j.util.RawRecord,org.marc4j.util.RawRecord):140:System.arraycopy(rec1.getRecordBytes(), 0, rawRecordData, 0, rec1.getRecordBytes().length) |==> <NO-OP>
15242:LVR:0:POS:org.marc4j.util.RawRecord@<init>(org.marc4j.util.RawRecord,org.marc4j.util.RawRecord):141:0 |==> 1
15243:LVR:0:NEG:org.marc4j.util.RawRecord@<init>(org.marc4j.util.RawRecord,org.marc4j.util.RawRecord):141:0 |==> -1
15244:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecord@<init>(org.marc4j.util.RawRecord,org.marc4j.util.RawRecord):141:System.arraycopy(rec2.getRecordBytes(), 0, rawRecordData, rec1.getRecordBytes().length, rec2.getRecordBytes().length) |==> <NO-OP>
15245:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecord@<init>(org.marc4j.util.RawRecord,org.marc4j.util.RawRecord):143:id = getRecordId() |==> <NO-OP>
15246:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecord@getRecordId():152:id != null |==> true
15247:STD:<RETURN>:<NO-OP>:org.marc4j.util.RawRecord@getRecordId():153:return (id); |==> <NO-OP>
15248:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecord@getRecordId():155:id = getFieldVal("001") |==> <NO-OP>
15249:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.util.RawRecord@getRecordId():156:(id) |==> null
15250:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):170:new String(rawRecordData, "ISO-8859-1") |==> null
15251:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):172:e.printStackTrace() |==> <NO-OP>
15252:LVR:POS:0:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):174:12 |==> 0
15253:LVR:POS:NEG:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):174:12 |==> -12
15254:LVR:POS:0:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):174:17 |==> 0
15255:LVR:POS:NEG:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):174:17 |==> -17
15256:LVR:POS:0:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:99999 |==> 0
15257:LVR:POS:NEG:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:99999 |==> -99999
15258:ROR:==(int,int):<=(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:offset == 99999 |==> offset <= 99999
15259:ROR:==(int,int):>=(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:offset == 99999 |==> offset >= 99999
15260:ROR:==(int,int):FALSE(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:offset == 99999 |==> false
15261:LVR:POS:0:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:1 |==> 0
15262:LVR:POS:NEG:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:1 |==> -1
15263:AOR:-(int,int):%(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:offset - 1 |==> offset % 1
15264:AOR:-(int,int):*(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:offset - 1 |==> offset * 1
15265:AOR:-(int,int):+(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:offset - 1 |==> offset + 1
15266:AOR:-(int,int):/(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:offset - 1 |==> offset / 1
15267:ROR:!=(int,int):<(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:recordStr.charAt(offset - 1) != Constants.FT |==> recordStr.charAt(offset - 1) < Constants.FT
15268:ROR:!=(int,int):>(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:recordStr.charAt(offset - 1) != Constants.FT |==> recordStr.charAt(offset - 1) > Constants.FT
15269:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:recordStr.charAt(offset - 1) != Constants.FT |==> true
15270:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:offset == 99999 || recordStr.charAt(offset - 1) != Constants.FT |==> offset == 99999 != (recordStr.charAt(offset - 1) != Constants.FT)
15271:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:offset == 99999 || recordStr.charAt(offset - 1) != Constants.FT |==> offset == 99999
15272:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:offset == 99999 || recordStr.charAt(offset - 1) != Constants.FT |==> recordStr.charAt(offset - 1) != Constants.FT
15273:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):175:offset == 99999 || recordStr.charAt(offset - 1) != Constants.FT |==> true
15274:LVR:POS:0:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):176:1 |==> 0
15275:LVR:POS:NEG:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):176:1 |==> -1
15276:AOR:+(int,int):%(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):176:recordStr.indexOf(Constants.FT) + 1 |==> recordStr.indexOf(Constants.FT) % 1
15277:AOR:+(int,int):*(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):176:recordStr.indexOf(Constants.FT) + 1 |==> recordStr.indexOf(Constants.FT) * 1
15278:AOR:+(int,int):-(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):176:recordStr.indexOf(Constants.FT) + 1 |==> recordStr.indexOf(Constants.FT) - 1
15279:AOR:+(int,int):/(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):176:recordStr.indexOf(Constants.FT) + 1 |==> recordStr.indexOf(Constants.FT) / 1
15280:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):176:offset = recordStr.indexOf(Constants.FT) + 1 |==> <NO-OP>
15281:LVR:POS:0:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):178:24 |==> 0
15282:LVR:POS:NEG:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):178:24 |==> -24
15283:LVR:POS:0:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):179:3 |==> 0
15284:LVR:POS:NEG:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):179:3 |==> -3
15285:AOR:+(int,int):%(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):179:dirOffset + 3 |==> dirOffset % 3
15286:AOR:+(int,int):*(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):179:dirOffset + 3 |==> dirOffset * 3
15287:AOR:+(int,int):-(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):179:dirOffset + 3 |==> dirOffset - 3
15288:AOR:+(int,int):/(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):179:dirOffset + 3 |==> dirOffset / 3
15289:ROR:<(int,int):!=(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):181:dirOffset < offset |==> dirOffset != offset
15290:ROR:<(int,int):<=(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):181:dirOffset < offset |==> dirOffset <= offset
15291:ROR:<(int,int):FALSE(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):181:dirOffset < offset |==> false
15292:COR:fieldNum.equals(idField):TRUE:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):182:fieldNum.equals(idField) |==> false
15293:COR:fieldNum.equals(idField):FALSE:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):182:fieldNum.equals(idField) |==> true
15294:LVR:POS:0:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):183:3 |==> 0
15295:LVR:POS:NEG:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):183:3 |==> -3
15296:AOR:+(int,int):%(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):183:dirOffset + 3 |==> dirOffset % 3
15297:AOR:+(int,int):*(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):183:dirOffset + 3 |==> dirOffset * 3
15298:AOR:+(int,int):-(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):183:dirOffset + 3 |==> dirOffset - 3
15299:AOR:+(int,int):/(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):183:dirOffset + 3 |==> dirOffset / 3
15300:LVR:POS:0:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):184:7 |==> 0
15301:LVR:POS:NEG:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):184:7 |==> -7
15302:AOR:+(int,int):%(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):184:dirOffset + 7 |==> dirOffset % 7
15303:AOR:+(int,int):*(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):184:dirOffset + 7 |==> dirOffset * 7
15304:AOR:+(int,int):-(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):184:dirOffset + 7 |==> dirOffset - 7
15305:AOR:+(int,int):/(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):184:dirOffset + 7 |==> dirOffset / 7
15306:LVR:POS:0:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):185:7 |==> 0
15307:LVR:POS:NEG:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):185:7 |==> -7
15308:AOR:+(int,int):%(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):185:dirOffset + 7 |==> dirOffset % 7
15309:AOR:+(int,int):*(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):185:dirOffset + 7 |==> dirOffset * 7
15310:AOR:+(int,int):-(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):185:dirOffset + 7 |==> dirOffset - 7
15311:AOR:+(int,int):/(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):185:dirOffset + 7 |==> dirOffset / 7
15312:LVR:POS:0:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):186:12 |==> 0
15313:LVR:POS:NEG:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):186:12 |==> -12
15314:AOR:+(int,int):%(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):186:dirOffset + 12 |==> dirOffset % 12
15315:AOR:+(int,int):*(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):186:dirOffset + 12 |==> dirOffset * 12
15316:AOR:+(int,int):-(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):186:dirOffset + 12 |==> dirOffset - 12
15317:AOR:+(int,int):/(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):186:dirOffset + 12 |==> dirOffset / 12
15318:AOR:+(int,int):%(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):187:offset + offset2 |==> offset % offset2
15319:AOR:+(int,int):*(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):187:offset + offset2 |==> offset * offset2
15320:AOR:+(int,int):-(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):187:offset + offset2 |==> offset - offset2
15321:AOR:+(int,int):/(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):187:offset + offset2 |==> offset / offset2
15322:AOR:+(int,int):%(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):188:offset + offset2 |==> offset % offset2
15323:AOR:+(int,int):*(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):188:offset + offset2 |==> offset * offset2
15324:AOR:+(int,int):-(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):188:offset + offset2 |==> offset - offset2
15325:AOR:+(int,int):/(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):188:offset + offset2 |==> offset / offset2
15326:AOR:+(int,int):%(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):188:offset + offset2 + length |==> (offset + offset2) % length
15327:AOR:+(int,int):*(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):188:offset + offset2 + length |==> (offset + offset2) * length
15328:AOR:+(int,int):-(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):188:offset + offset2 + length |==> offset + offset2 - length
15329:AOR:+(int,int):/(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):188:offset + offset2 + length |==> (offset + offset2) / length
15330:LVR:POS:0:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):188:1 |==> 0
15331:LVR:POS:NEG:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):188:1 |==> -1
15332:AOR:-(int,int):%(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):188:offset + offset2 + length - 1 |==> (offset + offset2 + length) % 1
15333:AOR:-(int,int):*(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):188:offset + offset2 + length - 1 |==> (offset + offset2 + length) * 1
15334:AOR:-(int,int):+(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):188:offset + offset2 + length - 1 |==> offset + offset2 + length + 1
15335:AOR:-(int,int):/(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):188:offset + offset2 + length - 1 |==> (offset + offset2 + length) / 1
15336:STD:<RETURN>:<NO-OP>:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):189:return id; |==> <NO-OP>
15337:LVR:POS:0:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):192:12 |==> 0
15338:LVR:POS:NEG:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):192:12 |==> -12
15339:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):192:dirOffset += 12 |==> <NO-OP>
15340:LVR:POS:0:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):193:3 |==> 0
15341:LVR:POS:NEG:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):193:3 |==> -3
15342:AOR:+(int,int):%(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):193:dirOffset + 3 |==> dirOffset % 3
15343:AOR:+(int,int):*(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):193:dirOffset + 3 |==> dirOffset * 3
15344:AOR:+(int,int):-(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):193:dirOffset + 3 |==> dirOffset - 3
15345:AOR:+(int,int):/(int,int):org.marc4j.util.RawRecord@getFieldVal(java.lang.String):193:dirOffset + 3 |==> dirOffset / 3
15346:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecord@getFieldVal(java.lang.String):193:fieldNum = recordStr.substring(dirOffset, dirOffset + 3) |==> <NO-OP>
15347:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.RawRecord@getRecordBytes():205:rawRecordData |==> null
15348:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.RawRecord@getAsRecord(boolean,boolean,java.lang.String,java.lang.String):220:new ByteArrayInputStream(rawRecordData) |==> null
15349:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.RawRecord@getAsRecord(boolean,boolean,java.lang.String,java.lang.String):221:new MarcPermissiveStreamReader(bais, permissive, toUtf8, defaultEncoding) |==> null
15350:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecord@getAsRecord(boolean,boolean,java.lang.String,java.lang.String):223:reader.next() |==> null
15351:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecord@getAsRecord(boolean,boolean,java.lang.String,java.lang.String):224:combinePartials != null |==> true
15352:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecord@getAsRecord(boolean,boolean,java.lang.String,java.lang.String):226:reader.next() |==> null
15353:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecord@getAsRecord(boolean,boolean,java.lang.String,java.lang.String):227:nextNext.getVariableFields() |==> null
15354:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecord@getAsRecord(boolean,boolean,java.lang.String,java.lang.String):228:fieldsAll.iterator() |==> null
15355:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecord@getAsRecord(boolean,boolean,java.lang.String,java.lang.String):230:fieldIter.next() |==> null
15356:COR:combinePartials.contains(vf.getTag()):TRUE:org.marc4j.util.RawRecord@getAsRecord(boolean,boolean,java.lang.String,java.lang.String):231:combinePartials.contains(vf.getTag()) |==> false
15357:COR:combinePartials.contains(vf.getTag()):FALSE:org.marc4j.util.RawRecord@getAsRecord(boolean,boolean,java.lang.String,java.lang.String):231:combinePartials.contains(vf.getTag()) |==> true
15358:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecord@getAsRecord(boolean,boolean,java.lang.String,java.lang.String):232:next.addVariableField(vf) |==> <NO-OP>
15359:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.util.RawRecord@getAsRecord(boolean,boolean,java.lang.String,java.lang.String):237:(next) |==> null
15360:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.RawRecord@parseRecordLength(byte[]):241:new InputStreamReader(new ByteArrayInputStream(leaderData)) |==> null
15361:LVR:NEG:0:org.marc4j.util.RawRecord@parseRecordLength(byte[]):242:-1 |==> 0
15362:LVR:NEG:POS:org.marc4j.util.RawRecord@parseRecordLength(byte[]):242:-1 |==> 1
15363:LVR:POS:0:org.marc4j.util.RawRecord@parseRecordLength(byte[]):243:5 |==> 0
15364:LVR:POS:NEG:org.marc4j.util.RawRecord@parseRecordLength(byte[]):243:5 |==> -5
15365:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecord@parseRecordLength(byte[]):244:isr.read(tmp) |==> <NO-OP>
15366:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecord@parseRecordLength(byte[]):246:length = Integer.parseInt(new String(tmp)) |==> <NO-OP>
15367:EVR:<PARENTHESIZED>:<DEFAULT>:org.marc4j.util.RawRecord@parseRecordLength(byte[]):250:(length) |==> 0
15368:LVR:TRUE:FALSE:org.marc4j.util.RawRecordReader:30:true |==> false
15369:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.RawRecordReader@<init>(java.io.InputStream):38:new DataInputStream(new BufferedInputStream(is)) |==> null
15370:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecordReader@<init>(java.io.InputStream,boolean):48:this.mergeRecords = mergeRecords |==> <NO-OP>
15371:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.RawRecordReader@<init>(java.io.InputStream,boolean):49:new DataInputStream(new BufferedInputStream(is)) |==> null
15372:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecordReader@hasNext():58:nextRec == null |==> false
15373:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecordReader@hasNext():59:nextRec = new RawRecord(input) |==> <NO-OP>
15374:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecordReader@hasNext():62:nextRec != null |==> true
15375:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecordReader@hasNext():62:nextRec.getRecordBytes() != null |==> true
15376:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.RawRecordReader@hasNext():62:nextRec != null && nextRec.getRecordBytes() != null |==> nextRec != null == (nextRec.getRecordBytes() != null)
15377:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.RawRecordReader@hasNext():62:nextRec != null && nextRec.getRecordBytes() != null |==> false
15378:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.RawRecordReader@hasNext():62:nextRec != null && nextRec.getRecordBytes() != null |==> nextRec != null
15379:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.RawRecordReader@hasNext():62:nextRec != null && nextRec.getRecordBytes() != null |==> nextRec.getRecordBytes() != null
15380:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecordReader@hasNext():63:afterNextRec == null |==> false
15381:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecordReader@hasNext():64:afterNextRec = new RawRecord(input) |==> <NO-OP>
15382:COR:mergeRecords:TRUE:org.marc4j.util.RawRecordReader@hasNext():65:mergeRecords |==> false
15383:COR:mergeRecords:FALSE:org.marc4j.util.RawRecordReader@hasNext():65:mergeRecords |==> true
15384:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecordReader@hasNext():66:afterNextRec != null |==> true
15385:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecordReader@hasNext():66:afterNextRec.getRecordBytes() != null |==> true
15386:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.RawRecordReader@hasNext():66:afterNextRec != null && afterNextRec.getRecordBytes() != null |==> afterNextRec != null == (afterNextRec.getRecordBytes() != null)
15387:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.RawRecordReader@hasNext():66:afterNextRec != null && afterNextRec.getRecordBytes() != null |==> false
15388:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.RawRecordReader@hasNext():66:afterNextRec != null && afterNextRec.getRecordBytes() != null |==> afterNextRec != null
15389:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.RawRecordReader@hasNext():66:afterNextRec != null && afterNextRec.getRecordBytes() != null |==> afterNextRec.getRecordBytes() != null
15390:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.RawRecordReader@hasNext():66:afterNextRec != null && afterNextRec.getRecordBytes() != null && afterNextRec.getRecordId().equals(nextRec.getRecordId()) |==> (afterNextRec != null && afterNextRec.getRecordBytes() != null) == afterNextRec.getRecordId().equals(nextRec.getRecordId())
15391:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.RawRecordReader@hasNext():66:afterNextRec != null && afterNextRec.getRecordBytes() != null && afterNextRec.getRecordId().equals(nextRec.getRecordId()) |==> false
15392:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.RawRecordReader@hasNext():66:afterNextRec != null && afterNextRec.getRecordBytes() != null && afterNextRec.getRecordId().equals(nextRec.getRecordId()) |==> afterNextRec != null && afterNextRec.getRecordBytes() != null
15393:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.RawRecordReader@hasNext():66:afterNextRec != null && afterNextRec.getRecordBytes() != null && afterNextRec.getRecordId().equals(nextRec.getRecordId()) |==> afterNextRec.getRecordId().equals(nextRec.getRecordId())
15394:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecordReader@hasNext():68:nextRec = new RawRecord(nextRec, afterNextRec) |==> <NO-OP>
15395:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecordReader@hasNext():69:afterNextRec = new RawRecord(input) |==> <NO-OP>
15396:LVR:TRUE:FALSE:org.marc4j.util.RawRecordReader@hasNext():74:true |==> false
15397:STD:<RETURN>:<NO-OP>:org.marc4j.util.RawRecordReader@hasNext():74:return Config.__M_NO == 0 && Config.COVERED(15396, 15396) ? true : Config.__M_NO == 15396 ? false : true; |==> <NO-OP>
15398:LVR:FALSE:TRUE:org.marc4j.util.RawRecordReader@hasNext():77:false |==> true
15399:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.RawRecordReader@next():86:nextRec |==> null
15400:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecordReader@next():88:nextRec = afterNextRec |==> <NO-OP>
15401:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecordReader@next():89:afterNextRec = null |==> <NO-OP>
15402:EVR:<IDENTIFIER>:<DEFAULT>:org.marc4j.util.RawRecordReader@next():91:tmpRec |==> null
15403:LVR:POS:0:org.marc4j.util.RawRecordReader@main(java.lang.String[]):112:2 |==> 0
15404:LVR:POS:NEG:org.marc4j.util.RawRecordReader@main(java.lang.String[]):112:2 |==> -2
15405:ROR:<(int,int):!=(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):112:args.length < 2 |==> args.length != 2
15406:ROR:<(int,int):<=(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):112:args.length < 2 |==> args.length <= 2
15407:ROR:<(int,int):FALSE(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):112:args.length < 2 |==> false
15408:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):113:System.err.println("Error: No records specified for extraction") |==> <NO-OP>
15409:LVR:0:POS:org.marc4j.util.RawRecordReader@main(java.lang.String[]):117:0 |==> 1
15410:LVR:0:NEG:org.marc4j.util.RawRecordReader@main(java.lang.String[]):117:0 |==> -1
15411:LVR:NEG:0:org.marc4j.util.RawRecordReader@main(java.lang.String[]):118:-1 |==> 0
15412:LVR:NEG:POS:org.marc4j.util.RawRecordReader@main(java.lang.String[]):118:-1 |==> 1
15413:LVR:0:POS:org.marc4j.util.RawRecordReader@main(java.lang.String[]):119:0 |==> 1
15414:LVR:0:NEG:org.marc4j.util.RawRecordReader@main(java.lang.String[]):119:0 |==> -1
15415:COR:args[offset].equals("-"):TRUE:org.marc4j.util.RawRecordReader@main(java.lang.String[]):121:args[offset].equals("-") |==> false
15416:COR:args[offset].equals("-"):FALSE:org.marc4j.util.RawRecordReader@main(java.lang.String[]):121:args[offset].equals("-") |==> true
15417:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):122:new RawRecordReader(System.in) |==> null
15418:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):124:new RawRecordReader(new FileInputStream(new File(args[offset]))) |==> null
15419:STD:<INC>:<NO-OP>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):126:offset++ |==> <NO-OP>
15420:ROR:<(int,int):!=(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):128:offset < args.length |==> offset != args.length
15421:ROR:<(int,int):<=(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):128:offset < args.length |==> offset <= args.length
15422:ROR:<(int,int):FALSE(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):128:offset < args.length |==> false
15423:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):128:args[offset].equals("-skip") || args[offset].equals("-num") |==> args[offset].equals("-skip") != args[offset].equals("-num")
15424:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):128:args[offset].equals("-skip") || args[offset].equals("-num") |==> args[offset].equals("-skip")
15425:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):128:args[offset].equals("-skip") || args[offset].equals("-num") |==> args[offset].equals("-num")
15426:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):128:args[offset].equals("-skip") || args[offset].equals("-num") |==> true
15427:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):128:offset < args.length && (args[offset].equals("-skip") || args[offset].equals("-num")) |==> offset < args.length == (args[offset].equals("-skip") || args[offset].equals("-num"))
15428:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):128:offset < args.length && (args[offset].equals("-skip") || args[offset].equals("-num")) |==> false
15429:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):128:offset < args.length && (args[offset].equals("-skip") || args[offset].equals("-num")) |==> offset < args.length
15430:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):128:offset < args.length && (args[offset].equals("-skip") || args[offset].equals("-num")) |==> (args[offset].equals("-skip") || args[offset].equals("-num"))
15431:COR:args[offset].equals("-skip"):TRUE:org.marc4j.util.RawRecordReader@main(java.lang.String[]):130:args[offset].equals("-skip") |==> false
15432:COR:args[offset].equals("-skip"):FALSE:org.marc4j.util.RawRecordReader@main(java.lang.String[]):130:args[offset].equals("-skip") |==> true
15433:LVR:POS:0:org.marc4j.util.RawRecordReader@main(java.lang.String[]):131:1 |==> 0
15434:LVR:POS:NEG:org.marc4j.util.RawRecordReader@main(java.lang.String[]):131:1 |==> -1
15435:AOR:+(int,int):%(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):131:offset + 1 |==> offset % 1
15436:AOR:+(int,int):*(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):131:offset + 1 |==> offset * 1
15437:AOR:+(int,int):-(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):131:offset + 1 |==> offset - 1
15438:AOR:+(int,int):/(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):131:offset + 1 |==> offset / 1
15439:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):131:numToSkip = Integer.parseInt(args[offset + 1]) |==> <NO-OP>
15440:LVR:POS:0:org.marc4j.util.RawRecordReader@main(java.lang.String[]):132:2 |==> 0
15441:LVR:POS:NEG:org.marc4j.util.RawRecordReader@main(java.lang.String[]):132:2 |==> -2
15442:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):132:offset += 2 |==> <NO-OP>
15443:COR:args[offset].equals("-num"):TRUE:org.marc4j.util.RawRecordReader@main(java.lang.String[]):133:args[offset].equals("-num") |==> false
15444:COR:args[offset].equals("-num"):FALSE:org.marc4j.util.RawRecordReader@main(java.lang.String[]):133:args[offset].equals("-num") |==> true
15445:LVR:POS:0:org.marc4j.util.RawRecordReader@main(java.lang.String[]):134:1 |==> 0
15446:LVR:POS:NEG:org.marc4j.util.RawRecordReader@main(java.lang.String[]):134:1 |==> -1
15447:AOR:+(int,int):%(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):134:offset + 1 |==> offset % 1
15448:AOR:+(int,int):*(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):134:offset + 1 |==> offset * 1
15449:AOR:+(int,int):-(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):134:offset + 1 |==> offset - 1
15450:AOR:+(int,int):/(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):134:offset + 1 |==> offset / 1
15451:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):134:numToOutput = Integer.parseInt(args[offset + 1]) |==> <NO-OP>
15452:LVR:POS:0:org.marc4j.util.RawRecordReader@main(java.lang.String[]):135:2 |==> 0
15453:LVR:POS:NEG:org.marc4j.util.RawRecordReader@main(java.lang.String[]):135:2 |==> -2
15454:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):135:offset += 2 |==> <NO-OP>
15455:ROR:<(int,int):!=(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):139:offset < args.length |==> offset != args.length
15456:ROR:<(int,int):<=(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):139:offset < args.length |==> offset <= args.length
15457:ROR:<(int,int):FALSE(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):139:offset < args.length |==> false
15458:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):139:offset < args.length && args[offset].equals("-nomerge") |==> offset < args.length == args[offset].equals("-nomerge")
15459:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):139:offset < args.length && args[offset].equals("-nomerge") |==> false
15460:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):139:offset < args.length && args[offset].equals("-nomerge") |==> offset < args.length
15461:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):139:offset < args.length && args[offset].equals("-nomerge") |==> args[offset].equals("-nomerge")
15462:LVR:FALSE:TRUE:org.marc4j.util.RawRecordReader@main(java.lang.String[]):140:false |==> true
15463:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):140:reader.mergeRecords = false |==> <NO-OP>
15464:STD:<INC>:<NO-OP>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):141:offset++ |==> <NO-OP>
15465:LVR:0:POS:org.marc4j.util.RawRecordReader@main(java.lang.String[]):144:0 |==> 1
15466:LVR:0:NEG:org.marc4j.util.RawRecordReader@main(java.lang.String[]):144:0 |==> -1
15467:ROR:!=(int,int):<(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):144:numToSkip != 0 |==> numToSkip < 0
15468:ROR:!=(int,int):>(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):144:numToSkip != 0 |==> numToSkip > 0
15469:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):144:numToSkip != 0 |==> true
15470:LVR:NEG:0:org.marc4j.util.RawRecordReader@main(java.lang.String[]):144:-1 |==> 0
15471:LVR:NEG:POS:org.marc4j.util.RawRecordReader@main(java.lang.String[]):144:-1 |==> 1
15472:ROR:!=(int,int):<(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):144:numToOutput != -1 |==> numToOutput < -1
15473:ROR:!=(int,int):>(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):144:numToOutput != -1 |==> numToOutput > -1
15474:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):144:numToOutput != -1 |==> true
15475:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):144:numToSkip != 0 || numToOutput != -1 |==> numToSkip != 0 != (numToOutput != -1)
15476:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):144:numToSkip != 0 || numToOutput != -1 |==> numToSkip != 0
15477:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):144:numToSkip != 0 || numToOutput != -1 |==> numToOutput != -1
15478:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):144:numToSkip != 0 || numToOutput != -1 |==> true
15479:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):145:processInput(reader, numToSkip, numToOutput) |==> <NO-OP>
15480:COR:args[offset].equals("-id"):TRUE:org.marc4j.util.RawRecordReader@main(java.lang.String[]):146:args[offset].equals("-id") |==> false
15481:COR:args[offset].equals("-id"):FALSE:org.marc4j.util.RawRecordReader@main(java.lang.String[]):146:args[offset].equals("-id") |==> true
15482:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):147:printIds(reader) |==> <NO-OP>
15483:LVR:POS:0:org.marc4j.util.RawRecordReader@main(java.lang.String[]):148:3 |==> 0
15484:LVR:POS:NEG:org.marc4j.util.RawRecordReader@main(java.lang.String[]):148:3 |==> -3
15485:ROR:>=(int,int):==(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):148:args.length >= 3 |==> args.length == 3
15486:ROR:>=(int,int):>(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):148:args.length >= 3 |==> args.length > 3
15487:ROR:>=(int,int):TRUE(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):148:args.length >= 3 |==> true
15488:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):148:args[offset].equals("-h") && args.length >= 3 |==> args[offset].equals("-h") == args.length >= 3
15489:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):148:args[offset].equals("-h") && args.length >= 3 |==> false
15490:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):148:args[offset].equals("-h") && args.length >= 3 |==> args[offset].equals("-h")
15491:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.RawRecordReader@main(java.lang.String[]):148:args[offset].equals("-h") && args.length >= 3 |==> args.length >= 3
15492:LVR:POS:0:org.marc4j.util.RawRecordReader@main(java.lang.String[]):149:1 |==> 0
15493:LVR:POS:NEG:org.marc4j.util.RawRecordReader@main(java.lang.String[]):149:1 |==> -1
15494:AOR:+(int,int):%(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):149:offset + 1 |==> offset % 1
15495:AOR:+(int,int):*(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):149:offset + 1 |==> offset * 1
15496:AOR:+(int,int):-(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):149:offset + 1 |==> offset - 1
15497:AOR:+(int,int):/(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):149:offset + 1 |==> offset / 1
15498:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):150:processInput(reader, null, idRegex, null) |==> <NO-OP>
15499:COR:args[offset].endsWith(".txt"):TRUE:org.marc4j.util.RawRecordReader@main(java.lang.String[]):151:args[offset].endsWith(".txt") |==> false
15500:COR:args[offset].endsWith(".txt"):FALSE:org.marc4j.util.RawRecordReader@main(java.lang.String[]):151:args[offset].endsWith(".txt") |==> true
15501:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):152:args[offset].trim() |==> null
15502:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):153:processInput(reader, idRegex, null, null) |==> <NO-OP>
15503:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):155:new File(args[offset]) |==> null
15504:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):156:new BufferedReader(new InputStreamReader(new BufferedInputStream(new FileInputStream(idList)))) |==> null
15505:LVR:POS:0:org.marc4j.util.RawRecordReader@main(java.lang.String[]):161:2 |==> 0
15506:LVR:POS:NEG:org.marc4j.util.RawRecordReader@main(java.lang.String[]):161:2 |==> -2
15507:ROR:>(int,int):!=(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):161:args.length > 2 |==> args.length != 2
15508:ROR:>(int,int):>=(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):161:args.length > 2 |==> args.length >= 2
15509:ROR:>(int,int):FALSE(int,int):org.marc4j.util.RawRecordReader@main(java.lang.String[]):161:args.length > 2 |==> false
15510:LVR:POS:0:org.marc4j.util.RawRecordReader@main(java.lang.String[]):162:2 |==> 0
15511:LVR:POS:NEG:org.marc4j.util.RawRecordReader@main(java.lang.String[]):162:2 |==> -2
15512:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):162:findReplace = args[2].split("->") |==> <NO-OP>
15513:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):165:new LinkedHashSet<String>() |==> null
15514:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecordReader@main(java.lang.String[]):168:findReplace != null |==> true
15515:LVR:0:POS:org.marc4j.util.RawRecordReader@main(java.lang.String[]):169:0 |==> 1
15516:LVR:0:NEG:org.marc4j.util.RawRecordReader@main(java.lang.String[]):169:0 |==> -1
15517:LVR:POS:0:org.marc4j.util.RawRecordReader@main(java.lang.String[]):169:1 |==> 0
15518:LVR:POS:NEG:org.marc4j.util.RawRecordReader@main(java.lang.String[]):169:1 |==> -1
15519:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):169:line = line.replaceFirst(findReplace[0], findReplace[1]) |==> <NO-OP>
15520:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):172:idsLookedFor.add(line) |==> <NO-OP>
15521:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):175:idStream.close() |==> <NO-OP>
15522:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecordReader@main(java.lang.String[]):176:processInput(reader, null, null, idsLookedFor) |==> <NO-OP>
15523:LVR:0:POS:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):190:0 |==> 1
15524:LVR:0:NEG:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):190:0 |==> -1
15525:LVR:0:POS:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):191:0 |==> 1
15526:LVR:0:NEG:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):191:0 |==> -1
15527:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):194:reader.next() |==> null
15528:STD:<INC>:<NO-OP>:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):195:num++ |==> <NO-OP>
15529:ROR:<=(int,int):<(int,int):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):197:num <= numToSkip |==> num < numToSkip
15530:ROR:<=(int,int):==(int,int):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):197:num <= numToSkip |==> num == numToSkip
15531:ROR:<=(int,int):TRUE(int,int):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):197:num <= numToSkip |==> true
15532:STD:<CONT>:<NO-OP>:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):198:continue; |==> <NO-OP>
15533:LVR:NEG:0:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):201:-1 |==> 0
15534:LVR:NEG:POS:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):201:-1 |==> 1
15535:ROR:==(int,int):<=(int,int):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):201:numToOutput == -1 |==> numToOutput <= -1
15536:ROR:==(int,int):>=(int,int):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):201:numToOutput == -1 |==> numToOutput >= -1
15537:ROR:==(int,int):FALSE(int,int):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):201:numToOutput == -1 |==> false
15538:ROR:<(int,int):!=(int,int):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):201:numOutput < numToOutput |==> numOutput != numToOutput
15539:ROR:<(int,int):<=(int,int):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):201:numOutput < numToOutput |==> numOutput <= numToOutput
15540:ROR:<(int,int):FALSE(int,int):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):201:numOutput < numToOutput |==> false
15541:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):201:numToOutput == -1 || numOutput < numToOutput |==> numToOutput == -1 != numOutput < numToOutput
15542:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):201:numToOutput == -1 || numOutput < numToOutput |==> numToOutput == -1
15543:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):201:numToOutput == -1 || numOutput < numToOutput |==> numOutput < numToOutput
15544:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):201:numToOutput == -1 || numOutput < numToOutput |==> true
15545:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):202:rec.getRecordBytes() |==> null
15546:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):204:System.out.write(recordBytes) |==> <NO-OP>
15547:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):205:System.out.flush() |==> <NO-OP>
15548:STD:<INC>:<NO-OP>:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,int,int):207:numOutput++ |==> <NO-OP>
15549:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecordReader@printIds(org.marc4j.util.RawRecordReader):214:reader.next() |==> null
15550:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecordReader@printIds(org.marc4j.util.RawRecordReader):215:rec.getRecordId() |==> null
15551:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecordReader@printIds(org.marc4j.util.RawRecordReader):216:System.out.println(id) |==> <NO-OP>
15552:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):223:reader.next() |==> null
15553:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):224:rec.getRecordId() |==> null
15554:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor == null |==> false
15555:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:recordHas == null |==> false
15556:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor == null && recordHas == null |==> idsLookedFor == null == (recordHas == null)
15557:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor == null && recordHas == null |==> false
15558:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor == null && recordHas == null |==> idsLookedFor == null
15559:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor == null && recordHas == null |==> recordHas == null
15560:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor == null && recordHas == null && id.matches(idRegex) |==> (idsLookedFor == null && recordHas == null) == id.matches(idRegex)
15561:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor == null && recordHas == null && id.matches(idRegex) |==> false
15562:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor == null && recordHas == null && id.matches(idRegex) |==> idsLookedFor == null && recordHas == null
15563:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor == null && recordHas == null && id.matches(idRegex) |==> id.matches(idRegex)
15564:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor != null |==> true
15565:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor != null && idsLookedFor.contains(id) |==> idsLookedFor != null == idsLookedFor.contains(id)
15566:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor != null && idsLookedFor.contains(id) |==> false
15567:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor != null && idsLookedFor.contains(id) |==> idsLookedFor != null
15568:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor != null && idsLookedFor.contains(id) |==> idsLookedFor.contains(id)
15569:COR:||(boolean,boolean):!=(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor == null && recordHas == null && id.matches(idRegex) || idsLookedFor != null && idsLookedFor.contains(id) |==> (idsLookedFor == null && recordHas == null && id.matches(idRegex)) != (idsLookedFor != null && idsLookedFor.contains(id))
15570:COR:||(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor == null && recordHas == null && id.matches(idRegex) || idsLookedFor != null && idsLookedFor.contains(id) |==> idsLookedFor == null && recordHas == null && id.matches(idRegex)
15571:COR:||(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor == null && recordHas == null && id.matches(idRegex) || idsLookedFor != null && idsLookedFor.contains(id) |==> idsLookedFor != null && idsLookedFor.contains(id)
15572:COR:||(boolean,boolean):TRUE(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):225:idsLookedFor == null && recordHas == null && id.matches(idRegex) || idsLookedFor != null && idsLookedFor.contains(id) |==> true
15573:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):227:rec.getRecordBytes() |==> null
15574:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):228:System.out.write(recordBytes) |==> <NO-OP>
15575:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):229:System.out.flush() |==> <NO-OP>
15576:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):230:idsLookedFor == null |==> false
15577:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):230:idRegex == null |==> false
15578:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):230:idsLookedFor == null && idRegex == null |==> idsLookedFor == null == (idRegex == null)
15579:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):230:idsLookedFor == null && idRegex == null |==> false
15580:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):230:idsLookedFor == null && idRegex == null |==> idsLookedFor == null
15581:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):230:idsLookedFor == null && idRegex == null |==> idRegex == null
15582:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):230:recordHas != null |==> true
15583:COR:&&(boolean,boolean):==(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):230:idsLookedFor == null && idRegex == null && recordHas != null |==> (idsLookedFor == null && idRegex == null) == (recordHas != null)
15584:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):230:idsLookedFor == null && idRegex == null && recordHas != null |==> false
15585:COR:&&(boolean,boolean):LHS(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):230:idsLookedFor == null && idRegex == null && recordHas != null |==> idsLookedFor == null && idRegex == null
15586:COR:&&(boolean,boolean):RHS(boolean,boolean):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):230:idsLookedFor == null && idRegex == null && recordHas != null |==> recordHas != null
15587:LVR:0:POS:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):231:0 |==> 1
15588:LVR:0:NEG:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):231:0 |==> -1
15589:LVR:POS:0:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):231:3 |==> 0
15590:LVR:POS:NEG:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):231:3 |==> -3
15591:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):232:rec.getFieldVal(tag) |==> null
15592:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):233:field != null |==> true
15593:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):234:rec.getRecordBytes() |==> null
15594:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):235:System.out.write(recordBytes) |==> <NO-OP>
15595:STD:<CALL>:<NO-OP>:org.marc4j.util.RawRecordReader@processInput(org.marc4j.util.RawRecordReader,java.lang.String,java.lang.String,java.util.HashSet<java.lang.String>):236:System.out.flush() |==> <NO-OP>
15596:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):101:System.currentTimeMillis() |==> 0L
15597:LVR:0:POS:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):109:0 |==> 1
15598:LVR:0:NEG:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):109:0 |==> -1
15599:ROR:<(int,int):!=(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):109:i < args.length |==> i != args.length
15600:ROR:<(int,int):<=(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):109:i < args.length |==> i <= args.length
15601:ROR:<(int,int):FALSE(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):109:i < args.length |==> false
15602:COR:args[i].equals("-xsl"):TRUE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):110:args[i].equals("-xsl") |==> false
15603:COR:args[i].equals("-xsl"):FALSE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):110:args[i].equals("-xsl") |==> true
15604:LVR:POS:0:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):111:1 |==> 0
15605:LVR:POS:NEG:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):111:1 |==> -1
15606:AOR:-(int,int):%(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):111:args.length - 1 |==> args.length % 1
15607:AOR:-(int,int):*(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):111:args.length - 1 |==> args.length * 1
15608:AOR:-(int,int):+(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):111:args.length - 1 |==> args.length + 1
15609:AOR:-(int,int):/(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):111:args.length - 1 |==> args.length / 1
15610:ROR:==(int,int):<=(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):111:i == args.length - 1 |==> i <= args.length - 1
15611:ROR:==(int,int):>=(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):111:i == args.length - 1 |==> i >= args.length - 1
15612:ROR:==(int,int):FALSE(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):111:i == args.length - 1 |==> false
15613:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):112:usage() |==> <NO-OP>
15614:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):114:stylesheet = args[++i].trim() |==> <NO-OP>
15615:COR:args[i].equals("-out"):TRUE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):115:args[i].equals("-out") |==> false
15616:COR:args[i].equals("-out"):FALSE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):115:args[i].equals("-out") |==> true
15617:LVR:POS:0:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):116:1 |==> 0
15618:LVR:POS:NEG:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):116:1 |==> -1
15619:AOR:-(int,int):%(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):116:args.length - 1 |==> args.length % 1
15620:AOR:-(int,int):*(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):116:args.length - 1 |==> args.length * 1
15621:AOR:-(int,int):+(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):116:args.length - 1 |==> args.length + 1
15622:AOR:-(int,int):/(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):116:args.length - 1 |==> args.length / 1
15623:ROR:==(int,int):<=(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):116:i == args.length - 1 |==> i <= args.length - 1
15624:ROR:==(int,int):>=(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):116:i == args.length - 1 |==> i >= args.length - 1
15625:ROR:==(int,int):FALSE(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):116:i == args.length - 1 |==> false
15626:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):117:usage() |==> <NO-OP>
15627:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):119:output = args[++i].trim() |==> <NO-OP>
15628:COR:args[i].equals("-convert"):TRUE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):120:args[i].equals("-convert") |==> false
15629:COR:args[i].equals("-convert"):FALSE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):120:args[i].equals("-convert") |==> true
15630:LVR:POS:0:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):121:1 |==> 0
15631:LVR:POS:NEG:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):121:1 |==> -1
15632:AOR:-(int,int):%(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):121:args.length - 1 |==> args.length % 1
15633:AOR:-(int,int):*(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):121:args.length - 1 |==> args.length * 1
15634:AOR:-(int,int):+(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):121:args.length - 1 |==> args.length + 1
15635:AOR:-(int,int):/(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):121:args.length - 1 |==> args.length / 1
15636:ROR:==(int,int):<=(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):121:i == args.length - 1 |==> i <= args.length - 1
15637:ROR:==(int,int):>=(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):121:i == args.length - 1 |==> i >= args.length - 1
15638:ROR:==(int,int):FALSE(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):121:i == args.length - 1 |==> false
15639:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):122:usage() |==> <NO-OP>
15640:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):124:convert = args[++i].trim() |==> <NO-OP>
15641:COR:args[i].equals("-encoding"):TRUE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):125:args[i].equals("-encoding") |==> false
15642:COR:args[i].equals("-encoding"):FALSE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):125:args[i].equals("-encoding") |==> true
15643:LVR:POS:0:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):126:1 |==> 0
15644:LVR:POS:NEG:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):126:1 |==> -1
15645:AOR:-(int,int):%(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):126:args.length - 1 |==> args.length % 1
15646:AOR:-(int,int):*(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):126:args.length - 1 |==> args.length * 1
15647:AOR:-(int,int):+(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):126:args.length - 1 |==> args.length + 1
15648:AOR:-(int,int):/(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):126:args.length - 1 |==> args.length / 1
15649:ROR:==(int,int):<=(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):126:i == args.length - 1 |==> i <= args.length - 1
15650:ROR:==(int,int):>=(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):126:i == args.length - 1 |==> i >= args.length - 1
15651:ROR:==(int,int):FALSE(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):126:i == args.length - 1 |==> false
15652:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):127:usage() |==> <NO-OP>
15653:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):129:encoding = args[++i].trim() |==> <NO-OP>
15654:COR:args[i].equals("-usage"):TRUE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):130:args[i].equals("-usage") |==> false
15655:COR:args[i].equals("-usage"):FALSE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):130:args[i].equals("-usage") |==> true
15656:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):131:usage() |==> <NO-OP>
15657:COR:args[i].equals("-help"):TRUE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):132:args[i].equals("-help") |==> false
15658:COR:args[i].equals("-help"):FALSE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):132:args[i].equals("-help") |==> true
15659:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):133:usage() |==> <NO-OP>
15660:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):135:input = args[i].trim() |==> <NO-OP>
15661:LVR:POS:0:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):138:1 |==> 0
15662:LVR:POS:NEG:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):138:1 |==> -1
15663:AOR:-(int,int):%(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):138:args.length - 1 |==> args.length % 1
15664:AOR:-(int,int):*(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):138:args.length - 1 |==> args.length * 1
15665:AOR:-(int,int):+(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):138:args.length - 1 |==> args.length + 1
15666:AOR:-(int,int):/(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):138:args.length - 1 |==> args.length / 1
15667:ROR:!=(int,int):<(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):138:i != args.length - 1 |==> i < args.length - 1
15668:ROR:!=(int,int):>(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):138:i != args.length - 1 |==> i > args.length - 1
15669:ROR:!=(int,int):TRUE(int,int):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):138:i != args.length - 1 |==> true
15670:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):139:usage() |==> <NO-OP>
15671:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):143:input == null |==> false
15672:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):144:usage() |==> <NO-OP>
15673:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):149:new FileInputStream(new File(input)) |==> null
15674:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):151:e.printStackTrace() |==> <NO-OP>
15675:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):154:stylesheet == null |==> false
15676:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):155:reader = new MarcXmlReader(in) |==> <NO-OP>
15677:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):157:new StreamSource(stylesheet) |==> null
15678:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):158:reader = new MarcXmlReader(in, source) |==> <NO-OP>
15679:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):162:output != null |==> true
15680:EVR:<NEW_CLASS>:<DEFAULT>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):164:new FileOutputStream(output) |==> null
15681:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):166:e.printStackTrace() |==> <NO-OP>
15682:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):169:out = System.out |==> <NO-OP>
15683:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):173:encoding != null |==> true
15684:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):174:writer = new MarcStreamWriter(out, encoding) |==> <NO-OP>
15685:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):176:writer = new MarcStreamWriter(out) |==> <NO-OP>
15686:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):179:convert != null |==> true
15687:COR:Constants.MARC_8_ENCODING.equals(convert):TRUE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):181:Constants.MARC_8_ENCODING.equals(convert) |==> false
15688:COR:Constants.MARC_8_ENCODING.equals(convert):FALSE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):181:Constants.MARC_8_ENCODING.equals(convert) |==> true
15689:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):182:charconv = new UnicodeToAnsel() |==> <NO-OP>
15690:COR:Constants.ISO5426_ENCODING.equals(convert):TRUE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):183:Constants.ISO5426_ENCODING.equals(convert) |==> false
15691:COR:Constants.ISO5426_ENCODING.equals(convert):FALSE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):183:Constants.ISO5426_ENCODING.equals(convert) |==> true
15692:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):184:charconv = new UnicodeToIso5426() |==> <NO-OP>
15693:COR:Constants.ISO6937_ENCODING.equals(convert):TRUE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):185:Constants.ISO6937_ENCODING.equals(convert) |==> false
15694:COR:Constants.ISO6937_ENCODING.equals(convert):FALSE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):185:Constants.ISO6937_ENCODING.equals(convert) |==> true
15695:STD:<ASSIGN>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):186:charconv = new UnicodeToIso6937() |==> <NO-OP>
15696:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):188:System.err.println("Unknown character set") |==> <NO-OP>
15697:LVR:POS:0:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):189:1 |==> 0
15698:LVR:POS:NEG:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):189:1 |==> -1
15699:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):189:System.exit(1) |==> <NO-OP>
15700:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):191:writer.setConverter(charconv) |==> <NO-OP>
15701:EVR:<METHOD_INVOCATION>:<DEFAULT>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):195:reader.next() |==> null
15702:COR:Constants.MARC_8_ENCODING.equals(convert):TRUE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):196:Constants.MARC_8_ENCODING.equals(convert) |==> false
15703:COR:Constants.MARC_8_ENCODING.equals(convert):FALSE:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):196:Constants.MARC_8_ENCODING.equals(convert) |==> true
15704:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):197:record.getLeader().setCharCodingScheme(' ') |==> <NO-OP>
15705:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):199:writer.write(record) |==> <NO-OP>
15706:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):201:writer.close() |==> <NO-OP>
15707:AOR:-(long,long):%(long,long):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):203:System.currentTimeMillis() - start |==> System.currentTimeMillis() % start
15708:AOR:-(long,long):*(long,long):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):203:System.currentTimeMillis() - start |==> System.currentTimeMillis() * start
15709:AOR:-(long,long):+(long,long):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):203:System.currentTimeMillis() - start |==> System.currentTimeMillis() + start
15710:AOR:-(long,long):/(long,long):org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):203:System.currentTimeMillis() - start |==> System.currentTimeMillis() / start
15711:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@main(java.lang.String[]):203:System.err.println("Total time: " + (System.currentTimeMillis() - start) + " miliseconds") |==> <NO-OP>
15712:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@usage():207:System.err.println("MARC4J, Copyright (C) 2002-2006 Bas Peters") |==> <NO-OP>
15713:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@usage():208:System.err.println("Usage: org.marc4j.util.XmlMarcDriver [-options] <file.mrc>") |==> <NO-OP>
15714:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@usage():209:System.err.println("       -convert <encoding> = Converts UTF-8 to <encoding>") |==> <NO-OP>
15715:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@usage():210:System.err.println("       Valid encodings are: MARC8, ISO5426, ISO6937") |==> <NO-OP>
15716:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@usage():211:System.err.println("       -encoding <encoding> = Output using specified Java character encoding") |==> <NO-OP>
15717:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@usage():213:System.err.println("       -xsl <file> = Pre-process MARCXML using XSLT stylesheet <file>") |==> <NO-OP>
15718:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@usage():214:System.err.println("       -out <file> = Output using <file>") |==> <NO-OP>
15719:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@usage():215:System.err.println("       -usage or -help = this message") |==> <NO-OP>
15720:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@usage():216:System.err.println("The program outputs MARC records in ISO 2709 format") |==> <NO-OP>
15721:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@usage():217:System.err.println("See http://marc4j.tigris.org for more information.") |==> <NO-OP>
15722:LVR:POS:0:org.marc4j.util.XmlMarcDriver@usage():218:1 |==> 0
15723:LVR:POS:NEG:org.marc4j.util.XmlMarcDriver@usage():218:1 |==> -1
15724:STD:<CALL>:<NO-OP>:org.marc4j.util.XmlMarcDriver@usage():218:System.exit(1) |==> <NO-OP>
